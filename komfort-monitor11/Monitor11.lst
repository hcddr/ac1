 AS V1.42 Beta [Bld 249] - Source File Monitor11.asm - Page 1 - 3/20/2024 8:22:42


    1/       0 :                        ; File Name   :	d:\hobby3\ac1-2010\monitor\komfort-monitor11\MonitorV11.0.BIN
    2/       0 :                        ; Base Address:	0000h Range: 0000h - 1000h Loaded length: 1000h
    3/       0 :                        
    4/       0 :                        
    5/       0 :                        ;AC1-MONITOR USB-KomfortMonitorV11.0 Stand 22.02.2015 [c]HR
    6/       0 :                        ;reass. Volker Pohlers, Neustadt i.H., 31.01.2023
    7/       0 :                        ;letzte Änderung 
    8/       0 :                        
    9/       0 :                        
   10/       0 :                        		page	0
   11/       0 :                        		cpu	z80undoc
   12/       0 :                        
   13/       0 :                        
   14/       0 : ="11"                  mon11ver	equ	"11";	 11; 11a; 11b
   15/       0 :                        
   16/       0 :                        ;------------------------------------------------------------------------------
   17/       0 :                        ; Patches
   18/       0 :                        ;------------------------------------------------------------------------------
   19/       0 :                        
   20/       0 : ="V11.0 "              version		eval	"V11.0 "
   21/       0 : =0H                    p_setcol	eval	false
   22/       0 : =0H                    p_colkdo	eval	false
   23/       0 :                        
   24/       0 : =>FALSE                		if mon11ver == "11a"
   25/       0 :                        ;mon11a		
   26/       0 :                        version		eval	"V11.0a"
   27/       0 :                        p_setcol	eval	true		; Version 110a, Patch in Farb-Kommando
   28/       0 :                        
   29/       0 : =>FALSE                		elseif mon11ver == "11b"
   30/       0 :                        ;mon11b		
   31/       0 :                        version		eval	"V11.0b"
   32/       0 :                        p_setcol	eval	true		; Version 110a, Patch in Farb-Kommando
   33/       0 :                        p_colkdo	eval	true
   34/       0 :                        
   35/       0 : [24]                   		endif
   36/       0 :                        
   37/       0 :                        ;------------------------------------------------------------------------------
   38/       0 :                        ; div. indiv. Einstellungen
   39/       0 :                        ;------------------------------------------------------------------------------
   40/       0 :                        
   41/       0 :                        ; Geometriedaten der verwendeten HD
   42/       0 :                        ; 128MB DOM: 500*16*32
   43/       0 :                        
   44/       0 :                        ; HR: voreingestellt ist 256MB SSD 984*16*32
   45/       0 :                        ; Per 09/2012 hat meine 256MB HDD folgende Aufteilung:
   46/       0 :                        ; 1. Spur 0           reserviert für "s/l" Kommando Monitor >= V10.2
   47/       0 :                        ; 2. Spur 1..9        reserviert für DiskVerHD bzw. DVHD 
   48/       0 :                        ; 3. Spuren 10..399   CPM Laufwerke für HRCPM und HRDOS
   49/       0 :                        ;    PART C, 10, 64,2048	; C: mit  64 Spuren ab Spur 10  (16 MB) HR
   50/       0 :                        ;    PART D,150, 64,4096	; D: mit  64 Spuren ab Spur 150 (16 MB) HR
   51/       0 :                        ;    PART E,300, 64,4096	; E: mit  64 Spuren ab Spur 300 (16 MB) HR
   52/       0 :                        ; 4. Spuren 400..     frei zu eigenen Verwendung..
   53/       0 :                        
   54/       0 : =3D8H                  vHDCyls		equ	984		; Anzahl Zylinder
   55/       0 : =10H                   vHDHeads	equ	16		; Anzahl Koepfe
   56/       0 : =20H                   vHDSectors	equ	32		; Anzahl Sektoren
   57/       0 :                        
   58/       0 : =2H                    vHDFirstCyl	equ	2		; Startzylinder fuer HD (Standard=2)
   59/       0 :                        					; Beginn des DVHD-Bereichs
   60/       0 :                        
   61/       0 :                        ; Cursor-Symbol
   62/       0 : =7FH                   vCursorSymb	equ	7Fh
   63/       0 :                        
   64/       0 :                        ; Kommandos nachladen
   65/       0 : ="USB"                 vKdoProc	equ	"USB"		; USB oder HD
   66/       0 :                        
   67/       0 :                        ; GSB Methode
   68/       0 : ="USB"                 vGSBProc	equ	"USB"		; USB oder HD
   69/       0 :                        
   70/       0 :                        ; Standard-Farben
   71/       0 :                        ;vColor		equ	0Fh		; bg: schwarz, fg: weiß
   72/       0 : =0BH                   vColor		equ	0Bh		; bg: schwarz, fg: hellgelb
   73/       0 :                        
   74/       0 :                        ;------------------------------------------------------------------------------
   75/       0 :                        ;
   76/       0 :                        ;------------------------------------------------------------------------------
   77/       0 :                        
   78/       0 :                        ; Makros
   79/       0 :                        hi              function x, (x>>8) & 0ffh	; High-Byte
   80/       0 :                        lo              function x, x & 0ffh		; Low-Byte
   81/       0 :                        ; bws(zeile 0..31, spalte 0..63) analog print_at
   82/       0 :                        bwsat		function z, s, 1800h-z*64-s
   83/       0 :                        
   84/       0 :                        ; Speicheraufteilung
   85/       0 : =0H                    ROM		equ	0000h
   86/       0 : =1000H                 BWS		equ	1000h		; 2K
   87/       0 : =1800H                 RAM		equ	1800h
   88/       0 :                        ; BWS
   89/       0 : =40H                   COLS		equ	64		; muss 2er-Potenz sein!
   90/       0 : =20H                   LINES		equ	32		; muss 2er-Potenz sein!
   91/       0 :                        
   92/       0 : =17FFH                 BWSANF		equ	BWS+LINES*COLS-1	; Adresse Home (links oben)
   93/       0 : =1000H                 BWSEND		equ	BWS			; letzte Adresse (rechts unten)
   94/       0 :                        
   95/       0 :                        ; I/O
   96/       0 : =0H                    CTC0		equ	0
   97/       0 : =1H                    CTC1		equ	1
   98/       0 : =2H                    CTC2		equ	2
   99/       0 : =3H                    CTC3		equ	3
  100/       0 : =4H                    PIODA		equ	4		; Tastatur
  101/       0 : =5H                    PIODB		equ	5		; Grafik/Ton
  102/       0 : =6H                    PIOCA		equ	6
  103/       0 : =7H                    PIOCB		equ	7
  104/       0 :                        
  105/       0 :                        ;Belegung PIOA
  106/       0 :                        ;B0..B6 ASCII-Code Zeichen
  107/       0 :                        ;B7 Taste gedrückt
  108/       0 :                        
  109/       0 :                        ;Belegung PIOB
  110/       0 :                        ;B0 Ton-Ausgang
  111/       0 :                        ;B1 Joystick ges. A
  112/       0 :                        ;B2 Grafiktaste
  113/       0 :                        ;B3 Bildschim-Mode
  114/       0 :                        ;B4 frei
  115/       0 :                        ;B5 Start/Stop-Schaltung
  116/       0 :                        ;B6 TB-Interface-Ausgang
  117/       0 :                        ;B7 TB-Interface-Eingang
  118/       0 :                        
  119/       0 : =8H                    PIO2DA		equ	8		; b0..b3 V24, b4..b7 IEC
  120/       0 : =9H                    PIO2DB		equ	9
  121/       0 : =0AH                   PIO2CA		equ	0ah
  122/       0 : =0BH                   PIO2CB		equ	0bh
  123/       0 :                        
  124/       0 :                        ; PIO 2 / IOSEL2
  125/       0 :                        ; A0 Eingang Daten RxD 			serielle Schnittstelle	
  126/       0 :                        ; A1 Ausgang Daten TxD 			serielle Schnittstelle
  127/       0 :                        ; A2 Eingang empfangsbereit CTS		serielle Schnittstelle
  128/       0 :                        ; A3 Ausgang sendebereit DTR		serielle Schnittstelle
  129/       0 :                        ; A4 SRQ		IEC - Schnittstelle (in CPM + BASIC)
  130/       0 :                        ; A5 ATN		IEC - Schnittstelle (in CPM + BASIC)
  131/       0 :                        ; A6 CLK		IEC - Schnittstelle (in CPM + BASIC)
  132/       0 :                        ; A7 DATA		IEC - Schnittstelle (in CPM + BASIC)
  133/       0 :                        
  134/       0 :                        ;EPROM auf PIO2-Karte
  135/       0 : =0FH                   PIO2EPROM	equ	0Fh
  136/       0 :                        ; 00 RAM
  137/       0 :                        ; 10 Bank 1 auf 2000h einblenden (ROM 0000-07FF)
  138/       0 :                        ; 20 Bank 2 auf 2000h einblenden (ROM 0800-0FFF)
  139/       0 :                        ; 40 Bank 3 auf 2000h einblenden (ROM 1000-17FF)
  140/       0 :                        ; 60 Bank 4 auf 2000h einblenden (ROM 0800-1FFF)
  141/       0 :                        
  142/       0 : =14H                   modul1		equ	14h		; Konfigurationsbyte für SCCH-Modul 1
  143/       0 :                        ; Port 14h, OUT-Port
  144/       0 :                        ; 	00 - Modul nicht aktiv
  145/       0 :                        ; 	01 - 8K-ROM "PaketX" E000-FFFF
  146/       0 :                        ; 	02 - 16K-ROM "Basic" 2000-5FFF
  147/       0 :                        ; 	x8 - 512K ROM1 aktiv, jeweils 32K-Bänke, x = 0..F Bank0..Bank15, 8000-FFFF
  148/       0 :                        ; 	x9 - 512K ROM2 aktiv, jeweils 32K-Bänke, x = 0..F Bank0..Bank15, 8000-FFFF
  149/       0 :                        
  150/       0 : =0F0H                  BWSPORT:	EQU	0F0H		; rücklesbares BWS Steuerregister
  151/       0 :                        ;Bit 0 Taktumschaltung, 0=2Mhz, 1=4Mhz Takt
  152/       0 :                        ;Bit 1 BWS INVERS, 0=Hintergrund	dunkel,	1=Hintergrund hell
  153/       0 :                        ;Bit 2 Umschaltung FarbRAM <> BWS RAM, 0=BWS RAM, 1=FarbRAM
  154/       0 :                        ;Bit 3 ZG Programmierung	0=Normal BWS, 1=ZG lesen/schreiben
  155/       0 :                        ;Bit 4 ZG Programmierung	A0 Zeilennummer	Zeichen
  156/       0 :                        ;Bit 5 ZG Programmierung	A1 Zeilennummer	Zeichen
  157/       0 :                        ;Bit 6 ZG Programmierung	A2 Zeilennummer	Zeichen
  158/       0 :                        ;Bit 7 frei
  159/       0 :                        ; Aufbau FarbRAM
  160/       0 :                        ; untere 4 Bit VordergrundFarbe	Bit 0 =	Rot
  161/       0 :                        ;				Bit 1 =	Grün
  162/       0 :                        ;				Bit 2 =	Blau
  163/       0 :                        ;				Bit 3 =	Intensiv
  164/       0 :                        ; obere 4Bits Hintergrundfarbe	Bit 4 =	Rot
  165/       0 :                        ;				Bit 5 =	Grün
  166/       0 :                        ;				Bit 6 =	Blau
  167/       0 :                        ;				Bit 7 =	Intensiv
  168/       0 :                        
  169/       0 :                        ;PIO3 f. VDIP/USB
  170/       0 :                        ;VDIP1 oder VDIP2 auf der Basisadresse FCh (AC1) bzw. DCh (LLC2).
  171/       0 : =0FCH                  PIO3A	EQU	0FCh	; Daten A (Datenport, bidirektional)
  172/       0 : =0FDH                  PIO3B	EQU	0FDh	; Daten B (Steuersignale, Bitbetrieb)
  173/       0 : =0FEH                  PIO3AS	EQU	0FEh	; Steuer A
  174/       0 : =0FFH                  PIO3BS	EQU	0FFh	; Steuer B
  175/       0 :                        
  176/       0 :                        ;GIDE
  177/       0 : =80H                   GIDE	equ	80h		; base address of GIDE board
  178/       0 : =86H                   IdeDOR	equ	GIDE+6		; Digital Output Register
  179/       0 : =88H                   IdeDat	equ	GIDE+8		; Data Register
  180/       0 : =89H                   IdeErr	equ	GIDE+9		; Error Register
  181/       0 : =89H                   IdeWrPc	equ	IdeErr		; Write Precomp REgister
  182/       0 : =8AH                   IdeSCnt	equ	GIDE+0Ah	; Sector Count
  183/       0 : =8BH                   IdeSNum	equ	GIDE+0Bh	; Sector Number
  184/       0 : =8CH                   IdeCLo	equ	GIDE+0Ch	; Cylinder Low
  185/       0 : =8DH                   IdeCHi	equ	GIDE+0Dh	; Cylinder High
  186/       0 : =8EH                   IdeSDH	equ	GIDE+0Eh	; Drive and Head
  187/       0 : =8FH                   IdeCmd	equ	GIDE+0Fh	; Command
  188/       0 : =8FH                   IdeStat	equ	IdeCmd		; Status
  189/       0 :                        ; Commands for IDE hard disk drives:
  190/       0 : =20H                   CmdRd	equ	20h		; Read Sector
  191/       0 : =30H                   CmdWr	equ	30h		; Write Sector
  192/       0 : =91H                   CmdInit	equ	91h		; Initialize Drive Params
  193/       0 :                        
  194/       0 :                        ;
  195/       0 : =28H                   NAMELEN		equ	40		; max. Länge des Dateinamens bei LOAD/SAVE
  196/       0 :                        ;KDOANF		equ	0400h		; Beginn f. Kdo-Suche
  197/       0 :                        ;RAMEND		equ	0BFFFh		; Ende f. Kdo-Suche, auf RAM beschränkt
  198/       0 : =10H                   KDOANF		equ	00010h		; Beginn f. Kdo-Suche
  199/       0 : =20H                   KDOANFH		equ	00020h		; Beginn f. Kdo-Suche im Help-Kommando
  200/       0 : =0FFFFH                RAMEND		equ	0FFFFh		; Ende f. Kdo-Suche, auf RAM beschränkt
  201/       0 :                        
  202/       0 :                        
  203/       0 :                        ; Zeitkonstanten (bei 2 MHz-Takt)
  204/       0 : =31H                   ZK1    EQU  49        ;Laenge 1.Halbwelle
  205/       0 : =2EH                   ZK2    EQU  46        ;Laenge 2.Halbwelle
  206/       0 : =3FH                   ZKR    EQU  (ZK1+ZK2)*2/3
  207/       0 :                        
  208/       0 :                        ;------------------------------------------------------------------------------
  209/       0 :                        ; Reset
  210/       0 :                        ;------------------------------------------------------------------------------
  211/       0 :                        
  212/       0 :                        		org	ROM
  213/       0 :                        
  214/       0 : F3                     init:		di
  215/       1 : 31 56 18               		ld	sp, SYSSK	; Stack
  216/       4 : ED 5E                  		im	2
  217/       6 : 18 03                  		jr	init1
  218/       8 :                        
  219/       8 :                        		org	8
  220/       8 :                        ; RST 8: Eingabekanal, normal Tastatur
  221/       8 : C3 02 18               inch:		jp	jp_rst08
  222/       B :                        
  223/       B : 11 1C 18               init1:		ld	de, warmcod	; warmstart-Erkennung
  224/       E : 18 0B                  		jr	init2
  225/      10 :                        
  226/      10 :                        		org	10h
  227/      10 :                        ; RST 10: Ausgabekanal,	normal Bildschirm
  228/      10 : C3 05 18               outch:		jp	jp_rst10
  229/      13 :                        
  230/      13 :                        ; Leer-Kommando
  231/      13 : 00 09 20 0D            		db 0,9,' ',0Dh
  232/      17 : C9                     		ret
  233/      18 :                        		org	18h
  234/      18 :                        ; RST 18: PRNST
  235/      18 : C3 08 18               prnst:		jp	jp_rst18
  236/      1B :                        
  237/      1B : 21 D8 0A               init2:		ld	hl, TABIO
  238/      1E : 18 1B                  		jr	init3
  239/      20 :                        
  240/      20 :                        		org	20h
  241/      20 :                        ; RST 20: PUT
  242/      20 : C3 0B 18               PUT:		jp	jp_rst20
  243/      23 :                        
  244/      23 :                        
  245/      23 :                        ; Leer-Kommando
  246/      23 : 00 09 0D 0D            		db 0,9,0Dh,0Dh
  247/      27 : C9                     		ret
  248/      28 :                        
  249/      28 :                        		org	28h
  250/      28 :                        ; RST 28: GET
  251/      28 : C3 0E 18               GET:		jp	jp_rst28
  252/      2B :                        
  253/      2B : E5                     routch:		push	hl
  254/      2C : D5                     		push	de
  255/      2D : C3 00 03               		jp	co0
  256/      30 :                        
  257/      30 :                        
  258/      30 :                        		org	30h
  259/      30 :                        ; RST 30: outhl
  260/      30 : C3 11 18               j_outhl:	jp	jp_rst30
  261/      33 :                        
  262/      33 :                        ; Ausgabe über Bildschirm
  263/      33 : F5                     co:		push	af
  264/      34 : 18 F5                  		jr	routch
  265/      36 :                        
  266/      36 : D7 03                  hd_cylinder:	dw vHDCyls-1		; Geometriedaten der verwendeten HD. Zylinder-1
  267/      38 :                        
  268/      38 :                        		org	38h
  269/      38 :                        ; RST 38:		
  270/      38 : C3 14 18               sub_38:		jp	jp_rst38
  271/      3B :                        
  272/      3B :                        ;------------------------------------------------------------------------------
  273/      3B :                        ; Kaltstart
  274/      3B :                        ; Sprungverteiler initialisieren, RAM löschen
  275/      3B :                        ;------------------------------------------------------------------------------
  276/      3B :                        
  277/      3B : 3E 02                  init3:		ld	a, 2
  278/      3D : ED 47                  		ld	i, a
  279/      3F : 06 11                  		ld	b, 11h
  280/      41 : 4E                     init4:		ld	c, (hl)
  281/      42 : 23                     		inc	hl
  282/      43 : ED A3                  		outi
  283/      45 : 20 FA                  		jr	nz, init4
  284/      47 : CD 7B 0A               		call	tstsch		; Test auf Warmstart
  285/      4A :                        ; Sprungverteiler initialisieren
  286/      4A : 01 20 00               		ld	bc, 20h	; ' '   ; lo(sv_rst)      ; == Laenge sv_rst-Bereich
  287/      4D : 69                     		ld	l, c
  288/      4E : 26 02                  		ld	h, 2		; hl=220 = sv_rst
  289/      50 : 5C                     		ld	e, h		; de=1802
  290/      51 : ED B0                  		ldir
  291/      53 : 28 03                  		jr	z, init5	; wenn Warmstart
  292/      55 : CD 85 0F               		call	erase		; sonst	RAM loeschen
  293/      58 : DF                     init5:		rst	prnst		; Ausgabe String
  294/      59 : 8C                     		db  8Ch			; CLS
  295/      5A : CD C8 0F               		call	setcolor	; Farb-RAM loeschen
  296/      5D : CD CE 07               		call	init_gsb
  297/      60 : 18 0C                  		jr	init8
  298/      62 :                        
  299/      62 : 48 52                  		db "HR"			; ID Hänsel, Ralph
  300/      64 :                        
  301/      64 : 0F                     hd_heads:	db vHDHeads-1		; Geometriedaten der verwendeten HD. Koepfe -1
  302/      65 : 20                     hd_sectors:	db vHDSectors		; Geometriedaten der verwendeten HD. Sektoren
  303/      66 :                        
  304/      66 :                        ;------------------------------------------------------------------------------
  305/      66 :                        ; MNI-Befehl, Programmunterbrechnung, Breakpoint
  306/      66 :                        ;------------------------------------------------------------------------------
  307/      66 :                        
  308/      66 :                        		org	66h
  309/      66 : C3 17 18               		jp	nmi
  310/      69 :                        
  311/      69 :                        ; zu tbsave
  312/      69 : 2E 5A 38 30 22         aZ80:		db ".Z80\""
  313/      6E :                        
  314/      6E :                        		org	006Eh	; fixe Adresse
  315/      6E :                        ; EINSPRUNGPUNKT Rueckkehr aus Programmpaket X
  316/      6E : AF                     init8:		xor	a
  317/      6F : D3 14                  		out	(modul1), a	; Modul1 disablen
  318/      71 :                        
  319/      71 :                        		org	0071h	; fixe Adresse
  320/      71 :                        ; EINSPRUNGPUNKT Rueckkehr aus Grafik-Sound-Basic 3.2
  321/      71 : DF                     		rst	prnst		; Ausgabe String
  322/      72 : 0C 0D 0F 0F 2A 20 41   		db 0Ch,0Dh,0Fh,0Fh,"* AC1 USB-KomfortMonitor ", version, "*"
            79 : 43 31 20 55 53 42 2D
            80 : 4B 6F 6D 66 6F 72 74
            87 : 4D 6F 6E 69 74 6F 72
            8E : 20 56 31 31 2E 30 20
            95 : 2A                  
  323/      96 : 0D 8D                  		db  0Dh, 8Dh
  324/      98 : C3 5B 02               		jp	GETCO1
  325/      9B :                        
  326/      9B :                        ;------------------------------------------------------------------------------
  327/      9B :                        ; Tasten-Piep
  328/      9B :                        ;------------------------------------------------------------------------------
  329/      9B :                        		
  330/      9B : 71                     PIEP:		ld	(hl), c
  331/      9C : 01 34 A0               		ld	bc, 0A034h
  332/      9F : CD 87 02               		call	UPTON
  333/      A2 : C1                     ENDE8:		pop	bc
  334/      A3 : E1                     		pop	hl
  335/      A4 : C9                     		ret
  336/      A5 :                        
  337/      A5 :                        ;------------------------------------------------------------------------------
  338/      A5 :                        ; Einsprungpunkt fuer RST 08H
  339/      A5 :                        ; Eingabekanal auswerten
  340/      A5 :                        ; iobyt
  341/      A5 :                        ; Eingabe: b0 Tastatur, b1 V24 (Rs 232c), b2 Reserve, b3 User
  342/      A5 :                        ;------------------------------------------------------------------------------
  343/      A5 :                        
  344/      A5 : E5                     rinch:		push	hl		; UP "Eingabekanal"
  345/      A6 : C5                     		push	bc
  346/      A7 : 3A 21 18               		ld	a, (IOBYT)	; Ein/Ausgabebyte
  347/      AA : 0F                     		rrca			; b0 gesetzt?
  348/      AB : 30 29                  		jr	nc, NOTAST	; nein, anderes Eingabegeraet (keine Tastatur)
  349/      AD :                        
  350/      AD :                        ; Eingabe von Tastatur
  351/      AD : 21 57 18               		ld	hl, repeat	; Hilfsregister	Repetierfunktion Tastatur
  352/      B0 : 46                     		ld	b, (hl)
  353/      B1 : 36 18                  		ld	(hl), 18h	; Repeat-Zeit erstmalig lange
  354/      B3 : CD 97 02               rinch1:		call	UPTAST
  355/      B6 : 28 05                  		jr	z, rinch2	; Taste losgelassen
  356/      B8 : 05                     		dec	b
  357/      B9 : 20 F8                  		jr	nz, rinch1
  358/      BB : 36 01                  		ld	(hl), 1		; kurze Repeatzeit für Wiederholung
  359/      BD : 2A 00 18               rinch2:		ld	hl, (cupos)	; Zwischenspeicher Kursor
  360/      C0 : 4E                     		ld	c, (hl)		; Zeichen merken
  361/      C1 : 36 7F                  rinch3:		ld	(hl), vCursorSymb	; Cursorsymbol anzeigen
  362/      C3 : CD 97 02               rinch4:		call	UPTAST
  363/      C6 :                        ; Taste gedrückt? dann Piep und ENDE8
  364/      C6 : 20 D3                  		jr	nz, PIEP	; Tasten-Piep
  365/      C8 :                        ; sonst kurz warten		
  366/      C8 : 3E 48                  		ld	a, 48h
  367/      CA : 3D                     rinch5:		dec	a
  368/      CB : 20 FD                  		jr	nz, rinch5
  369/      CD : 10 F4                  		djnz	rinch4
  370/      CF :                        ; und Cursor toggeln
  371/      CF : 79                     		ld	a, c
  372/      D0 : BE                     		cp	(hl)		; ist Zeichen zu sehen?
  373/      D1 : 28 EE                  		jr	z, rinch3	; dann Cursorsymbol anzeigen
  374/      D3 : 71                     		ld	(hl), c		; sonst Zeichen wieder anzeigen
  375/      D4 : 18 ED                  		jr	rinch4
  376/      D6 :                        
  377/      D6 :                        ;------------------------------------------------------------------------------
  378/      D6 :                        ; IOBYT Verteiler Eingabe
  379/      D6 :                        ;------------------------------------------------------------------------------
  380/      D6 :                        
  381/      D6 : 0F                     NOTAST:		rrca			; IOBYT b1 gesetzt?
  382/      D7 : DA 4E 0E               		jp	c, v24in0	; ja, -> v24
  383/      DA : 0F                     		rrca			; IOBYT b2 gesetzt?
  384/      DB : DC FF FF               		call	c, 0FFFFh	; ja -> Reserve
  385/      DE : 0F                     		rrca			; IOBYT b3 gesetzt?	
  386/      DF : DC F0 18               		call	c, unk_18F0	; ja -> USER-Eingabe
  387/      E2 : 18 BE                  		jr	ENDE8
  388/      E4 :                        
  389/      E4 :                        ;------------------------------------------------------------------------------
  390/      E4 :                        ; routch
  391/      E4 :                        ; Ausgabe: Druckersteuerung, IO-Byte Verteiler
  392/      E4 :                        ; Ausgabe: b4 Bildschirm, b5 V24 (RS 232c), b6 Reserve, b7 User
  393/      E4 :                        ;------------------------------------------------------------------------------
  394/      E4 :                        
  395/      E4 : E5                     routch0:	push	hl
  396/      E5 : F5                     		push	af
  397/      E6 : 21 20 18               		ld	hl, kdov24
  398/      E9 : CB 7E                  		bit	7, (hl)		; Ausgabe 8 Datenbit?
  399/      EB : 20 02                  		jr	nz, routch2	; nein
  400/      ED : E6 7F                  		and	7Fh		; dann Bit 7 rücksetzen
  401/      EF : 23                     routch2:	inc	hl		; HL=IOBYT
  402/      F0 :                        		;
  403/      F0 : FE 18                  		cp	18h		; Drucker ein, V 24-Schnittstelle
  404/      F2 : 28 07                  		jr	z, routch3
  405/      F4 : FE 19                  		cp	19h		; Ein-/Ausgabe normal, Drucker aus
  406/      F6 : 20 07                  		jr	nz, routch4
  407/      F8 :                        ; Drucker aus		
  408/      F8 : 36 11                  		ld	(hl), 11h	; setze Std-I/O-Byte
  409/      FA : 21                     		db  21h			; LD HL,xxx; überspringe nachfolgenden Befehl
  410/      FB :                        ; Drucker ein
  411/      FB : CB EE                  routch3:	set	5, (hl)		; setze V 24 - Ausgabe
  412/      FD : 18 14                  		jr	routch5
  413/      FF :                        		
  414/      FF :                        ; IOBYT	Verteiler Ausgabe
  415/      FF : CB 66                  routch4:	bit	4, (hl)
  416/     101 : C4 33 00               		call	nz, co		; IOBYT B4 -> BWS
  417/     104 : CB 6E                  		bit	5, (hl)
  418/     106 : C4 F9 0D               		call	nz, v24out	; IOBYT B5 -> V 24 - Ausgabe
  419/     109 : CB 76                  		bit	6, (hl)
  420/     10B : C4 FF FF               		call	nz, 0FFFFh	; IOBYT B6 -> Reserve
  421/     10E : CB 7E                  		bit	7, (hl)
  422/     110 : C4 F3 18               		call	nz, unk_18F3	; IOBYT B7 -> User-Ausgabe
  423/     113 : F1                     routch5:	pop	af
  424/     114 : E1                     		pop	hl
  425/     115 : C9                     		ret
  426/     116 :                        
  427/     116 :                        ;------------------------------------------------------------------------------
  428/     116 :                        ; Funktion für Sprungverteiler 7E8h
  429/     116 :                        ;------------------------------------------------------------------------------
  430/     116 :                        
  431/     116 : CD 97 02               TASTE:		call	UPTAST
  432/     119 : C8                     		ret	z
  433/     11A : CB FF                  		set	7, a
  434/     11C : C9                     		ret
  435/     11D :                        
  436/     11D :                        ;------------------------------------------------------------------------------
  437/     11D :                        ; ca. 30 ms warten
  438/     11D :                        ;------------------------------------------------------------------------------
  439/     11D :                        
  440/     11D : C5                     MS30:		push	bc
  441/     11E : 01 03 09               		ld	bc, 903h	; Zeitkonstante	fuer 30ms, ; B = 9, C = 3
  442/     121 : 0B                     ms301:		dec	bc
  443/     122 : 78                     		ld	a, b
  444/     123 : B1                     		or	c
  445/     124 : 20 FB                  		jr	nz, ms301
  446/     126 : C1                     		pop	bc
  447/     127 : C9                     		ret
  448/     128 :                        
  449/     128 :                        ;------------------------------------------------------------------------------
  450/     128 :                        ; Zeile	eingeben
  451/     128 :                        ; liest eine Zeile, die mit cr abgeschlossen wird, auf dem Schirm ein und
  452/     128 :                        ; legt den Anfang der Zeile in SOIL ab
  453/     128 :                        ; kein Register wird zerstört
  454/     128 :                        ;------------------------------------------------------------------------------
  455/     128 :                        
  456/     128 : E5                     INLINE:		push	hl
  457/     129 : F5                     		push	af
  458/     12A : DF                     		rst	prnst		; Ausgabe String
  459/     12B : 20 23 A0               aA:		db " #",' '+80h		; Prompt
  460/     12E : 00                     		nop
  461/     12F : CF                     inlin1:		rst	inch		; inch; Zeicheneingabe
  462/     130 : 2A 00 18               		ld	hl, (cupos)	; Zwischenspeicher Kursor
  463/     133 : D7                     		rst	outch		; Zeichenausgabe
  464/     134 : FE 0D                  		cp	0Dh		; Enter?
  465/     136 : 20 F7                  		jr	nz, inlin1	; nein --> weiter eingeben
  466/     138 :                        ; Zeilenanfang ermitteln
  467/     138 : 3E 23                  		ld	a, '#'
  468/     13A : 23                     inlin2:		inc	hl		; ein zeichen zurück
  469/     13B : BE                     		cp	(hl)		; zeilenanfang?
  470/     13C : 20 FC                  		jr	nz, inlin2	; nein
  471/     13E : 2B                     		dec	hl		; das '#'
  472/     13F : 2B                     		dec	hl		; Leerzeichen davor
  473/     140 : 22 1A 18               		ld	(soil),	hl	; erstes Zeichen der Zeile
  474/     143 : F1                     		pop	af
  475/     144 : E1                     		pop	hl
  476/     145 : C9                     		ret
  477/     146 :                        
  478/     146 :                        ;------------------------------------------------------------------------------
  479/     146 :                        ; fuehrende Leerzeichen ueberlesen
  480/     146 :                        ; letzen vier Zeichen als Hexzahl konvertieren
  481/     146 :                        ; und in DATA ablegen
  482/     146 :                        ;------------------------------------------------------------------------------
  483/     146 :                        
  484/     146 : 1A                     konvx:		ld	a, (de)		; UP - Routine zu InHex
  485/     147 : FE 20                  		cp	' '		; Leerzeichen
  486/     149 : 1B                     		dec	de
  487/     14A : 28 FA                  		jr	z, konvx	; überlesen
  488/     14C :                        ;
  489/     14C : 13                     		inc	de		; erstes Zeichen
  490/     14D : AF                     		xor	a
  491/     14E : 21 58 18               		ld	hl, data	; Hilfsregister
  492/     151 : 77                     		ld	(hl), a
  493/     152 : 23                     		inc	hl
  494/     153 : 77                     		ld	(hl), a
  495/     154 : 23                     		inc	hl
  496/     155 : 77                     		ld	(hl), a		; data=0
  497/     156 : 1A                     konvx2:		ld	a, (de)
  498/     157 : 2B                     		dec	hl
  499/     158 : 2B                     		dec	hl
  500/     159 : D6 30                  		sub	30h ; '0'	; Zeichen<"0"?
  501/     15B : F8                     		ret	m
  502/     15C : FE 0A                  		cp	0Ah		; Zeichen<="9"?
  503/     15E : 38 08                  		jr	c, konvx3
  504/     160 : D6 07                  		sub	7
  505/     162 : FE 0A                  		cp	0Ah		; Zeichen<"A"?
  506/     164 : F8                     		ret	m
  507/     165 : FE 10                  		cp	10h		; Zeichen>"F"?
  508/     167 : F0                     		ret	p
  509/     168 : 1B                     konvx3:		dec	de
  510/     169 : 34                     		inc	(hl)
  511/     16A : 23                     		inc	hl
  512/     16B : ED 6F                  		rld			; Hexziffer eintragen
  513/     16D : 23                     		inc	hl
  514/     16E : ED 6F                  		rld			; nächste Ziffer
  515/     170 : 18 E4                  		jr	konvx2
  516/     172 :                        
  517/     172 :                        ;------------------------------------------------------------------------------
  518/     172 :                        ; wandelt eine maximal vierstellige in ASCII-Zeichen angegebene Zahl
  519/     172 :                        ; ab (DE) abwärts in deren hexadezimalen Wert um, der dann in HL steht.
  520/     172 :                        ; DE wird entsprechend dekrementiert, der Akku wird zerstört
  521/     172 :                        ;------------------------------------------------------------------------------
  522/     172 :                        
  523/     172 : C5                     INHEX:		push	bc
  524/     173 : F5                     		push	af
  525/     174 : CD 46 01               		call	konvx		; Konvertierung
  526/     177 : 23                     		inc	hl
  527/     178 : 44                     		ld	b, h		; BC=HL=DATA+1
  528/     179 : 4D                     		ld	c, l
  529/     17A : 6E                     		ld	l, (hl)		; unteres Byte
  530/     17B : 03                     		inc	bc
  531/     17C : 0A                     		ld	a, (bc)
  532/     17D : 67                     		ld	h, a		; oberes Byte
  533/     17E : C1                     		pop	bc
  534/     17F : B5                     		or	l		; Z-Flag setzen
  535/     180 : 78                     		ld	a, b
  536/     181 : C1                     		pop	bc
  537/     182 : C9                     		ret
  538/     183 :                        
  539/     183 :                        ;------------------------------------------------------------------------------
  540/     183 :                        ; Ausgabe (A) hexadezimal
  541/     183 :                        ; gibt den Akku als zweistellige Hexzahl auf dem Schirm aus,
  542/     183 :                        ; kein Register wird zerstört
  543/     183 :                        ;------------------------------------------------------------------------------
  544/     183 :                        
  545/     183 : F5                     OUTHEX:		push	af
  546/     184 : 1F                     		rra
  547/     185 : 1F                     		rra
  548/     186 : 1F                     		rra
  549/     187 : 1F                     		rra
  550/     188 : CD 8C 01               		call	OUTHEX1		; obere Tetrade ausgeben
  551/     18B : F1                     		pop	af		; und die untere
  552/     18C : F5                     OUTHEX1:	push	af
  553/     18D : E6 0F                  		and	0Fh
  554/     18F : C6 30                  		add	a, '0'		; Konvertierung --> ASCII
  555/     191 : FE 3A                  		cp	'9'+1		; Ziffer "A" ... "F"?
  556/     193 : 38 02                  		jr	c, OUTHEX2	; nein
  557/     195 : C6 07                  		add	a, 7		; sonst Korrektur
  558/     197 : D7                     OUTHEX2:	rst	outch		; OUTCH ; und Ausgabe
  559/     198 : F1                     		pop	af
  560/     199 : C9                     		ret
  561/     19A :                        
  562/     19A :                        ;------------------------------------------------------------------------------
  563/     19A :                        ; Ausgabe HL hexadezimal
  564/     19A :                        ; gibt das HL-Register als vierstellige Hexzahl auf dem Schirm aus,
  565/     19A :                        ; kein Register wird zerstört
  566/     19A :                        ;------------------------------------------------------------------------------
  567/     19A :                        
  568/     19A : F5                     OUTHL:		push	af
  569/     19B : 7C                     		ld	a, h
  570/     19C : CD 83 01               		call	OUTHEX		; Ausgabe A hexadezimal
  571/     19F : 7D                     		ld	a, l
  572/     1A0 : CD 83 01               		call	OUTHEX		; Ausgabe A hexadezimal
  573/     1A3 : F1                     		pop	af
  574/     1A4 : C9                     		ret
  575/     1A5 :                        
  576/     1A5 :                        ;------------------------------------------------------------------------------
  577/     1A5 :                        ; Up zu xxx
  578/     1A5 :                        ;------------------------------------------------------------------------------
  579/     1A5 :                        
  580/     1A5 : E5                     sub_1A5:	push	hl
  581/     1A6 : 2A 1A 18               		ld	hl, (soil)
  582/     1A9 : 7D                     		ld	a, l
  583/     1AA : B4                     		or	h
  584/     1AB : E1                     		pop	hl
  585/     1AC : 3A 8A 18               		ld	a, (hs_filetyp)	; Basic-Mode
  586/     1AF : C9                     		ret
  587/     1B0 :                        
  588/     1B0 : FF                     		db 0FFh
  589/     1B1 : FF                     		db 0FFh
  590/     1B2 : FF                     		db 0FFh
  591/     1B3 : FF                     		db 0FFh
  592/     1B4 : FF                     		db 0FFh
  593/     1B5 :                        
  594/     1B5 :                        ;------------------------------------------------------------------------------
  595/     1B5 :                        ; Kommandos nachladen
  596/     1B5 :                        ; Dateiname f. Nachladbare Kommandos
  597/     1B5 :                        ; MO11A_46.Z80
  598/     1B5 :                        ;   | | ^^--------- ASCII-Code des Kommandobuchstabens
  599/     1B5 :                        ;   | +------------ Gerätekenner (A=AC1, L=LLC2)
  600/     1B5 :                        ;   +-------------- Monitorversion
  601/     1B5 :                        ;------------------------------------------------------------------------------
  602/     1B5 :                        
  603/     1B5 : 21 E2 02               kdo5:		ld	hl, aFNERW	; Dateiname f. Nachladbare Kommandos
  604/     1B8 : 11 B4 18               		ld	de, filenambuf	; in hsbuf kopieren
  605/     1BB : 01 0E 00               		ld	bc, 14		; Länge Dateiname (mit "")
  606/     1BE : ED B0                  		ldir
  607/     1C0 : ED 43 5B 18            		ld	(ARG1),	bc	; 0
  608/     1C4 :                        		;
  609/     1C4 : 2A 1A 18               		ld	hl, (soil)
  610/     1C7 : 7E                     		ld	a, (hl)		; Kommandobuchstabe
  611/     1C8 : CD C8 0E               		call	tohex		; als Hex-Ascii
  612/     1CB : 22 B9 18               		ld	(filenambuf+5), hl	; in Dateiname eintragen
  613/     1CE : CD B5 04               		call	outchoff	; outch deaktivieren
  614/     1D1 : 3E 50                  		ld	a, 'P'		; Typ Programm
  615/     1D3 : =>TRUE                 		if vKdoProc == "USB"
  616/     1D3 : CD DB 04               		call	ld_usb		; Datei laden, Nachladen via USB 
  617/     1D6 : =>FALSE                		else
  618/     1D6 :                        		call	ld_hd		; Datei laden, Nachladen via HD (lt. Doku 9C4H, das ist falsch!)
  619/     1D6 : [615]                  		endif
  620/     1D6 : CD B9 04               		call	outchon		; outch aktivieren
  621/     1D9 : 28 06                  		jr	z, kdo1a	; wenn geladen, kdo im RAM suchen und ausführen
  622/     1DB : DF                     		rst	prnst		; Ausgabe String
  623/     1DC : 20 BF                  		db ' ','?'+80h		; Fehler (Kommando-Datei nicht geladen)
  624/     1DE :                        
  625/     1DE :                        ;------------------------------------------------------------------------------
  626/     1DE :                        ; Kommandoschleife
  627/     1DE :                        ;
  628/     1DE :                        ; Suchen des Kommandos
  629/     1DE :                        ; wenn ':' folgt, dann alte Parameter nehmen
  630/     1DE :                        ; sonst 3 Parameter einlesen und in ARG1..ARG3 ablegen
  631/     1DE :                        ; bei Kdo-Start gilt
  632/     1DE :                        ; 	BC = Return-Adr
  633/     1DE :                        ; 	DE zeigt auf ':' oder auf Leezeichen hinter letzem Parameter
  634/     1DE :                        ; 	HL = Kdo-Adr
  635/     1DE :                        ; Kommandorahmen: 00,09,Kdo-Zeichen,0D
  636/     1DE :                        ;------------------------------------------------------------------------------
  637/     1DE :                        ;Eingang Kommandomodus
  638/     1DE :                        
  639/     1DE : CD 28 01               kdo1:		call	INLINE		; Zeile eingeben
  640/     1E1 : 21 10 00               kdo1a:		ld	hl, KDOANF	; erste Adr, aber der Kdo zu suchen sind
  641/     1E4 : 01 F0 FF               		ld	bc, RAMEND-KDOANF+1	; Anzahl (RAM-Ende-Startpos.)	; 0FFF0h
  642/     1E7 : AF                     kdo2:		xor	a		; 00
  643/     1E8 : ED B1                  		cpir			; suche 00
  644/     1EA : E2 B5 01               		jp	po, kdo5	; Kommando nachladen
  645/     1ED : 3E 09                  		ld	a, 9		; 09
  646/     1EF : BE                     		cp	(hl)		; folgt 09?
  647/     1F0 : 20 F5                  		jr	nz, kdo2
  648/     1F2 : 23                     		inc	hl
  649/     1F3 : ED 5B 1A 18            		ld	de, (soil)	; Zwischenspeicher "Inline"
  650/     1F7 : 1A                     		ld	a, (de)		; KDO
  651/     1F8 : BE                     		cp	(hl)		; folgt Kommandbuchstabe?
  652/     1F9 : 20 EC                  		jr	nz, kdo2
  653/     1FB : 23                     		inc	hl
  654/     1FC : 3E 0D                  		ld	a, 0Dh		; 0d
  655/     1FE : BE                     		cp	(hl)		; folgt 0D?
  656/     1FF : 20 E6                  		jr	nz, kdo2	; falsches Kdo
  657/     201 :                        ;
  658/     201 : 01 DE 01               		ld	bc, kdo1	; Returnadr. auf Stack
  659/     204 : C5                     		push	bc
  660/     205 : 23                     		inc	hl
  661/     206 : E5                     		push	hl
  662/     207 :                        ; Parameter
  663/     207 : 1B                     		dec	de
  664/     208 : CD 72 01               		call	INHEX		; 1. Argument
  665/     20B : 1A                     		ld	a, (de)
  666/     20C : FE 3A                  		cp	':'		; die alten Werte nehmen ?
  667/     20E : 28 0F                  		jr	z, kdo4
  668/     210 : 22 5B 18               		ld	(ARG1),	hl	; Argument 1
  669/     213 : CD 72 01               		call	INHEX
  670/     216 : 22 5D 18               		ld	(ARG2),	hl	; Argument 2
  671/     219 : CD 72 01               		call	INHEX
  672/     21C : 22 5F 18               		ld	(ARG3),	hl	; Argument 3
  673/     21F : C9                     kdo4:		ret
  674/     220 :                        
  675/     220 :                        ;------------------------------------------------------------------------------
  676/     220 :                        ; init. Sprungverteiler für RST-Aufrufe, NMI und Init.
  677/     220 :                        ; RST xx springt in den RAM. von dort geht es normalerweise zu den Monitor-
  678/     220 :                        ; Routinen, aber man kann auch eigene Ein-/Ausgaberoutinen nehmen
  679/     220 :                        ;
  680/     220 :                        ; bei Systemstart werden 32 Bytes nach Adresse 1802H kopiert
  681/     220 :                        ; Tabelle RST, NMI, Hilfsregister, V24, I/O (Voreinstellung)
  682/     220 :                        ;------------------------------------------------------------------------------
  683/     220 :                        
  684/     220 :                        ; damit init4 funktioniert, muss das Adresse 220h sein
  685/     220 :                        ; und lo(sv_rst) = Bereichsgröße sv_rstend-sv_rst
  686/     220 :                        	
  687/     220 :                        		org 220h
  688/     220 :                        
  689/     220 : C3 A5 00               sv_rst:		jp	rinch		; rst 08
  690/     223 : C3 E4 00               		jp	routch0		; rst 10
  691/     226 : C3 AA 04               		jp	rprnst		; rst 18
  692/     229 : C3 CF 02               		jp	rPUT		; rst 20
  693/     22C : C3 A3 07               		jp	rGET		; rst 28
  694/     22F : C3 9A 01               		jp	OUTHL		; rst 30
  695/     232 : C3 40 02               		jp	BREAK		; rst 38
  696/     235 : C3 40 02               		jp	BREAK		; NMI: Breakpoint
  697/     238 : =>TRUE                 igsbslm:	if vGSBProc == "USB"
  698/     238 : 00                     		db 0			; Voreinstellung Methode GSB SAVE/Load USB HD 00h 20h
  699/     239 : =>FALSE                		else
  700/     239 :                        		db 20h
  701/     239 : [697]                  		endif
  702/     239 : FD                     hd_buf_hi:	db 0FDh			; Voreinstellung HighByte HD-Puffer FD (AC1) FE	(LLC2)
  703/     23A : 53 43 48               aSch:		db "SCH"		; 181C Autostart-Kennung
  704/     23D : 00                     		db  0			; 181F FARBBWS init
  705/     23E : 42                     		db  42h			; 1820 Kommandocode V 24 (Adresse 1820H)
  706/     23F : 11                     		db  11h			; Ein/Ausgabebyte (Adresse 1821H)
  707/     240 :                        
  708/     240 :                        ;------------------------------------------------------------------------------
  709/     240 :                        ; Einsprung NMI, Register werden in die RSA gerettet, 
  710/     240 :                        ; I/O und PIO werden auf Standard gesetzt
  711/     240 :                        ;------------------------------------------------------------------------------
  712/     240 :                        
  713/     240 :                        ; Breakpoint
  714/     240 : 00                     BREAK:		nop			; ehem CALL REGA
  715/     241 : 00                     		nop
  716/     242 : 00                     		nop
  717/     243 : E1                     break1:		pop	hl		; Returnadr nach Break
  718/     244 : 2B                     		dec	hl		; ein Byte zurück (norm. RST 38)
  719/     245 : 22 75 18               		ld	(REGPC), hl	; merken
  720/     248 : ED 73 77 18            		ld	(REGSP), sp
  721/     24C : 31 56 18               		ld	sp, SYSSK	; Stack
  722/     24F : 3E 11                  		ld	a, 11h		; Standard Console
  723/     251 : 32 21 18               		ld	(IOBYT), a	; Ein/Ausgabebyte
  724/     254 : DF                     		rst	prnst		; Ausgabe String
  725/     255 : 20 42 52 45 41 CB      		db " BREA",'K'+80h
  726/     25B :                        		
  727/     25B :                        ;------------------------------------------------------------------------------
  728/     25B :                        ; Rückkehr in Monitor, nach NMI
  729/     25B :                        ;------------------------------------------------------------------------------
  730/     25B :                        
  731/     25B :                        GETCO1:
  732/     25B : 31 56 18               break2:		ld	sp, SYSSK	; Stack init
  733/     25E : 3E DA                  		ld	a, 0DAh		; Standard setzen für
  734/     260 : D3 05                  		out	(PIODB), a	; Grafik/Ton
  735/     262 : 21 DE 01               		ld	hl, kdo1	; Kommandoschleife
  736/     265 : E5                     		push	hl		; auf Stack
  737/     266 : ED 45                  		retn			; und anspringen
  738/     268 :                        
  739/     268 :                        ;------------------------------------------------------------------------------
  740/     268 :                        ; Ausgabe "Error"
  741/     268 :                        ;------------------------------------------------------------------------------
  742/     268 :                        
  743/     268 : DF                     error:		rst	prnst		; Ausgabe String
  744/     269 : 20 45 52 52 4F 52 20   		db " ERROR "
  745/     270 : 87                     		db  87h			; Beep
  746/     271 : C9                     		ret
  747/     272 :                        
  748/     272 :                        ;------------------------------------------------------------------------------
  749/     272 :                        ; UP "akustisches Signal"
  750/     272 :                        ;------------------------------------------------------------------------------
  751/     272 :                        
  752/     272 : C5                     beep:		push	bc
  753/     273 : 06 02                  		ld	b, 2
  754/     275 : C5                     beep1:		push	bc
  755/     276 : 01 40 00               		ld	bc, 00040h
  756/     279 : CD 87 02               		call	UPTON		; UP "Ton", Reg, B = Tonlaenge, C = Tonhoehe
  757/     27C : 01 32 F0               		ld	bc, 0F032h
  758/     27F : CD 87 02               		call	UPTON		; UP "Ton", Reg, B = Tonlaenge, C = Tonhoehe
  759/     282 : C1                     		pop	bc
  760/     283 : 10 F0                  		djnz	beep1
  761/     285 : C1                     		pop	bc
  762/     286 : C9                     		ret
  763/     287 :                        
  764/     287 :                        ;------------------------------------------------------------------------------
  765/     287 :                        ; UP "Ton", Reg, B = Tonlaenge, C = Tonhoehe
  766/     287 :                        ;------------------------------------------------------------------------------
  767/     287 :                        
  768/     287 : F5                     UPTON:		push	af
  769/     288 : DB 05                  ton1:		in	a, (PIODB)	; Grafik/Ton
  770/     28A : 1F                     		rra
  771/     28B : 3F                     		ccf
  772/     28C : 17                     		rla
  773/     28D : D3 05                  		out	(PIODB), a	; Grafik/Ton
  774/     28F : 79                     		ld	a, c
  775/     290 : 3D                     ton2:		dec	a
  776/     291 : 20 FD                  		jr	nz, ton2
  777/     293 : 10 F3                  		djnz	ton1
  778/     295 : F1                     		pop	af
  779/     296 : C9                     		ret
  780/     297 :                        
  781/     297 :                        ;------------------------------------------------------------------------------
  782/     297 :                        ;UP "Taste", testet Tastaturtatus, kehrt bei gedrückter Taste
  783/     297 :                        ;nach 18 ms mit dem Kode zum Akku zurück, keine Taste-Rückkehr mit
  784/     297 :                        ;gesetztem Z-Flag und A=0, Code steht in $1822
  785/     297 :                        ;------------------------------------------------------------------------------
  786/     297 :                        
  787/     297 : C5                     UPTAST:		push	bc
  788/     298 : CD C3 02               		call	tast6		; Taste gedrückt?
  789/     29B : 28 20                  tast1:		jr	z, tast5	; nein
  790/     29D : 06 0C                  		ld	b, 12		; 12x Kontrollesen, Wartezeit
  791/     29F : 4F                     		ld	c, a		; Tastenwert
  792/     2A0 : CD C3 02               tast2:		call	tast6
  793/     2A3 : B9                     		cp	c		; noch dieselbe Taste?
  794/     2A4 : 20 17                  		jr	nz, tast5
  795/     2A6 : 10 F8                  		djnz	tast2
  796/     2A8 : FE 21                  		cp	21h		; Steuerzeichen ?
  797/     2AA : 38 0F                  		jr	c, tast4	; sprung wenn a < 21h, d.h. Steuerzeichen
  798/     2AC :                        					; daher patch auf 21h, so dass für
  799/     2AC :                        					; ASCII-zeichen der Grafik-Offs. funktioniert
  800/     2AC : DB 05                  		in	a, (PIODB)
  801/     2AE : CB 57                  tast3:		bit	2, a		; Grafiktaste ?
  802/     2B0 : 79                     		ld	a, c
  803/     2B1 : 20 08                  		jr	nz, tast4	; nein
  804/     2B3 : C6 80                  		add	a, 80h		; sonst Grafik-Offset dazu
  805/     2B5 : FE E0                  		cp	0E0h
  806/     2B7 : 38 02                  		jr	c, tast4
  807/     2B9 : D6 60                  		sub	60h
  808/     2BB : 04                     tast4:		inc	b		; ??
  809/     2BC : 06                     		db  06h			; --> ld b,xx; überspringt XOR A
  810/     2BD : AF                     tast5:		xor	a
  811/     2BE : C1                     		pop	bc
  812/     2BF : 32 22 18               		ld	(tacod), a	; Tastencode der zuletzt gedr}ckten Taste
  813/     2C2 : C9                     		ret
  814/     2C3 :                        
  815/     2C3 :                        ; Test Taste gedrückt?
  816/     2C3 : 3E 48                  tast6:		ld	a, 48h		; kurz warten (Entprellen)
  817/     2C5 : 3D                     tast7:		dec	a
  818/     2C6 : 20 FD                  		jr	nz, tast7
  819/     2C8 : DB 04                  		in	a, (PIODA)	; Tastenwert
  820/     2CA : CB 7F                  		bit	7, a		; Taste	gedrückt?
  821/     2CC : CB BF                  		res	7, a
  822/     2CE : C9                     		ret
  823/     2CF :                        
  824/     2CF :                        ;------------------------------------------------------------------------------
  825/     2CF :                        ; rst20 PUT
  826/     2CF :                        ; Ausgabe zu VDIP1 senden:
  827/     2CF :                        ; PE:	A	Datenbyte
  828/     2CF :                        ; VR:	-
  829/     2CF :                        ;------------------------------------------------------------------------------
  830/     2CF :                        
  831/     2CF : D3 FC                  rPUT:		out	(PIO3A), a	; Daten	ausgeben
  832/     2D1 : F5                     		push	af
  833/     2D2 : DB FD                  rput1:		in	a, (PIO3B)	; Status abfragen
  834/     2D4 : 0F                     		rrca
  835/     2D5 : 0F                     		rrca
  836/     2D6 : 38 FA                  		jr	c, rput1	; nicht	bereit,	warten!
  837/     2D8 : 3E CC                  		ld	a, 0CCh		; WR aktiv
  838/     2DA : D3 FD                  		out	(PIO3B), a
  839/     2DC : 3E C4                  		ld	a, 0C4h		; WR inaktiv
  840/     2DE : D3 FD                  		out	(PIO3B), a
  841/     2E0 : F1                     		pop	af
  842/     2E1 : C9                     		ret
  843/     2E2 :                        
  844/     2E2 :                        ;------------------------------------------------------------------------------
  845/     2E2 :                        ; Dateiname f. Nachladbare Kommandos
  846/     2E2 :                        ; MO11A_46.Z80
  847/     2E2 :                        ;   | | ^^--------- ASCII-Code des Kommandobuchstabens
  848/     2E2 :                        ;   | +------------ Gerätekenner (A=AC1, L=LLC2)
  849/     2E2 :                        ;   +-------------- Monitorversion
  850/     2E2 :                        ;------------------------------------------------------------------------------
  851/     2E2 :                        
  852/     2E2 :                        ; zu kdo5
  853/     2E2 : 22 30 38 5A 2E 78 78   aFNERW:		db "\"08Z.xx_A11OM\""	; -> MO11A_xx.Z80
           2E9 : 5F 41 31 31 4F 4D 22
  854/     2F0 :                        
  855/     2F0 :                        ;------------------------------------------------------------------------------
  856/     2F0 :                        ; Zeichensatz umschalten
  857/     2F0 :                        ;------------------------------------------------------------------------------
  858/     2F0 :                        
  859/     2F0 : DB 05                  o_ZS:		in	a, (PIODB); Grafik/Ton
  860/     2F2 : EE 08                  		xor	8
  861/     2F4 : D3 05                  		out	(PIODB), a; Grafik/Ton
  862/     2F6 : 18 36                  		jr	o_00
  863/     2F8 :                        
  864/     2F8 :                        ;------------------------------------------------------------------------------
  865/     2F8 :                        ; Interrupt-Tabelle CTC
  866/     2F8 :                        ;------------------------------------------------------------------------------
  867/     2F8 :                        
  868/     2F8 :                        inttab:		align 2
  869/     2F8 :                        
  870/     2F8 : FF FF                  		dw 0FFFFh		; interrupt-Routine CTC0 
  871/     2FA : FF FF                  		dw 0FFFFh		; interrupt-Routine CTC1
  872/     2FC : FF FF                  		dw 0FFFFh		; interrupt-Routine CTC2
  873/     2FE : FF FF                  		dw 0FFFFh		; interrupt-Routine CTC3
  874/     300 :                        
  875/     300 :                        ;------------------------------------------------------------------------------
  876/     300 :                        ; Bildschirmtreiber
  877/     300 :                        ; im Sprungverteiler wurde die HI-Adresse eingespart, deshalb müssen alle
  878/     300 :                        ; Steuerzeichenroutinen in derselben Page 03xx liegen! ( hi(cotab),lo(co_fkt) )
  879/     300 :                        ;
  880/     300 :                        ; 017FFH Bildschirmanfang (links oben !!)
  881/     300 :                        ; 01000H Bildschirmende (rechts unten !!)
  882/     300 :                        ; 32 Zeilen a 64 Zeichen
  883/     300 :                        ;
  884/     300 :                        ; Der BWS arbeitet aufgrund der Hardware invers
  885/     300 :                        ; d.h. inc geht ein Zeichen / eine Zeile zurück
  886/     300 :                        ;      dec geht ein Zeichen / eine Zeile vor
  887/     300 :                        ;------------------------------------------------------------------------------
  888/     300 :                        ;
  889/     300 :                        ;
  890/     300 :                        ;  bwsat(0,0)                                       bwsat(0,63)
  891/     300 :                        ;  +--------------------------------------------------------+
  892/     300 :                        ;  ¦17FF BSWANF                ...                     17C0 ¦
  893/     300 :                        ;  ¦                                                        ¦
  894/     300 :                        ;  ¦                     32 Zeilen                          ¦
  895/     300 :                        ;  ¦                     64 Spalten                         ¦
  896/     300 :                        ;  ¦                                                        ¦
  897/     300 :                        ;  ¦                    <-- inc cupos                       ¦
  898/     300 :                        ;  ¦                    --> dec cupos                       ¦
  899/     300 :                        ;  ¦                                                    .   ¦
  900/     300 :                        ;  ¦ .                                                  .   ¦
  901/     300 :                        ;  ¦ .                                                  .   ¦
  902/     300 :                        ;  ¦ .                                                      ¦
  903/     300 :                        ;  ¦                                                        ¦
  904/     300 :                        ;  ¦10BF                       ...                     1080 ¦
  905/     300 :                        ;  ¦107F                       ...                     1040 ¦
  906/     300 :                        ;  ¦103F                       ...              BWSEND 1000 ¦
  907/     300 :                        ;  +--------------------------------------------------------+ 
  908/     300 :                        ;  bwsat(31,0)                                      bwsat(31,63)
  909/     300 :                        ;
  910/     300 :                        ;
  911/     300 :                        ;------------------------------------------------------------------------------
  912/     300 :                        
  913/     300 :                        		; org 300h
  914/     300 : C5                     co0:		push	bc
  915/     301 : ED 5B 00 18            		ld	de, (cupos)	; Zwischenspeicher Kursor
  916/     305 : 21 56 18               		ld	hl, poscnt	; Hilfsregister Kursorpositionierung (CTRL+N)
  917/     308 : FE 10                  		cp	10h		; Steuerzeichen?
  918/     30A : 30 0C                  		jr	nc, co1		; Sprung, wenn kein Steuerzeichen
  919/     30C : 36 01                  		ld	(hl), 1		; poscnt auf 1 setzen
  920/     30E : 01 C7 03               		ld	bc, cotab	; Tabelle f. Steuerzeichen
  921/     311 : 81                     		add	a, c
  922/     312 : 4F                     		ld	c, a
  923/     313 : 0A                     		ld	a, (bc)
  924/     314 : 4F                     		ld	c, a		; bc = hi(cotab),lo(co_fkt)
  925/     315 : C5                     		push	bc		; Adresse Steuerzeichenfkt. auf Stack
  926/     316 : EB                     		ex	de, hl		; hl=cupos, de=poscnt
  927/     317 : C9                     		ret			; und anspringen
  928/     318 :                        
  929/     318 :                        ; einfache Zeichenausgabe
  930/     318 : 35                     co1:		dec	(hl)		; hl=poscnt. ist ctrl-n-Mode aktiv? d.h.
  931/     319 :                        					; sind noch Ziffern zu verarbeiten?
  932/     319 : 20 18                  		jr	nz, co5		; poscnt > 1 -> ja, dann dort weiter
  933/     31B : 36 01                  co2:		ld	(hl), 1		; sonst wieder poscnt auf 1 setzen
  934/     31D :                        		;
  935/     31D : EB                     		ex	de, hl		; hl=cupos
  936/     31E : FE 1A                  		cp	1Ah		; steuerzeichen 1Ah (Zeichensatz umschalten)
  937/     320 : 28 CE                  		jr	z, o_ZS
  938/     322 : FE 7F                  		cp	7Fh		; steuerzeichen 7Fh (del)
  939/     324 : 28 37                  		jr	z, co8
  940/     326 : 77                     		ld	(hl), a		; sonst Zeichen in BWS schreiben
  941/     327 :                        
  942/     327 :                        ; Kursor nach rechts
  943/     327 : 2B                     o_cur:		dec	hl		; inc. cupos
  944/     328 : CD DC 03               co3:		call	scroll
  945/     32B : 22 00 18               co4:		ld	(cupos), hl	; Zwischenspeicher Kursor
  946/     32E :                        ; co Ende
  947/     32E : C1                     o_00:		pop	bc
  948/     32F : D1                     		pop	de
  949/     330 : E1                     		pop	hl
  950/     331 : F1                     		pop	af
  951/     332 : C9                     		ret
  952/     333 :                        
  953/     333 :                        ; direkte Cursorpositionierung
  954/     333 :                        ; in hl=poscnt Hilfsregister Kursorpositionierung (CTRL+N)
  955/     333 :                        ; de = bwsanf
  956/     333 :                        ; es folgen 4 Ziffern dezimal Zeile 00.31, Spalte 00..63
  957/     333 : FE 30                  co5:		cp	'0'		; wenn keine Ziffer
  958/     335 : 38 E4                  		jr	c, co2		; dann Abbruch 
  959/     337 : 28 F5                  		jr	z, o_00		; '0' übergehen
  960/     339 : FE 3A                  		cp	'9'+1		; wenn keine Ziffer
  961/     33B : 30 DE                  		jr	nc, co2		; dann Abbruch 
  962/     33D : D6 30                  		sub	'0'
  963/     33F : 46                     		ld	b, (hl)		; hl=poscnt
  964/     340 :                        		; offs. berechnen
  965/     340 :                        		; summand ermitteln
  966/     340 : EB                     		ex	de, hl		; hl = bwsanf
  967/     341 : 11 FF FF               		ld	de, -1
  968/     344 : 05                     		dec	b
  969/     345 : 28 0D                  		jr	z, co6		; wenn Einerstelle Spalte
  970/     347 : 1E F6                  		ld	e, -10
  971/     349 : 05                     		dec	b
  972/     34A : 28 08                  		jr	z, co6		; wenn Zehnerstelle Spalte
  973/     34C : 1E C0                  		ld	e, -COLS
  974/     34E : 05                     		dec	b
  975/     34F : 28 03                  		jr	z, co6		; wenn Einerstelle Zeile
  976/     351 : 11 80 FD               		ld	de, -COLS*10	; sonst wenn Zehner Zeile
  977/     354 : 47                     co6:		ld	b, a		; a (=ziffer) mal
  978/     355 : 19                     co7:		add	hl, de		; aufaddieren
  979/     356 : CD DC 03               		call	scroll
  980/     359 : 10 FA                  		djnz	co7
  981/     35B : 18 CE                  		jr	co4		; ende
  982/     35D :                        
  983/     35D :                        ; del 7Fh, 5Fh
  984/     35D : 23                     co8:		inc	hl		; ein Zeichen zurück
  985/     35E : CD DC 03               		call	scroll
  986/     361 : 36 20                  		ld	(hl), ' '	; Zeichen löschen
  987/     363 : 18 C6                  		jr	co4
  988/     365 :                        
  989/     365 :                        ; Bildschirm löschen
  990/     365 : 21 FF 17               o_cls:		ld	hl, BWSANF
  991/     368 : 22 00 18               		ld	(cupos), hl	; Zwischenspeicher Kursor
  992/     36B :                        
  993/     36B :                        ; Bildschirm ab Kursorposition löschen
  994/     36B : 36 20                  o_clsc:		ld	(hl), ' '	; mil Leerzeichen füllen
  995/     36D : 2B                     		dec	hl		; nächstes Zeichen
  996/     36E : 7C                     		ld	a, h
  997/     36F : FE 0F                  		cp	hi(BWS-1)	; BWS überschritten ?
  998/     371 : 20 F8                  		jr	nz, o_clsc	; weiter bis BWS-Ende
  999/     373 : 18 B9                  		jr	o_00
 1000/     375 :                        
 1001/     375 :                        ; Zeile ab Kursorposition löschen
 1002/     375 : 36 20                  o_clln:		ld	(hl), ' '	; aktuelles Zeichen löschen
 1003/     377 : 2B                     co9:		dec	hl		; inc cupos
 1004/     378 : 36 20                  		ld	(hl), ' '	; nächstes  Zeichen löschen
 1005/     37A : 3E 3F                  		ld	a, COLS-1
 1006/     37C : A5                     		and	l		; Zeilenende erreicht?
 1007/     37D : 20 F8                  		jr	nz, co9		; nein -> weiter
 1008/     37F : 18 AD                  co10:		jr	o_00
 1009/     381 :                        
 1010/     381 :                        ; Kursor an den Anfang der Zeile
 1011/     381 : 7D                     o_sol:		ld	a, l
 1012/     382 : F6 3F                  		or	COLS-1		 ; setze auf Zeilenanfang
 1013/     384 : 6F                     		ld	l, a
 1014/     385 : 18 A4                  		jr	co4
 1015/     387 :                        
 1016/     387 :                        ; BEL, akustisches Signal
 1017/     387 : CD 72 02               o_bell:		call	beep
 1018/     38A : 18 A2                  		jr	o_00
 1019/     38C :                        
 1020/     38C :                        ; Kursor nach links
 1021/     38C : 23                     o_cul:		inc	hl		; dec cupos
 1022/     38D : 18 99                  		jr	co3
 1023/     38F :                        
 1024/     38F :                        ; Kursor nach unten
 1025/     38F : 11 C0 FF               o_cud:		ld	de, -COLS
 1026/     392 : 19                     co11:		add	hl, de
 1027/     393 : 18 93                  		jr	co3
 1028/     395 :                        
 1029/     395 :                        ; Kursor nach oben
 1030/     395 : 11 40 00               o_cuu:		ld	de, COLS
 1031/     398 : 18 F8                  		jr	co11
 1032/     39A :                        
 1033/     39A :                        ; CR, Kursor an Anfang nächster Zeile; Enter
 1034/     39A : 7D                     o_cr:		ld	a, l
 1035/     39B : E6 C0                  		and	0C0h		; Pos=Zeilenende
 1036/     39D : 6F                     		ld	l, a
 1037/     39E : 18 87                  		jr	o_cur
 1038/     3A0 :                        
 1039/     3A0 :                        ; Kursor direkt positionieren
 1040/     3A0 : 3E 05                  o_setc:		ld	a, 5
 1041/     3A2 : 12                     		ld	(de), a		; de=poscnt Hilfsregister Kursorpositionierung (CTRL+N)
 1042/     3A3 :                        		; jetzt Cursor auf BWSANF setzen (f. Berechnung in co5)
 1043/     3A3 :                        
 1044/     3A3 :                        ; Home, Kursor oben links
 1045/     3A3 : 21 FF 17               o_home:		ld	hl, BWSANF
 1046/     3A6 : 18 83                  		jr	co4
 1047/     3A8 :                        
 1048/     3A8 :                        ; Delete;	Zeichen	löschen, Zeile rückt nach links
 1049/     3A8 : 54                     o_del:		ld	d, h
 1050/     3A9 : 5D                     		ld	e, l
 1051/     3AA : 2B                     		dec	hl
 1052/     3AB : 7D                     co12:		ld	a, l
 1053/     3AC : ED A8                  		ldd
 1054/     3AE : E6 3F                  		and	COLS-1
 1055/     3B0 : 20 F9                  		jr	nz, co12
 1056/     3B2 : 13                     		inc	de
 1057/     3B3 : 3E 20                  co13:		ld	a, ' '
 1058/     3B5 : 12                     		ld	(de), a
 1059/     3B6 : 18 C7                  		jr	co10
 1060/     3B8 :                        
 1061/     3B8 :                        ; Insert;	Space einfügen,	Zeile rückt nach rechts
 1062/     3B8 : 7D                     o_ins:		ld	a, l
 1063/     3B9 : E6 C0                  		and	0C0h		; Pos=Zeilenende
 1064/     3BB : 5F                     		ld	e, a
 1065/     3BC : 7D                     		ld	a, l
 1066/     3BD : 6B                     		ld	l, e
 1067/     3BE : 54                     		ld	d, h
 1068/     3BF : 23                     		inc	hl
 1069/     3C0 : BB                     co14:		cp	e
 1070/     3C1 : 28 F0                  		jr	z, co13
 1071/     3C3 : ED A0                  		ldi
 1072/     3C5 : 18 F9                  		jr	co14
 1073/     3C7 :                        
 1074/     3C7 :                        ; Tabelle Steuercodes, lo-teil, hi-teil ist hi(cotab) also, 03xx !
 1075/     3C7 : 2E                     cotab:		db lo(o_00)	; 00 keine Funktion
 1076/     3C8 : A3                     		db lo(o_home)	; 01 Home, Kursor oben links
 1077/     3C9 : 6B                     		db lo(o_clsc)	; 02 Bildschirm ab Kursorposition löschen
 1078/     3CA : 75                     		db lo(o_clln)	; 03 Zeile ab Kursorposition löschen
 1079/     3CB : A8                     		db lo(o_del)	; 04 Delete; Zeichen löschen, Zeile rückt nach links
 1080/     3CC : B8                     		db lo(o_ins)	; 05 Insert; Space einfügen, Zeile rückt nach rechts
 1081/     3CD : 81                     		db lo(o_sol)	; 06 Kursor an den Anfang der Zeile
 1082/     3CE : 87                     		db lo(o_bell)	; 07 BEL, akustisches Signal
 1083/     3CF : 8C                     		db lo(o_cul)	; 08 Kursor nach links
 1084/     3D0 : 27                     		db lo(o_cur)	; 09 Kursor nach rechts
 1085/     3D1 : 8F                     		db lo(o_cud)	; 0A Kursor nach unten
 1086/     3D2 : 95                     		db lo(o_cuu)	; 0B Kursor nach oben
 1087/     3D3 : 65                     		db lo(o_cls)	; 0C Bildschirm löschen
 1088/     3D4 : 9A                     		db lo(o_cr)	; 0D CR, Kursor an Anfang nächster Zeile; Enter
 1089/     3D5 : A0                     		db lo(o_setc)	; 0E Kursor direkt positionieren
 1090/     3D6 : D7                     		db lo(o_tab)	; 0F Tabulator 8 Spalten
 1091/     3D7 :                        
 1092/     3D7 :                        ; Tabulator 8 Spalten
 1093/     3D7 : 11 F8 FF               o_tab:		ld	de, -8
 1094/     3DA : 18 B6                  		jr	co11
 1095/     3DC :                        
 1096/     3DC :                        ; eine Zeile hochscrollen
 1097/     3DC : 7C                     scroll:	ld	a, h
 1098/     3DD : FE 18                  		cp	hi(BWSANF)+1	; BWS-Ende?
 1099/     3DF : 38 02                  		jr	c, scroll1
 1100/     3E1 : 26 10                  		ld	h, Hi(BWSEND)
 1101/     3E3 : FE 10                  scroll1:	cp	Hi(BWSEND)
 1102/     3E5 : D0                     		ret	nc
 1103/     3E6 : 7D                     		ld	a, l
 1104/     3E7 : D5                     		push	de
 1105/     3E8 : C5                     		push	bc
 1106/     3E9 : 21 BF 17               		ld	hl, BWSANF-COLS
 1107/     3EC : 11 FF 17               		ld	de, BWSANF
 1108/     3EF : 01 C0 07               		ld	bc, COLS*(LINES-1)
 1109/     3F2 : ED B8                  		lddr			; scrollen
 1110/     3F4 : EB                     		ex	de, hl
 1111/     3F5 : 23                     		inc	hl
 1112/     3F6 : 2D                     scroll2:	dec	l
 1113/     3F7 : 36 20                  		ld	(hl), ' '
 1114/     3F9 : 20 FB                  		jr	nz, scroll2
 1115/     3FB : E6 3F                  		and	COLS-1
 1116/     3FD : 6F                     		ld	l, a
 1117/     3FE : C1                     		pop	bc
 1118/     3FF : D1                     		pop	de
 1119/     400 : C9                     		ret
 1120/     401 :                        
 1121/     401 :                        ;------------------------------------------------------------------------------
 1122/     401 :                        ; N aaaa bbbb CRC - Prüfsumme
 1123/     401 :                        ; schnelle 16-Bit-SDLC-Routine
 1124/     401 :                        ;------------------------------------------------------------------------------
 1125/     401 :                        
 1126/     401 : 00 09 4E 0D            		db 0,9,'N',0Dh
 1127/     405 :                        
 1128/     405 : CD CA 04               crc:		call	para
 1129/     408 : EB                     		ex	de, hl
 1130/     409 : 23                     		inc	hl
 1131/     40A : AF                     		xor	a
 1132/     40B : ED 52                  		sbc	hl, de
 1133/     40D : 01 FF FF               		ld	bc, 0FFFFh
 1134/     410 : 1A                     crc1:		ld	a, (de)
 1135/     411 : A8                     		xor	b
 1136/     412 : 47                     		ld	b, a
 1137/     413 : 0F                     		rrca
 1138/     414 : 0F                     		rrca
 1139/     415 : 0F                     		rrca
 1140/     416 : 0F                     		rrca
 1141/     417 : E6 0F                  		and	0Fh
 1142/     419 : A8                     		xor	b
 1143/     41A : 47                     		ld	b, a
 1144/     41B : 0F                     		rrca
 1145/     41C : 0F                     		rrca
 1146/     41D : 0F                     		rrca
 1147/     41E : F5                     		push	af
 1148/     41F : E6 1F                  		and	1Fh
 1149/     421 : A9                     		xor	c
 1150/     422 : 4F                     		ld	c, a
 1151/     423 : F1                     		pop	af
 1152/     424 : F5                     		push	af
 1153/     425 : 0F                     		rrca
 1154/     426 : E6 F0                  		and	0F0h
 1155/     428 : A9                     		xor	c
 1156/     429 : 4F                     		ld	c, a
 1157/     42A : F1                     		pop	af
 1158/     42B : E6 E0                  		and	0E0h
 1159/     42D : A8                     		xor	b
 1160/     42E : 41                     		ld	b, c
 1161/     42F : 4F                     		ld	c, a
 1162/     430 : 13                     		inc	de
 1163/     431 : 2B                     		dec	hl
 1164/     432 : 7C                     		ld	a, h
 1165/     433 : B5                     		or	l
 1166/     434 : 20 DA                  		jr	nz, crc1
 1167/     436 : C5                     		push	bc
 1168/     437 : DF                     		rst	prnst		; Ausgabe String
 1169/     438 : 20 43 52 43 A0         		db " CRC",0A0h
 1170/     43D : E1                     		pop	hl
 1171/     43E : F7                     		rst	30h		; outhl
 1172/     43F : C9                     		ret
 1173/     440 :                        
 1174/     440 :                        ;------------------------------------------------------------------------------
 1175/     440 :                        ; UP zu	Dump
 1176/     440 :                        ; Ausgabe einer Zeile
 1177/     440 :                        ; "            2008>  FF FF FF FF FF FF FF FF  * ........ *"
 1178/     440 :                        ;------------------------------------------------------------------------------
 1179/     440 :                        
 1180/     440 : 41                     dmp_zeile:	ld	b, c		; c = Nr. aktives Byte
 1181/     441 : 23                     		inc	hl
 1182/     442 : 2B                     dmp_zeile1:	dec	hl
 1183/     443 : 10 FD                  		djnz	dmp_zeile1
 1184/     445 : 22 5D 18               		ld	(ARG2),	hl
 1185/     448 : DF                     		rst	prnst		; Ausgabe String
 1186/     449 : 06                     		db    6
 1187/     44A : 83                     		db  83h			; Zeilenanfang,zeile loeschen
 1188/     44B :                        		;12x Kursor nach rechts
 1189/     44B : 06 0C                  		ld	b, 12
 1190/     44D : DF                     dmp_zeile2:	rst	prnst		; Ausgabe String
 1191/     44E : 89                     		db  89h			; Kursor nach rechts
 1192/     44F : 10 FC                  		djnz	dmp_zeile2
 1193/     451 :                        		;Adresse
 1194/     451 : F7                     		rst	30h		; outhl
 1195/     452 : ED 5B 00 18            		ld	de, (cupos)
 1196/     456 :                        		;>
 1197/     456 : DF                     		rst	prnst		; Ausgabe String
 1198/     457 : 3E A0                  		db '>',' '+80h
 1199/     459 :                        		;8 Bytes headezimal
 1200/     459 : 06 08                  		ld	b, 8
 1201/     45B : 7E                     dmp_zeile3:	ld	a, (hl)
 1202/     45C : 23                     		inc	hl
 1203/     45D : DF                     		rst	prnst		; Ausgabe String
 1204/     45E : A0                     		db ' '+80h
 1205/     45F : CD EE 07               		call	j_OUTHEX
 1206/     462 : 10 F7                  		djnz	dmp_zeile3
 1207/     464 :                        		;Ascii start "  * "
 1208/     464 : DF                     		rst	prnst		; Ausgabe String
 1209/     465 : 20 20 2A A0            		db "  *",' '+80h
 1210/     469 : 2A 5D 18               		ld	hl, (ARG2)
 1211/     46C :                        		;8 Bytes ASCII
 1212/     46C : 06 08                  		ld	b, 8
 1213/     46E : 7E                     dmp_zeile4:	ld	a, (hl)
 1214/     46F : 23                     		inc	hl
 1215/     470 : CD 84 04               		call	tstzei
 1216/     473 : 30 02                  		jr	nc, dmp_zeile5	; wenn kein Zeichen
 1217/     475 : 3E 2E                  		ld	a, '.'		; dann "."
 1218/     477 : D7                     dmp_zeile5:	rst	outch		; Zeichenausgabe
 1219/     478 : 10 F4                  		djnz	dmp_zeile4
 1220/     47A :                        		;
 1221/     47A : 22 5B 18               		ld	(ARG1),	hl	; aktuelle Adresse merken (HL+8)
 1222/     47D :                        		;Ascii Ende
 1223/     47D : DF                     		rst	prnst		; Ausgabe String
 1224/     47E : 20 2A 06 20 88         		db " *",6,' ',88h	; 6-Kursor an den Anfang der Zeile
 1225/     483 :                        					; 8-Kursor nach links
 1226/     483 : C9                     		ret
 1227/     484 :                        
 1228/     484 :                        ;------------------------------------------------------------------------------
 1229/     484 :                        ; Test auf normales ASCII-Zeichen
 1230/     484 :                        ;------------------------------------------------------------------------------
 1231/     484 :                        
 1232/     484 : FE 7F                  tstzei:		cp	7Fh
 1233/     486 : 28 09                  tstzei1:	jr	z, tstzei3
 1234/     488 : FE 20                  		cp	' '
 1235/     48A : D8                     		ret	c		; wenn Steuerzeichen
 1236/     48B : FE 7F                  		cp	7Fh
 1237/     48D : 30 02                  		jr	nc, tstzei3	; wenn kein ACSII
 1238/     48F : A7                     tstzei2:	and	a
 1239/     490 : C9                     		ret
 1240/     491 : 37                     tstzei3:	scf
 1241/     492 : C9                     		ret
 1242/     493 :                        
 1243/     493 :                        ;------------------------------------------------------------------------------
 1244/     493 :                        ; Test auf Hexziffer
 1245/     493 :                        ;------------------------------------------------------------------------------
 1246/     493 :                        
 1247/     493 : FE 47                  tsthex:		cp	'F'+1
 1248/     495 : 30 FA                  		jr	nc, tstzei3
 1249/     497 : FE 30                  		cp	'0'
 1250/     499 : D8                     		ret	c
 1251/     49A : FE 3A                  		cp	'9'+1
 1252/     49C : 38 F1                  		jr	c, tstzei2
 1253/     49E : FE 41                  		cp	'A'
 1254/     4A0 : C9                     		ret
 1255/     4A1 :                        
 1256/     4A1 :                        ;------------------------------------------------------------------------------
 1257/     4A1 :                        ; Ausgabe 12 Leerzeichen an Zeilenanfang
 1258/     4A1 :                        ;------------------------------------------------------------------------------
 1259/     4A1 :                        
 1260/     4A1 : DF                     loc_4A1:	rst	prnst		; Ausgabe String
 1261/     4A2 : 86                     		db 6h +80h		; Kursor an den Anfang der Zeile
 1262/     4A3 : 06 0C                  		ld	b, 12
 1263/     4A5 : DF                     loc_4A5:	rst	prnst		; Ausgabe String
 1264/     4A6 : A0                     		db ' ' +80h
 1265/     4A7 : 10 FC                  		djnz	loc_4A5
 1266/     4A9 : C9                     		ret
 1267/     4AA :                        
 1268/     4AA :                        ;------------------------------------------------------------------------------
 1269/     4AA :                        ; Standard-Routine Ausgabe Zeichenkette, RST 18
 1270/     4AA :                        ;------------------------------------------------------------------------------
 1271/     4AA :                        
 1272/     4AA : E3                     rprnst:		ex	(sp), hl
 1273/     4AB : F5                     		push	af
 1274/     4AC : 7E                     rprnst1:	ld	a, (hl)		; Zeichen holen
 1275/     4AD : 23                     		inc	hl		; nächste Adr.
 1276/     4AE : D7                     		rst	OUTCH
 1277/     4AF : 07                     		rlca			; Ende (Bit7 gesetzt)?
 1278/     4B0 : 30 FA                  		jr	nc, rprnst1	; nein -> nächstes Zeichen
 1279/     4B2 : F1                     		pop	af
 1280/     4B3 : E3                     		ex	(sp), hl	; neue Return-Adr.
 1281/     4B4 : C9                     		ret
 1282/     4B5 :                        
 1283/     4B5 :                        ;------------------------------------------------------------------------------
 1284/     4B5 :                        ; outch deaktivieren/aktivieren
 1285/     4B5 :                        ;------------------------------------------------------------------------------
 1286/     4B5 :                        
 1287/     4B5 :                        ; up's zu kdo5
 1288/     4B5 : 3E C9                  outchoff:	ld	a, 0C9h		; RET
 1289/     4B7 : 18 02                  		jr	outchon1
 1290/     4B9 : 3E C3                  outchon:	ld	a, 0C3h		; JP
 1291/     4BB : 32 05 18               outchon1:	ld	(jp_rst10), a	; outch
 1292/     4BE : C9                     		ret
 1293/     4BF :                        
 1294/     4BF :                        ;------------------------------------------------------------------------------
 1295/     4BF :                        ; X Prog X Sprung in Programmpaket X via Modul 1
 1296/     4BF :                        ;------------------------------------------------------------------------------
 1297/     4BF :                        
 1298/     4BF : 00 09 58 0D            		db 0,9,'X',0Dh
 1299/     4C3 :                        
 1300/     4C3 : 3E 01                  		ld	a, 1
 1301/     4C5 : D3 14                  		out	(modul1), a	; Modul1 ROM "PaketX" aktivieren
 1302/     4C7 : C3 00 E0               		jp	0E000h		; und starten
 1303/     4CA :                        
 1304/     4CA :                        ;------------------------------------------------------------------------------
 1305/     4CA :                        ; Register mit Argumenten laden, aaaa=HL, bbbb=DE, cccc=BC
 1306/     4CA :                        ;------------------------------------------------------------------------------
 1307/     4CA :                        
 1308/     4CA : 2A 5B 18               para:		ld	hl, (ARG1)	; Argument 1
 1309/     4CD : ED 5B 5D 18            		ld	de, (ARG2)	; Argument 2
 1310/     4D1 : ED 4B 5F 18            		ld	bc, (ARG3)
 1311/     4D5 : C9                     		ret
 1312/     4D6 :                        
 1313/     4D6 :                        ;------------------------------------------------------------------------------
 1314/     4D6 :                        ; U USB Load Laedt Files vom USB
 1315/     4D6 :                        ; U aaaa "FILENAME.Z80"                      	USB File laden
 1316/     4D6 :                        ;------------------------------------------------------------------------------
 1317/     4D6 :                        
 1318/     4D6 : 00 09 55 0D            		db 0,9,'U',0Dh
 1319/     4DA :                        
 1320/     4DA : AF                     		xor	a
 1321/     4DB : 32 B0 18               ld_usb:		ld	(filetyp), a	; erwarteter Filetyp
 1322/     4DE : AF                     		xor	a		; load
 1323/     4DF : 18 0A                  		jr	ldsv_usb
 1324/     4E1 :                        
 1325/     4E1 :                        ;------------------------------------------------------------------------------
 1326/     4E1 :                        ; u USB SAVE Speichert/Loescht Files auf USB
 1327/     4E1 :                        ; u AADR EADR SADR "FILENAME.Z80" P Fileinfo   USB File speichern 
 1328/     4E1 :                        ; u-"FILENAME.Z80"	USB File löschen
 1329/     4E1 :                        ; u			Directory auflisten
 1330/     4E1 :                        ;------------------------------------------------------------------------------
 1331/     4E1 :                        
 1332/     4E1 : 00 09 75 0D            		db 0,9,'u',0Dh
 1333/     4E5 :                        
 1334/     4E5 : FE 2D                  		cp	'-'		; Datei loeschen?
 1335/     4E7 : 28 36                  		jr	z, del_usb
 1336/     4E9 :                        
 1337/     4E9 : 3E 01                  		ld	a, 1		; save
 1338/     4EB :                        
 1339/     4EB :                        ; Datei laden/speichern	
 1340/     4EB :                        ; in DE=Adr. Filename etc. 
 1341/     4EB :                        ; bei Aufruf via Monitor DE=Adr in BWS (Leerzeichen von Filename), 
 1342/     4EB :                        ; Filename steht in umgekehrter Reihenfolge im Speicher
 1343/     4EB :                        ; D=0Fh, Direktmodus
 1344/     4EB :                        
 1345/     4EB : DD 6F                  ldsv_usb:	ld	ixl, a		;Modus (0=load, 1=save)
 1346/     4ED : CD D6 06               		call	USBInit
 1347/     4F0 : C0                     		ret	nz
 1348/     4F1 : CD 0F 08               		call	sub_80F		; Teste Filename
 1349/     4F4 : 20 34                  		jr	nz, ldsv_usb1	; Filename ab DE
 1350/     4F6 :                        		
 1351/     4F6 :                        		; kein Filename oder ungültige Syntax:
 1352/     4F6 :                        ; 'u' List Directory
 1353/     4F6 : DF                     dir_usb:	rst	prnst		; Ausgabe String
 1354/     4F7 : 49 4E 48 41 4C 54 BA   		db "INHALT",':'+80h
 1355/     4FE : 3E 01                  		ld	a, 1		; Vinculum-Kdo List files
 1356/     500 : E7                     		rst	PUT
 1357/     501 : 3E 0D                  		ld	a, 0Dh		; ohne Parameter
 1358/     503 : E7                     		rst	PUT
 1359/     504 :                        		; Anzeigen bis CR
 1360/     504 : EF                     dir_usb1:	rst	GET
 1361/     505 : FE 0D                  		cp	0Dh		; CR
 1362/     507 : 20 0A                  		jr	nz, dir_usb2
 1363/     509 :                        		; Ende:
 1364/     509 : 3A 00 18               		ld	a, (cupos)	; cursor auf Zeilenende
 1365/     50C : E6 F0                  		and	0F0h
 1366/     50E : 32 00 18               		ld	(cupos), a
 1367/     511 : 3E 20                  		ld	a, ' '		; Leerzeichen ausgeben
 1368/     513 : D7                     dir_usb2:	rst	outch		; Zeichenausgabe
 1369/     514 : FE 3E                  		cp	'>'		; Prompt erkannt?
 1370/     516 : 20 EC                  		jr	nz, dir_usb1	; nein
 1371/     518 : EF                     		rst	GET		; noch CR einlesen
 1372/     519 : FE 0D                  		cp	0Dh
 1373/     51B : C2 47 07               		jp	nz, error1	; kein CR -> Fehler
 1374/     51E : C9                     		ret
 1375/     51F :                        
 1376/     51F :                        ; Datei loeschen
 1377/     51F : CD 0F 08               del_usb:	call	sub_80F		; Teste Filename
 1378/     522 : CD 5B 09               		call	sub_95B		; Headersave-Kopf befüllen
 1379/     525 : 3E 07                  		ld	a, 7		; Vinculum-Kdo  Delete File
 1380/     527 : C3 86 0E               		jp	sub_E86		; Kommando mit Filename senden
 1381/     52A :                        
 1382/     52A :                        ; Datei laden/speichern
 1383/     52A : CD 5B 09               ldsv_usb1:	call	sub_95B		; Headersave-Kopf befüllen
 1384/     52D :                        		; gibt es die Datei schon?
 1385/     52D : 3E 01                  		ld	a, 1		; Vinculum-Kdo  List files
 1386/     52F : CD BB 06               		call	sub_6BB		; Kommando mit Filename senden
 1387/     532 : 3E 0D                  		ld	a, 0Dh		; CR, Kommando ausführen
 1388/     534 : E7                     		rst	PUT
 1389/     535 : EF                     		rst	GET		; Kdo erfolgreich ausgeführt?
 1390/     536 : FE 0D                  		cp	0Dh
 1391/     538 : 20 21                  		jr	nz, ldsv_usb5	; nein -> Fehler
 1392/     53A : EF                     ldsv_usb2:	rst	GET		; folgt CR?
 1393/     53B : FE 0D                  		cp	0Dh
 1394/     53D : CA 2A 06               		jp	z, ldsv_usb17	; ja - Keine Datei gefunden
 1395/     540 : FE 20                  		cp	' '
 1396/     542 : 20 F6                  		jr	nz, ldsv_usb2
 1397/     544 : 06 04                  		ld	b, 4
 1398/     546 : 21 6A 18               		ld	hl, hs_gesamt
 1399/     549 : EF                     ldsv_usb3:	rst	GET
 1400/     54A : 77                     		ld	(hl), a
 1401/     54B : 23                     		inc	hl
 1402/     54C : 10 FB                  		djnz	ldsv_usb3
 1403/     54E : EF                     ldsv_usb4:	rst	GET
 1404/     54F : FE 0D                  		cp	0Dh
 1405/     551 : 20 FB                  		jr	nz, ldsv_usb4
 1406/     553 : EF                     		rst	GET
 1407/     554 : FE 3E                  		cp	'>'		; Prompt ?
 1408/     556 : 20 03                  		jr	nz, ldsv_usb5
 1409/     558 : EF                     		rst	GET
 1410/     559 : FE 0D                  		cp	0Dh
 1411/     55B : 20 6C                  ldsv_usb5:	jr	nz, ldsv_usb11	; nz-> Fehler
 1412/     55D : DD A5                  		and	ixl		;Modus (0=load, 1=save)
 1413/     55F : C2 4D 07               		jp	nz, loc_74D	;bei Save
 1414/     562 :                        ; load		
 1415/     562 : 3E 0E                  		ld	a, 0Eh		; Vinculum-Kdo  Open/read
 1416/     564 : CD 86 0E               		call	sub_E86		; Kommando mit Filename senden
 1417/     567 : ED 4B 6A 18            		ld	bc, (hs_gesamt)
 1418/     56B : AF                     		xor	a
 1419/     56C : 67                     		ld	h, a
 1420/     56D : 6F                     		ld	l, a		; hl=0
 1421/     56E : 22 68 18               		ld	(hs_rest), hl
 1422/     571 : 2E 20                  		ld	l, 20h ;
 1423/     573 : ED 42                  		sbc	hl, bc
 1424/     575 : 2A 5B 18               		ld	hl, (ARG1)
 1425/     578 : 3E 0B                  		ld	a, 0Bh		; Vinculum-Kdo Read from File
 1426/     57A : 38 06                  		jr	c, ldsv_usb6	
 1427/     57C : CD 1E 08               		call	put_length	; BC senden (Laenge)
 1428/     57F : C3 0E 06               		jp	ldsv_usb15
 1429/     582 :                        
 1430/     582 :                        ;
 1431/     582 : 01 20 00               ldsv_usb6:	ld	bc, 20h		; Erste 32 Bytes vom File
 1432/     585 : CD 1E 08               		call	put_length	; BC senden (Laenge)
 1433/     588 : 21 7E 18               		ld	hl, hs_aadr
 1434/     58B : 11 20 00               		ld	de, 20h	
 1435/     58E : CD 87 07               		call	sub_787		; ixl=0 max(bc,de) Bytes ab hl anzeigen
 1436/     591 :                        					; ixl<>0 max(bc,de) Bytes nach hl holen
 1437/     591 : CD 38 07               		call	PROMPTTEST	; Prompt, CR testen
 1438/     594 : 21 8E 18               		ld	hl, hs_fileinfo
 1439/     597 : 2B                     ldsv_usb7:	dec	hl
 1440/     598 : 3E D3                  		ld	a, 0D3h		; Kennung HeaderSaveKopf
 1441/     59A : BE                     		cp	(hl)
 1442/     59B : 20 74                  		jr	nz, ldsv_usb16	; kein HS-Kopf
 1443/     59D : 1C                     		inc	e
 1444/     59E : 7B                     		ld	a, e
 1445/     59F : FE 03                  		cp	3
 1446/     5A1 : 20 F4                  		jr	nz, ldsv_usb7	; 3xD3 erwartet
 1447/     5A3 : 2B                     		dec	hl
 1448/     5A4 : 4E                     		ld	c, (hl)		; Dateityp
 1449/     5A5 :                        		;
 1450/     5A5 : 21 8E 18               		ld	hl, hs_fileinfo
 1451/     5A8 : 7E                     ldsv_usb8:	ld	a, (hl)
 1452/     5A9 : D7                     		rst	outch		; Zeichenausgabe
 1453/     5AA : 23                     		inc	hl
 1454/     5AB : 1C                     		inc	e
 1455/     5AC : 7B                     		ld	a, e
 1456/     5AD : FE 13                  		cp	13h
 1457/     5AF : 20 F7                  		jr	nz, ldsv_usb8
 1458/     5B1 : DF                     		rst	prnst		; Ausgabe String
 1459/     5B2 : BA                     		db 0BAh
 1460/     5B3 : 79                     		ld	a, c
 1461/     5B4 : D7                     		rst	outch		; Zeichenausgabe
 1462/     5B5 : DF                     		rst	prnst		; Ausgabe String
 1463/     5B6 : A0                     		db 0A0h
 1464/     5B7 : CD B7 0A               		call	sub_AB7
 1465/     5BA : 28 21                  		jr	z, ldsv_usb14
 1466/     5BC : CD 84 0E               		call	sub_E84		; Close File
 1467/     5BF : DF                     ldsv_usb9:	rst	prnst		; Ausgabe String
 1468/     5C0 : 54 59 50 A0            		db "TYP",0A0h
 1469/     5C4 : DF                     ldsv_usb10:	rst	prnst		; Ausgabe String
 1470/     5C5 : 46 49 4C C5            		db "FIL",0C5h
 1471/     5C9 : C3 47 07               ldsv_usb11:	jp	error1
 1472/     5CC :                        ;
 1473/     5CC : DF                     ldsv_usb12:	rst	prnst		; Ausgabe String
 1474/     5CD : 45 58 49 53 54 A0      		db "EXIST",0A0h
 1475/     5D3 : 18 EF                  		jr	ldsv_usb10
 1476/     5D5 :                        
 1477/     5D5 :                        ;
 1478/     5D5 : DF                     ldsv_usb13:	rst	prnst		; Ausgabe String
 1479/     5D6 : 4E 41 4D 45 A0         		db "NAME",0A0h
 1480/     5DB : 18 E7                  		jr	ldsv_usb10
 1481/     5DD :                        ;		
 1482/     5DD : 2A 80 18               ldsv_usb14:	ld	hl, (hs_eadr)
 1483/     5E0 : ED 4B 7E 18            		ld	bc, (hs_aadr)
 1484/     5E4 : ED 42                  		sbc	hl, bc
 1485/     5E6 : 23                     		inc	hl
 1486/     5E7 : 22 66 18               		ld	(hs_laenge), hl	; Laenge
 1487/     5EA : E5                     		push	hl
 1488/     5EB : E5                     		push	hl
 1489/     5EC : 2A 6A 18               		ld	hl, (hs_gesamt)
 1490/     5EF : 1E 20                  		ld	e, 20h ; ' '
 1491/     5F1 : ED 52                  		sbc	hl, de
 1492/     5F3 : 44                     		ld	b, h
 1493/     5F4 : 4D                     		ld	c, l
 1494/     5F5 : 3E 0B                  		ld	a, 0Bh		; Vinculum-Kdo Read from File
 1495/     5F7 : CD 1E 08               		call	put_length	; BC senden (Laenge)
 1496/     5FA : D1                     		pop	de
 1497/     5FB : ED 52                  		sbc	hl, de
 1498/     5FD : 22 68 18               		ld	(hs_rest), hl	; Restlänge
 1499/     600 : C1                     		pop	bc
 1500/     601 : CD A0 06               		call	sub_6A0
 1501/     604 : 2A 5B 18               		ld	hl, (ARG1)
 1502/     607 : 7D                     		ld	a, l
 1503/     608 : B4                     		or	h
 1504/     609 : 20 03                  		jr	nz, ldsv_usb15
 1505/     60B : 2A 7E 18               		ld	hl, (hs_aadr)
 1506/     60E : F7                     ldsv_usb15:	rst	30h		; outhl
 1507/     60F : 18 61                  		jr	ldsv_usb20
 1508/     611 :                        
 1509/     611 :                        ;
 1510/     611 : CD 84 0E               ldsv_usb16:	call	sub_E84		; close file
 1511/     614 : 3E 0E                  		ld	a, 0Eh		; Vinculum-Kdo  Open/read
 1512/     616 : CD 86 0E               		call	sub_E86		; Kommando mit Filename senden
 1513/     619 : ED 4B 6A 18            		ld	bc, (hs_gesamt)
 1514/     61D : 3E 0B                  		ld	a, 0Bh		; Vinculum-Kdo Read from File
 1515/     61F : CD 1E 08               		call	put_length	; BC senden (Laenge)
 1516/     622 : 2A 5B 18               		ld	hl, (ARG1)
 1517/     625 : 22 82 18               		ld	(hs_sadr), hl
 1518/     628 : 18 E4                  		jr	ldsv_usb15
 1519/     62A :                        
 1520/     62A :                        ;
 1521/     62A : DD A5                  ldsv_usb17:	and	ixl
 1522/     62C : 28 A7                  		jr	z, ldsv_usb13
 1523/     62E :                        ;		
 1524/     62E : CD CA 04               ldsv_usb18:	call	para
 1525/     631 : EB                     		ex	de, hl
 1526/     632 : ED 52                  		sbc	hl, de
 1527/     634 : 38 93                  		jr	c, ldsv_usb11
 1528/     636 : 3E 09                  		ld	a, 9		; Vinculum-Kdo  Open/write
 1529/     638 : CD 86 0E               		call	sub_E86		; Kommando mit Filename senden
 1530/     63B : 20 98                  		jr	nz, ldsv_usb13
 1531/     63D : ED 4B 6A 18            		ld	bc, (hs_gesamt)
 1532/     641 : CD A5 01               		call	sub_1A5
 1533/     644 : 21 00 00               		ld	hl, 0
 1534/     647 : 20 0E                  		jr	nz, ldsv_usb19
 1535/     649 :                        	; basic		
 1536/     649 : FE 46                  		cp	'F'
 1537/     64B : 20 0A                  		jr	nz, ldsv_usb19
 1538/     64D : 2A AB 60               		ld	hl, (60ABh)	; LSTRAM  Last available RAM
 1539/     650 : ED 5B BF 60            		ld	de, (60BFh)	; STRBOT  Bottom of string space
 1540/     654 : ED 52                  		sbc	hl, de
 1541/     656 : 23                     		inc	hl
 1542/     657 : 22 68 18               ldsv_usb19:	ld	(hs_rest), hl
 1543/     65A : 09                     		add	hl, bc
 1544/     65B : 44                     		ld	b, h
 1545/     65C : 4D                     		ld	c, l
 1546/     65D : 3E 08                  		ld	a, 8		; Vinculum-Kdo Write to File
 1547/     65F : CD 1E 08               		call	put_length	; BC senden (Laenge)
 1548/     662 :                        		; Lese Kopfblock
 1549/     662 : 21 7E 18               		ld	hl, hs_buf
 1550/     665 : 06 20                  		ld	b, 20h 		; Anzahl
 1551/     667 : CD FA 0A               		call	loc_AFA		; Lese b Bytes nach (HL)
 1552/     66A : ED 4B 66 18            		ld	bc, (hs_laenge)	; Laenge
 1553/     66E : 2A 5B 18               		ld	hl, (ARG1)	; aadr ausgeben
 1554/     671 : F7                     		rst	30h		; outhl
 1555/     672 : DF                     ldsv_usb20:	rst	prnst		; Ausgabe String
 1556/     673 : A0                     		db ' ' + 80h
 1557/     674 :                        		; Lese Dateiinhalt
 1558/     674 : CD 84 07               		call	sub_784		; bc Bytes nach hl holen
 1559/     677 : CD A5 01               		call	sub_1A5
 1560/     67A : 20 0E                  		jr	nz, ldsv_usb22
 1561/     67C :                        	; Basic
 1562/     67C : FE 42                  		cp	'B'
 1563/     67E : 20 03                  		jr	nz, ldsv_usb21
 1564/     680 : 22 D2 60               		ld	(60D2h), hl	; PROGND  End of program
 1565/     683 : FE 46                  ldsv_usb21:	cp	'F'
 1566/     685 : 20 0A                  		jr	nz, ldsv_usb23
 1567/     687 : 2A BF 60               		ld	hl, (60BFh)	; STRBOT  Bottom of string space
 1568/     68A :                        ;		
 1569/     68A : ED 4B 68 18            ldsv_usb22:	ld	bc, (hs_rest)
 1570/     68E : CD 84 07               		call	sub_784		; bc Bytes nach hl holen
 1571/     691 : CD 38 07               ldsv_usb23:	call	PROMPTTEST	; Prompt, CR testen
 1572/     694 : CD 84 0E               		call	sub_E84		; close file
 1573/     697 : 2B                     		dec	hl		; HL=eadr ausgeben
 1574/     698 : F7                     		rst	30h		; outhl
 1575/     699 : 2A 82 18               		ld	hl, (hs_sadr)
 1576/     69C : DF                     		rst	prnst		; Ausgabe String
 1577/     69D : A0                     		db 0A0h
 1578/     69E : F7                     		rst	30h		; outhl startadr
 1579/     69F : C9                     		ret
 1580/     6A0 :                        
 1581/     6A0 :                        ;		
 1582/     6A0 : CD A5 01               sub_6A0:	call	sub_1A5
 1583/     6A3 : C0                     		ret	nz
 1584/     6A4 : FE 50                  		cp	'P'		; Programm?
 1585/     6A6 : C8                     		ret	z
 1586/     6A7 : E1                     		pop	hl
 1587/     6A8 : 2A 5B 18               		ld	hl, (ARG1)
 1588/     6AB : F7                     		rst	30h		; outhl
 1589/     6AC : FE 46                  		cp	'F'
 1590/     6AE : 1E AB                  		ld	e, 0ABh		; ??
 1591/     6B0 : 28 02                  		jr	z, loc_6B4
 1592/     6B2 : 1E F7                  		ld	e, 0F7h		; ??
 1593/     6B4 :                        
 1594/     6B4 : EF                     loc_6B4:	rst	GET
 1595/     6B5 : 0B                     		dec	bc
 1596/     6B6 : 1D                     		dec	e
 1597/     6B7 : 20 FB                  		jr	nz, loc_6B4
 1598/     6B9 : 18 B7                  		jr	ldsv_usb20
 1599/     6BB :                        
 1600/     6BB :                        ; Kommando mit Filename senden
 1601/     6BB : FD E5                  sub_6BB:	push	iy
 1602/     6BD : E7                     		rst	PUT		; Kommando
 1603/     6BE : 3E 20                  		ld	a, ' '
 1604/     6C0 : E7                     		rst	PUT
 1605/     6C1 : 06 0C                  		ld	b, 12
 1606/     6C3 : FD 7E 00               loc_6C3:	ld	a, (iy+0)
 1607/     6C6 : FD 23                  		inc	iy
 1608/     6C8 : FE 22                  		cp	'"'
 1609/     6CA : 28 07                  		jr	z, loc_6D3
 1610/     6CC : FE 21                  		cp	21h ; '!'
 1611/     6CE : D4 CF 02               		call	nc, rPUT	; rst20
 1612/     6D1 : 10 F0                  		djnz	loc_6C3
 1613/     6D3 : FD E1                  loc_6D3:	pop	iy
 1614/     6D5 : C9                     		ret
 1615/     6D6 :                        
 1616/     6D6 :                        ;------------------------------------------------------------------------------
 1617/     6D6 :                        ; Synchronisieren mit Vinculum:
 1618/     6D6 :                        ;------------------------------------------------------------------------------
 1619/     6D6 :                        
 1620/     6D6 :                        ; PIO Port B initialisieren
 1621/     6D6 : 3E CF                  USBInit:	ld	a, 0CFh		; Bitbetrieb
 1622/     6D8 : D3 FF                  		out	(PIO3BS), a
 1623/     6DA : 3E 33                  		ld	a, 00110011b	; I/O festlegen
 1624/     6DC : D3 FF                  		out	(PIO3BS), a
 1625/     6DE : 3E 07                  		ld	a, 7		; kein INT
 1626/     6E0 : D3 FF                  		out	(PIO3BS), a
 1627/     6E2 :                        ;VDIP Reset
 1628/     6E2 : 3E 84                  		ld	a, 84h
 1629/     6E4 : D3 FD                  		out	(PIO3B), a
 1630/     6E6 :                        ; PIO Port A initialisieren
 1631/     6E6 : 3E 8F                  		ld	a, 8Fh		; bidirektional
 1632/     6E8 : D3 FE                  		out	(PIO3AS), a
 1633/     6EA : 3E 07                  		ld	a, 7		; kein INT
 1634/     6EC : D3 FE                  		out	(PIO3AS), a
 1635/     6EE : DB FC                  		in	a, (PIO3A)	; Dummy-Eingabe
 1636/     6F0 : 3E C4                  		ld	a, 0C4h		; #PROG=1, #RESET=0, RD&WR inaktiv
 1637/     6F2 : D3 FD                  		out	(PIO3B), a
 1638/     6F4 :                        ; mehrstufiges Synchronisieren
 1639/     6F4 : 21 00 04               sync:		ld	hl, 400h
 1640/     6F7 : DB FD                  syn1:		in	a, (PIO3B)	; Status abfragen
 1641/     6F9 : 0F                     		rrca
 1642/     6FA : 38 03                  		jr	c, syn2		; keine	Daten vorhanden
 1643/     6FC : EF                     		rst	GET		; vorhandene Daten abholen
 1644/     6FD : 18 F5                  		jr	sync
 1645/     6FF : 0F                     syn2:		rrca
 1646/     700 : 38 F2                  		jr	c, sync		; noch nicht bereit, Daten zu schreiben
 1647/     702 : 10 FE                  syn2a:		djnz	syn2a		; kurze	Zeit warten
 1648/     704 : 2B                     		dec	hl
 1649/     705 : 7C                     		ld	a, h		; Zaehler abwarten
 1650/     706 : B5                     		or	l
 1651/     707 : 20 EE                  		jr	nz, syn1	; nochmals nachschauen...
 1652/     709 : DB FD                  		in	a, (PIO3B)	; Status abfragen
 1653/     70B : E6 03                  		and	3		; nur Bit 0 und	1 auswerten
 1654/     70D : FE 01                  		cp	1		; alle Daten abgeholt und bereit zum schreiben?
 1655/     70F : 20 E3                  		jr	nz, sync	; nein !
 1656/     711 : 3E 0D                  		ld	a, 0Dh
 1657/     713 : E7                     		rst	PUT
 1658/     714 : EF                     syn3:		rst	GET
 1659/     715 : FE 0D                  		cp	0Dh		; <cr> muss irgendwie <cr> zurueckgeben
 1660/     717 : 20 FB                  		jr	nz, syn3	; warten bis CR	geliefert wird
 1661/     719 : 3E 45                  		ld	a, 'E'		; E <cr> muss E <cr> zurueckgeben
 1662/     71B : E7                     		rst	PUT
 1663/     71C : 3E 0D                  		ld	a, 0Dh
 1664/     71E : E7                     		rst	PUT
 1665/     71F : EF                     syn4:		rst	GET
 1666/     720 : FE 45                  		cp	'E'
 1667/     722 : 20 FB                  		jr	nz, syn4	; warten bis E geliefert wird
 1668/     724 : EF                     		rst	GET
 1669/     725 : FE 0D                  		cp	0Dh		; auf CR warten
 1670/     727 : 20 F6                  		jr	nz, syn4
 1671/     729 :                        ; Test,	ob USB-Stick angeschlossen ist:
 1672/     729 : 3E 10                  		ld	a, 10h		; SCS		    ; Short CMD-Modus
 1673/     72B : E7                     		rst	PUT
 1674/     72C : CD 35 07               		call	EXEC		; Kommando ausfuehren
 1675/     72F : 3E 91                  		ld	a, 91h		; IPH               ; HEX- bzw. BIN-Modus
 1676/     731 : E7                     		rst	PUT
 1677/     732 : CD 35 07               		call	EXEC		; Kommando ausfuehren
 1678/     735 :                        ; und gleich nochmal als Test, ob Stick eingesteckt ?
 1679/     735 :                        
 1680/     735 :                        ; UP EXEC VDIP Kommando ausfuehren, Rueckkehr mit Z wenn OK
 1681/     735 : 3E 0D                  EXEC:		ld	a, 0Dh		; CR		    ; Kommando ausfuehren
 1682/     737 : E7                     		rst	PUT
 1683/     738 :                        ; Prompttest, Rueckkehr bei Fehler	mit C
 1684/     738 :                        ; Prompt, CR testen
 1685/     738 : EF                     PROMPTTEST:	rst	GET
 1686/     739 : FE 3E                  		cp	'>'
 1687/     73B : 20 04                  		jr	nz, ERR
 1688/     73D : EF                     		rst	GET
 1689/     73E : FE 0D                  		cp	0Dh		; CR		      ;	OK, fertig?
 1690/     740 : C8                     		ret	z
 1691/     741 :                        ;
 1692/     741 : D7                     ERR:		rst	outch		; Zeichenausgabe
 1693/     742 : EF                     		rst	GET
 1694/     743 : FE 0D                  		cp	0Dh		; CR		      ;	Ende?
 1695/     745 : 20 FA                  		jr	nz, ERR		; nein,	weiter bis CR folgt (Ende)
 1696/     747 :                        ;
 1697/     747 : CD 68 02               error1:		call	error
 1698/     74A : AF                     		xor	a
 1699/     74B : 3D                     		dec	a		; A = FF, Cy=1
 1700/     74C : C9                     		ret
 1701/     74D :                        
 1702/     74D :                        ; USB Save
 1703/     74D : 2A 00 18               loc_74D:	ld	hl, (cupos)
 1704/     750 : DF                     		rst	prnst		; Ausgabe String
 1705/     751 : 07 4F 76 65 72 57 72   		db 7,"OverWrite?(J)",8,88h
           758 : 69 74 65 3F 28 4A 29
           75F : 08 88               
 1706/     761 : CF                     		rst	inch		; inch; Zeicheneingabe
 1707/     762 : FE 0D                  		cp	0Dh
 1708/     764 : 28 0B                  		jr	z, loc_771
 1709/     766 : CB AF                  		res	5, a		; Umwandlung in Großbuchstabe
 1710/     768 : D7                     		rst	outch		; Zeichenausgabe
 1711/     769 : DF                     		rst	prnst		; Ausgabe String
 1712/     76A : 29 83                  		db ')',83h
 1713/     76C : FE 4A                  		cp	'J'
 1714/     76E : C2 CC 05               		jp	nz, ldsv_usb12
 1715/     771 :                        		
 1716/     771 : 22 00 18               loc_771:	ld	(cupos), hl
 1717/     774 : FD 7C                  		ld	a, iyu
 1718/     776 : FE 30                  		cp	30h		; ?? CmdWr  Write Sector
 1719/     778 : C8                     		ret	z
 1720/     779 : 3E 07                  		ld	a, 7		; Vinculum-Kdo  Delete File
 1721/     77B : CD 86 0E               		call	sub_E86		; Kommando mit Filename senden
 1722/     77E : CD A4 09               		call	sub_9A4
 1723/     781 : C3 2E 06               		jp	ldsv_usb18
 1724/     784 :                        
 1725/     784 :                        ;
 1726/     784 : 11 FF FF               sub_784:	ld	de, 0FFFFh
 1727/     787 :                        ; ixl		;Modus (0=load, 1=save)
 1728/     787 :                        ; ixl=0 max(bc,de) Bytes ab hl anzeigen
 1729/     787 :                        ; ixl<>0 max(bc,de) Bytes nach hl holen
 1730/     787 : 7B                     sub_787:	ld	a, e
 1731/     788 : B2                     		or	d
 1732/     789 : C8                     		ret	z		; de=0?
 1733/     78A : 79                     		ld	a, c
 1734/     78B : B0                     		or	b
 1735/     78C : C8                     		ret	z		; bc=0?
 1736/     78D : AF                     		xor	a
 1737/     78E : DD BD                  		cp	ixl		; ixl <> 0 PUT
 1738/     790 : 20 04                  		jr	nz, loc_796
 1739/     792 : EF                     		rst	GET		; ixl = 0 GET
 1740/     793 : 77                     		ld	(hl), a
 1741/     794 : 18 02                  		jr	loc_798
 1742/     796 : 7E                     loc_796:	ld	a, (hl)
 1743/     797 : E7                     		rst	PUT
 1744/     798 : E5                     loc_798:	push	hl
 1745/     799 : 2A 00 18               		ld	hl, (cupos)
 1746/     79C : 77                     		ld	(hl), a
 1747/     79D : E1                     		pop	hl
 1748/     79E : 23                     		inc	hl
 1749/     79F : 0B                     		dec	bc
 1750/     7A0 : 1B                     		dec	de
 1751/     7A1 : 18 E4                  		jr	sub_787		; ixl=0 max(bc,de) Bytes ab hl anzeigen
 1752/     7A3 :                        
 1753/     7A3 :                        ;------------------------------------------------------------------------------
 1754/     7A3 :                        ; rst28 GET
 1755/     7A3 :                        ; Eingabe von VDIP1 abholen (mit Break und TimeOut):
 1756/     7A3 :                        ; PA:	A	Datenbyte
 1757/     7A3 :                        ;	CY=1	TimeOut oder Break
 1758/     7A3 :                        ; VR:	AF
 1759/     7A3 :                        ;------------------------------------------------------------------------------
 1760/     7A3 :                        
 1761/     7A3 : DB 04                  rGET:		in	a, (PIODA); Tastatur
 1762/     7A5 : FE 83                  		cp	83h		; <STOP>-Taste gedrueckt?
 1763/     7A7 : CA 43 02               		jp	z, break1
 1764/     7AA : DB FD                  		in	a, (PIO3B)	; Status abfragen
 1765/     7AC : 0F                     		rrca
 1766/     7AD : 38 F4                  		jr	c, rGET
 1767/     7AF : 3E C0                  		ld	a, 0C0h		; RD# aktiv
 1768/     7B1 : D3 FD                  		out	(PIO3B),	a
 1769/     7B3 : DB FC                  		in	a, (PIO3A)	; Daten	holen
 1770/     7B5 : F5                     		push	af
 1771/     7B6 : 3E C4                  		ld	a, 0C4h		; RD# inaktiv
 1772/     7B8 : D3 FD                  		out	(PIO3B), a
 1773/     7BA : F1                     		pop	af
 1774/     7BB : C9                     		ret
 1775/     7BC :                        
 1776/     7BC :                        ;------------------------------------------------------------------------------
 1777/     7BC :                        ; Tausch Buffer-Adr Normal <-> Basic
 1778/     7BC :                        ;------------------------------------------------------------------------------
 1779/     7BC :                        
 1780/     7BC : D9                     sub_7BC:	exx
 1781/     7BD : 2A 62 18               		ld	hl, (hd_buffer)	; HD-Puffer normal 00 FD (AC1) 00 FE (LLC2)
 1782/     7C0 : ED 5B 64 18            		ld	de, (hd_bufbas)	; HD-Puffer GS-Basic 00	3E
 1783/     7C4 : EB                     		ex	de, hl
 1784/     7C5 : 22 62 18               		ld	(hd_buffer), hl	; HD-Puffer normal 00 FD (AC1) 00 FE (LLC2)
 1785/     7C8 : ED 53 64 18            		ld	(hd_bufbas), de	; HD-Puffer GS-Basic 00	3E
 1786/     7CC : D9                     		exx
 1787/     7CD : C9                     		ret
 1788/     7CE :                        
 1789/     7CE :                        ;------------------------------------------------------------------------------
 1790/     7CE :                        ;
 1791/     7CE :                        ;------------------------------------------------------------------------------
 1792/     7CE :                        
 1793/     7CE : 2A 38 02               init_gsb:	ld	hl, (igsbslm)	; Voreinstellung Methode GSB SAVE/Load USB HD 00h 20h
 1794/     7D1 : 22 61 18               		ld	(gsbslm), hl	; Methode GSB SAVE/Load	USB HD 00h 20h
 1795/     7D4 : 2E 00                  		ld	l, 0
 1796/     7D6 : 22 62 18               		ld	(hd_buffer), hl	; HD-Puffer normal 00 FD (AC1) 00 FE (LLC2)
 1797/     7D9 : 26 3E                  		ld	h, 3Eh 
 1798/     7DB : 22 64 18               		ld	(hd_bufbas), hl	; HD-Puffer GS-Basic 00	3E
 1799/     7DE :                        
 1800/     7DE :                        ; patcheinschub
 1801/     7DE :                        ; zu colkdo
 1802/     7DE : =>FALSE                	if p_colkdo
 1803/     7DE :                        		ret
 1804/     7DE :                        ;zu colkdo	
 1805/     7DE :                        colkdo1		ld	l, c
 1806/     7DE :                        		rst	prnst
 1807/     7DE :                        		db 0A0h
 1808/     7DE :                        		call	j_OUTHL		; BC = ARG3
 1809/     7DE :                        		rst	prnst
 1810/     7DE :                        		db 8Dh
 1811/     7DE :                        		ret
 1812/     7DE : =>TRUE                 	else
 1813/     7DE : 00                     		nop
 1814/     7DF : 00                     		nop
 1815/     7E0 : 00                     		nop
 1816/     7E1 : C9                     		ret
 1817/     7E2 :                        
 1818/     7E2 : FF                     		db 0FFh
 1819/     7E3 : FF                     		db 0FFh
 1820/     7E4 : FF                     		db 0FFh
 1821/     7E5 : FF                     		db 0FFh
 1822/     7E6 : FF                     		db 0FFh
 1823/     7E7 : FF                     		db 0FFh
 1824/     7E8 : [1802]                 	endif
 1825/     7E8 :                        	
 1826/     7E8 :                        ; Einschub
 1827/     7E8 :                        ;------------------------------------------------------------------------------
 1828/     7E8 :                        ; Sprungverteiler
 1829/     7E8 :                        ; an dieser festen Adr. zur Kompatibilität mit Ur-AC1
 1830/     7E8 :                        ; (Ende 2K-EPROM)
 1831/     7E8 :                        ;------------------------------------------------------------------------------
 1832/     7E8 :                        
 1833/     7E8 :                        		org	07E8h	; fixe Adresse
 1834/     7E8 :                        
 1835/     7E8 : C3 F9 0D               		jp	v24out
 1836/     7EB : C3 1D 01               		jp	MS30
 1837/     7EE : C3 83 01               j_OUTHEX:	jp	OUTHEX
 1838/     7F1 : C3 9A 01               		jp	OUTHL
 1839/     7F4 : C3 28 01               		jp	INLINE
 1840/     7F7 : C3 72 01               		jp	INHEX
 1841/     7FA : C3 16 01               j_TASTE:	jp	TASTE
 1842/     7FD : C3 5B 02               		jp	GETCO1
 1843/     800 :                        
 1844/     800 :                        ;------------------------------------------------------------------------------
 1845/     800 :                        ; Kennung Monitor + Sprungverteiler externes SAVE/LOAD
 1846/     800 :                        ;------------------------------------------------------------------------------
 1847/     800 :                        
 1848/     800 :                        		org 800h	; fixe Adresse
 1849/     800 : 4D 4F 31 31 2E 30      monver:		db "MO11.0"		; Monitorkennung
 1850/     806 :                        		
 1851/     806 : C3 8D 0A               		jp	EX_SA_LO	; XX_SAVE/LOAD
 1852/     809 : C3 D6 06               		jp	USBInit
 1853/     80C : C3 8F 0B               		jp	HDInit
 1854/     80F :                        
 1855/     80F :                        
 1856/     80F :                        ;------------------------------------------------------------------------------
 1857/     80F :                        ; Teste Filename
 1858/     80F :                        ;
 1859/     80F :                        ; in DE=Adr. in BWS auf Leerzeichen vor Filename
 1860/     80F :                        ; in D=0Fh, wenn KEIN " am Filenamensanfang
 1861/     80F :                        ; sonst DE=18D4h
 1862/     80F :                        ; ret z=1 -> kein Filename
 1863/     80F :                        ; ret z=0 -> a=..
 1864/     80F :                        ;         -> gültiger Filename, de=Anfang Filename, a=23h
 1865/     80F :                        ;------------------------------------------------------------------------------
 1866/     80F :                        
 1867/     80F : 3E 0F                  sub_80F:	ld	a, 0Fh		; Direktmodus?
 1868/     811 : BA                     		cp	d		; 
 1869/     812 : C8                     		ret	z		; ja, Ende
 1870/     813 :                        		
 1871/     813 :                        		; wenn BWS, dann muss hier " folgen
 1872/     813 : 1B                     		dec	de		; ein Zeichen vor
 1873/     814 : 1A                     		ld	a, (de)
 1874/     815 : FE 20                  		cp	' '		; Leerzeicheh?	
 1875/     817 : C8                     		ret	z		; ja, Ende, da kein Filename angegeben
 1876/     818 :                        
 1877/     818 : FE 22                  		cp	'"'		; steht " am Filenamensanfang?
 1878/     81A : C0                     		ret	nz		; nein, Ende
 1879/     81B :                        		
 1880/     81B : 1B                     		dec	de		; ein zeichen vor
 1881/     81C :                        					; DE zeigt auf Filename
 1882/     81C : 3C                     		inc	a		; A=23h
 1883/     81D : C9                     		ret
 1884/     81E :                        
 1885/     81E :                        ;------------------------------------------------------------------------------
 1886/     81E :                        ; BC senden (Laenge)
 1887/     81E :                        ;------------------------------------------------------------------------------
 1888/     81E :                        
 1889/     81E : E7                     put_length:	rst	PUT		; Kdo senden
 1890/     81F : 3E 20                  		ld	a, ' '          ; Trennzeichen
 1891/     821 : E7                     		rst	PUT
 1892/     822 : AF                     		xor	a		; 00
 1893/     823 : E7                     		rst	PUT
 1894/     824 : E7                     		rst	PUT
 1895/     825 : 78                     		ld	a, b		; niedrigste Stelle (00xxH)
 1896/     826 : E7                     		rst	PUT
 1897/     827 : 79                     		ld	a, c		; niedrigste Stelle (00xxH)
 1898/     828 : E7                     		rst	PUT
 1899/     829 : 3E 0D                  		ld	a, 0Dh		; CR
 1900/     82B : E7                     		rst	PUT
 1901/     82C : C9                     		ret
 1902/     82D :                        
 1903/     82D :                        ;------------------------------------------------------------------------------
 1904/     82D :                        ; D Dump Hexdump und ASCII-Darstellung, sowie Modifikation
 1905/     82D :                        ; D aaaa Dump normal
 1906/     82D :                        ; D aaaa eeee Dump drucken
 1907/     82D :                        ;------------------------------------------------------------------------------
 1908/     82D :                        
 1909/     82D : 00 09 44 0D            		db 0,9,'D',0Dh
 1910/     831 :                        
 1911/     831 : DD 2A 5D 18            		ld	ix, (ARG2)	; eeee
 1912/     835 : AF                     		xor	a
 1913/     836 : 32 5F 18               d_ko1:		ld	(ARG3),	a	;arg3 = Modus (0-Hex, FF-Ascii-Dump)
 1914/     839 : 21 5D 18               		ld	hl, ARG2
 1915/     83C : 3A 5E 18               		ld	a, (ARG2+1)
 1916/     83F : B6                     		or	(hl)
 1917/     840 : 32 60 18               		ld	(ARG3+1), a	; Arg3+1 <> 0 -> eeee angegeben
 1918/     843 :                        		;
 1919/     843 : DF                     		rst	prnst		; Ausgabe String
 1920/     844 : 2A 8D                  		db '*',8Dh
 1921/     846 : 0E 01                  d_ko2:		ld	c, 1
 1922/     848 : 2A 5B 18               		ld	hl, (ARG1)
 1923/     84B : 7D                     		ld	a, l
 1924/     84C : E6 F8                  		and	0F8h 		; aaaa abrunden auf Vielfaches von 8
 1925/     84E : 6F                     		ld	l, a
 1926/     84F : CD 40 04               		call	dmp_zeile	; Ausgabe Zeile
 1927/     852 : 3A 60 18               		ld	a, (ARG3+1)
 1928/     855 : A7                     		and	a
 1929/     856 : 28 0F                  		jr	z, d_ko4	; keine Endadresse angegeben
 1930/     858 :                        		
 1931/     858 :                        		; Ausgbe fortlaufend, z.B. für Druck
 1932/     858 :                        		; gleich weiter mit nächster Zeile
 1933/     858 : DF                     		rst	prnst		; Ausgabe String
 1934/     859 : 8D                     		db 8Dh			; neue Zeile
 1935/     85A : ED 5B 5B 18            d_ko3:		ld	de, (ARG1)
 1936/     85E : DD E5                  		push	ix
 1937/     860 : E1                     		pop	hl
 1938/     861 : A7                     		and	a
 1939/     862 : ED 52                  		sbc	hl, de		; eeee erreicht?
 1940/     864 : D8                     		ret	c		; ja
 1941/     865 : 18 DF                  		jr	d_ko2		; sonst weiter ausgeben
 1942/     867 :                        
 1943/     867 :                        		; Einzelausgabe/Editieren
 1944/     867 : CD FA 07               d_ko4:		call	j_TASTE		; Tastaturabfrage
 1945/     86A : 28 07                  		jr	z, d_ko6	; keine Taste gedrückt
 1946/     86C :                        		;
 1947/     86C : DF                     		rst	prnst		; Ausgabe String
 1948/     86D : 8D                     		db 8Dh			; neue Zeile
 1949/     86E : 18 D6                  		jr	d_ko2
 1950/     870 :                        ;		
 1951/     870 : CD 40 04               d_ko5:		call	dmp_zeile	; Ausgabe Zeile
 1952/     873 : 2A 5D 18               d_ko6:		ld	hl, (ARG2)	; eeee
 1953/     876 :                        		; + aktuelles Byte
 1954/     876 : 09                     		add	hl, bc
 1955/     877 : 2B                     		dec	hl
 1956/     878 :                        		; Anzeige aktuelle Adresse
 1957/     878 : DF                     		rst	prnst		; Ausgabe String
 1958/     879 : 20 BC                  		db ' ','<'+80h
 1959/     87B : CD 9A 01               		call	OUTHL
 1960/     87E : DF                     		rst	prnst		; Ausgabe String
 1961/     87F : BE                     		db '>'+80h
 1962/     880 :                        		; 
 1963/     880 : 3A 5F 18               		ld	a, (ARG3)	; Hext-Dump?
 1964/     883 : A7                     		and	a
 1965/     884 : 20 08                  		jr	nz, d_ko7	; nein
 1966/     886 :                        		; Hex-Dump
 1967/     886 : DF                     		rst	prnst		; Ausgabe String
 1968/     887 : 20 28 48 29 A0         		db " (H)",0A0h
 1969/     88C : 18 06                  		jr	d_ko8
 1970/     88E :                        d_ko7:		; ASCII-Dump
 1971/     88E : DF                     		rst	prnst		; Ausgabe String
 1972/     88F : 20 28 41 29 A0         		db " (A)",0A0h
 1973/     894 :                        ;		
 1974/     894 : ED 53 00 18            d_ko8:		ld	(cupos), de
 1975/     898 : 41                     		ld	b, c
 1976/     899 : DF                     d_ko9:		rst	prnst		; Ausgabe String
 1977/     89A : 09 09 89               		db 9,9,89h		; je Byte 3x rechts
 1978/     89D : 10 FA                  		djnz	d_ko9
 1979/     89F :                        		;
 1980/     89F : CD FA 07               		call	j_TASTE		; Tastaturabfrage
 1981/     8A2 : FE 8B                  		cp	8Bh 		; Kursor nach oben, Taste gedrückt
 1982/     8A4 : 28 5D                  		jr	z, d_ko19
 1983/     8A6 :                        ;		
 1984/     8A6 : CF                     d_ko10:		rst	inch		; inch; Zeicheneingabe
 1985/     8A7 : FE 08                  		cp	8		; Kursor nach links
 1986/     8A9 : CA 32 09               		jp	z, d_ko26
 1987/     8AC : FE 03                  		cp	3		; Strg-C, Ende
 1988/     8AE : 28 43                  		jr	z, d_ko17	
 1989/     8B0 : FE 0D                  d_ko11:		cp	0Dh		; CR, Kursor an Anfang nächster Zeile; Enter
 1990/     8B2 : 28 37                  		jr	z, d_ko16
 1991/     8B4 : FE 01                  		cp	1		; Home, Toggle Modus
 1992/     8B6 : 28 41                  		jr	z, d_ko18
 1993/     8B8 : FE 09                  d_ko12:		cp	9		; Kursor nach rechts
 1994/     8BA : 28 5F                  		jr	z, d_ko22
 1995/     8BC : FE 0A                  		cp	0Ah		; Kursor nach unten
 1996/     8BE : 28 6C                  		jr	z, d_ko25
 1997/     8C0 : FE 0B                  		cp	0Bh		; Kursor nach oben
 1998/     8C2 : 28 3F                  		jr	z, d_ko19
 1999/     8C4 : FE 20                  		cp	20h ; ' '
 2000/     8C6 : 38 DE                  		jr	c, d_ko10	; sonstige Steuerzeichen werden nicht verarbeitet
 2001/     8C8 :                        		; Zeicheneingabe
 2002/     8C8 : 08                     		ex	af, af'
 2003/     8C9 : 3A 5F 18               		ld	a, (ARG3)
 2004/     8CC : A7                     		and	a
 2005/     8CD : 20 3C                  		jr	nz, d_ko20	; wenn Ascii-Modus
 2006/     8CF :                        ; Zeicheneingabe Hex-Modus
 2007/     8CF :                        ; Eingabe 2 Hex-Zeichen
 2008/     8CF : 08                     		ex	af, af'
 2009/     8D0 : CD 93 04               		call	tsthex		; 1. Zeichen Hex ?
 2010/     8D3 : 38 D1                  		jr	c, d_ko10	; nein, Neueingabe
 2011/     8D5 : 06 02                  		ld	b, 2
 2012/     8D7 : D7                     d_ko13:		rst	outch		; Zeichenausgabe
 2013/     8D8 : FE 3A                  		cp	'9'+1
 2014/     8DA : 38 02                  		jr	c, d_ko14
 2015/     8DC : D6 37                  		sub	37h ; '7'
 2016/     8DE : ED 6F                  d_ko14:		rld
 2017/     8E0 : 05                     		dec	b
 2018/     8E1 : 28 2F                  		jr	z, d_ko21
 2019/     8E3 : CF                     d_ko15:		rst	inch		; inch; Zeicheneingabe
 2020/     8E4 : CD 93 04               		call	tsthex		; 2. Zeichen Hex ?
 2021/     8E7 : 38 FA                  		jr	c, d_ko15	; nein, Neueingabe
 2022/     8E9 : 18 EC                  		jr	d_ko13
 2023/     8EB :                        ; Enter
 2024/     8EB : CD A1 04               d_ko16:		call	loc_4A1		; Ausgabe 12 Leerzeichen an Zeilenanfang
 2025/     8EE : DF                     		rst	prnst		; Ausgabe String
 2026/     8EF : 8D                     		db 8Dh
 2027/     8F0 : C3 46 08               		jp	d_ko2
 2028/     8F3 :                        ; 03 Ende
 2029/     8F3 : DF                     d_ko17:		rst	prnst		; Ausgabe String
 2030/     8F4 : 8D                     		db 8Dh
 2031/     8F5 : 22 5B 18               		ld	(ARG1),	hl
 2032/     8F8 : C9                     		ret
 2033/     8F9 :                        ; Home, toggle Modus
 2034/     8F9 : 3A 5F 18               d_ko18:		ld	a, (ARG3)	; Modus
 2035/     8FC : 2F                     		cpl
 2036/     8FD : 32 5F 18               		ld	(ARG3),	a
 2037/     900 : C3 70 08               		jp	d_ko5
 2038/     903 :                        
 2039/     903 :                        ; Kursor nach oben	
 2040/     903 : 11 08 00               d_ko19:		ld	de, 8
 2041/     906 : A7                     		and	a
 2042/     907 : ED 52                  		sbc	hl, de
 2043/     909 : 18 2D                  		jr	d_ko27
 2044/     90B :                        
 2045/     90B :                        ; Zeicheneingabe Ascii-Modus
 2046/     90B :                        ; c = Nr. aktives Byte
 2047/     90B : 08                     d_ko20:		ex	af, af'	; '
 2048/     90C : CD 84 04               		call	tstzei		; Zeichen?
 2049/     90F : 38 95                  		jr	c, d_ko10	; nein, Neueingabe
 2050/     911 : 77                     		ld	(hl), a		; Zeichen in Speicher
 2051/     912 : 3E 08                  d_ko21:		ld	a, 8		; max 8 Zeichen
 2052/     914 : B9                     		cp	c		; erreicht?
 2053/     915 : 20 04                  		jr	nz, d_ko22	; nein
 2054/     917 : CD 40 04               		call	dmp_zeile	; ja: Ausgabe Zeile
 2055/     91A : 2B                     		dec	hl
 2056/     91B : 0C                     d_ko22:		inc	c		; nächstes Byte
 2057/     91C : 23                     		inc	hl
 2058/     91D : 3E 09                  		ld	a, 9
 2059/     91F : B9                     		cp	c		; max 8 Byte
 2060/     920 : 20 07                  		jr	nz, d_ko24
 2061/     922 : 0E 01                  		ld	c, 1		; erstes Byte
 2062/     924 : CD A1 04               d_ko23:		call	loc_4A1		; Ausgabe 12 Leerzeichen an Zeilenanfang
 2063/     927 : DF                     		rst	prnst		; Ausgabe String
 2064/     928 : 8A                     		db 8Ah
 2065/     929 : C3 70 08               d_ko24:		jp	d_ko5
 2066/     92C :                        
 2067/     92C :                        ; Kursor nach unten
 2068/     92C : 11 08 00               d_ko25:		ld	de, 8	
 2069/     92F : 19                     		add	hl, de
 2070/     930 : 18 F2                  		jr	d_ko23
 2071/     932 :                        
 2072/     932 :                        ; Kursor nach links
 2073/     932 : 2B                     d_ko26:		dec	hl
 2074/     933 : 0D                     		dec	c
 2075/     934 : 20 F3                  		jr	nz, d_ko24
 2076/     936 : 0E 08                  		ld	c, 8
 2077/     938 : CD A1 04               d_ko27:		call	loc_4A1		; Ausgabe 12 Leerzeichen an Zeilenanfang
 2078/     93B : ED 5B 00 18            		ld	de, (cupos)
 2079/     93F : E5                     		push	hl
 2080/     940 : 21 BF 17               		ld	hl, bwsat(1,1)	; 17BFh	
 2081/     943 : ED 52                  		sbc	hl, de
 2082/     945 : E1                     		pop	hl
 2083/     946 : 30 0F                  		jr	nc, d_ko28
 2084/     948 : D9                     		exx
 2085/     949 :                        		; scroll
 2086/     949 : 21 40 10               		ld	hl, BWSEND+COLS
 2087/     94C : 11 00 10               		ld	de, BWSEND
 2088/     94F : 01 BF 07               		ld	bc, COLS*(LINES-1)-1
 2089/     952 : ED B0                  		ldir
 2090/     954 : D9                     		exx
 2091/     955 : 18 D2                  		jr	d_ko24
 2092/     957 : DF                     d_ko28:		rst	prnst		; Ausgabe String
 2093/     958 : 8B                     		db 8Bh
 2094/     959 : 18 CE                  		jr	d_ko24
 2095/     95B :                        
 2096/     95B :                        ;------------------------------------------------------------------------------
 2097/     95B :                        ; UP zu USB
 2098/     95B :                        ; Headersave-Kopf befüllen
 2099/     95B :                        ; in DE=Adr. Filename (im BWS)  ABCD.." (ohne führendes ")
 2100/     95B :                        ;------------------------------------------------------------------------------
 2101/     95B :                        
 2102/     95B : 06 10                  sub_95B:	ld	b, 16		; Länge Filename
 2103/     95D : 21 6E 18               		ld	hl, unk_186E	; Adr.Puffer
 2104/     960 : E5                     		push	hl
 2105/     961 : FD E1                  		pop	iy
 2106/     963 : 7A                     loc_963:	ld	a, d
 2107/     964 : FE 0F                  		cp	hi(BWSEND)-1	; BWS-Ende ?
 2108/     966 : 28 05                  		jr	z, loc_96D	; ja
 2109/     968 : 1A                     		ld	a, (de)		; erstes Zeichen
 2110/     969 : FE 22                  		cp	'"'		; Namensende erreicht?
 2111/     96B : 20 03                  		jr	nz, loc_970	; nein -> Zeichen übertragen
 2112/     96D : 3E 20                  loc_96D:	ld	a, ' '		; sonst mit Leerzeichen auffüllen
 2113/     96F : 13                     		inc	de		; BWS-Pointer zurück (bleibt auf ")
 2114/     970 : 77                     loc_970:	ld	(hl), a		; filename kopieren
 2115/     971 : 23                     		inc	hl		; nächste Adr. Buffer
 2116/     972 : 1B                     		dec	de		; nächste Adr. BWS
 2117/     973 : 10 EE                  		djnz	loc_963		; weiter bis 16 Zeichen fertig
 2118/     975 :                        		;
 2119/     975 : 7A                     		ld	a, d
 2120/     976 : FE 0F                  		cp	hi(BWSEND)-1	; BWS-Ende ?
 2121/     978 : C8                     		ret	z		; ja, Ende
 2122/     979 :                        		; wenn Eingabe von BWS
 2123/     979 : 1B                     		dec	de		; 2 Zeichen weiter	
 2124/     97A : 1B                     		dec	de
 2125/     97B : 1A                     		ld	a, (de)		; Dateityp
 2126/     97C : 1B                     		dec	de		; 2 Zeichen weiter
 2127/     97D : 1B                     		dec	de
 2128/     97E : D5                     		push	de		; Beginn Kommentar
 2129/     97F :                        		; aaadr, eadr, sadr eintragen
 2130/     97F : 21 5B 18               		ld	hl, ARG1
 2131/     982 : 11 7E 18               		ld	de, hs_aadr
 2132/     985 : 01 06 00               		ld	bc, 6
 2133/     988 : ED B0                  		ldir
 2134/     98A :                        		; hs_cod mit Monitor-Kennung füllen
 2135/     98A : 21 00 08               		ld	hl, monver	; "MO11.0"
 2136/     98D : 0E 06                  		ld	c, 6
 2137/     98F : ED B0                  		ldir
 2138/     991 :                        		; hs_filetyp Dateityp eintragen
 2139/     991 : 12                     		ld	(de), a
 2140/     992 : 13                     		inc	de
 2141/     993 :                        		; hs_kennung 3 x D3 Kennung Headersave-Kopf 
 2142/     993 : 3E D3                  		ld	a, 0D3h	
 2143/     995 : 12                     		ld	(de), a
 2144/     996 : 13                     		inc	de
 2145/     997 : 12                     		ld	(de), a
 2146/     998 : 13                     		inc	de
 2147/     999 : 12                     		ld	(de), a
 2148/     99A : 13                     		inc	de
 2149/     99B :                        		; hs_fileinfo Kommentar eintragen
 2150/     99B : E1                     		pop	hl
 2151/     99C : 06 10                  		ld	b, 16		; Länge
 2152/     99E : 7E                     loc_99E:	ld	a, (hl)
 2153/     99F : 12                     		ld	(de), a
 2154/     9A0 : 2B                     		dec	hl
 2155/     9A1 : 13                     		inc	de
 2156/     9A2 : 10 FA                  		djnz	loc_99E
 2157/     9A4 :                        
 2158/     9A4 :                        ; Berechne Dateilänge
 2159/     9A4 : CD CA 04               sub_9A4:	call	para		; aadr, eadr
 2160/     9A7 : AF                     		xor	a
 2161/     9A8 : EB                     		ex	de, hl	
 2162/     9A9 : ED 52                  		sbc	hl, de		; eadr-aadr
 2163/     9AB : 23                     		inc	hl		; Länge=eadr-aadr+1
 2164/     9AC : 22 66 18               		ld	(hs_laenge), hl	; Laenge
 2165/     9AF : 11 20 00               		ld	de, 20h		; Länge HS-Block
 2166/     9B2 : 19                     		add	hl, de
 2167/     9B3 : 22 6A 18               		ld	(hs_gesamt), hl	; Länge incl. Header
 2168/     9B6 : C9                     		ret
 2169/     9B7 :                        
 2170/     9B7 :                        ;------------------------------------------------------------------------------
 2171/     9B7 :                        ; s HD Save Speichert ein File in DVHD
 2172/     9B7 :                        ;------------------------------------------------------------------------------
 2173/     9B7 : 00 09 73 0D            		db 0,9,'s',0Dh
 2174/     9BB :                        
 2175/     9BB : FE 2D                  		cp	'-'
 2176/     9BD : C8                     		ret	z
 2177/     9BE :                        
 2178/     9BE : 3E 30                  save0_hd:	ld	a, CmdWr	; Write Sector
 2179/     9C0 : 18 0C                  		jr	loc_9CE
 2180/     9C2 :                        
 2181/     9C2 :                        ;------------------------------------------------------------------------------
 2182/     9C2 :                        ; HD Load	Laedt ein in DVHD gespeichertes File von HD
 2183/     9C2 :                        ;------------------------------------------------------------------------------
 2184/     9C2 :                        
 2185/     9C2 : 00 09 6C 0D            		db 0,9,'l',0Dh
 2186/     9C6 :                        
 2187/     9C6 : AF                     		xor	a
 2188/     9C7 : 32 B0 18               ld_hd:		ld	(filetyp), a
 2189/     9CA : AF                     load0_hd:	xor	a
 2190/     9CB : 08                     		ex	af, af'		; '
 2191/     9CC : 3E 20                  		ld	a, CmdRd	; Read Sector
 2192/     9CE :                        
 2193/     9CE :                        ;
 2194/     9CE : FD 67                  loc_9CE:	ld	iyu, a
 2195/     9D0 : FD 2E 20               		ld	iyl, CmdRd	; Read Sector
 2196/     9D3 : CD 8F 0B               		call	HDInit
 2197/     9D6 : C2 47 07               		jp	nz, error1
 2198/     9D9 : D5                     		push	de
 2199/     9DA : CD 41 0A               		call	sub_A41
 2200/     9DD : CD 59 0A               		call	sub_A59
 2201/     9E0 : D1                     		pop	de
 2202/     9E1 : CD 0F 08               		call	sub_80F		; Teste Filename
 2203/     9E4 : ED 53 B1 18            		ld	(unk_18B1), de	; Adr. Filename
 2204/     9E8 : CA A2 0C               		jp	z, loc_CA2
 2205/     9EB : C3 A9 0C               		jp	loc_CA9
 2206/     9EE :                        
 2207/     9EE : DD E5                  sub_9EE:	push	ix
 2208/     9F0 : DF                     		rst	prnst		; Ausgabe String
 2209/     9F1 : 91                     		db 91h
 2210/     9F2 : 06 10                  		ld	b, 10h
 2211/     9F4 : DD 7E 00               loc_9F4:	ld	a, (ix+0)
 2212/     9F7 : D7                     		rst	outch		; Zeichenausgabe
 2213/     9F8 : DD 23                  		inc	ix
 2214/     9FA : 10 F8                  		djnz	loc_9F4
 2215/     9FC : DF                     		rst	prnst		; Ausgabe String
 2216/     9FD : 20 90                  		db ' ',90h
 2217/     9FF : DD 7E 09               		ld	a, (ix+9)
 2218/     A02 : D7                     		rst	outch		; Zeichenausgabe
 2219/     A03 : DF                     		rst	prnst		; Ausgabe String
 2220/     A04 : BA                     		db 0BAh
 2221/     A05 : AF                     		xor	a
 2222/     A06 : B3                     		or	e
 2223/     A07 : 28 11                  		jr	z, loc_A1A
 2224/     A09 : 06 02                  		ld	b, 2
 2225/     A0B : DD 23                  loc_A0B:	inc	ix
 2226/     A0D : DD 6E 00               		ld	l, (ix+0)
 2227/     A10 : DD 23                  		inc	ix
 2228/     A12 : DD 66 00               		ld	h, (ix+0)
 2229/     A15 : F7                     		rst	30h		; outhl
 2230/     A16 : DF                     		rst	prnst		; Ausgabe String
 2231/     A17 : A0                     		db 0A0h
 2232/     A18 : 10 F1                  		djnz	loc_A0B
 2233/     A1A : DD E1                  loc_A1A:	pop	ix
 2234/     A1C : C9                     		ret
 2235/     A1D :                        
 2236/     A1D : =>FALSE                	if p_colkdo
 2237/     A1D :                        ;------------------------------------------------------------------------------
 2238/     A1D :                        ; :: Arg. Argument Anzeige
 2239/     A1D :                        ;------------------------------------------------------------------------------
 2240/     A1D :                        		
 2241/     A1D :                        		db 0,9,':',0Dh
 2242/     A1D :                        
 2243/     A1D :                        		call	para
 2244/     A1D :                        		call	j_OUTHL		; HL = ARG1
 2245/     A1D :                        		rst	prnst
 2246/     A1D :                        		db 0A0h
 2247/     A1D :                        		ex	de, hl
 2248/     A1D :                        		call	j_OUTHL		; DE = ARG2
 2249/     A1D :                        		ld	h, b
 2250/     A1D :                        		jp	colkdo1		; an anderer Stelle geht weiter
 2251/     A1D : =>TRUE                 	else
 2252/     A1D : FF                     		db 0FFh
 2253/     A1E : FF                     		db 0FFh
 2254/     A1F : FF                     		db 0FFh
 2255/     A20 : FF                     		db 0FFh
 2256/     A21 : FF                     		db 0FFh
 2257/     A22 : FF                     		db 0FFh
 2258/     A23 : FF                     		db 0FFh
 2259/     A24 : FF                     		db 0FFh
 2260/     A25 : FF                     		db 0FFh
 2261/     A26 : FF                     		db 0FFh
 2262/     A27 : FF                     		db 0FFh
 2263/     A28 : FF                     		db 0FFh
 2264/     A29 : FF                     		db 0FFh
 2265/     A2A : FF                     		db 0FFh
 2266/     A2B : FF                     		db 0FFh
 2267/     A2C : FF                     		db 0FFh
 2268/     A2D : FF                     		db 0FFh
 2269/     A2E : FF                     		db 0FFh
 2270/     A2F : FF                     		db 0FFh
 2271/     A30 : FF                     		db 0FFh
 2272/     A31 : [2236]                 	endif
 2273/     A31 :                        
 2274/     A31 :                        ;------------------------------------------------------------------------------
 2275/     A31 :                        ; Start/Stop-Schaltung stopp
 2276/     A31 :                        ; UP TB aus (Ton und Interrupt wieder ein)
 2277/     A31 :                        ;------------------------------------------------------------------------------
 2278/     A31 :                        
 2279/     A31 :                        		org 0A31h	; fixe Adresse
 2280/     A31 :                        tb_aus:
 2281/     A31 : DB 05                  q_ko20:		in	a, (PIODB)	; Grafik/Ton
 2282/     A33 : CB AF                  		res	5, a
 2283/     A35 : 18 05                  		jr	loc_A3C
 2284/     A37 :                        
 2285/     A37 :                        ;------------------------------------------------------------------------------
 2286/     A37 :                        ;Start/Stop-Schaltung start
 2287/     A37 :                        ; UP TB ein (Ton und Interrupt sperren)
 2288/     A37 :                        ;------------------------------------------------------------------------------
 2289/     A37 :                        
 2290/     A37 :                        		org 0A37h	; fixe Adresse
 2291/     A37 :                        tb_ein:
 2292/     A37 : DB 05                  q_ko21:		in	a, (PIODB)	; Grafik/Ton
 2293/     A39 : CB EF                  		set	5, a
 2294/     A3B : F3                     		di
 2295/     A3C : DF                     loc_A3C:	rst	prnst		; Ausgabe String
 2296/     A3D : 87                     		db 87h
 2297/     A3E : D3 05                  		out	(PIODB), a; Grafik/Ton
 2298/     A40 : C9                     		ret
 2299/     A41 :                        
 2300/     A41 :                        ;------------------------------------------------------------------------------
 2301/     A41 :                        ; 
 2302/     A41 :                        ;------------------------------------------------------------------------------
 2303/     A41 :                        
 2304/     A41 :                        ; UP zu HD
 2305/     A41 : 3E 08                  sub_A41:	ld	a, 8
 2306/     A43 : D5                     sub_A43:	push	de
 2307/     A44 : D9                     		exx
 2308/     A45 : 2A 85 18               		ld	hl, (unk_1885)
 2309/     A48 : ED 5B 87 18            		ld	de, (unk_1887)
 2310/     A4C : 67                     		ld	h, a
 2311/     A4D : D9                     		exx
 2312/     A4E : 2A 62 18               		ld	hl, (hd_buffer)	; HD-Puffer normal 00 FD (AC1) 00 FE (LLC2)
 2313/     A51 : 11 00 02               		ld	de, 200h	; 512 Byte
 2314/     A54 : CD 7F 0D               		call	ide_rw		; IDE Read/Write 
 2315/     A57 :                        					; iyl Kommando, e head, dl cylinder, h sector
 2316/     A57 : D1                     		pop	de
 2317/     A58 : C9                     		ret
 2318/     A59 :                        
 2319/     A59 :                        ;------------------------------------------------------------------------------
 2320/     A59 :                        ; 
 2321/     A59 :                        ;------------------------------------------------------------------------------
 2322/     A59 :                        
 2323/     A59 : 2A 62 18               sub_A59:	ld	hl, (hd_buffer)	; HD-Puffer normal 00 FD (AC1) 00 FE (LLC2)
 2324/     A5C : 11 1F 00               		ld	de, 1Fh
 2325/     A5F : 19                     		add	hl, de
 2326/     A60 : 5E                     		ld	e, (hl)
 2327/     A61 : 23                     		inc	hl
 2328/     A62 : 56                     		ld	d, (hl)
 2329/     A63 : ED 53 89 18            		ld	(unk_1889), de
 2330/     A67 : 11 2E 00               		ld	de, 2Eh	; '.'
 2331/     A6A : 19                     		add	hl, de
 2332/     A6B : 5E                     		ld	e, (hl)
 2333/     A6C : 23                     		inc	hl
 2334/     A6D : 56                     		ld	d, (hl)
 2335/     A6E : ED 53 8B 18            		ld	(unk_188B), de
 2336/     A72 : C9                     		ret
 2337/     A73 :                        
 2338/     A73 :                        ;------------------------------------------------------------------------------
 2339/     A73 :                        ; J Jump Sprung in Programm ab Adresse
 2340/     A73 :                        ;------------------------------------------------------------------------------
 2341/     A73 :                        
 2342/     A73 : 00 09 4A 0D            		db 0,9,'J',0Dh
 2343/     A77 :                        
 2344/     A77 : CD CA 04               		call	para
 2345/     A7A : E9                     		jp	(hl)
 2346/     A7B :                        
 2347/     A7B :                        ;------------------------------------------------------------------------------
 2348/     A7B :                        ; Test auf Autostart
 2349/     A7B :                        ;------------------------------------------------------------------------------
 2350/     A7B :                        
 2351/     A7B : 21 3A 02               tstsch:		ld	hl, aSch	; "SCH"
 2352/     A7E : 06 03                  		ld	b, 3
 2353/     A80 : 1A                     tstsch1:	ld	a, (de)
 2354/     A81 : BE                     		cp	(hl)
 2355/     A82 : C0                     		ret	nz		; nicht gefunden
 2356/     A83 : 23                     		inc	hl
 2357/     A84 : 13                     		inc	de
 2358/     A85 : 10 F9                  		djnz	tstsch1
 2359/     A87 :                        		; Adresse hinter "SCH" in HL
 2360/     A87 : 1A                     		ld	a, (de)
 2361/     A88 : 6F                     		ld	l, a
 2362/     A89 : 13                     		inc	de
 2363/     A8A : 1A                     		ld	a, (de)
 2364/     A8B : 67                     		ld	h, a		; HL=Autostartadr.
 2365/     A8C : C9                     		ret
 2366/     A8D :                        
 2367/     A8D :                        ;------------------------------------------------------------------------------
 2368/     A8D :                        ; Einsprungschnittstelle, damit kann aus jeder Anwendung
 2369/     A8D :                        ;    via USB und HD (V24 nachladbar) auf LOAD & SAVE Routinen zugegriffen werden.
 2370/     A8D :                        ; XX_SAVE/LOAD
 2371/     A8D :                        ;------------------------------------------------------------------------------
 2372/     A8D :                        
 2373/     A8D : CD 9F 0F               EX_SA_LO:	call	sub_F9F		; Filename in ungekehrter Reihenfolge ab unk_18D4
 2374/     A90 : 1A                     		ld	a, (de)		; de=unk_18D4
 2375/     A91 : FE 22                  		cp	'"'		; " am Filenamensanfang?
 2376/     A93 : 28 02                  		jr	z, EX_SA_LO1	; ja
 2377/     A95 : 16 0F                  		ld	d, 0Fh		; nein, Direktmode;  hi(BWS)-1
 2378/     A97 :                        					; Adr 0Fxxh ist BWS-Überlauf
 2379/     A97 : 3A B3 18               EX_SA_LO1:	ld	a, (SA_LO_BYT)	; Methode
 2380/     A9A : B7                     		or	a
 2381/     A9B : CA EB 04               EX_SA_LO2:	jp	z, ldsv_usb	; -> ldsv_usb mit A=0 (USB Load)
 2382/     A9E : FE 01                  		cp	1
 2383/     AA0 : 28 F9                  		jr	z, EX_SA_LO2	; -> ldsv_usb mit A=1 (Usb Save)
 2384/     AA2 : FE 10                  		cp	10h
 2385/     AA4 : CA B6 0A               		jp	z, EX_SA_LO3	; -> reserve
 2386/     AA7 : FE 11                  		cp	11h
 2387/     AA9 : CA B6 0A               		jp	z, EX_SA_LO3	; -> reserve
 2388/     AAC : FE 21                  		cp	21h
 2389/     AAE : CA BE 09               		jp	z, save0_hd	; -> HD Save
 2390/     AB1 : FE 20                  		cp	20h
 2391/     AB3 : CA CA 09               		jp	z, load0_hd	; -> HD Load
 2392/     AB6 : C9                     EX_SA_LO3:	ret
 2393/     AB7 :                        
 2394/     AB7 :                        ;------------------------------------------------------------------------------
 2395/     AB7 :                        ; UP Suche Autostartsequenz in DE !! AADR (DE)
 2396/     AB7 :                        ;------------------------------------------------------------------------------
 2397/     AB7 :                        
 2398/     AB7 : 3A B0 18               sub_AB7:	ld	a, (filetyp)
 2399/     ABA : B7                     		or	a
 2400/     ABB : C8                     		ret	z
 2401/     ABC : B9                     		cp	c
 2402/     ABD : C8                     		ret	z
 2403/     ABE : FE 42                  		cp	'B'		; Basicprogramm
 2404/     AC0 : C0                     		ret	nz
 2405/     AC1 : 79                     		ld	a, c
 2406/     AC2 : FE 50                  		cp	'P'		; lauffähiges Maschinenprogramm
 2407/     AC4 : C0                     		ret	nz
 2408/     AC5 : 21 00 00               		ld	hl, 0
 2409/     AC8 : 22 5B 18               		ld	(ARG1),	hl
 2410/     ACB : C9                     		ret
 2411/     ACC :                        
 2412/     ACC :                        ;------------------------------------------------------------------------------
 2413/     ACC :                        ; W IO-Port beschreiben Byte an IO-Port ausgeben
 2414/     ACC :                        ;------------------------------------------------------------------------------
 2415/     ACC :                        
 2416/     ACC : 00 09 57 0D            		db 0,9,'W',0Dh
 2417/     AD0 :                        
 2418/     AD0 : CD CA 04               		call	para
 2419/     AD3 : 44                     		ld	b, h
 2420/     AD4 : 4D                     		ld	c, l
 2421/     AD5 : ED 59                  		out	(c), e
 2422/     AD7 : C9                     		ret
 2423/     AD8 :                        
 2424/     AD8 :                        ;------------------------------------------------------------------------------
 2425/     AD8 :                        ; Tabelle Peripherie Initialisierung
 2426/     AD8 :                        ;------------------------------------------------------------------------------
 2427/     AD8 :                        
 2428/     AD8 :                        ; jeweils port, wert, s. init3
 2429/     AD8 : 00                     TABIO:		db CTC0
 2430/     AD9 : F8                     		db lo(inttab)		; Interrupt-Vektor CTC
 2431/     ADA : 01                     		db CTC1
 2432/     ADB : 37                     		db  37h			; DI,Zeitgeber,Vorteiler 256,ZK folgt
 2433/     ADC : 01                     		db CTC1
 2434/     ADD : 4E                     		db  4Eh			; Zeitkonstante
 2435/     ADE : 02                     		db CTC2
 2436/     ADF : 47                     		db  47h			; DI,Zähler,Vorteiler 16,ZK folgt
 2437/     AE0 : 02                     		db CTC2
 2438/     AE1 : 32                     		db  32h			; Zeitkonstante
 2439/     AE2 :                        ;
 2440/     AE2 : 0B                     		db PIO2CB
 2441/     AE3 : CF                     		db 0CFh			; Mode 3 (Bit E/A)
 2442/     AE4 : 0B                     		db PIO2CB
 2443/     AE5 : 00                     		db    0			; alle Bits Ausgabe
 2444/     AE6 : 0A                     		db PIO2CA
 2445/     AE7 : CF                     		db 0CFh			; Mode 3 (Bit E/A)
 2446/     AE8 : 0A                     		db PIO2CA
 2447/     AE9 : C5                     		db  0C5h		; b7,b6,b3 und b0 Eingabe
 2448/     AEA : 08                     		db PIO2DA
 2449/     AEB : 0A                     		db  0Ah			; Bits setzen
 2450/     AEC :                        ;
 2451/     AEC : 06                     		db PIOCA		; PIOCA Tastatur
 2452/     AED : CF                     		db 0CFh			; Mode 3 (Bit E/A)
 2453/     AEE : 06                     		db PIOCA		; PIOCA Tastatur
 2454/     AEF : FF                     		db 0FFh			; alle Bits Eingabe
 2455/     AF0 : 06                     		db PIOCA		; PIOCA Tastatur
 2456/     AF1 : 07                     		db    7			; DI
 2457/     AF2 : 07                     		db PIOCB
 2458/     AF3 : CF                     		db 0CFh			; Mode 3 (Bit E/A)
 2459/     AF4 : 07                     		db PIOCB
 2460/     AF5 : 84                     		db  84h			; b7 und b2 Eingabe
 2461/     AF6 : 07                     		db PIOCB
 2462/     AF7 : 07                     		db    7			; DI
 2463/     AF8 :                        ;
 2464/     AF8 : 14                     		db modul1
 2465/     AF9 : 00                     		db    0			; alles deaktiviert
 2466/     AFA :                        
 2467/     AFA :                        ;------------------------------------------------------------------------------
 2468/     AFA :                        ; UP zu USB ldsv_usb19
 2469/     AFA :                        ; Lese b Bytes nach (HL)
 2470/     AFA :                        ;------------------------------------------------------------------------------
 2471/     AFA :                        
 2472/     AFA : 7E                     loc_AFA:	ld	a, (hl)
 2473/     AFB : E7                     		rst	PUT
 2474/     AFC : 23                     		inc	hl
 2475/     AFD : 10 FB                  		djnz	loc_AFA
 2476/     AFF : C9                     		ret
 2477/     B00 :                        
 2478/     B00 :                        ;------------------------------------------------------------------------------
 2479/     B00 :                        ; Tabelle mit Baudraten-Timings, muss an 00-Adresse liegen
 2480/     B00 :                        ;------------------------------------------------------------------------------
 2481/     B00 :                        		
 2482/     B00 :                        		org 0B00h	; fixe Adresse
 2483/     B00 : 03                     bdtab:		db    3			; 14400
 2484/     B01 : 02                     		db    2			; 19200
 2485/     B02 : 05                     		db    5			; 9600
 2486/     B03 : 0B                     		db  0Bh			; 4800
 2487/     B04 : 17                     		db  17h			; 2400
 2488/     B05 : 30                     		db  30h			; 1200
 2489/     B06 : 61                     		db  61h			; 600
 2490/     B07 : C2                     		db 0C2h			; 300
 2491/     B08 :                        
 2492/     B08 :                        ;------------------------------------------------------------------------------
 2493/     B08 :                        ; UP zu tbload
 2494/     B08 :                        ;------------------------------------------------------------------------------
 2495/     B08 :                        
 2496/     B08 : 7A                     loc_B08:	ld	a, d
 2497/     B09 : 32 8D 18               		ld	(unk_188D), a
 2498/     B0C : DD E5                  		push	ix
 2499/     B0E : D1                     		pop	de
 2500/     B0F : 06 10                  		ld	b, 10h
 2501/     B11 : 2A B1 18               		ld	hl, (unk_18B1)
 2502/     B14 : 7E                     loc_B14:	ld	a, (hl)
 2503/     B15 : FE 22                  		cp	'"'
 2504/     B17 : 20 03                  		jr	nz, loc_B1C
 2505/     B19 : 3E 20                  		ld	a, ' '
 2506/     B1B : 23                     		inc	hl
 2507/     B1C : 12                     loc_B1C:	ld	(de), a
 2508/     B1D : 2B                     		dec	hl
 2509/     B1E : 13                     		inc	de
 2510/     B1F : 10 F3                  		djnz	loc_B14
 2511/     B21 : 2B                     		dec	hl
 2512/     B22 : 2B                     		dec	hl
 2513/     B23 : 7E                     		ld	a, (hl)
 2514/     B24 : 13                     		inc	de
 2515/     B25 : 21 5B 18               		ld	hl, ARG1
 2516/     B28 : 01 06 00               		ld	bc, 6
 2517/     B2B : ED B0                  		ldir
 2518/     B2D : 13                     		inc	de
 2519/     B2E : 13                     		inc	de
 2520/     B2F : 12                     		ld	(de), a
 2521/     B30 : DD 36 10 FF            		ld	(ix+10h), 0FFh
 2522/     B34 : D9                     		exx
 2523/     B35 : 2A 89 18               		ld	hl, (unk_1889)
 2524/     B38 : DD 75 1B               		ld	(ix+1Bh), l
 2525/     B3B : DD 74 1C               		ld	(ix+1Ch), h
 2526/     B3E : ED 5B 8B 18            		ld	de, (unk_188B)
 2527/     B42 : DD 72 1D               		ld	(ix+1Dh), d
 2528/     B45 : DD 73 1E               		ld	(ix+1Eh), e
 2529/     B48 : D9                     		exx
 2530/     B49 : CD CA 04               		call	para
 2531/     B4C : FD 2E 30               		ld	iyl, CmdWr 	; Write Sector
 2532/     B4F : CD 7F 0D               loc_B4F:	call	ide_rw		; IDE Read/Write
 2533/     B52 :                        					; iyl Kommando, e head, dl cylinder, h sector
 2534/     B52 : DD 34 1A               		inc	(ix+1Ah)
 2535/     B55 : E5                     		push	hl
 2536/     B56 : AF                     		xor	a
 2537/     B57 : ED 52                  		sbc	hl, de
 2538/     B59 : E1                     		pop	hl
 2539/     B5A : 38 F3                  		jr	c, loc_B4F
 2540/     B5C : CD 05 04               		call	crc
 2541/     B5F : DD 75 17               		ld	(ix+17h), l
 2542/     B62 : DD 74 18               		ld	(ix+18h), h
 2543/     B65 : D9                     		exx
 2544/     B66 : D5                     		push	de
 2545/     B67 : E5                     		push	hl
 2546/     B68 : D9                     		exx
 2547/     B69 : 3A 8D 18               		ld	a, (unk_188D)
 2548/     B6C : CD 43 0A               		call	sub_A43
 2549/     B6F : FD 2E 20               		ld	iyl, CmdRd 	; Read Sector
 2550/     B72 : CD 41 0A               		call	sub_A41
 2551/     B75 : 2A 62 18               		ld	hl, (hd_buffer)	; HD-Puffer normal 00 FD (AC1) 00 FE (LLC2)
 2552/     B78 : 11 1F 00               		ld	de, 1Fh
 2553/     B7B : 19                     		add	hl, de
 2554/     B7C : D1                     		pop	de
 2555/     B7D : 73                     		ld	(hl), e
 2556/     B7E : 23                     		inc	hl
 2557/     B7F : 72                     		ld	(hl), d
 2558/     B80 : 11 2E 00               		ld	de, 2Eh
 2559/     B83 : 19                     		add	hl, de
 2560/     B84 : D1                     		pop	de
 2561/     B85 : 73                     		ld	(hl), e
 2562/     B86 : 23                     		inc	hl
 2563/     B87 : 72                     		ld	(hl), d
 2564/     B88 : FD 2E 30               		ld	iyl, CmdWr	; Write Sector
 2565/     B8B : CD 41 0A               		call	sub_A41
 2566/     B8E : C9                     		ret
 2567/     B8F :                        
 2568/     B8F :                        ;------------------------------------------------------------------------------
 2569/     B8F :                        ; 
 2570/     B8F :                        ;------------------------------------------------------------------------------
 2571/     B8F :                        
 2572/     B8F : 21 02 00               HDInit:		ld	hl, vHDFirstCyl	; Startspur fuer HD (Standard=2)	02 00
 2573/     B92 : 7C                     		ld	a, h
 2574/     B93 : 26 01                  		ld	h, 1
 2575/     B95 : 22 85 18               		ld	(unk_1885), hl
 2576/     B98 : 67                     		ld	h, a
 2577/     B99 : 2E 00                  		ld	l, 0
 2578/     B9B : 22 87 18               		ld	(unk_1887), hl
 2579/     B9E : CD B9 0B               		call	sub_BB9		; wait while busy
 2580/     BA1 : 2A 64 00               		ld	hl, (hd_heads)
 2581/     BA4 : 7C                     		ld	a, h
 2582/     BA5 : D3 8A                  		out	(IdeSCnt), a	; Sector Count
 2583/     BA7 : 7D                     		ld	a, l		;get head number
 2584/     BA8 : F6 A0                  		or	0A0h		;+ first IDE disk
 2585/     BAA : D3 8E                  		out	(IdeSDH), a	; Cylinder High
 2586/     BAC : 2A 36 00               		ld	hl, (hd_cylinder)	
 2587/     BAF : 7D                     		ld	a, l
 2588/     BB0 : D3 8C                  		out	(IdeCLo), a	; Cylinder Low
 2589/     BB2 : 7C                     		ld	a, h
 2590/     BB3 : D3 8D                  		out	(IdeCHi), a	; Cylinder High
 2591/     BB5 : 3E 91                  		ld	a, CmdInit 	; Initialize Drive Params
 2592/     BB7 : D3 8F                  		out	(IdeCmd), a
 2593/     BB9 :                        
 2594/     BB9 :                        ;wait while busy
 2595/     BB9 : E5                     sub_BB9:	push	hl
 2596/     BBA : 21 00 08               		ld	hl, 800h
 2597/     BBD : 10 FE                  loc_BBD:	djnz	loc_BBD
 2598/     BBF : 2B                     		dec	hl
 2599/     BC0 : 7D                     		ld	a, l
 2600/     BC1 : B4                     		or	h
 2601/     BC2 : 28 07                  		jr	z, loc_BCB
 2602/     BC4 :                        		;
 2603/     BC4 : DB 8F                  		in	a, (IdeCmd)	;get status
 2604/     BC6 : 17                     		rla			;BSY bit to Carry
 2605/     BC7 : 3E 01                  		ld	a, 1		
 2606/     BC9 : 38 F2                  		jr	c, loc_BBD	;loop until not BUSY
 2607/     BCB : 3D                     loc_BCB:	dec	a
 2608/     BCC : E1                     		pop	hl
 2609/     BCD : C9                     		ret
 2610/     BCE :                        		
 2611/     BCE : FF                     		db 0FFh
 2612/     BCF : FF                     		db 0FFh
 2613/     BD0 : FF                     		db 0FFh
 2614/     BD1 : FF                     		db 0FFh
 2615/     BD2 : FF                     		db 0FFh
 2616/     BD3 : FF                     		db 0FFh
 2617/     BD4 :                        
 2618/     BD4 :                        		org 0BD4h	; fixe Adresse
 2619/     BD4 :                        ; Direktaufruf aus Basic
 2620/     BD4 :                        ; Rest zu tb-Kopfblock füllen
 2621/     BD4 :                        		; in Mon 1088 erfolgte hier noch mehr (anderes Kopfblock-Format)
 2622/     BD4 : 2E B0                  tbh6:		ld	l, lo(filetyp)	; H=18h -> HL=filetyp
 2623/     BD6 : 71                     		ld	(hl), c		; 'B' oder 'F'
 2624/     BD7 : C9                     		ret
 2625/     BD8 :                        
 2626/     BD8 :                        ; UP zu xx
 2627/     BD8 : CD EE 09               loc_BD8:	call	sub_9EE
 2628/     BDB : CD 4D 07               		call	loc_74D
 2629/     BDE : DF                     		rst	prnst		; Ausgabe String
 2630/     BDF : 8D                     		adc	a, l
 2631/     BE0 : C0                     		ret	nz
 2632/     BE1 : DD 36 10 00            		ld	(ix+10h), 0
 2633/     BE5 : 7A                     		ld	a, d
 2634/     BE6 : FD 2E 30               		ld	iyl, CmdWr	; Write Sector
 2635/     BE9 : CD 43 0A               		call	sub_A43
 2636/     BEC : FD 2E 20               		ld	iyl, CmdRd	; Read Sector
 2637/     BEF : C3 C9 0C               		jp	loc_CC9
 2638/     BF2 :                        
 2639/     BF2 : FF                     		db 0FFh
 2640/     BF3 : FF                     		db 0FFh
 2641/     BF4 : FF                     		db 0FFh
 2642/     BF5 : FF                     		db 0FFh
 2643/     BF6 : FF                     		db 0FFh
 2644/     BF7 :                        
 2645/     BF7 :                        ;------------------------------------------------------------------------------
 2646/     BF7 :                        ; Erweiterung der Funktionalitäten von GS-BASIC 3.2
 2647/     BF7 :                        ;------------------------------------------------------------------------------
 2648/     BF7 :                        
 2649/     BF7 :                        ; BASIC-Direktaufrufe in den Monitor
 2650/     BF7 :                        ; 0008h			; inch
 2651/     BF7 :                        ; 0071h			; (BYE) sprung in Monitor
 2652/     BF7 :                        ; 			; Ausgabe Startmeldung. Besser wäre Adr 006E
 2653/     BF7 :                        ; 0183h			; OUTHEX
 2654/     BF7 :                        ; 0272h			; beep, UP "akustisches Signal"
 2655/     BF7 :                        ; 0287h			; UPTON, UP "Ton", Reg, B = Tonlaenge, C = Tonhoehe
 2656/     BF7 :                        ; 0297h			; UPTAST, UP "Taste", testet Tastaturtatus
 2657/     BF7 :                        ; 0A31h			; q_ko20, Start/Stop-Schaltung stop
 2658/     BF7 :                        ; 0A37h			; q_ko21, Start/Stop-Schaltung start
 2659/     BF7 :                        ; 0BD4h			; tbh6
 2660/     BF7 :                        ; 0BF7h			; tbsave
 2661/     BF7 :                        ; 0C81h			; tbload
 2662/     BF7 :                        	
 2663/     BF7 :                        		org	0BF7h	; fixe Adresse
 2664/     BF7 :                        ; Kassette Save
 2665/     BF7 :                        ; in C: Dateityp
 2666/     BF7 : E1                     tbsave:		pop	hl
 2667/     BF8 : E1                     		pop	hl
 2668/     BF9 : 79                     		ld	a, c
 2669/     BFA : FE 46                  		cp	'F'		; Datenfeld (Basic) ?
 2670/     BFC : 28 09                  		jr	z, loc_C07
 2671/     BFE :                        		; Programm speichern
 2672/     BFE : 2A 5A 60               		ld	hl, (605Ah)	; BASTXT Pointer to start of program
 2673/     C01 : ED 5B D2 60            		ld	de, (60D2h)	; PROGND End of program
 2674/     C05 : 18 07                  		jr	loc_C0E
 2675/     C07 :                        		; Felder speichern		
 2676/     C07 : 21 AB 60               loc_C07:	ld	hl, 60ABh	; LSTRAM Last available RAM
 2677/     C0A : ED 5B D6 60            		ld	de, (60D6h)	; ARREND End of arrays
 2678/     C0E :                        		;
 2679/     C0E : 22 5F 18               loc_C0E:	ld	(ARG3),	hl
 2680/     C11 : 21 00 60               		ld	hl, 6000h	; WRKSPC BASIC Work space
 2681/     C14 : 22 5B 18               		ld	(ARG1),	hl
 2682/     C17 : 1B                     		dec	de
 2683/     C18 : ED 53 5D 18            		ld	(ARG2),	de
 2684/     C1C : 0E 01                  		ld	c, 1
 2685/     C1E : 3A 61 18               loc_C1E:	ld	a, (gsbslm)	; Methode GSB SAVE/Load	USB HD 00h 20h
 2686/     C21 : 81                     		add	a, c
 2687/     C22 : 21 B3 18               		ld	hl, SA_LO_BYT
 2688/     C25 : 77                     		ld	(hl), a
 2689/     C26 : 23                     		inc	hl		; hl=filenambuf
 2690/     C27 :                        ;headersave-kopf leeren
 2691/     C27 : E5                     		push	hl
 2692/     C28 : 36 20                  		ld	(hl), ' '
 2693/     C2A : 11 B5 18               		ld	de, filenambuf+1
 2694/     C2D : 01 20 00               		ld	bc, 20h
 2695/     C30 : ED B0                  		ldir
 2696/     C32 : E1                     		pop	hl
 2697/     C33 : 36 22                  		ld	(hl), '"'
 2698/     C35 : 23                     		inc	hl
 2699/     C36 : 11 9E 18               		ld	de, unk_189E
 2700/     C39 : D5                     		push	de
 2701/     C3A : CD 8C 0E               		call	loc_E8C
 2702/     C3D : 0E 09                  		ld	c, 9
 2703/     C3F : 1A                     loc_C3F:	ld	a, (de)
 2704/     C40 : 77                     		ld	(hl), a
 2705/     C41 : 0D                     		dec	c
 2706/     C42 : 28 0C                  		jr	z, loc_C50
 2707/     C44 : FE 20                  		cp	' '
 2708/     C46 : 28 08                  		jr	z, loc_C50
 2709/     C48 : FE 2E                  		cp	'.'
 2710/     C4A : 28 04                  		jr	z, loc_C50
 2711/     C4C : 23                     		inc	hl
 2712/     C4D : 13                     		inc	de
 2713/     C4E : 18 EF                  		jr	loc_C3F
 2714/     C50 : 3E 08                  loc_C50:	ld	a, 8
 2715/     C52 : B9                     		cp	c
 2716/     C53 : 28 0F                  		jr	z, loc_C64
 2717/     C55 : 11 69 00               		ld	de, aZ80	; Endung ".Z80"
 2718/     C58 : EB                     		ex	de, hl
 2719/     C59 : 0E 05                  		ld	c, 5
 2720/     C5B : ED B0                  		ldir
 2721/     C5D : EB                     		ex	de, hl
 2722/     C5E :                        ;
 2723/     C5E : 23                     loc_C5E:	inc	hl
 2724/     C5F : 3A B0 18               		ld	a, (filetyp)	; Filetyp eintragen
 2725/     C62 : 77                     		ld	(hl), a
 2726/     C63 : 23                     		inc	hl
 2727/     C64 : 23                     loc_C64:	inc	hl		
 2728/     C65 : D1                     		pop	de
 2729/     C66 : EB                     		ex	de, hl
 2730/     C67 : 01 10 00               		ld	bc, 16		; Länge Kommentar
 2731/     C6A : ED B0                  		ldir
 2732/     C6C : ED 43 1A 18            		ld	(soil),	bc
 2733/     C70 : CD 8D 0A               		call	EX_SA_LO	; XX_SAVE/LOAD
 2734/     C73 : CD BC 07               		call	sub_7BC		; Tausch Buffer-Adr Normal <-> Basic
 2735/     C76 : DF                     		rst	prnst		; Ausgabe String
 2736/     C77 : 8D                     		db 8Dh
 2737/     C78 : CA EB 5D               		jp	z, 5DEBh	; CSAVE1
 2738/     C7B : 1E 24                  		ld	e, 24h 		; error 24h
 2739/     C7D : C3 84 43               		jp	4384h		; ERROR
 2740/     C80 :                        		
 2741/     C80 : FF                     		db 0FFh
 2742/     C81 :                        
 2743/     C81 :                        
 2744/     C81 :                        		org	0C81h	; fixe Adresse
 2745/     C81 :                        ; Kassette Load
 2746/     C81 :                        ; in C: Dateityp
 2747/     C81 : 3A 80 18               tbload:		ld	a, (hs_eadr)
 2748/     C84 : FE B6                  		cp	0B6h		; ??
 2749/     C86 : C8                     		ret	z
 2750/     C87 : D1                     		pop	de
 2751/     C88 : D1                     		pop	de
 2752/     C89 : D1                     		pop	de
 2753/     C8A : 79                     		ld	a, c
 2754/     C8B : 32 B0 18               		ld	(filetyp), a
 2755/     C8E : 21 AB 60               		ld	hl, 60ABh	; LSTRAM Last available RAM
 2756/     C91 : FE 46                  		cp	'F'		; Datenfeld (Basic) ?
 2757/     C93 : 28 05                  		jr	z, loc_C9A
 2758/     C95 : 2A D2 60               		ld	hl, (60D2h)	; PROGND End of program
 2759/     C98 : 2B                     		dec	hl
 2760/     C99 : 2B                     		dec	hl
 2761/     C9A : 22 5B 18               loc_C9A:	ld	(ARG1),	hl
 2762/     C9D : 0E 00                  		ld	c, 0
 2763/     C9F : C3 1E 0C               		jp	loc_C1E
 2764/     CA2 : AF                     loc_CA2:	xor	a
 2765/     CA3 : FD 67                  		ld	iyu, a
 2766/     CA5 : DF                     		rst	prnst		; Ausgabe String
 2767/     CA6 : 8D                     		db 8Dh
 2768/     CA7 : 0E 02                  		ld	c, 2
 2769/     CA9 : 11 01 01               loc_CA9:	ld	de, 101h
 2770/     CAC : DD 2A 62 18            loc_CAC:	ld	ix, (hd_buffer)	; HD-Puffer normal 00 FD (AC1) 00 FE (LLC2)
 2771/     CB0 : 7A                     		ld	a, d
 2772/     CB1 : CD 43 0A               		call	sub_A43
 2773/     CB4 : DD 7E 10               loc_CB4:	ld	a, (ix+10h)
 2774/     CB7 : A7                     		and	a
 2775/     CB8 : 28 0F                  		jr	z, loc_CC9
 2776/     CBA : AF                     		xor	a
 2777/     CBB : FD BC                  		cp	iyu
 2778/     CBD : 20 33                  		jr	nz, loc_CF2
 2779/     CBF : CD EE 09               		call	sub_9EE
 2780/     CC2 : DF                     		rst	prnst		; Ausgabe String
 2781/     CC3 : A0                     		db 0A0h
 2782/     CC4 : 0D                     		dec	c
 2783/     CC5 : 20 02                  		jr	nz, loc_CC9
 2784/     CC7 : 0E 02                  		ld	c, 2
 2785/     CC9 : FD 7C                  loc_CC9:	ld	a, iyu
 2786/     CCB : FE 30                  		cp	30h		; ?? CmdWr Write Sector
 2787/     CCD : 20 07                  		jr	nz, loc_CD6
 2788/     CCF : DD 7E 00               		ld	a, (ix+0)
 2789/     CD2 : A7                     		and	a
 2790/     CD3 : CA 08 0B               		jp	z, loc_B08
 2791/     CD6 : 06 20                  loc_CD6:	ld	b, 20h ; ' '
 2792/     CD8 : DD 23                  loc_CD8:	inc	ix
 2793/     CDA : 10 FC                  		djnz	loc_CD8
 2794/     CDC : 3A 63 18               		ld	a, (hd_buffer+1) ; HD-Puffer normal 00 FD (AC1)	00 FE (LLC2)
 2795/     CDF : 3C                     		inc	a
 2796/     CE0 : 3C                     		inc	a
 2797/     CE1 : DD BC                  		cp	ixu
 2798/     CE3 : 20 CF                  		jr	nz, loc_CB4
 2799/     CE5 : 14                     		inc	d
 2800/     CE6 : 3E 08                  		ld	a, 8
 2801/     CE8 : BA                     		cp	d
 2802/     CE9 : 20 C1                  		jr	nz, loc_CAC
 2803/     CEB : AF                     		xor	a
 2804/     CEC : FD BC                  		cp	iyu
 2805/     CEE : C8                     		ret	z
 2806/     CEF : C3 D5 05               		jp	ldsv_usb13
 2807/     CF2 :                        
 2808/     CF2 : 2A B1 18               loc_CF2:	ld	hl, (unk_18B1)
 2809/     CF5 : 06 10                  		ld	b, 10h
 2810/     CF7 : DD E5                  		push	ix
 2811/     CF9 : 7E                     loc_CF9:	ld	a, (hl)
 2812/     CFA : FE 22                  		cp	'"'
 2813/     CFC : 28 0B                  		jr	z, loc_D09
 2814/     CFE : DD BE 00               		cp	(ix+0)
 2815/     D01 : 20 06                  		jr	nz, loc_D09
 2816/     D03 : DD 23                  		inc	ix
 2817/     D05 : 2B                     		dec	hl
 2818/     D06 : 10 F1                  		djnz	loc_CF9
 2819/     D08 : AF                     		xor	a
 2820/     D09 : DD E1                  loc_D09:	pop	ix
 2821/     D0B : 20 BC                  		jr	nz, loc_CC9
 2822/     D0D : FD 7C                  		ld	a, iyu
 2823/     D0F : FE 30                  		cp	30h		; ?? CmdWr Write Sector
 2824/     D11 : CA D8 0B               		jp	z, loc_BD8
 2825/     D14 : 1E 00                  		ld	e, 0
 2826/     D16 : CD EE 09               		call	sub_9EE
 2827/     D19 : DD 4E 19               		ld	c, (ix+19h)
 2828/     D1C : CD B7 0A               		call	sub_AB7
 2829/     D1F : C2 BF 05               		jp	nz, ldsv_usb9
 2830/     D22 : CD A5 01               		call	sub_1A5
 2831/     D25 : 20 12                  		jr	nz, loc_D39
 2832/     D27 : 08                     		ex	af, af'
 2833/     D28 : 79                     		ld	a, c
 2834/     D29 : 06 F7                  		ld	b, 0F7h		; ??
 2835/     D2B : FE 42                  		cp	'B'		; Basicprogramm
 2836/     D2D : 28 08                  		jr	z, loc_D37
 2837/     D2F : FE 46                  		cp	'F'		; Datenfeld (Basic)
 2838/     D31 : 06 AB                  		ld	b, 0ABh		; ??
 2839/     D33 : 28 02                  		jr	z, loc_D37
 2840/     D35 : 06 00                  		ld	b, 0
 2841/     D37 : 78                     loc_D37:	ld	a, b
 2842/     D38 : 08                     		ex	af, af'
 2843/     D39 : D9                     loc_D39:	exx
 2844/     D3A : DD 6E 1B               		ld	l, (ix+1Bh)
 2845/     D3D : DD 66 1C               		ld	h, (ix+1Ch)
 2846/     D40 : DD 5E 1E               		ld	e, (ix+1Eh)
 2847/     D43 : DD 56 1D               		ld	d, (ix+1Dh)
 2848/     D46 : D9                     		exx
 2849/     D47 : DD 6E 13               		ld	l, (ix+13h)
 2850/     D4A : DD 66 14               		ld	h, (ix+14h)
 2851/     D4D : DD 5E 11               		ld	e, (ix+11h)
 2852/     D50 : DD 56 12               		ld	d, (ix+12h)
 2853/     D53 : ED 52                  		sbc	hl, de
 2854/     D55 : 23                     		inc	hl
 2855/     D56 : E5                     		push	hl
 2856/     D57 : 2A 5B 18               		ld	hl, (ARG1)
 2857/     D5A : 7D                     		ld	a, l
 2858/     D5B : B4                     		or	h
 2859/     D5C : 20 01                  		jr	nz, loc_D5F
 2860/     D5E : EB                     		ex	de, hl
 2861/     D5F : D1                     loc_D5F:	pop	de
 2862/     D60 : F7                     		rst	30h		; outhl
 2863/     D61 : DF                     		rst	prnst		; Ausgabe String
 2864/     D62 : A0                     		db 0A0h
 2865/     D63 : DD 7E 1A               		ld	a, (ix+1Ah)
 2866/     D66 : F5                     loc_D66:	push	af
 2867/     D67 : CD 7F 0D               		call	ide_rw		; IDE Read/Write
 2868/     D6A :                        					; iyl Kommando, e head, dl cylinder, h sector
 2869/     D6A : F1                     		pop	af
 2870/     D6B : 3D                     		dec	a
 2871/     D6C : 20 F8                  		jr	nz, loc_D66
 2872/     D6E : CD A5 01               		call	sub_1A5
 2873/     D71 : 20 08                  		jr	nz, loc_D7B
 2874/     D73 : 79                     		ld	a, c
 2875/     D74 : FE 42                  		cp	'B'		; Basicprogramm
 2876/     D76 : 20 03                  		jr	nz, loc_D7B
 2877/     D78 : 22 D2 60               		ld	(60D2h), hl	; PROGND End of program
 2878/     D7B : 2B                     loc_D7B:	dec	hl
 2879/     D7C : F7                     		rst	30h		; outhl
 2880/     D7D : AF                     		xor	a
 2881/     D7E : C9                     		ret
 2882/     D7F :                        
 2883/     D7F :                        ; IDE Read/Write
 2884/     D7F :                        ; in iyl Kommando, e head, dl cylinder, h sector
 2885/     D7F :                        ; in read: de=Anz Bytes
 2886/     D7F :                        
 2887/     D7F : C5                     ide_rw:		push	bc
 2888/     D80 : 3E 01                  		ld	a, 1		;1-sector transfer
 2889/     D82 : D3 8A                  		out	(IdeSCnt), a	;tell IDE drive
 2890/     D84 : D9                     		exx
 2891/     D85 : 7D                     		ld	a, l		;get low order byte
 2892/     D86 : D3 8C                  		out	(IdeCLo), a	;send to Task File
 2893/     D88 : 7A                     		ld	a, d		;get high-order byte
 2894/     D89 : D3 8D                  		out	(IdeCHi), a	;send to task file
 2895/     D8B : 7B                     		ld	a, e		;get head number
 2896/     D8C : F6 A0                  		or	0A0h		;+ first IDE disk
 2897/     D8E : D3 8E                  		out	(IdeSDH), a	;send to drive!
 2898/     D90 : 7C                     		ld	a, h		;get sector number
 2899/     D91 : D3 8B                  		out	(IdeSNum), a	;send to Task File
 2900/     D93 : D9                     		exx
 2901/     D94 : 01 88 00               		ld	bc, IdeDat	; B=0, BC has port
 2902/     D97 : FD 7D                  		ld	a, iyl
 2903/     D99 : D3 8F                  		out	(IdeCmd), a	;send command
 2904/     D9B : DB 8F                  ide_rw1:	in	a, (IdeCmd)	;Wait until data available or ready for data
 2905/     D9D : CB 5F                  		bit	3, a
 2906/     D9F : 28 FA                  		jr	z, ide_rw1
 2907/     DA1 :                        		;
 2908/     DA1 : FD 7D                  		ld	a, iyl
 2909/     DA3 : FE 30                  		cp	CmdWr 		; Write Sector
 2910/     DA5 : 28 3E                  		jr	z, ide_rw10
 2911/     DA7 :                        ;Read min(de,512) Bytes to hl
 2912/     DA7 : 0E 02                  		ld	c, 2		;2 x 256 Bytes
 2913/     DA9 : 7B                     ide_rw2:	ld	a, e
 2914/     DAA : B2                     		or	d
 2915/     DAB : DB 88                  		in	a, (IdeDat)
 2916/     DAD : 28 0C                  		jr	z, ide_rw5	; wenn de=0, dann nicht mehr in speicher
 2917/     DAF :                        					; nur Block zu Ende lesen
 2918/     DAF : 08                     		ex	af, af'
 2919/     DB0 : B7                     		or	a
 2920/     DB1 : 28 04                  		jr	z, ide_rw3
 2921/     DB3 : 3D                     		dec	a
 2922/     DB4 : 08                     		ex	af, af'
 2923/     DB5 : 18 03                  		jr	ide_rw4
 2924/     DB7 : 08                     ide_rw3:	ex	af, af'		; '
 2925/     DB8 : 77                     		ld	(hl), a		; Byte ablegen
 2926/     DB9 : 23                     		inc	hl		; nächste Adresse
 2927/     DBA : 1B                     ide_rw4:	dec	de
 2928/     DBB : 10 EC                  ide_rw5:	djnz	ide_rw2
 2929/     DBD : 0D                     		dec	c
 2930/     DBE : 20 E9                  		jr	nz, ide_rw2
 2931/     DC0 :                        ;		
 2932/     DC0 : D9                     ide_rw6:	exx
 2933/     DC1 : CD B9 0B               		call	sub_BB9		; wait while busy
 2934/     DC4 : ED 4B 64 00            		ld	bc, (hd_heads)
 2935/     DC8 : 78                     		ld	a, b
 2936/     DC9 : BC                     		cp	h
 2937/     DCA : 28 03                  		jr	z, ide_rw7
 2938/     DCC : 24                     		inc	h
 2939/     DCD : 18 0F                  		jr	ide_rw9		
 2940/     DCF : 26 01                  ide_rw7:	ld	h, 1
 2941/     DD1 : 79                     		ld	a, c
 2942/     DD2 : BB                     		cp	e
 2943/     DD3 : 28 03                  		jr	z, ide_rw8
 2944/     DD5 : 1C                     		inc	e
 2945/     DD6 : 18 06                  		jr	ide_rw9
 2946/     DD8 : 1E 00                  ide_rw8:	ld	e, 0
 2947/     DDA : 2C                     		inc	l
 2948/     DDB : 20 01                  		jr	nz, ide_rw9
 2949/     DDD : 14                     		inc	d
 2950/     DDE : D9                     ide_rw9:	exx
 2951/     DDF : C1                     		pop	bc
 2952/     DE0 : DB 8F                  		in	a, (IdeCmd)	;get status
 2953/     DE2 : E6 89                  		and	89h
 2954/     DE4 : C9                     		ret
 2955/     DE5 :                        ; Write 512 Bytes from hl
 2956/     DE5 : ED B3                  ide_rw10:	otir			;from (HL) out to (C) port. HL++, B--. until B=0
 2957/     DE7 : ED B3                  		otir			;write 512 bytes
 2958/     DE9 : 18 D5                  		jr	ide_rw6
 2959/     DEB :                        
 2960/     DEB :                        
 2961/     DEB :                        ;------------------------------------------------------------------------------
 2962/     DEB :                        ; w IO-Port lesen	liest den Portwert an IO-Port ein und gibt sie aus
 2963/     DEB :                        ;------------------------------------------------------------------------------
 2964/     DEB :                        
 2965/     DEB : 00 09 77 0D            		db 0,9,'w',0Dh
 2966/     DEF :                        
 2967/     DEF : ED 4B 5B 18            		ld	bc, (ARG1)
 2968/     DF3 : ED 78                  		in	a, (c)
 2969/     DF5 : C3 83 01               		jp	OUTHEX
 2970/     DF8 :                        
 2971/     DF8 : FF                     		db 0FFh
 2972/     DF9 :                        
 2973/     DF9 :                        ;------------------------------------------------------------------------------
 2974/     DF9 :                        ; Ausgabe auf V24 (RS232)
 2975/     DF9 :                        ; PIO2 A1 Ausgang Daten TxD 
 2976/     DF9 :                        ;      A2 Eingang empfangsbereit CTS 
 2977/     DF9 :                        ;------------------------------------------------------------------------------
 2978/     DF9 :                        
 2979/     DF9 : E5                     v24out:		push	hl
 2980/     DFA : C5                     		push	bc
 2981/     DFB : D5                     		push	de
 2982/     DFC : F5                     		push	af
 2983/     DFD : 57                     		ld	d, a
 2984/     DFE : 3A 20 18               		ld	a, (kdov24)	; kdov24
 2985/     E01 : E6 07                  		and	7		; Baudrate
 2986/     E03 : 26 0B                  		ld	h, hi(bdtab) 	; Baudratentabelle, liegt auf xx00-Adr.
 2987/     E05 : 6F                     		ld	l, a
 2988/     E06 : 5E                     		ld	e, (hl)
 2989/     E07 : 7A                     		ld	a, d
 2990/     E08 : 21 20 18               		ld	hl, kdov24
 2991/     E0B : 01 FF 7F               		ld	bc, 7FFFh	; Datenmaske 7F= 7 Bit, FF= 8 Bit
 2992/     E0E : CB 66                  		bit	4, (hl)		; 1=7 Datenbit, + P.ungerade
 2993/     E10 : 20 05                  		jr	nz, v24out2	; ja
 2994/     E12 : CB 6E                  		bit	5, (hl)		; 1=7 Datenbit, + P.gerade
 2995/     E14 : 28 07                  		jr	z, v24out3	; nein -> 8 Datenbit
 2996/     E16 : 48                     		ld	c, b		; ja: c=7F, sonst c=FF
 2997/     E17 :                        v24out2:	; parity bestimmen
 2998/     E17 : A0                     		and	b		; ggf. 7. Bit löschen
 2999/     E18 : EA 1D 0E               		jp	pe, v24out3
 3000/     E1B : CB FF                  		set	7, a		; Parity setzen
 3001/     E1D : A9                     v24out3:	xor	c		; Maske anwenden, bits negieren
 3002/     E1E : 4F                     		ld	c, a		; c=auszugebendes Zeichen
 3003/     E1F :                        		;
 3004/     E1F : CB 76                  		bit	6, (hl)		; 1=3-Draht-Handshake
 3005/     E21 : 20 06                  		jr	nz, v24out6	; dann nicht auf CTS warten
 3006/     E23 : DB 08                  v24out5:	in	a, (PIO2DA)	; sonst X-Draht
 3007/     E25 : CB 57                  		bit	2, a		; empfangsbereit CTS ?
 3008/     E27 : 20 FA                  		jr	nz, v24out5	; warten auf Freigabe
 3009/     E29 :                        		;
 3010/     E29 : 06 0A                  v24out6:	ld	b, 10		; 10 Bits senden (Start - 8Bit/7Bit+P - Stop)
 3011/     E2B : CB 5E                  		bit	3, (hl)		; Stop-bit
 3012/     E2D : 28 01                  		jr	z, v24out7	; 0=1 Stop-bit	
 3013/     E2F : 04                     		inc	b		; sonst ein Stop-Bit mehr
 3014/     E30 : 37                     v24out7:	scf			; Start mit 1-Bits
 3015/     E31 :                        		;
 3016/     E31 : 2A 00 18               		ld	hl, (cupos)
 3017/     E34 : F3                     		di
 3018/     E35 : 53                     v24out8:	ld	d, e		; Baudratenzähler		4   Takte
 3019/     E36 : CB CF                  		set	1, a		; b1=1				8
 3020/     E38 : 30 02                  		jr	nc, v24out9	;				12/7
 3021/     E3A : CB 8F                  		res	1, a		; b1=0				8 
 3022/     E3C : D3 08                  v24out9:	out	(PIO2DA), a	; A1 Ausgang Daten TxD		(11
 3023/     E3E : 70                     		ld	(hl), b		; Zeitverzögerung
 3024/     E3F : 15                     		dec	d		;				4
 3025/     E40 : 20 FA                  		jr	nz, v24out9	;				12) * E - 5
 3026/     E42 : CB 39                  		srl	c		; c=auszugebendes Zeichen	8
 3027/     E44 :                        					; nächstes Bit nach Cy
 3028/     E44 : 10 EF                  		djnz	v24out8		;				13
 3029/     E46 :                        					; insg. xx Takte
 3030/     E46 : 36 20                  		ld	(hl), ' '	; cupos
 3031/     E48 : F1                     		pop	af
 3032/     E49 : 18 33                  		jr	v24in6
 3033/     E4B :                        		
 3034/     E4B : FF                     		db 0FFh
 3035/     E4C :                        		
 3036/     E4C :                        ;------------------------------------------------------------------------------
 3037/     E4C :                        ; Eingabe von V24 (RS232)
 3038/     E4C :                        ;------------------------------------------------------------------------------
 3039/     E4C :                        
 3040/     E4C : E5                     v24in:		push	hl
 3041/     E4D : C5                     		push	bc
 3042/     E4E : D5                     v24in0:		push	de
 3043/     E4F : F3                     		di
 3044/     E50 : 3A 20 18               		ld	a, (kdov24)	; Kommandocode V 24
 3045/     E53 : E6 07                  		and	7		; Baudrate
 3046/     E55 : 26 0B                  		ld	h, hi(bdtab)	; Baudratentabelle, liegt auf xx00-Adr.
 3047/     E57 : 6F                     		ld	l, a
 3048/     E58 : 5E                     		ld	e, (hl)
 3049/     E59 : 2A 00 18               		ld	hl, (cupos)
 3050/     E5C : AF                     		xor	a		; alles 0
 3051/     E5D : D3 08                  		out	(PIO2DA), a	; DTR=0,CTS=0,TxD=0,RxD=0
 3052/     E5F : DB 08                  v24in2:		in	a, (PIO2DA)	; Pegel am Datenport abfragen
 3053/     E61 : E6 01                  		and	1		; nur RxD zulassen (Bits 7-1 ausblenden)
 3054/     E63 : 20 FA                  		jr	nz, v24in2	; Dateneingang war L warten auf H-Pegel
 3055/     E65 : 43                     		ld	b, e		; Zeitkonstante nach B
 3056/     E66 : 70                     v24in3:		ld	(hl), b
 3057/     E67 : 10 FD                  		djnz	v24in3		; warten
 3058/     E69 : 06 09                  		ld	b, 9		; 9 Bits empfangen (Start - 8Bit)
 3059/     E6B : 53                     v24in4:		ld	d, e
 3060/     E6C : CB 19                  		rr	c		; gelesenes CarryBit ins Bit 7 schieben
 3061/     E6E : 70                     v24in5:		ld	(hl), b
 3062/     E6F : 15                     		dec	d
 3063/     E70 : DB 08                  		in	a, (PIO2DA)	; Pegelabfrage
 3064/     E72 : 20 FA                  		jr	nz, v24in5
 3065/     E74 : 1F                     		rra			; Bit0=RxD ins Carry schieben
 3066/     E75 : 10 F4                  		djnz	v24in4		; weiter bis alle Bits durch
 3067/     E77 : 36 20                  		ld	(hl), ' ' 	; cupos
 3068/     E79 : 3E 0A                  		ld	a, 0Ah		; DTR=1,CTS=0,TxD=1,RxD=0
 3069/     E7B : D3 08                  		out	(PIO2DA), a	; Bereitschaftsbits setzen
 3070/     E7D : 79                     		ld	a, c		; gelesenes Byte in A umladen
 3071/     E7E : D1                     v24in6:		pop	de
 3072/     E7F : C1                     		pop	bc
 3073/     E80 : E1                     		pop	hl
 3074/     E81 : FB                     		ei
 3075/     E82 : C9                     		ret
 3076/     E83 :                        
 3077/     E83 : FF                     		db 0FFh
 3078/     E84 :                        
 3079/     E84 :                        ;------------------------------------------------------------------------------
 3080/     E84 :                        ; usb close file
 3081/     E84 :                        ;------------------------------------------------------------------------------
 3082/     E84 :                        
 3083/     E84 : 3E 0A                  sub_E84:	ld	a, 0Ah		; Vinculum-Kdo Close
 3084/     E86 :                        ;
 3085/     E86 : CD BB 06               sub_E86:	call	sub_6BB		; Kommando mit Filename senden
 3086/     E89 : C3 35 07               		jp	EXEC		; Kommando ausfuehren
 3087/     E8C :                        
 3088/     E8C :                        ;------------------------------------------------------------------------------
 3089/     E8C :                        ; 
 3090/     E8C :                        ;------------------------------------------------------------------------------
 3091/     E8C :                        
 3092/     E8C : CD BC 07               loc_E8C:	call	sub_7BC		; Tausch Buffer-Adr Normal <-> Basic
 3093/     E8F : CB 87                  		res	0, a
 3094/     E91 : FE 20                  		cp	' '
 3095/     E93 : C0                     		ret	nz
 3096/     E94 : F1                     		pop	af
 3097/     E95 :                        		; 16 Zeichen von DE nach HL kopieren
 3098/     E95 : 06 10                  		ld	b, 16
 3099/     E97 : 1A                     loc_E97:	ld	a, (de)
 3100/     E98 : 77                     		ld	(hl), a
 3101/     E99 : 23                     		inc	hl
 3102/     E9A : 13                     		inc	de
 3103/     E9B : 10 FA                  		djnz	loc_E97
 3104/     E9D :                        		;
 3105/     E9D : 3E 10                  		ld	a, 16
 3106/     E9F : B8                     		cp	b		; b==0
 3107/     EA0 : 20 01                  		jr	nz, loc_EA3	; daher immer jr ??
 3108/     EA2 : 23                     		inc	hl
 3109/     EA3 : 36 22                  loc_EA3:	ld	(hl), '"'	; mit " abschließen
 3110/     EA5 : 23                     		inc	hl
 3111/     EA6 : C3 5E 0C               		jp	loc_C5E
 3112/     EA9 :                        
 3113/     EA9 :                        ;------------------------------------------------------------------------------
 3114/     EA9 :                        ; r Basic Warmstart Warmstart Grafik-Sound-Basic via Modul 1
 3115/     EA9 :                        ;------------------------------------------------------------------------------
 3116/     EA9 :                        
 3117/     EA9 : 00 09 72 0D            		db 0,9,'r',0Dh
 3118/     EAD :                        
 3119/     EAD : DD 21 D5 5F            		ld	ix, 5FD5h	; Warmstart
 3120/     EB1 : 18 33                  		jr	bko1		; ROM "Basic" aktivieren, Fkt-Tasten laden
 3121/     EB3 :                        
 3122/     EB3 : FF                     		db 0FFh
 3123/     EB4 :                        
 3124/     EB4 :                        ;------------------------------------------------------------------------------
 3125/     EB4 :                        ;UP "Joy".Abfrage Joystick 1,keine Taste Z - Flag
 3126/     EB4 :                        ;	    gesetzt und	A = 0,oben bit 0, unten	bit 1,links
 3127/     EB4 :                        ;	    bit	2, rechts bit 3, Feuerknopf bit	4 vom Akku
 3128/     EB4 :                        ;	    gesetzt.
 3129/     EB4 :                        ;------------------------------------------------------------------------------
 3130/     EB4 :                        
 3131/     EB4 :                        		org 0EB4h	; fixe Adresse
 3132/     EB4 : C5                     joy:		push	bc
 3133/     EB5 : DB 05                  		in	a, (PIODB)	; Grafik/Ton
 3134/     EB7 : 4F                     		ld	c, a
 3135/     EB8 : CB 8F                  		res	1, a
 3136/     EBA : D3 05                  		out	(PIODB), a	; Grafik/Ton
 3137/     EBC : DB 04                  		in	a, (PIODA)	; Tastatur
 3138/     EBE : 47                     		ld	b, a
 3139/     EBF : 79                     		ld	a, c
 3140/     EC0 : D3 05                  		out	(PIODB), a	; Grafik/Ton
 3141/     EC2 : 78                     		ld	a, b
 3142/     EC3 : 00                     		nop
 3143/     EC4 : E6 1F                  		and	1Fh
 3144/     EC6 : C1                     		pop	bc
 3145/     EC7 : C9                     		ret
 3146/     EC8 :                        
 3147/     EC8 :                        ;------------------------------------------------------------------------------
 3148/     EC8 :                        ; a to hex hl
 3149/     EC8 :                        ;------------------------------------------------------------------------------
 3150/     EC8 :                        
 3151/     EC8 :                        ; zu kdo5
 3152/     EC8 : F5                     tohex:		push	af
 3153/     EC9 : 1F                     		rra
 3154/     ECA : 1F                     		rra
 3155/     ECB : 1F                     		rra
 3156/     ECC : 1F                     		rra
 3157/     ECD : CD D2 0E               		call	tohex1		; obere Tetrade
 3158/     ED0 : 65                     		ld	h, l		; übergeben in H
 3159/     ED1 : F1                     		pop	af		; untere Tetrade
 3160/     ED2 : E6 0F                  tohex1:		and	0Fh
 3161/     ED4 : C6 30                  		add	a, '0'
 3162/     ED6 : FE 3A                  		cp	'9'+1		; Ziffer "A" ... "F"?
 3163/     ED8 : 38 02                  		jr	c, tohex2	; nein
 3164/     EDA : C6 07                  		add	a, 7		; sonst Korrektur
 3165/     EDC : 6F                     tohex2:		ld	l, a		; übergeben in L
 3166/     EDD : C9                     		ret
 3167/     EDE :                        
 3168/     EDE :                        ;------------------------------------------------------------------------------
 3169/     EDE :                        ; b Basic Start GraficSoundBasic via Modul 1
 3170/     EDE :                        ;------------------------------------------------------------------------------
 3171/     EDE :                        
 3172/     EDE : 00 09 62 0D            		db 0,9,'b',0Dh
 3173/     EE2 :                        
 3174/     EE2 : DD 21 CC 5F            		ld	ix, 5FCCh	; COLD
 3175/     EE6 : 3E 02                  bko1:		ld	a, 2		; BASIC
 3176/     EE8 : D3 14                  		out	(modul1), a	; Modul1 ROM "Basic" aktivieren
 3177/     EEA : 21 E0 5F               		ld	hl, 5FE0h	; Funktionstasten
 3178/     EED : 11 80 1F               		ld	de, 1F80h	; umladen
 3179/     EF0 : 01 20 00               		ld	bc, 20h
 3180/     EF3 : ED B0                  		ldir
 3181/     EF5 : DD E9                  		jp	(ix)		; und starten
 3182/     EF7 :                        
 3183/     EF7 :                        ;------------------------------------------------------------------------------
 3184/     EF7 :                        ; T Transfer Kopiert Speicherbereich in anderen Speicherbereich
 3185/     EF7 :                        ;------------------------------------------------------------------------------
 3186/     EF7 :                        
 3187/     EF7 : 00 09 54 0D            		db 0,9,'T',0Dh
 3188/     EFB : CD CA 04               		call	para		; Argumente uebergeben
 3189/     EFE : AF                     		xor	a
 3190/     EFF : E5                     		push	hl
 3191/     F00 : ED 52                  		sbc	hl, de
 3192/     F02 : E1                     		pop	hl
 3193/     F03 :                        		; kopieren mit ldir ?
 3194/     F03 : 30 1A                  		jr	nc, pko1	; ldir + ret
 3195/     F05 :                        		; sonst kopieren mit lddr		
 3196/     F05 : 09                     		add	hl, bc
 3197/     F06 : EB                     		ex	de, hl
 3198/     F07 : 09                     		add	hl, bc
 3199/     F08 : EB                     		ex	de, hl
 3200/     F09 : 2B                     		dec	hl
 3201/     F0A : 1B                     		dec	de
 3202/     F0B : ED B8                  		lddr
 3203/     F0D : C9                     		ret
 3204/     F0E :                        
 3205/     F0E :                        ;------------------------------------------------------------------------------
 3206/     F0E :                        ; P Pattern Fuellt Speicherbereich mit Datenbyte
 3207/     F0E :                        ;------------------------------------------------------------------------------
 3208/     F0E :                        
 3209/     F0E : 00 09 50 0D            		db 0,9,'P',0Dh
 3210/     F12 :                        
 3211/     F12 : CD CA 04               		call	para		; Argumente uebergeben
 3212/     F15 : 71                     		ld	(hl), c		; Pattern cc
 3213/     F16 : E5                     		push	hl
 3214/     F17 : AF                     		xor	a
 3215/     F18 : EB                     		ex	de, hl
 3216/     F19 : ED 52                  		sbc	hl, de
 3217/     F1B : 44                     		ld	b, h
 3218/     F1C : 4D                     		ld	c, l
 3219/     F1D : E1                     		pop	hl
 3220/     F1E : 13                     		inc	de
 3221/     F1F : ED B0                  pko1:		ldir
 3222/     F21 : C9                     		ret
 3223/     F22 :                        
 3224/     F22 :                        ;------------------------------------------------------------------------------
 3225/     F22 :                        ; ? Help Liste der verfuegbaren Kommandos
 3226/     F22 :                        ;------------------------------------------------------------------------------
 3227/     F22 :                        
 3228/     F22 : 00 09 3F 0D            		db 0,9,'?',0Dh
 3229/     F26 :                        
 3230/     F26 : DF                     help:		rst	prnst		; Ausgabe String
 3231/     F27 : 20 48 65 6C 70 BA      		db " Help",0BAh
 3232/     F2D : 21 20 00               		ld	hl, KDOANFH	; erste Adr, aber der Kdo zu suchen sind
 3233/     F30 : 01 E0 FF               		ld	bc, RAMEND-KDOANFH+1	; Anzahl (RAM-Ende-Startpos.)
 3234/     F33 : AF                     help1:		xor	a
 3235/     F34 : ED B1                  		cpir
 3236/     F36 : E0                     		ret	po
 3237/     F37 : 3E 09                  		ld	a, 9		; folgt 09?
 3238/     F39 : BE                     		cp	(hl)
 3239/     F3A : 20 F7                  		jr	nz, help1
 3240/     F3C : 23                     		inc	hl
 3241/     F3D : 56                     		ld	d, (hl)		; kdo merken
 3242/     F3E : 23                     		inc	hl
 3243/     F3F : 3E 0D                  		ld	a, 0Dh		; folgt 0D?
 3244/     F41 : BE                     		cp	(hl)
 3245/     F42 : 20 EF                  		jr	nz, help1	; wenn Rahmen nicht gefunden
 3246/     F44 : 7A                     		ld	a, d		; sonst kdo anzeigen
 3247/     F45 : D7                     		rst	outch		; Zeichenausgabe
 3248/     F46 : DF                     		rst	prnst		; Ausgabe String
 3249/     F47 : A0                     		db 0A0h
 3250/     F48 : 18 E9                  		jr	help1
 3251/     F4A :                        
 3252/     F4A :                        ;------------------------------------------------------------------------------
 3253/     F4A :                        ; C Compare Vergleich von 2 Speicherbereichen
 3254/     F4A :                        ; C aaaa bbbb cccc Compare
 3255/     F4A :                        ;------------------------------------------------------------------------------
 3256/     F4A :                        
 3257/     F4A : 00 09 43 0D            		db 0,9,'C',0Dh
 3258/     F4E :                        
 3259/     F4E : CD CA 04               		call	para		; Argumente uebergeben
 3260/     F51 : 1A                     cko1:		ld	a, (de)		; bbbb
 3261/     F52 : BE                     		cp	(hl)		; vergleich mit aaaa
 3262/     F53 : 28 21                  		jr	z, cko2		; weiter wenn gleich
 3263/     F55 :                        		; Differenz anzeigen
 3264/     F55 :                        		; "a-Adr. Wert b-Adr. Wert"
 3265/     F55 : DF                     		rst	prnst		; Ausgabe String
 3266/     F56 : 20 A0                  		db ' ',0A0h
 3267/     F58 : F7                     		rst	30h		; outhl
 3268/     F59 : DF                     		rst	prnst		; Ausgabe String
 3269/     F5A : 20 20 20               		db "   "
 3270/     F5D : A0                     		db 0A0h	;  
 3271/     F5E : 7E                     		ld	a, (hl)
 3272/     F5F : CD 83 01               		call	OUTHEX		; Ausgabe A hexadezimal Wert
 3273/     F62 : DF                     		rst	prnst		; Ausgabe String
 3274/     F63 : 8F                     		db 8Fh
 3275/     F64 : EB                     		ex	de, hl
 3276/     F65 : F7                     		rst	30h		; outhl
 3277/     F66 : DF                     		rst	prnst		; Ausgabe String
 3278/     F67 : 20 20 20               		db "   "
 3279/     F6A : A0                     		db 0A0h	;  
 3280/     F6B : EB                     		ex	de, hl
 3281/     F6C : 1A                     		ld	a, (de)
 3282/     F6D : CD 83 01               		call	OUTHEX
 3283/     F70 : DF                     		rst	prnst		; Ausgabe String
 3284/     F71 : 8D                     		db 8Dh
 3285/     F72 : CF                     		rst	inch		; inch; Zeicheneingabe
 3286/     F73 : FE 0D                  		cp	0Dh
 3287/     F75 : C0                     		ret	nz
 3288/     F76 : 0B                     cko2:		dec	bc		; Anzahl cccc
 3289/     F77 : 23                     		inc	hl		; Adressen erhöhen
 3290/     F78 : 13                     		inc	de
 3291/     F79 : 78                     		ld	a, b		; Anzahl cccc abgearbeitet?
 3292/     F7A : B1                     		or	c
 3293/     F7B : C8                     		ret	z		; dann Ende
 3294/     F7C : 18 D3                  		jr	cko1		; sonst weiter vergleichen
 3295/     F7E :                        
 3296/     F7E : FF                     		db 0FFh
 3297/     F7F : FF                     		db 0FFh
 3298/     F80 : FF                     		db 0FFh
 3299/     F81 :                        
 3300/     F81 :                        ;------------------------------------------------------------------------------
 3301/     F81 :                        ; p Clear RAM Loescht RAM bis FF00H mit FFH
 3302/     F81 :                        ;------------------------------------------------------------------------------
 3303/     F81 :                        
 3304/     F81 : 00 09 70 0D            		db 0,9,'p',0Dh
 3305/     F85 :                        
 3306/     F85 :                        ; RAM loeschen
 3307/     F85 : 21 66 18               erase:		ld	hl, erasebeg	; Beginn Löschbereich
 3308/     F88 : 36 FF                  		ld	(hl), 0FFh
 3309/     F8A : 11 67 18               		ld	de, erasebeg+1
 3310/     F8D : 01 99 E6               		ld	bc, 0FF00h-erasebeg-1
 3311/     F90 : ED B0                  		ldir
 3312/     F92 : DF                     		rst	prnst		; Ausgabe String
 3313/     F93 : 20 43 6C 65 61 72 20   		db " Clear RAM",8Dh
           F9A : 52 41 4D 8D         
 3314/     F9E : C9                     		ret
 3315/     F9F :                        
 3316/     F9F :                        ;------------------------------------------------------------------------------
 3317/     F9F :                        ; Filename in ungekehrter Reihenfolge ab unk_18D4 ablegen/tauschen
 3318/     F9F :                        ; ret: de=unk_18D4
 3319/     F9F :                        ;------------------------------------------------------------------------------
 3320/     F9F :                        
 3321/     F9F :                        ; UP zu EX_SA_LO
 3322/     F9F : 06 10                  sub_F9F:	ld	b, 16		; Länge
 3323/     FA1 : 21 B4 18               		ld	hl, filenambuf
 3324/     FA4 : 11 D4 18               		ld	de, unk_18D4
 3325/     FA7 : D5                     		push	de
 3326/     FA8 : 4E                     loc_FA8:	ld	c, (hl)
 3327/     FA9 : 1A                     		ld	a, (de)
 3328/     FAA : 77                     		ld	(hl), a
 3329/     FAB : 79                     		ld	a, c
 3330/     FAC : 12                     		ld	(de), a
 3331/     FAD : 23                     		inc	hl
 3332/     FAE : 1B                     		dec	de
 3333/     FAF : 10 F7                  		djnz	loc_FA8
 3334/     FB1 : D1                     		pop	de
 3335/     FB2 : C9                     		ret
 3336/     FB3 :                        
 3337/     FB3 :                        ;------------------------------------------------------------------------------
 3338/     FB3 :                        ; 4 2/4Mhz schaltet AC1 zwischen 2/4Mhz Takt um (BWS-Port noetig)
 3339/     FB3 :                        ;------------------------------------------------------------------------------
 3340/     FB3 :                        
 3341/     FB3 : 00 09 34 0D            		db 0,9,'4',0Dh
 3342/     FB7 :                        
 3343/     FB7 : DB F0                  		in	a, (BWSPORT)
 3344/     FB9 : EE 01                  		xor	1
 3345/     FBB : D3 F0                  		out	(BWSPORT), a
 3346/     FBD : C9                     		ret
 3347/     FBE :                        
 3348/     FBE :                        ;------------------------------------------------------------------------------
 3349/     FBE :                        ; ! BWS Farbe BWS Farbe setzen (COLOR-BWS noetig)
 3350/     FBE :                        ; ! cc Farbbyte setzen
 3351/     FBE :                        ; s.a. Monitorpatch 08.11.2011.LISTING
 3352/     FBE :                        ;------------------------------------------------------------------------------
 3353/     FBE :                        
 3354/     FBE : 00 09 21 0D            		db 0,9,'!',0Dh
 3355/     FC2 :                        
 3356/     FC2 : 3A 5B 18               		ld	a, (ARG1)	; mögliches FarbByte laden
 3357/     FC5 : B7                     		or	a		; wenn 00H (keine Angabe) dann FarbByte
 3358/     FC6 : 20 02                  		jr	nz, setcolor1
 3359/     FC8 :                        
 3360/     FC8 :                        ; Farb-RAM loeschen
 3361/     FC8 : 3E 0B                  setcolor:	ld	a, vColor	; 0E = bg: schwarz, fg: hellgelb
 3362/     FCA : F5                     setcolor1:	push	af		; FarbByte sichern
 3363/     FCB : AF                     		xor	a		; noFarbRAM A=00
 3364/     FCC : 32 1F 18               		ld	(FARBBWS), a	; noFarbRAM einstellen
 3365/     FCF : F1                     		pop	af		; FarbByte nach A zurück
 3366/     FD0 : 0E F0                  		ld	c, BWSPORT
 3367/     FD2 : ED 40                  		in	b, (c)		; akt. Portwert einlesen
 3368/     FD4 : 04                     		inc	b		; FFH wenn kein rücklesbares Register
 3369/     FD5 : C8                     		ret	z		; Rückkehr weil kein BWSPort gefunden
 3370/     FD6 :                        					; wenn hier dann wurde KEIN FFH gelesen, altes B zurück
 3371/     FD6 : 05                     		dec	b		; altes B zurück
 3372/     FD7 : 50                     		ld	d, b		; in B BWS Steuercode für Text RAM
 3373/     FD8 : CB D2                  		set	2, d		; in D BWS Steuercode für FarbRAM
 3374/     FDA : 21 00 10               		ld	hl, BWSEND
 3375/     FDD : 5E                     		ld	e, (hl)		; altes TextByte in E merken
 3376/     FDE :                        
 3377/     FDE : =>FALSE                		if p_setcol
 3378/     FDE :                        ;Es wird vor dem Einstellen der Vorder- und Hintergrundfarbe
 3379/     FDE :                        ;geprüft, ob es sich um einen Color-BWS handelt. Das passiert auf der RAM-Zelle
 3380/     FDE :                        ;1000h. Wenn diese den gleichen Hex-Wert, wie das bei "!" übergebene Argument hat
 3381/     FDE :                        ;(also z.B. 20h), passiert bisher nix. Das ist hiermit korrigiert worden.
 3382/     FDE :                        		cpl
 3383/     FDE :                        		ld 	(hl), a
 3384/     FDE :                        		out 	(c), d		; FarbRAM an
 3385/     FDE :                        		cpl
 3386/     FDE :                        		ld 	(hl), a		; Farbbyte schreiben
 3387/     FDE :                        		cp 	(hl)		; und vergleichslesen
 3388/     FDE :                        		out 	(c), b		; Text RAM wieder ein (wegen RET)
 3389/     FDE :                        		jr 	nz, setcolor2	; kein phys.RAM (Text- oder FarbRAM!)
 3390/     FDE :                        		cpl
 3391/     FDE :                        		cp 	(hl)
 3392/     FDE :                        setcolor2	ld 	(hl),e		; altes Zeichen Text-RAM zurück
 3393/     FDE :                        		ret 	nz
 3394/     FDE :                        		out	(c), d		; FarbRAM an
 3395/     FDE : =>TRUE                 		else
 3396/     FDE : ED 51                  		out	(c), d		; FarbRAM an
 3397/     FE0 : 77                     		ld	(hl), a		; Farbbyte schreiben
 3398/     FE1 : BE                     		cp	(hl)		; und vergleichslesen
 3399/     FE2 : ED 41                  		out	(c), b		; Text RAM wieder ein (wegen RET)
 3400/     FE4 : 73                     		ld	(hl), e		; altes Zeichen Text-RAM zurück
 3401/     FE5 : C0                     		ret	nz		; kein phys.RAM (Text- oder FarbRAM!)
 3402/     FE6 :                        		; wenn hier dann unterschiedliche RAM's! damit gilt der FarbRAM
 3403/     FE6 :                        		; als erkannt, das 1.Byte ist bereits in Farbe
 3404/     FE6 : ED 51                  		out	(c), d		; FarbRAM an
 3405/     FE8 :                        		;
 3406/     FE8 : 7E                     		ld	a, (hl)
 3407/     FE9 : BB                     		cp	e
 3408/     FEA : ED 41                  		out	(c), b		; Text RAM an
 3409/     FEC : C8                     		ret	z
 3410/     FED : ED 51                  		out	(c), d		; FarbRAM an
 3411/     FEF : [3377]                 		endif
 3412/     FEF :                        		;
 3413/     FEF : C5                     		push	bc		; BWSPort und TextRAM ein sichern
 3414/     FF0 : 11 01 10               		ld	de, BWSEND+1	; 2.Byte FarbRAM
 3415/     FF3 : 01 FF 07               		ld	bc, LINES*COLS-1	; restliche Bytezahl
 3416/     FF6 : ED B0                  		ldir			; nun FarbRAM schreiben
 3417/     FF8 : 7E                     		ld	a, (hl)		; FarbByte zurücklesen (von 17FFH)
 3418/     FF9 : C1                     		pop	bc		; BWSPort und TextRAM ein
 3419/     FFA : ED 41                  		out	(c), b		; Text RAM ein
 3420/     FFC : 32 1F 18               		ld	(FARBBWS), a	; FarbByte eintragen
 3421/     FFF : C9                     		ret
 3422/    1000 :                        
 3423/    1000 :                        ; end of "ROM"
 3424/    1000 :                        
 3425/    1000 :                        
 3426/    1000 :                        ;------------------------------------------------------------------------------
 3427/    1000 :                        ; Arbeitszellen Monitor
 3428/    1000 :                        ;------------------------------------------------------------------------------
 3429/    1000 :                        ; segment "RAM"
 3430/    1000 :                        
 3431/    1800 :                        		org RAM
 3432/    1800 :                        		
 3433/    1800 :                        cupos:		ds 2			; Cursorposition
 3434/    1802 :                        ; Sprungverteiler f. RST-Aufrufe und NMI
 3435/    1802 :                        ; wird initialisiert mit Werten von sv_rst
 3436/    1802 :                        jp_rst08:	ds 3			; jp	rinch
 3437/    1805 :                        jp_rst10:	ds 3			; jp	routch
 3438/    1808 :                        jp_rst18:	ds 3			; jp	rprnst
 3439/    180B :                        jp_rst20:	ds 3			; jp	
 3440/    180E :                        jp_rst28:	ds 3			; jp	
 3441/    1811 :                        jp_rst30:	ds 3			; jp	
 3442/    1814 :                        jp_rst38:	ds 3			; jp	rst38	Einsprung bei Einzelschritt
 3443/    1817 :                        nmi:		ds 3			; jp	BREAK	NMI: Breakpoint
 3444/    181A :                        ;Hilfsregister, V24, I/O
 3445/    181A :                        soil:		ds 2			; Beginn Eingabezeile	, 0FFFFh
 3446/    181C :                        warmcod:	ds 3			; Warmstartcode		, "SCH"
 3447/    181F :                        FARBBWS:	ds 1			; Farbcode		, 0
 3448/    1820 :                        kdov24:		ds 1			; V24-Kontrollregister	, 42h
 3449/    1821 :                        IOBYT:		ds 1			; Ein/Ausgabebyte	; 11h
 3450/    1822 :                        			; Eingabe: b0 Tastatur, b1 V24 (Rs 232c), b2 Reserve, b3 User
 3451/    1822 :                        			; Ausgabe: b4 Bildschirm, b5 V24 (RS 232c), b6 Reserve, b7 User
 3452/    1822 :                        ;
 3453/    1822 :                        tacod:		ds 1			; Tastencode der zuletzt gedrückten Taste
 3454/    1823 :                        ;Stack
 3455/    1823 :                        		ds 33h			; Stackbereich
 3456/    1856 : =1856H                 SYSSK:		equ $			; Stack
 3457/    1856 :                        ;
 3458/    1856 :                        poscnt:		ds 1			; Hilfsregister Kursorpositionierung (CTRL+N)
 3459/    1857 :                        					; std. 1, nach ctrln 5 (dh 5-1 Ziffern werden erwartet)
 3460/    1857 :                        repeat:		ds 1			; Hilfsregister	Repetierfunktion Tastatur
 3461/    1858 :                        data:		ds 2			; Hilfsregister	UP "INLINE"
 3462/    185A :                        		ds 1
 3463/    185B :                        ;Kdo-Argumente
 3464/    185B :                        ARG1:		ds 2			; Argument 1
 3465/    185D :                        ARG2:		ds 2			; Argument 2
 3466/    185F :                        ARG3:		ds 2			; Argument 3
 3467/    1861 :                        
 3468/    1861 :                        		; org 1861h
 3469/    1861 :                        ;orig hier Registerrettebereich (register save area)
 3470/    1861 :                        gsbslm:		ds 1			; Methode GSB SAVE/Load	USB HD 00h 20h
 3471/    1862 :                        hd_buffer:	ds 2			; HD-Puffer normal 00 FD (AC1) 00 FE (LLC2)
 3472/    1864 :                        hd_bufbas:	ds 2			; HD-Puffer GS-Basic 00	3E
 3473/    1866 :                        ; ab hier wird in erase: geöscht
 3474/    1866 : =1866H                 erasebeg:	equ	$
 3475/    1866 :                        ;
 3476/    1866 :                        hs_laenge:	ds 2			; Laenge
 3477/    1868 :                        hs_rest:	ds 2			; Restlänge
 3478/    186A :                        hs_gesamt:	ds 2			; Gesamtlänge incl. Header
 3479/    186C :                        ;
 3480/    186C :                        		ds 2
 3481/    186E :                        
 3482/    186E :                        ; Headersave-Buffer für sub_95B, 186E-187Dh
 3483/    186E :                        unk_186E:	ds 16			; 16 Byte Buffer Filename 
 3484/    187E :                        
 3485/    187E :                        ; noch orig. Adressen in RSA / überlagert unk_186E		
 3486/    1875 :                        		org unk_186E+7
 3487/    1875 :                        REGPC:		ds 2			; s. BREAK, write only
 3488/    1877 :                        REGSP:		ds 2			; s. BREAK, write only
 3489/    1879 :                        ; in V11 ungenutzt
 3490/    1879 :                        BPADR:		ds 2			; RSA: BP
 3491/    187B :                        BPOPC:		ds 3			; RSA: Breakpointsequenz
 3492/    187E :                        
 3493/    187E :                        		; org 187Eh
 3494/    187E :                        ;hsbuf Speicher Save/Load Turbo-Tape/V24 USB
 3495/    187E :                        hs_buf:		ds 32 			; Headersave-Kopf-Buffer
 3496/    189E : =187EH                 hs_aadr:	equ hs_buf+0		; ds 2 aadr
 3497/    189E : =1880H                 hs_eadr:	equ hs_buf+2		; ds 2 eadr
 3498/    189E : =1882H                 hs_sadr:	equ hs_buf+4		; ds 2 sadr
 3499/    189E : =1884H                 hs_cod:		equ hs_buf+6		; ds 6 "MO11.0" / frei belegbar
 3500/    189E : =188AH                 hs_filetyp:	equ hs_buf+12		; ds 1 Dateityp / Basic-Modus
 3501/    189E : =188BH                 hs_kennung:	equ hs_buf+13		; ds 3 3 x D3 Kennung Headersave-Kopf 
 3502/    189E : =188EH                 hs_fileinfo:	equ hs_buf+16		; ds 16 Kommentar
 3503/    189E :                        		
 3504/    189E :                        ; HD-Speicher, überlagert hsbuf
 3505/    189E : =1885H                 unk_1885:	equ hs_buf+7		; ds 2
 3506/    189E : =1887H                 unk_1887:	equ unk_1885+2		; ds 2
 3507/    189E : =1889H                 unk_1889:	equ unk_1885+4		; ds 2
 3508/    189E : =188BH                 unk_188B:	equ unk_1885+6		; ds 2
 3509/    189E : =188DH                 unk_188D:	equ unk_1885+8		; ds 1
 3510/    189E :                        
 3511/    189E :                        ; 
 3512/    189E :                        unk_189E:	ds 16			; Buffer Filename BASIC
 3513/    18AE :                        		ds 2
 3514/    18B0 :                        ;
 3515/    18B0 :                        filetyp:	ds 1			; Dateityp (00, P, B)
 3516/    18B1 :                        unk_18B1:	ds 2
 3517/    18B3 :                        ;
 3518/    18B3 :                        SA_LO_BYT:	ds 1			; Methode fuer XX_SAVE/LOAD
 3519/    18B4 :                        					;	  00h =	USB laden
 3520/    18B4 :                        					;	  01h =	USB sichern
 3521/    18B4 :                        					;	  20h =	HD laden
 3522/    18B4 :                        					;	  21h =	HD sichern
 3523/    18B4 :                        ; 32 Byte Puffer Filename+Typ+Info
 3524/    18B4 :                        filenambuf:	ds 32			; Puffer fuer SAVE/LOAD-Arbeit
 3525/    18D4 :                        					;	  1 Byte Hochkomma
 3526/    18D4 :                        					;  	 12 Byte Filename (8 . 3)
 3527/    18D4 :                        					;	  1 Byte Hochkomma
 3528/    18D4 :                        					;	  1 Byte Leerzeichen
 3529/    18D4 :                        					;	  1 Byte Dateityp (P)
 3530/    18D4 :                        					;	  1 Byte Leerzeichen
 3531/    18D4 :                        					;	 16 Bytes Header-Info/Kommentar
 3532/    18D4 :                        unk_18D4:	ds 2
 3533/    18D6 :                        
 3534/    18D6 :                        ; ab 18D6 freier RAM
 3535/    18D6 :                        
 3536/    18F0 :                        		org	18F0h
 3537/    18F0 :                        unk_18F0:	ds 3			; User Eingaberoutine
 3538/    18F3 :                        unk_18F3:	ds 3			; User Ausgaberoutine
 3539/    18F6 :                        
 3540/    18F6 :                        ; end of "RAM"
 3541/    18F6 :                        		end
 AS V1.42 Beta [Bld 249] - Source File Monitor11.asm - Page 2 - 3/20/2024 8:22:42


  Symbol Table (* = unused):
  --------------------------

*AA :                           12B C |  AFNERW :                       2E2 C |
*ARCHITECTURE :                                        "i386-unknown-win32" - |
 ARG1 :                        185B C |  ARG2 :                        185D C |
 ARG3 :                        185F C |  ASCH :                         23A C |
 AZ80 :                          69 C |  BDTAB :                       0B00 C |
 BEEP :                         272 C |  BEEP1 :                        275 C |
 BKO1 :                        0EE6 C | *BPADR :                       1879 C |
*BPOPC :                       187B C |  BREAK :                        240 C |
 BREAK1 :                       243 C | *BREAK2 :                       25B C |
 BWS :                         1000 - |  BWSANF :                      17FF - |
 BWSEND :                      1000 - |  BWSPORT :                      0F0 - |
*CASESENSITIVE :                  0 - |  CKO1 :                        0F51 C |
 CKO2 :                        0F76 C |  CMDINIT :                       91 - |
 CMDRD :                         20 - |  CMDWR :                         30 - |
 CO :                            33 C |  CO0 :                          300 C |
 CO1 :                          318 C |  CO10 :                         37F C |
 CO11 :                         392 C |  CO12 :                         3AB C |
 CO13 :                         3B3 C |  CO14 :                         3C0 C |
 CO2 :                          31B C |  CO3 :                          328 C |
 CO4 :                          32B C |  CO5 :                          333 C |
 CO6 :                          354 C |  CO7 :                          355 C |
 CO8 :                          35D C |  CO9 :                          377 C |
 COLS :                          40 - | *CONSTPI :        3.141592653589793 - |
 COTAB :                        3C7 C |  CRC :                          405 C |
 CRC1 :                         410 C |  CTC0 :                           0 - |
 CTC1 :                           1 - |  CTC2 :                           2 - |
*CTC3 :                           3 - |  CUPOS :                       1800 C |
 DATA :                        1858 C | *DATE :                 "3/20/2024" - |
 DEL_USB :                      51F C | *DIR_USB :                      4F6 C |
 DIR_USB1 :                     504 C |  DIR_USB2 :                     513 C |
 DMP_ZEILE :                    440 C |  DMP_ZEILE1 :                   442 C |
 DMP_ZEILE2 :                   44D C |  DMP_ZEILE3 :                   45B C |
 DMP_ZEILE4 :                   46E C |  DMP_ZEILE5 :                   477 C |
*D_KO1 :                        836 C |  D_KO10 :                       8A6 C |
*D_KO11 :                       8B0 C | *D_KO12 :                       8B8 C |
 D_KO13 :                       8D7 C |  D_KO14 :                       8DE C |
 D_KO15 :                       8E3 C |  D_KO16 :                       8EB C |
 D_KO17 :                       8F3 C |  D_KO18 :                       8F9 C |
 D_KO19 :                       903 C |  D_KO2 :                        846 C |
 D_KO20 :                       90B C |  D_KO21 :                       912 C |
 D_KO22 :                       91B C |  D_KO23 :                       924 C |
 D_KO24 :                       929 C |  D_KO25 :                       92C C |
 D_KO26 :                       932 C |  D_KO27 :                       938 C |
 D_KO28 :                       957 C | *D_KO3 :                        85A C |
 D_KO4 :                        867 C |  D_KO5 :                        870 C |
 D_KO6 :                        873 C |  D_KO7 :                        88E C |
 D_KO8 :                        894 C |  D_KO9 :                        899 C |
 ENDE8 :                        0A2 C |  ERASE :                       0F85 C |
 ERASEBEG :                    1866 - |  ERR :                          741 C |
 ERROR :                        268 C |  ERROR1 :                       747 C |
 EXEC :                         735 C |  EX_SA_LO :                    0A8D C |
 EX_SA_LO1 :                   0A97 C |  EX_SA_LO2 :                   0A9B C |
 EX_SA_LO3 :                   0AB6 C |  FALSE :                          0 - |
 FARBBWS :                     181F C |  FILENAMBUF :                  18B4 C |
 FILETYP :                     18B0 C | *FULLPMMU :                       1 - |
 GET :                           28 C |  GETCO1 :                       25B C |
 GIDE :                          80 - |  GSBSLM :                      1861 C |
*HAS64 :                          0 - | *HASFPU :                         0 - |
*HASPMMU :                        0 - |  HDINIT :                      0B8F C |
 HD_BUFBAS :                   1864 C |  HD_BUFFER :                   1862 C |
*HD_BUF_HI :                    239 C |  HD_CYLINDER :                   36 C |
 HD_HEADS :                      64 C | *HD_SECTORS :                    65 C |
*HELP :                        0F26 C |  HELP1 :                       0F33 C |
 HS_AADR :                     187E - |  HS_BUF :                      187E C |
*HS_COD :                      1884 - |  HS_EADR :                     1880 - |
 HS_FILEINFO :                 188E - |  HS_FILETYP :                  188A - |
 HS_GESAMT :                   186A C | *HS_KENNUNG :                  188B - |
 HS_LAENGE :                   1866 C |  HS_REST :                     1868 C |
 HS_SADR :                     1882 - |  IDECHI :                        8D - |
 IDECLO :                        8C - |  IDECMD :                        8F - |
 IDEDAT :                        88 - | *IDEDOR :                        86 - |
 IDEERR :                        89 - |  IDESCNT :                       8A - |
 IDESDH :                        8E - |  IDESNUM :                       8B - |
*IDESTAT :                       8F - | *IDEWRPC :                       89 - |
 IDE_RW :                      0D7F C |  IDE_RW1 :                     0D9B C |
 IDE_RW10 :                    0DE5 C |  IDE_RW2 :                     0DA9 C |
 IDE_RW3 :                     0DB7 C |  IDE_RW4 :                     0DBA C |
 IDE_RW5 :                     0DBB C |  IDE_RW6 :                     0DC0 C |
 IDE_RW7 :                     0DCF C |  IDE_RW8 :                     0DD8 C |
 IDE_RW9 :                     0DDE C |  IGSBSLM :                      238 C |
 INCH :                           8 C |  INHEX :                        172 C |
*INIT :                           0 C |  INIT1 :                         0B C |
 INIT2 :                         1B C |  INIT3 :                         3B C |
 INIT4 :                         41 C |  INIT5 :                         58 C |
 INIT8 :                         6E C |  INIT_GSB :                     7CE C |
 INLIN1 :                       12F C |  INLIN2 :                       13A C |
 INLINE :                       128 C | *INSUPMODE :                      0 - |
 INTTAB :                       2F8 C |  IOBYT :                       1821 C |
*JOY :                         0EB4 C |  JP_RST08 :                    1802 C |
 JP_RST10 :                    1805 C |  JP_RST18 :                    1808 C |
 JP_RST20 :                    180B C |  JP_RST28 :                    180E C |
 JP_RST30 :                    1811 C |  JP_RST38 :                    1814 C |
 J_OUTHEX :                     7EE C | *J_OUTHL :                       30 C |
 J_TASTE :                      7FA C |  KDO1 :                         1DE C |
 KDO1A :                        1E1 C |  KDO2 :                         1E7 C |
 KDO4 :                         21F C |  KDO5 :                         1B5 C |
 KDOANF :                        10 - |  KDOANFH :                       20 - |
 KDOV24 :                      1820 C |  KONVX :                        146 C |
 KONVX2 :                       156 C |  KONVX3 :                       168 C |
 LDSV_USB :                     4EB C |  LDSV_USB1 :                    52A C |
 LDSV_USB10 :                   5C4 C |  LDSV_USB11 :                   5C9 C |
 LDSV_USB12 :                   5CC C |  LDSV_USB13 :                   5D5 C |
 LDSV_USB14 :                   5DD C |  LDSV_USB15 :                   60E C |
 LDSV_USB16 :                   611 C |  LDSV_USB17 :                   62A C |
 LDSV_USB18 :                   62E C |  LDSV_USB19 :                   657 C |
 LDSV_USB2 :                    53A C |  LDSV_USB20 :                   672 C |
 LDSV_USB21 :                   683 C |  LDSV_USB22 :                   68A C |
 LDSV_USB23 :                   691 C |  LDSV_USB3 :                    549 C |
 LDSV_USB4 :                    54E C |  LDSV_USB5 :                    55B C |
 LDSV_USB6 :                    582 C |  LDSV_USB7 :                    597 C |
 LDSV_USB8 :                    5A8 C |  LDSV_USB9 :                    5BF C |
*LD_HD :                        9C7 C |  LD_USB :                       4DB C |
 LINES :                         20 - | *LISTON :                         1 - |
 LOAD0_HD :                     9CA C |  LOC_4A1 :                      4A1 C |
 LOC_4A5 :                      4A5 C |  LOC_6B4 :                      6B4 C |
 LOC_6C3 :                      6C3 C |  LOC_6D3 :                      6D3 C |
 LOC_74D :                      74D C |  LOC_771 :                      771 C |
 LOC_796 :                      796 C |  LOC_798 :                      798 C |
 LOC_963 :                      963 C |  LOC_96D :                      96D C |
 LOC_970 :                      970 C |  LOC_99E :                      99E C |
 LOC_9CE :                      9CE C |  LOC_9F4 :                      9F4 C |
 LOC_A0B :                     0A0B C |  LOC_A1A :                     0A1A C |
 LOC_A3C :                     0A3C C |  LOC_AFA :                     0AFA C |
 LOC_B08 :                     0B08 C |  LOC_B14 :                     0B14 C |
 LOC_B1C :                     0B1C C |  LOC_B4F :                     0B4F C |
 LOC_BBD :                     0BBD C |  LOC_BCB :                     0BCB C |
 LOC_BD8 :                     0BD8 C |  LOC_C07 :                     0C07 C |
 LOC_C0E :                     0C0E C |  LOC_C1E :                     0C1E C |
 LOC_C3F :                     0C3F C |  LOC_C50 :                     0C50 C |
 LOC_C5E :                     0C5E C |  LOC_C64 :                     0C64 C |
 LOC_C9A :                     0C9A C |  LOC_CA2 :                     0CA2 C |
 LOC_CA9 :                     0CA9 C |  LOC_CAC :                     0CAC C |
 LOC_CB4 :                     0CB4 C |  LOC_CC9 :                     0CC9 C |
 LOC_CD6 :                     0CD6 C |  LOC_CD8 :                     0CD8 C |
 LOC_CF2 :                     0CF2 C |  LOC_CF9 :                     0CF9 C |
 LOC_D09 :                     0D09 C |  LOC_D37 :                     0D37 C |
 LOC_D39 :                     0D39 C |  LOC_D5F :                     0D5F C |
 LOC_D66 :                     0D66 C |  LOC_D7B :                     0D7B C |
 LOC_E8C :                     0E8C C |  LOC_E97 :                     0E97 C |
 LOC_EA3 :                     0EA3 C |  LOC_FA8 :                     0FA8 C |
*MACEXP :                         7 - |  MODUL1 :                        14 - |
*MOMCPU :                      80DC - | *MOMCPUNAME :            "Z80UNDOC" - |
 MON11VER :                    "11" - |  MONVER :                       800 C |
 MS30 :                         11D C |  MS301 :                        121 C |
*NAMELEN :                       28 - | *NESTMAX :                      100 - |
 NMI :                         1817 C |  NOTAST :                       0D6 C |
 OUTCH :                         10 C |  OUTCHOFF :                     4B5 C |
 OUTCHON :                      4B9 C |  OUTCHON1 :                     4BB C |
 OUTHEX :                       183 C |  OUTHEX1 :                      18C C |
 OUTHEX2 :                      197 C |  OUTHL :                        19A C |
 O_00 :                         32E C |  O_BELL :                       387 C |
 O_CLLN :                       375 C |  O_CLS :                        365 C |
 O_CLSC :                       36B C |  O_CR :                         39A C |
 O_CUD :                        38F C |  O_CUL :                        38C C |
 O_CUR :                        327 C |  O_CUU :                        395 C |
 O_DEL :                        3A8 C |  O_HOME :                       3A3 C |
 O_INS :                        3B8 C |  O_SETC :                       3A0 C |
 O_SOL :                        381 C |  O_TAB :                        3D7 C |
 O_ZS :                         2F0 C | *PADDING :                        1 - |
 PARA :                         4CA C |  PIEP :                          9B C |
 PIO2CA :                        0A - |  PIO2CB :                        0B - |
 PIO2DA :                         8 - | *PIO2DB :                         9 - |
*PIO2EPROM :                     0F - |  PIO3A :                        0FC - |
 PIO3AS :                       0FE - |  PIO3B :                        0FD - |
 PIO3BS :                       0FF - |  PIOCA :                          6 - |
 PIOCB :                          7 - |  PIODA :                          4 - |
 PIODB :                          5 - |  PKO1 :                        0F1F C |
 POSCNT :                      1856 C |  PRNST :                         18 C |
 PROMPTTEST :                   738 C |  PUT :                           20 C |
 PUT_LENGTH :                   81E C |  P_COLKDO :                       0 - |
 P_SETCOL :                       0 - | *Q_KO20 :                      0A31 C |
*Q_KO21 :                      0A37 C |  RAM :                         1800 - |
 RAMEND :                     0FFFF - |  REGPC :                       1875 C |
 REGSP :                       1877 C | *RELAXED :                        0 - |
 REPEAT :                      1857 C |  RGET :                         7A3 C |
 RINCH :                        0A5 C |  RINCH1 :                       0B3 C |
 RINCH2 :                       0BD C |  RINCH3 :                       0C1 C |
 RINCH4 :                       0C3 C |  RINCH5 :                       0CA C |
 ROM :                            0 - |  ROUTCH :                        2B C |
 ROUTCH0 :                      0E4 C |  ROUTCH2 :                      0EF C |
 ROUTCH3 :                      0FB C |  ROUTCH4 :                      0FF C |
 ROUTCH5 :                      113 C |  RPRNST :                       4AA C |
 RPRNST1 :                      4AC C |  RPUT :                         2CF C |
 RPUT1 :                        2D2 C |  SAVE0_HD :                     9BE C |
 SA_LO_BYT :                   18B3 C |  SCROLL :                       3DC C |
 SCROLL1 :                      3E3 C |  SCROLL2 :                      3F6 C |
 SETCOLOR :                    0FC8 C |  SETCOLOR1 :                   0FCA C |
 SOIL :                        181A C |  SUB_1A5 :                      1A5 C |
*SUB_38 :                        38 C |  SUB_6A0 :                      6A0 C |
 SUB_6BB :                      6BB C |  SUB_784 :                      784 C |
 SUB_787 :                      787 C |  SUB_7BC :                      7BC C |
 SUB_80F :                      80F C |  SUB_95B :                      95B C |
 SUB_9A4 :                      9A4 C |  SUB_9EE :                      9EE C |
 SUB_A41 :                     0A41 C |  SUB_A43 :                     0A43 C |
 SUB_A59 :                     0A59 C |  SUB_AB7 :                     0AB7 C |
 SUB_BB9 :                     0BB9 C |  SUB_E84 :                     0E84 C |
 SUB_E86 :                     0E86 C |  SUB_F9F :                     0F9F C |
*SV_RST :                       220 C |  SYN1 :                         6F7 C |
 SYN2 :                         6FF C |  SYN2A :                        702 C |
 SYN3 :                         714 C |  SYN4 :                         71F C |
 SYNC :                         6F4 C |  SYSSK :                       1856 - |
 TABIO :                       0AD8 C |  TACOD :                       1822 C |
*TAST1 :                        29B C |  TAST2 :                        2A0 C |
*TAST3 :                        2AE C |  TAST4 :                        2BB C |
 TAST5 :                        2BD C |  TAST6 :                        2C3 C |
 TAST7 :                        2C5 C |  TASTE :                        116 C |
*TBH6 :                        0BD4 C | *TBLOAD :                      0C81 C |
*TBSAVE :                      0BF7 C | *TB_AUS :                      0A31 C |
*TB_EIN :                      0A37 C | *TIME :                   "8:22:42" - |
 TOHEX :                       0EC8 C |  TOHEX1 :                      0ED2 C |
 TOHEX2 :                      0EDC C |  TON1 :                         288 C |
 TON2 :                         290 C | *TRUE :                           1 - |
 TSTHEX :                       493 C |  TSTSCH :                      0A7B C |
 TSTSCH1 :                     0A80 C |  TSTZEI :                       484 C |
*TSTZEI1 :                      486 C |  TSTZEI2 :                      48F C |
 TSTZEI3 :                      491 C |  UNK_186E :                    186E C |
 UNK_1885 :                    1885 - |  UNK_1887 :                    1887 - |
 UNK_1889 :                    1889 - |  UNK_188B :                    188B - |
 UNK_188D :                    188D - |  UNK_189E :                    189E C |
 UNK_18B1 :                    18B1 C |  UNK_18D4 :                    18D4 C |
 UNK_18F0 :                    18F0 C |  UNK_18F3 :                    18F3 C |
 UPTAST :                       297 C |  UPTON :                        287 C |
 USBINIT :                      6D6 C | *V24IN :                       0E4C C |
 V24IN0 :                      0E4E C |  V24IN2 :                      0E5F C |
 V24IN3 :                      0E66 C |  V24IN4 :                      0E6B C |
 V24IN5 :                      0E6E C |  V24IN6 :                      0E7E C |
 V24OUT :                      0DF9 C |  V24OUT2 :                     0E17 C |
 V24OUT3 :                     0E1D C |  V24OUT5 :                     0E23 C |
 V24OUT6 :                     0E29 C |  V24OUT7 :                     0E30 C |
 V24OUT8 :                     0E35 C |  V24OUT9 :                     0E3C C |
 VCOLOR :                        0B - |  VCURSORSYMB :                   7F - |
 VERSION :                 "V11.0 " - |  VGSBPROC :                   "USB" - |
 VHDCYLS :                      3D8 - |  VHDFIRSTCYL :                    2 - |
 VHDHEADS :                      10 - |  VHDSECTORS :                    20 - |
 VKDOPROC :                   "USB" - |  WARMCOD :                     181C C |
 ZK1 :                           31 - |  ZK2 :                           2E - |
*ZKR :                           3F - |

    472 symbols
     57 unused symbols

 AS V1.42 Beta [Bld 249] - Source File Monitor11.asm - Page 3 - 3/20/2024 8:22:42


  Defined Functions:
  ------------------

BWSAT                                 | LO                                   
HI                                    |

 AS V1.42 Beta [Bld 249] - Source File Monitor11.asm - Page 4 - 3/20/2024 8:22:42


  Code Pages:
  ----------

STANDARD (0 changed characters)

1 code page

0.06 seconds assembly time

   3546 lines source file
      2 passes
      0 errors
      0 warnings
