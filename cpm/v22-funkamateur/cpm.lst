 AS V1.42 Beta [Bld 157] - Source File cpm.asm - Page 1 - 3/8/2023 15:39:33


       1/       0 :                     ;-----------------------------------------------------------------------------
       2/       0 :                     ; Mini-CP/M für den AC1 ohne Floppy (zum Reinschnuppern)
       3/       0 :                     ; mit MP-RAM-Disk 256K
       4/       0 :                     ; 08.03.2023 V.Pohlers
       5/       0 :                     ;
       6/       0 :                     ; letzte Änderung 
       7/       0 :                     ;-----------------------------------------------------------------------------
       8/       0 :                     
       9/       0 :                     		cpu	z80
      10/       0 :                     		LISTING	NOSKIPPED
      11/       0 :                     
      12/       0 :                     ;-----------------------------------------------------------------------------
      13/       0 :                     ; Speicheraufteilung
      14/       0 :                     ; RAM:
      15/       0 :                     ; 	E000 CCP
      16/       0 :                     ; 	E806 BDOS
      17/       0 :                     ;	F600 BIOS
      18/       0 :                     ; 	7000-DFFF RAM-Floppy
      19/       0 :                     
      20/       0 :                     ;-----------------------------------------------------------------------------
      21/       0 :                     
      22/       0 :                     x_align		function x, (($+x-1)/x)*x
      23/       0 :                     hi              function x, (x>>8) & 0ffh	; High-Byte
      24/       0 :                     lo              function x, x & 0ffh		; Low-Byte
      25/       0 :                     
      26/       0 :                     
      27/       0 : =0E000H             CCP		equ	0E000h		; base of ccp
      28/       0 : =0E800H             BDOS       	equ	CCP+0800h	; base of bdos
      29/       0 : =0F600H             BIOS		equ	CCP+1600h	; base of bios
      30/       0 :                     
      31/       0 :                     
      32/       0 : =3H                 IOLOC	EQU	3		;i/o definition byte.
      33/       0 : =4H                 DISKA	EQU	4		;current drive name and user number.
      34/       0 :                     
      35/       0 :                     ;-----------------------------------------------------------------------------
      36/       0 :                     ; CCP = orig. DR-CCP + 3 Zusatzbefehle (GO, LOAD, EXIT) + JP -> Jr
      37/       0 :                     ; vermutlich frühe CPA-Version
      38/       0 :                     ;-----------------------------------------------------------------------------
      39/       0 :                     ; 2 Sprünge extern in BIOS
      40/       0 :                     ;		dw 0F638h	; exit, BIOS+38
      41/       0 :                     ;		dw 0F63Bh	; load, BIOS+3B
      42/       0 :                     ;-----------------------------------------------------------------------------
      43/       0 :                     
      44/    E000 :                     		ORG	CCP
      45/    E000 :                     		;LISTING	OFF
      46/    E000 :                     		section CCP
      47/    E000 :                     		public	dircol,COMLEN,RETCOM
      48/    E000 :                     		include	ccp22_ac1.asm
(1)    1/    E000 :                     		cpu	Z80
(1)    2/    E000 :                     
(1)    3/    E000 :                     ;		TITLE	'console command processor (CCP), ver 2.0'
(1)    4/    E000 :                     ;	assembly language version of the CP/M console command processor
(1)    5/    E000 :                     ;
(1)    6/    E000 :                     ;	version 2.2 February, 1980
(1)    7/    E000 :                     ;
(1)    8/    E000 :                     ;	Copyright (c) 1976, 1977, 1978, 1979, 1980
(1)    9/    E000 :                     ;	Digital Research
(1)   10/    E000 :                     ;	Box 579, Pacific Grove,
(1)   11/    E000 :                     ;	California, 93950
(1)   12/    E000 :                     ;
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(ccp22_ac1.asm) - Page 2 - 3/8/2023 15:39:33


(1)   13/    E000 :                     ; für AS-Assembler und Z80-Menemonics V.Pohlers 08.12.2011
(1)   14/    E000 :                     
(1)   15/    E000 :                     ;FALSE		EQU	0000H
(1)   16/    E000 :                     ;TRUE		EQU	NOT FALSE
(1)   17/    E000 : =0H                 TESTING		EQU	FALSE		;true if debugging
(1)   18/    E000 :                     ;
(1)   19/    E000 :                     ;
(1)   20/    E000 :                     ;;		IF	TESTING
(1)   21/    E000 :                     ;;		ORG	3400H
(1)   22/    E000 : =0E800H             BDOSL		EQU	$+800H		;bdos location
(1)   23/    E000 :                     ;;		ELSE
(1)   24/    E000 :                     ;;		ORG	000H
(1)   25/    E000 :                     ;BDOSL		EQU	$+800H		;bdos location
(1)   26/    E000 :                     ;;		ENDIF
(1)   27/    E000 : =100H               TRAN		EQU	100H
(1)   28/    E000 : =0E000H             TRANM		EQU	$
(1)   29/    E000 : =0E000H             CCPLOC		EQU	$
(1)   30/    E000 :                     ;
(1)   31/    E000 :                     ;	********************************************************
(1)   32/    E000 :                     ;	*	Base of CCP contains the following code/data   *
(1)   33/    E000 :                     ;	*	ccp:	jmp ccpstart	(start with command)   *
(1)   34/    E000 :                     ;	*		jmp ccpclear    (start, clear command) *
(1)   35/    E000 :                     ;	*	ccp+6	127		(max command length)   *
(1)   36/    E000 :                     ;	*	ccp+7	comlen		(command length = 00)  *
(1)   37/    E000 :                     ;	*	ccp+8	' ... '		(16 blanks)	       *
(1)   38/    E000 :                     ;	********************************************************
(1)   39/    E000 :                     ;	* Normal entry is at ccp, where the command line given *
(1)   40/    E000 :                     ;	* at ccp+8 is executed automatically (normally a null  *
(1)   41/    E000 :                     ;	* command with comlen = 00).  An initializing program  *
(1)   42/    E000 :                     ;	* can be automatically loaded by storing the command   *
(1)   43/    E000 :                     ;	* at ccp+8, with the command length at ccp+7.  In this *
(1)   44/    E000 :                     ;	* case, the ccp executes the command before prompting  *
(1)   45/    E000 :                     ;	* the console for input.  Note that the command is exe-*
(1)   46/    E000 :                     ;	* cuted on both warm and cold starts.  When the command*
(1)   47/    E000 :                     ;	* line is initialized, a jump to "jmp ccpclear" dis-   *
(1)   48/    E000 :                     ;	* ables the automatic command execution.               *
(1)   49/    E000 :                     ;	********************************************************
(1)   50/    E000 :                     ;
(1)   51/    E000 : C3 5C E3            		JP	CCPSTART	;start ccp with possible initial command
(1)   52/    E003 : C3 58 E3            		JP	CCPCLEAR	;clear the command buffer
(1)   53/    E006 : 7F                  MAXLEN:		DB	127		;max buffer length
(1)   54/    E007 : 04                  COMLEN:		DB	4		;command length (filled in by dos)
(1)   55/    E008 :                     ;	(command executed initially if comlen non zero)
(1)   56/    E008 :                     COMBUF:
(1)   57/    E008 : 44 49 52 00         		DB	"DIR",0		;character fill
(1)   58/    E00C :                     		DS	128-($-COMBUF)
(1)   59/    E088 :                     		
(1)   60/    E088 :                     ;	total buffer length is 128 characters
(1)   61/    E088 : 08 E0               COMADDR:	DW	COMBUF		;address of next to char to scan
(1)   62/    E08A :                     STADDR:		DS	2		;starting address of current fillfcb request
(1)   63/    E08C :                     ;                               	
(1)   64/    E08C :                     ;;DISKA		EQU	0004H		;disk address for current disk
(1)   65/    E08C : =5H                 BDOS		EQU	0005H		;primary bdos entry point
(1)   66/    E08C : =80H                BUFF		EQU	0080H		;default buffer
(1)   67/    E08C : =5CH                FCB		EQU	005CH		;default file control block
(1)   68/    E08C :                     ;                               	
(1)   69/    E08C : =1H                 RCHARF		EQU	1		;read character function
(1)   70/    E08C : =2H                 PCHARF		EQU	2		;print character function
(1)   71/    E08C : =9H                 PBUFF		EQU	9		;print buffer function
(1)   72/    E08C : =0AH                RBUFF		EQU	10		;read buffer function
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(ccp22_ac1.asm) - Page 3 - 3/8/2023 15:39:33


(1)   73/    E08C : =0BH                BREAKF		EQU	11		;break key function
(1)   74/    E08C : =0CH                LIFTF		EQU	12		;lift head function (no operation)
(1)   75/    E08C : =0DH                INITF		EQU	13		;initialize bdos function
(1)   76/    E08C : =0EH                SELF		EQU	14		;select disk function
(1)   77/    E08C : =0FH                OPENF		EQU	15		;open file function
(1)   78/    E08C : =10H                CLOSEF		EQU	16		;close file function
(1)   79/    E08C : =11H                SEARF		EQU	17		;search for file function
(1)   80/    E08C : =12H                SEARNF		EQU	18		;search for next file function
(1)   81/    E08C : =13H                DELF		EQU	19		;delete file function
(1)   82/    E08C : =14H                DREADF		EQU	20		;disk read function
(1)   83/    E08C : =15H                DWRITF		EQU	21		;disk write function
(1)   84/    E08C : =16H                MAKEF		EQU	22		;file make function
(1)   85/    E08C : =17H                RENF		EQU	23		;rename file function
(1)   86/    E08C : =18H                LOGF		EQU	24		;return login vector
(1)   87/    E08C : =19H                CSELF		EQU	25		;return currently selected drive number
(1)   88/    E08C : =1AH                DMAF		EQU	26		;set dma address
(1)   89/    E08C : =20H                USERF		EQU	32		;set user number
(1)   90/    E08C :                     ;                               	
(1)   91/    E08C :                     ;	special fcb flags       	
(1)   92/    E08C : =9H                 ROFILE		EQU	9		;read only file
(1)   93/    E08C : =0AH                SYSFILE		EQU	10		;system file flag
(1)   94/    E08C :                     ;                               	
(1)   95/    E08C :                     ;	special characters      	
(1)   96/    E08C : =0DH                CR		EQU	13		;carriage return
(1)   97/    E08C : =0AH                LF		EQU	10		;line feed
(1)   98/    E08C : =5FH                LA		EQU	5FH		;left arrow
(1)   99/    E08C : =1AH                EOFILE		EQU	1AH		;end of file
(1)  100/    E08C :                     ;
(1)  101/    E08C :                     ;	utility procedures
(1)  102/    E08C :                     PRINTCHAR:
(1)  103/    E08C : 5F                  		LD	E,A
(1)  104/    E08D : 0E 02               		LD	C,PCHARF
(1)  105/    E08F : C3 05 00            		JP	BDOS
(1)  106/    E092 :                     ;
(1)  107/    E092 :                     PRINTBC:
(1)  108/    E092 :                     ;print character, but save b,c registers
(1)  109/    E092 : C5                  		PUSH	BC
(1)  110/    E093 : CD 8C E0            		CALL	PRINTCHAR
(1)  111/    E096 : C1                  		POP	BC
(1)  112/    E097 : C9                  		RET
(1)  113/    E098 :                     ;
(1)  114/    E098 :                     CRLF:
(1)  115/    E098 : 3E 0D               		LD	A,CR
(1)  116/    E09A : CD 92 E0            		CALL	PRINTBC
(1)  117/    E09D : 3E 0A               		LD	A,LF
(1)  118/    E09F : 18 F1               		Jr	PRINTBC
(1)  119/    E0A1 :                     ;
(1)  120/    E0A1 :                     BLANK:
(1)  121/    E0A1 : 3E 20               		LD	A,' '
(1)  122/    E0A3 : 18 ED               		Jr	PRINTBC
(1)  123/    E0A5 :                     ;
(1)  124/    E0A5 :                     PRINT:		;print string starting at b,c until next 00 entry
(1)  125/    E0A5 : C5                  		PUSH	BC
(1)  126/    E0A6 : CD 98 E0            		CALL	CRLF
(1)  127/    E0A9 : E1                  		POP	HL		;now print the string
(1)  128/    E0AA : 7E                  PRIN0:		LD	A,(HL)  	
(1)  129/    E0AB : B7                  		OR	A       	
(1)  130/    E0AC : C8                  		RET	Z		;stop on 00
(1)  131/    E0AD : 23                  		INC	HL      	
(1)  132/    E0AE : E5                  		PUSH	HL		;ready for next
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(ccp22_ac1.asm) - Page 4 - 3/8/2023 15:39:33


(1)  133/    E0AF : CD 8C E0            		CALL	PRINTCHAR
(1)  134/    E0B2 : E1                  		POP	HL		;character printed
(1)  135/    E0B3 : 18 F5               		Jr	PRIN0		;for another character
(1)  136/    E0B5 :                     ;
(1)  137/    E0B5 :                     INITIALIZE:
(1)  138/    E0B5 : 0E 0D               		LD	C,INITF
(1)  139/    E0B7 : C3 05 00            		JP	BDOS
(1)  140/    E0BA :                     ;
(1)  141/    E0BA :                     SELECT:
(1)  142/    E0BA : 5F                  		LD	E,A
(1)  143/    E0BB : 0E 0E               		LD	C,SELF
(1)  144/    E0BD : C3 05 00            		JP	BDOS
(1)  145/    E0C0 :                     ;
(1)  146/    E0C0 :                     BDOS_INR:
(1)  147/    E0C0 : CD 05 00            		CALL	BDOS
(1)  148/    E0C3 : 32 F7 E7            		LD	(DCNT),A
(1)  149/    E0C6 : 3C                  		INC	A
(1)  150/    E0C7 : C9                  		RET
(1)  151/    E0C8 :                     ;
(1)  152/    E0C8 :                     OPEN:		;open the file given by d,e
(1)  153/    E0C8 : 0E 0F               		LD	C,OPENF
(1)  154/    E0CA : 18 F4               		Jr	BDOS_INR
(1)  155/    E0CC :                     ;
(1)  156/    E0CC :                     OPENC:		;open comfcb
(1)  157/    E0CC : AF                  		XOR	A
(1)  158/    E0CD : 32 F6 E7            		LD	(COMREC),A	;clear next record to read
(1)  159/    E0D0 : 11 D6 E7            		LD	DE,COMFCB
(1)  160/    E0D3 : 18 F3               		Jr	OPEN
(1)  161/    E0D5 :                     ;
(1)  162/    E0D5 :                     CLOSE:		;close the file given by d,e
(1)  163/    E0D5 : 0E 10               		LD	C,CLOSEF
(1)  164/    E0D7 : 18 E7               		Jr	BDOS_INR
(1)  165/    E0D9 :                     ;
(1)  166/    E0D9 :                     SEARCH:		;search for the file given by d,e
(1)  167/    E0D9 : 0E 11               		LD	C,SEARF
(1)  168/    E0DB : 18 E3               		Jr	BDOS_INR
(1)  169/    E0DD :                     ;
(1)  170/    E0DD :                     SEARCHN:
(1)  171/    E0DD :                     ;search for the next occurrence of the file given by d,e
(1)  172/    E0DD : 0E 12               		LD	C,SEARNF
(1)  173/    E0DF : 18 DF               		Jr	BDOS_INR
(1)  174/    E0E1 :                     ;
(1)  175/    E0E1 :                     SEARCHCOM:
(1)  176/    E0E1 :                     ;search for comfcb file
(1)  177/    E0E1 : 11 D6 E7            		LD	DE,COMFCB
(1)  178/    E0E4 : C3 D9 E0            		JP	SEARCH
(1)  179/    E0E7 :                     ;
(1)  180/    E0E7 :                     DELETE:		;delete the file given by d,e
(1)  181/    E0E7 : 0E 13               		LD	C,DELF
(1)  182/    E0E9 : C3 05 00            		JP	BDOS
(1)  183/    E0EC :                     ;
(1)  184/    E0EC :                     BDOS_COND:
(1)  185/    E0EC : CD 05 00            		CALL	BDOS
(1)  186/    E0EF : B7                  		OR	A
(1)  187/    E0F0 : C9                  		RET
(1)  188/    E0F1 :                     ;
(1)  189/    E0F1 :                     DISKREAD:
(1)  190/    E0F1 :                     ;read the next record from the file given by d,e
(1)  191/    E0F1 : 0E 14               		LD	C,DREADF
(1)  192/    E0F3 : C3 EC E0            		JP	BDOS_COND
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(ccp22_ac1.asm) - Page 5 - 3/8/2023 15:39:33


(1)  193/    E0F6 :                     ;
(1)  194/    E0F6 :                     DISKREADC:
(1)  195/    E0F6 :                     ;read the comfcb file
(1)  196/    E0F6 : 11 D6 E7            		LD	DE,COMFCB
(1)  197/    E0F9 : C3 F1 E0            		JP	DISKREAD
(1)  198/    E0FC :                     ;
(1)  199/    E0FC :                     DISKWRITE:
(1)  200/    E0FC :                     ;write the next record to the file given by d,e
(1)  201/    E0FC : 0E 15               		LD	C,DWRITF
(1)  202/    E0FE : C3 EC E0            		JP	BDOS_COND
(1)  203/    E101 :                     ;
(1)  204/    E101 :                     MAKE:		;create the file given by d,e
(1)  205/    E101 : 0E 16               		LD	C,MAKEF
(1)  206/    E103 : C3 C0 E0            		JP	BDOS_INR
(1)  207/    E106 :                     ;
(1)  208/    E106 :                     RENAM:		;rename the file given by d,e
(1)  209/    E106 : 0E 17               		LD	C,RENF
(1)  210/    E108 : C3 05 00            		JP	BDOS
(1)  211/    E10B :                     ;
(1)  212/    E10B :                     GETUSER:
(1)  213/    E10B :                     ;return current user code in a
(1)  214/    E10B : 1E FF               		LD	E,0FFH		;drop through to setuser
(1)  215/    E10D :                     ;
(1)  216/    E10D :                     SETUSER:
(1)  217/    E10D : 0E 20               		LD	C,USERF
(1)  218/    E10F : C3 05 00            		JP	BDOS		;sets user number
(1)  219/    E112 :                     ;
(1)  220/    E112 :                     SAVEUSER:
(1)  221/    E112 :                     ;save user#/disk# before possible ^c or transient
(1)  222/    E112 : CD 0B E1            		CALL	GETUSER		;code to a
(1)  223/    E115 : 87                  		ADD	A,A
(1)  224/    E116 : 87                  		ADD	A,A
(1)  225/    E117 : 87                  		ADD	A,A
(1)  226/    E118 : 87                  		ADD	A,A		;rot left
(1)  227/    E119 : 21 F8 E7            		LD	HL,CDISK
(1)  228/    E11C : B6                  		OR	(HL)		;4b=user, 4b=disk
(1)  229/    E11D : 32 04 00            		LD	(DISKA),A	;stored away in memory for later
(1)  230/    E120 : C9                  		RET
(1)  231/    E121 :                     ;
(1)  232/    E121 :                     SETDISKA:
(1)  233/    E121 : 3A F8 E7            		LD	A,(CDISK)
(1)  234/    E124 : 32 04 00            		LD	(DISKA),A	;user/disk
(1)  235/    E127 : C9                  		RET
(1)  236/    E128 :                     ;
(1)  237/    E128 :                     TRANSLATE:
(1)  238/    E128 :                     ;translate character in register A to upper case
(1)  239/    E128 : FE 61               		CP	61H
(1)  240/    E12A : D8                  		RET	C		;return if below lower case a
(1)  241/    E12B : FE 7B               		CP	7BH
(1)  242/    E12D : D0                  		RET	NC		;return if above lower case z
(1)  243/    E12E : E6 5F               		AND	5FH
(1)  244/    E130 : C9                  		RET			;translated to upper case
(1)  245/    E131 :                     ;
(1)  246/    E131 :                     READCOM:
(1)  247/    E131 :                     ;read the next command into the command buffer
(1)  248/    E131 :                     ;check for submit file
(1)  249/    E131 : 3A B4 E7            		LD	A,(SUBMIT)
(1)  250/    E134 : B7                  		OR	A
(1)  251/    E135 : CA 8E E1            		JP	Z,NOSUB
(1)  252/    E138 :                     ;scanning a submit file
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(ccp22_ac1.asm) - Page 6 - 3/8/2023 15:39:33


(1)  253/    E138 :                     ;change drives to open and read the file
(1)  254/    E138 : 3A F8 E7            		LD	A,(CDISK)
(1)  255/    E13B : B7                  		OR	A
(1)  256/    E13C : 3E 00               		LD	A,0
(1)  257/    E13E : C4 BA E0            		CALL	NZ,SELECT
(1)  258/    E141 :                     ;have to open again in case xsub present
(1)  259/    E141 : 11 B5 E7            		LD	DE,SUBFCB
(1)  260/    E144 : CD C8 E0            		CALL	OPEN
(1)  261/    E147 : CA 8E E1            		JP	Z,NOSUB		;skip if no sub
(1)  262/    E14A : 3A C4 E7            		LD	A,(SUBRC)
(1)  263/    E14D : 3D                  		DEC	A		;read last record(s) first
(1)  264/    E14E : 32 D5 E7            		LD	(SUBCR),A	;current record to read
(1)  265/    E151 : 11 B5 E7            		LD	DE,SUBFCB
(1)  266/    E154 : CD F1 E0            		CALL	DISKREAD	;end of file if last record
(1)  267/    E157 : C2 8E E1            		JP	NZ,NOSUB
(1)  268/    E15A :                     ;disk read is ok, transfer to combuf
(1)  269/    E15A : 11 07 E0            		LD	DE,COMLEN
(1)  270/    E15D : 21 80 00            		LD	HL,BUFF
(1)  271/    E160 : 06 80               		LD	B,128
(1)  272/    E162 : CD 48 E4            		CALL	MOVE0
(1)  273/    E165 :                     ;line is transferred, close the file with a
(1)  274/    E165 :                     ;deleted record
(1)  275/    E165 : 21 C3 E7            		LD	HL,SUBMOD
(1)  276/    E168 : 36 00               		LD	(HL),0		;clear fwflag
(1)  277/    E16A : 23                  		INC	HL
(1)  278/    E16B : 35                  		DEC	(HL)		;one less record
(1)  279/    E16C : 11 B5 E7            		LD	DE,SUBFCB
(1)  280/    E16F : CD D5 E0            		CALL	CLOSE
(1)  281/    E172 : CA 8E E1            		JP	Z,NOSUB
(1)  282/    E175 :                     ;close went ok, return to original drive
(1)  283/    E175 : 3A F8 E7            		LD	A,(CDISK)
(1)  284/    E178 : B7                  		OR	A
(1)  285/    E179 : C4 BA E0            		CALL	NZ,SELECT
(1)  286/    E17C :                     ;print to the 00
(1)  287/    E17C : 21 08 E0            		LD	HL,COMBUF
(1)  288/    E17F : CD AA E0            		CALL	PRIN0
(1)  289/    E182 : CD BA E1            		CALL	BREAK_KEY
(1)  290/    E185 : CA 9F E1            		JP	Z,NOREAD
(1)  291/    E188 : CD D5 E1            		CALL	DEL_SUB
(1)  292/    E18B : C3 82 E3            		JP	CCP		;break key depressed
(1)  293/    E18E :                     ;
(1)  294/    E18E :                     NOSUB:		;no submit file
(1)  295/    E18E : CD D5 E1            		CALL	DEL_SUB
(1)  296/    E191 :                     ;translate to upper case, store zero at end
(1)  297/    E191 : CD 12 E1            		CALL	SAVEUSER	;user # save in case control c
(1)  298/    E194 : 0E 0A               		LD	C,RBUFF
(1)  299/    E196 : 11 06 E0            		LD	DE,MAXLEN
(1)  300/    E199 : CD 05 00            		CALL	BDOS
(1)  301/    E19C : CD 21 E1            		CALL	SETDISKA	;no control c, so restore diska
(1)  302/    E19F :                     NOREAD:		;enter here from submit file
(1)  303/    E19F :                     ;set the last character to zero for later scans
(1)  304/    E19F : 21 07 E0            		LD	HL,COMLEN
(1)  305/    E1A2 : 46                  		LD	B,(HL)		;length is in b
(1)  306/    E1A3 : 23                  READCOM0:	INC	HL
(1)  307/    E1A4 : 78                  		LD	A,B
(1)  308/    E1A5 : B7                  		OR	A		;end of scan?
(1)  309/    E1A6 : CA B2 E1            		JP	Z,READCOM1
(1)  310/    E1A9 : 7E                  		LD	A,(HL)		;get character and translate
(1)  311/    E1AA : CD 28 E1            		CALL	TRANSLATE
(1)  312/    E1AD : 77                  		LD	(HL),A
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(ccp22_ac1.asm) - Page 7 - 3/8/2023 15:39:33


(1)  313/    E1AE : 05                  		DEC	B
(1)  314/    E1AF : C3 A3 E1            		JP	READCOM0
(1)  315/    E1B2 :                     ;
(1)  316/    E1B2 :                     READCOM1:	;end of scan, h,l address end of command
(1)  317/    E1B2 : 77                  		LD	(HL),A		;store a zero
(1)  318/    E1B3 : 21 08 E0            		LD	HL,COMBUF
(1)  319/    E1B6 : 22 88 E0            		LD	(COMADDR),HL	;ready to scan to zero
(1)  320/    E1B9 : C9                  		RET
(1)  321/    E1BA :                     ;
(1)  322/    E1BA :                     BREAK_KEY:
(1)  323/    E1BA :                     ;check for a character ready at the console
(1)  324/    E1BA : 0E 0B               		LD	C,BREAKF
(1)  325/    E1BC : CD 05 00            		CALL	BDOS
(1)  326/    E1BF : B7                  		OR	A
(1)  327/    E1C0 : C8                  		RET	Z
(1)  328/    E1C1 : 0E 01               		LD	C,RCHARF
(1)  329/    E1C3 : CD 05 00            		CALL	BDOS		;character cleared
(1)  330/    E1C6 : B7                  		OR	A
(1)  331/    E1C7 : C9                  		RET
(1)  332/    E1C8 :                     ;
(1)  333/    E1C8 :                     CSELECT:
(1)  334/    E1C8 :                     ;get the currently selected drive number to reg-A
(1)  335/    E1C8 : 0E 19               		LD	C,CSELF
(1)  336/    E1CA : C3 05 00            		JP	BDOS
(1)  337/    E1CD :                     ;
(1)  338/    E1CD :                     SETDMABUFF:
(1)  339/    E1CD :                     ;set default buffer dma address
(1)  340/    E1CD : 11 80 00            		LD	DE,BUFF	;(drop through)
(1)  341/    E1D0 :                     ;
(1)  342/    E1D0 :                     SETDMA:
(1)  343/    E1D0 :                     ;set dma address to d,e
(1)  344/    E1D0 : 0E 1A               		LD	C,DMAF
(1)  345/    E1D2 : C3 05 00            		JP	BDOS
(1)  346/    E1D5 :                     ;
(1)  347/    E1D5 :                     DEL_SUB:
(1)  348/    E1D5 :                     ;delete the submit file, and set submit flag to false
(1)  349/    E1D5 : 21 B4 E7            		LD	HL,SUBMIT
(1)  350/    E1D8 : 7E                  		LD	A,(HL)
(1)  351/    E1D9 : B7                  		OR	A
(1)  352/    E1DA : C8                  		RET	Z		;return if no sub file
(1)  353/    E1DB : 36 00               		LD	(HL),0		;submit flag is set to false
(1)  354/    E1DD : AF                  		XOR	A	
(1)  355/    E1DE : CD BA E0            		CALL	SELECT		;on drive a to erase file
(1)  356/    E1E1 : 11 B5 E7            		LD	DE,SUBFCB
(1)  357/    E1E4 : CD E7 E0            		CALL	DELETE
(1)  358/    E1E7 : 3A F8 E7            		LD	A,(CDISK)
(1)  359/    E1EA : C3 BA E0            		JP	SELECT		;back to original drive
(1)  360/    E1ED :                     ;
(1)  361/    E1ED :                     SERIALIZE:
(1)  362/    E1ED :                     ;check serialization
(1)  363/    E1ED : 11 2C E3            		LD	DE,SERIAL
(1)  364/    E1F0 : 21 00 E8            		LD	HL,BDOSL
(1)  365/    E1F3 : 06 06               		LD	B,6		;check six bytes
(1)  366/    E1F5 : 1A                  SER0:		LD	A,(DE)
(1)  367/    E1F6 : BE                  		CP	(HL)
(1)  368/    E1F7 : C2 D5 E3            		JP	NZ,BADSERIAL
(1)  369/    E1FA : 13                  		INC	DE
(1)  370/    E1FB : 23                  		INC	HL
(1)  371/    E1FC : 05                  		DEC	B
(1)  372/    E1FD : C2 F5 E1            		JP	NZ,SER0
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(ccp22_ac1.asm) - Page 8 - 3/8/2023 15:39:33


(1)  373/    E200 : C9                  		RET	;serial number is ok
(1)  374/    E201 :                     ;
(1)  375/    E201 :                     COMERR:
(1)  376/    E201 :                     ;error in command string starting at position
(1)  377/    E201 :                     ;'staddr' and ending with first delimiter
(1)  378/    E201 : CD 98 E0            		CALL	CRLF		;space to next line
(1)  379/    E204 : 2A 8A E0            		LD	HL,(STADDR)	;h,l address first to print
(1)  380/    E207 :                     COMERR0:	;print characters until blank or zero
(1)  381/    E207 : 7E                  		LD	A,(HL)
(1)  382/    E208 : FE 20               		CP	' '
(1)  383/    E20A : CA 1A E2            		JP	Z,COMERR1	; not blank
(1)  384/    E20D : B7                  		OR	A
(1)  385/    E20E : CA 1A E2            		JP	Z,COMERR1	; not zero, so print it
(1)  386/    E211 : E5                  		PUSH	HL
(1)  387/    E212 : CD 8C E0            		CALL	PRINTCHAR
(1)  388/    E215 : E1                  		POP	HL
(1)  389/    E216 : 23                  		INC	HL
(1)  390/    E217 : C3 07 E2            		JP	COMERR0		; for another character
(1)  391/    E21A :                     COMERR1:	;print question mark,and delete sub file
(1)  392/    E21A : 3E 3F               		LD	A,'?'
(1)  393/    E21C : CD 8C E0            		CALL	PRINTCHAR
(1)  394/    E21F : CD 98 E0            		CALL	CRLF
(1)  395/    E222 : CD D5 E1            		CALL	DEL_SUB
(1)  396/    E225 : C3 82 E3            		JP	CCP		;restart with next command
(1)  397/    E228 :                     ;
(1)  398/    E228 :                     ; fcb scan and fill subroutine (entry is at fillfcb below)
(1)  399/    E228 :                     ;fill the comfcb, indexed by A (0 or 16)
(1)  400/    E228 :                     ;subroutines
(1)  401/    E228 :                     DELIM:		;look for a delimiter
(1)  402/    E228 : 1A                  		LD	A,(DE)
(1)  403/    E229 : B7                  		OR	A
(1)  404/    E22A : C8                  		RET	Z		;not the last element
(1)  405/    E22B : FE 20               		CP	' '
(1)  406/    E22D : DA 01 E2            		JP	C,COMERR	;non graphic
(1)  407/    E230 : C8                  		RET	Z		;treat blank as delimiter
(1)  408/    E231 : FE 3D               		CP	'='
(1)  409/    E233 : C8                  		RET	Z
(1)  410/    E234 : FE 5F               		CP	LA
(1)  411/    E236 : C8                  		RET	Z		;left arrow
(1)  412/    E237 : FE 2E               		CP	'.'
(1)  413/    E239 : C8                  		RET	Z
(1)  414/    E23A : FE 3A               		CP	':'
(1)  415/    E23C : C8                  		RET	Z
(1)  416/    E23D : FE 3B               		CP	';'
(1)  417/    E23F : C8                  		RET	Z
(1)  418/    E240 : FE 3C               		CP	'<'
(1)  419/    E242 : C8                  		RET	Z
(1)  420/    E243 : FE 3E               		CP	'>'
(1)  421/    E245 : C8                  		RET	Z
(1)  422/    E246 : C9                  		RET			;delimiter not found
(1)  423/    E247 :                     ;
(1)  424/    E247 :                     DEBLANK:	;deblank the input line
(1)  425/    E247 : 1A                  		LD	A,(DE)
(1)  426/    E248 : B7                  		OR	A
(1)  427/    E249 : C8                  		RET	Z		;treat end of line as blank
(1)  428/    E24A : FE 20               		CP	' '
(1)  429/    E24C : C0                  		RET	NZ
(1)  430/    E24D : 13                  		INC	DE
(1)  431/    E24E : C3 47 E2            		JP	DEBLANK
(1)  432/    E251 :                     ;
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(ccp22_ac1.asm) - Page 9 - 3/8/2023 15:39:33


(1)  433/    E251 :                     ADDH:		;add a to h,l
(1)  434/    E251 : 85                  		ADD	A,L
(1)  435/    E252 : 6F                  		LD	L,A
(1)  436/    E253 : D0                  		RET	NC
(1)  437/    E254 : 24                  		INC	H
(1)  438/    E255 : C9                  		RET
(1)  439/    E256 :                     ;
(1)  440/    E256 :                     FILLFCB0:
(1)  441/    E256 :                     ;equivalent to fillfcb(0)
(1)  442/    E256 : 3E 00               		LD	A,0
(1)  443/    E258 :                     ;
(1)  444/    E258 :                     FILLFCB:
(1)  445/    E258 : 21 D6 E7            		LD	HL,COMFCB
(1)  446/    E25B : CD 51 E2            		CALL	ADDH
(1)  447/    E25E : E5                  		PUSH	HL
(1)  448/    E25F : E5                  		PUSH	HL		;fcb rescanned at end
(1)  449/    E260 : AF                  		XOR	A
(1)  450/    E261 : 32 F9 E7            		LD	(SDISK),A	;clear selected disk (in case A:...)
(1)  451/    E264 : 2A 88 E0            		LD	HL,(COMADDR)
(1)  452/    E267 : EB                  		EX	DE,HL		;command address in d,e
(1)  453/    E268 : CD 47 E2            		CALL	DEBLANK		;to first non-blank character
(1)  454/    E26B : EB                  		EX	DE,HL
(1)  455/    E26C : 22 8A E0            		LD	(STADDR),HL	;in case of errors
(1)  456/    E26F : EB                  		EX	DE,HL
(1)  457/    E270 : E1                  		POP	HL		;d,e has command, h,l has fcb address
(1)  458/    E271 :                     ;look for preceding file name A: B: ...
(1)  459/    E271 : 1A                  		LD	A,(DE)
(1)  460/    E272 : B7                  		OR	A
(1)  461/    E273 : CA 81 E2            		JP	Z,SETCUR0	;use current disk if empty command
(1)  462/    E276 : DE 40               		SBC	A,'A'-1
(1)  463/    E278 : 47                  		LD	B,A		;disk name held in b if : follows
(1)  464/    E279 : 13                  		INC	DE
(1)  465/    E27A : 1A                  		LD	A,(DE)
(1)  466/    E27B : FE 3A               		CP	':'
(1)  467/    E27D : CA 88 E2            		JP	Z,SETDSK	;set disk name if :
(1)  468/    E280 :                     ;
(1)  469/    E280 :                     SETCUR		;set current disk
(1)  470/    E280 : 1B                  		DEC	DE		;back to first character of command
(1)  471/    E281 :                     SETCUR0:
(1)  472/    E281 : 3A F8 E7            		LD	A,(CDISK)
(1)  473/    E284 : 77                  		LD	(HL),A
(1)  474/    E285 : C3 8E E2            		JP	SETNAME
(1)  475/    E288 :                     ;
(1)  476/    E288 :                     SETDSK		;set disk to name in register b
(1)  477/    E288 : 78                  		LD	A,B
(1)  478/    E289 : 32 F9 E7            		LD	(SDISK),A	;mark as disk selected
(1)  479/    E28C : 70                  		LD	(HL),B
(1)  480/    E28D : 13                  		INC	DE		;past the :
(1)  481/    E28E :                     ;
(1)  482/    E28E :                     SETNAME		;set the file name field
(1)  483/    E28E : 06 08               		LD	B,8		;file name length (max)
(1)  484/    E290 : CD 28 E2            SETNAM0:	CALL	DELIM
(1)  485/    E293 : CA B1 E2            		JP	Z,PADNAME	;not a delimiter
(1)  486/    E296 : 23                  		INC	HL
(1)  487/    E297 : FE 2A               		CP	'*'
(1)  488/    E299 : C2 A1 E2            		JP	NZ,SETNAM1	;must be ?'s
(1)  489/    E29C : 36 3F               		LD	(HL),'?'
(1)  490/    E29E : C3 A3 E2            		JP	SETNAM2		;to dec count
(1)  491/    E2A1 :                     ;
(1)  492/    E2A1 : 77                  SETNAM1:	LD	(HL),A		;store character to fcb
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(ccp22_ac1.asm) - Page 10 - 3/8/2023 15:39:33


(1)  493/    E2A2 : 13                  		INC	DE
(1)  494/    E2A3 : 05                  SETNAM2:	DEC	B		;count down length
(1)  495/    E2A4 : C2 90 E2            		JP	NZ,SETNAM0
(1)  496/    E2A7 :                     ;
(1)  497/    E2A7 :                     ;end of name, truncate remainder
(1)  498/    E2A7 : CD 28 E2            TRNAME:		CALL	DELIM
(1)  499/    E2AA : CA B8 E2            		JP	Z,SETTY		;set type field if delimiter
(1)  500/    E2AD : 13                  		INC	DE
(1)  501/    E2AE : C3 A7 E2            		JP	TRNAME
(1)  502/    E2B1 :                     ;
(1)  503/    E2B1 : 23                  PADNAME:	INC	HL
(1)  504/    E2B2 : 36 20               		LD	(HL),' '
(1)  505/    E2B4 : 05                  		DEC	B
(1)  506/    E2B5 : C2 B1 E2            		JP	NZ,PADNAME
(1)  507/    E2B8 :                     ;
(1)  508/    E2B8 :                     SETTY		;set the type field
(1)  509/    E2B8 : 06 03               		LD	B,3
(1)  510/    E2BA : FE 2E               		CP	'.'
(1)  511/    E2BC : C2 E1 E2            		JP	NZ,PADTY	;skip the type field if no .
(1)  512/    E2BF : 13                  		INC	DE		;past the ., to the file type field
(1)  513/    E2C0 :                     SETTY0		;set the field from the command buffer
(1)  514/    E2C0 : CD 28 E2            		CALL	DELIM
(1)  515/    E2C3 : CA E1 E2            		JP	Z,PADTY
(1)  516/    E2C6 : 23                  		INC	HL
(1)  517/    E2C7 : FE 2A               		CP	'*'
(1)  518/    E2C9 : C2 D1 E2            		JP	NZ,SETTY1
(1)  519/    E2CC : 36 3F               		LD	(HL),'?'	;since * specified
(1)  520/    E2CE : C3 D3 E2            		JP	SETTY2
(1)  521/    E2D1 :                     ;
(1)  522/    E2D1 :                     SETTY1:		;not a *, so copy to type field
(1)  523/    E2D1 : 77                  		LD	(HL),A
(1)  524/    E2D2 : 13                  		INC	DE
(1)  525/    E2D3 :                     SETTY2:		;decrement count and go again
(1)  526/    E2D3 : 05                  		DEC	B
(1)  527/    E2D4 : C2 C0 E2            		JP	NZ,SETTY0
(1)  528/    E2D7 :                     ;
(1)  529/    E2D7 :                     ;end of type field, truncate
(1)  530/    E2D7 :                     TRTYP:		;truncate type field
(1)  531/    E2D7 : CD 28 E2            		CALL	DELIM
(1)  532/    E2DA : CA E8 E2            		JP	Z,EFILL
(1)  533/    E2DD : 13                  		INC	DE
(1)  534/    E2DE : C3 D7 E2            		JP	TRTYP
(1)  535/    E2E1 :                     ;
(1)  536/    E2E1 :                     PADTY:		;pad the type field with blanks
(1)  537/    E2E1 : 23                  		INC	HL
(1)  538/    E2E2 : 36 20               		LD	(HL),' '
(1)  539/    E2E4 : 05                  		DEC	B
(1)  540/    E2E5 : C2 E1 E2            		JP	NZ,PADTY
(1)  541/    E2E8 :                     ;
(1)  542/    E2E8 :                     EFILL:		;end of the filename/filetype fill, save command address
(1)  543/    E2E8 :                     ;fill the remaining fields for the fcb
(1)  544/    E2E8 : 06 03               		LD	B,3
(1)  545/    E2EA : 23                  EFILL0:		INC	HL
(1)  546/    E2EB : 36 00               		LD	(HL),0
(1)  547/    E2ED : 05                  		DEC	B
(1)  548/    E2EE : C2 EA E2            		JP	NZ,EFILL0
(1)  549/    E2F1 : EB                  		EX	DE,HL
(1)  550/    E2F2 : 22 88 E0            		LD	(COMADDR),HL	;set new starting point
(1)  551/    E2F5 :                     ;
(1)  552/    E2F5 :                     ;recover the start address of the fcb and count ?'s
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(ccp22_ac1.asm) - Page 11 - 3/8/2023 15:39:33


(1)  553/    E2F5 : E1                  		POP	HL
(1)  554/    E2F6 : 01 0B 00            		LD	BC,11		;b=0, c=8+3
(1)  555/    E2F9 : 23                  SCNQ:		INC	HL
(1)  556/    E2FA : 7E                  		LD	A,(HL)
(1)  557/    E2FB : FE 3F               		CP	'?'
(1)  558/    E2FD : C2 01 E3            		JP	NZ,SCNQ0
(1)  559/    E300 :                     ;? found, count it in b
(1)  560/    E300 : 04                  		INC	B
(1)  561/    E301 : 0D                  SCNQ0:		DEC	C
(1)  562/    E302 : C2 F9 E2            		JP	NZ,SCNQ
(1)  563/    E305 :                     ;
(1)  564/    E305 :                     ;number of ?'s in c, move to a and return with flags set
(1)  565/    E305 : 78                  		LD	A,B
(1)  566/    E306 : B7                  		OR	A
(1)  567/    E307 : C9                  		RET
(1)  568/    E308 :                     ;
(1)  569/    E308 :                     INTVEC:
(1)  570/    E308 :                     ;intrinsic function names (all are four characters)
(1)  571/    E308 : 44 49 52 20         		DB	"DIR "
(1)  572/    E30C : 45 52 41 20         		DB	"ERA "
(1)  573/    E310 : 54 59 50 45         		DB	"TYPE"
(1)  574/    E314 : 53 41 56 45         		DB	"SAVE"
(1)  575/    E318 : 52 45 4E 20         		DB	"REN "
(1)  576/    E31C : 55 53 45 52         		DB	"USER"
(1)  577/    E320 : 47 4F 20 20         		DB	"GO  "
(1)  578/    E324 : 4C 4F 41 44         		DB	"LOAD"
(1)  579/    E328 : 45 58 49 54         		DB	"EXIT"
(1)  580/    E32C : =9H                 INTLEN		EQU	($-INTVEC)/4	;intrinsic function length
(1)  581/    E32C : 02 08 00 08 05 05   SERIAL:		DB	2,8,0,8,5,5
(1)  582/    E332 :                     ;
(1)  583/    E332 :                     ;
(1)  584/    E332 :                     INTRINSIC:
(1)  585/    E332 :                     ;look for intrinsic functions (comfcb has been filled)
(1)  586/    E332 : 21 08 E3            		LD	HL,INTVEC
(1)  587/    E335 : 0E 00               		LD	C,0		;c counts intrinsics as scanned
(1)  588/    E337 : 79                  INTRIN0:	LD	A,C
(1)  589/    E338 : FE 09               		CP	INTLEN		;done with scan?
(1)  590/    E33A : D0                  		RET	NC
(1)  591/    E33B :                     ;no, more to scan
(1)  592/    E33B : 11 D7 E7            		LD	DE,COMFCB+1	;beginning of name
(1)  593/    E33E : 06 04               		LD	B,4		;length of match is in b
(1)  594/    E340 : 1A                  INTRIN1:	LD	A,(DE)
(1)  595/    E341 : BE                  		CP	(HL)		;match?
(1)  596/    E342 : 20 0C               		Jr	NZ,INTRIN2	;skip if no match
(1)  597/    E344 : 13                  		INC	DE
(1)  598/    E345 : 23                  		INC	HL
(1)  599/    E346 : 05                  		DEC	B
(1)  600/    E347 : 20 F7               		Jr	NZ,INTRIN1	;loop while matching
(1)  601/    E349 :                     ;
(1)  602/    E349 :                     ;complete match on name, check for blank in fcb
(1)  603/    E349 : 1A                  		LD	A,(DE)
(1)  604/    E34A : FE 20               		CP	' '
(1)  605/    E34C : 20 06               		Jr	NZ,INTRIN3	;otherwise matched
(1)  606/    E34E : 79                  		LD	A,C
(1)  607/    E34F : C9                  		RET			;with intrinsic number in a
(1)  608/    E350 :                     ;
(1)  609/    E350 :                     INTRIN2:	;mismatch, move to end of intrinsic
(1)  610/    E350 : 23                  		INC	HL
(1)  611/    E351 : 05                  		DEC	B
(1)  612/    E352 : 20 FC               		Jr	NZ,INTRIN2
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(ccp22_ac1.asm) - Page 12 - 3/8/2023 15:39:33


(1)  613/    E354 :                     ;
(1)  614/    E354 :                     INTRIN3:	;try next intrinsic
(1)  615/    E354 : 0C                  		INC	C		;to next intrinsic number
(1)  616/    E355 : C3 37 E3            		JP	INTRIN0		;for another round
(1)  617/    E358 :                     ;
(1)  618/    E358 :                     CCPCLEAR:
(1)  619/    E358 :                     ;clear the command buffer
(1)  620/    E358 : AF                  		XOR	A
(1)  621/    E359 : 32 07 E0            		LD	(COMLEN),A
(1)  622/    E35C :                     ;drop through to start ccp
(1)  623/    E35C :                     CCPSTART:
(1)  624/    E35C :                     ;enter here from boot loader
(1)  625/    E35C : 31 B4 E7            		LD	SP,STACK
(1)  626/    E35F : C5                  		PUSH	BC		;save initial disk number
(1)  627/    E360 :                     ;(high order 4bits=user code, low 4bits=disk#)
(1)  628/    E360 : 79                  		LD	A,C
(1)  629/    E361 : 1F                  		RRA
(1)  630/    E362 : 1F                  		RRA
(1)  631/    E363 : 1F                  		RRA
(1)  632/    E364 : 1F                  		RRA
(1)  633/    E365 : E6 0F               		AND	0FH		;user code
(1)  634/    E367 : 5F                  		LD	E,A
(1)  635/    E368 : CD 0D E1            		CALL	SETUSER		;user code selected
(1)  636/    E36B :                     ;initialize for this user, get $ flag
(1)  637/    E36B : CD B5 E0            		CALL	INITIALIZE	;0ffh in accum if $ file present
(1)  638/    E36E : 32 B4 E7            		LD	(SUBMIT),A	;submit flag set if $ file present
(1)  639/    E371 : C1                  		POP	BC		;recall user code and disk number
(1)  640/    E372 : 79                  		LD	A,C
(1)  641/    E373 : E6 0F               		AND	0FH		;disk number in accumulator
(1)  642/    E375 : 32 F8 E7            		LD	(CDISK),A	;clears user code nibble
(1)  643/    E378 : CD BA E0            		CALL	SELECT		;proper disk is selected, now check sub files
(1)  644/    E37B :                     ;check for initial command
(1)  645/    E37B : 3A 07 E0            		LD	A,(COMLEN)
(1)  646/    E37E : B7                  		OR	A
(1)  647/    E37F : C2 98 E3            		JP	NZ,CCP0		;assume typed already
(1)  648/    E382 :                     ;
(1)  649/    E382 :                     CCP:
(1)  650/    E382 :                     ;enter here on each command or error condition
(1)  651/    E382 : 31 B4 E7            		LD	SP,STACK
(1)  652/    E385 : CD 98 E0            		CALL	CRLF		;print d> prompt, where d is disk name
(1)  653/    E388 : CD C8 E1            		CALL	CSELECT		;get current disk number
(1)  654/    E38B : C6 41               		ADD	A,'A'
(1)  655/    E38D : CD 8C E0            		CALL	PRINTCHAR
(1)  656/    E390 : 3E 3E               		LD	A,'>'
(1)  657/    E392 : CD 8C E0            		CALL	PRINTCHAR
(1)  658/    E395 : CD 31 E1            		CALL	READCOM		;command buffer filled
(1)  659/    E398 :                     CCP0:		;(enter here from initialization with command full)
(1)  660/    E398 : 11 80 00            		LD	DE,BUFF
(1)  661/    E39B : CD D0 E1            		CALL	SETDMA		;default dma address at buff
(1)  662/    E39E : CD C8 E1            		CALL	CSELECT
(1)  663/    E3A1 : 32 F8 E7            		LD	(CDISK),A	;current disk number saved
(1)  664/    E3A4 : CD 56 E2            		CALL	FILLFCB0	;command fcb filled
(1)  665/    E3A7 : C4 01 E2            		CALL	NZ,COMERR	;the name cannot be an ambiguous reference
(1)  666/    E3AA : 3A F9 E7            		LD	A,(SDISK)
(1)  667/    E3AD : B7                  		OR	A
(1)  668/    E3AE : C2 AE E6            		JP	NZ,USERFUNC
(1)  669/    E3B1 :                     ;check for an intrinsic function
(1)  670/    E3B1 : CD 32 E3            		CALL	INTRINSIC
(1)  671/    E3B4 : 21 C1 E3            		LD	HL,JMPTAB	;index is in the accumulator
(1)  672/    E3B7 : 5F                  		LD	E,A
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(ccp22_ac1.asm) - Page 13 - 3/8/2023 15:39:33


(1)  673/    E3B8 : 16 00               		LD	D,0
(1)  674/    E3BA : 19                  		ADD	HL,DE
(1)  675/    E3BB : 19                  		ADD	HL,DE		;index in d,e
(1)  676/    E3BC : 7E                  		LD	A,(HL)
(1)  677/    E3BD : 23                  		INC	HL
(1)  678/    E3BE : 66                  		LD	H,(HL)
(1)  679/    E3BF : 6F                  		LD	L,A
(1)  680/    E3C0 : E9                  		JP	(HL)
(1)  681/    E3C1 :                     ;pc changes to the proper intrinsic or user function
(1)  682/    E3C1 :                     JMPTAB:
(1)  683/    E3C1 : 7D E4               		DW	DIRECT		;directory search
(1)  684/    E3C3 : 25 E5               		DW	ERASE		;file erase
(1)  685/    E3C5 : 63 E5               		DW	TYPE		;type file
(1)  686/    E3C7 : B3 E5               		DW	SAVE		;save memory image
(1)  687/    E3C9 : 16 E6               		DW	RENAME		;file rename
(1)  688/    E3CB : 94 E6               		DW	USER		;user number
(1)  689/    E3CD : 0F E7               		dw GO
(1)  690/    E3CF : 3B F6               		dw BIOS+003Bh	; load
(1)  691/    E3D1 : 38 F6               		dw BIOS+0038h	; exit
(1)  692/    E3D3 : AE E6               		DW	USERFUNC	;user-defined function
(1)  693/    E3D5 :                     
(1)  694/    E3D5 :                     BADSERIAL:
(1)  695/    E3D5 : 21 F3 76            		LD	HL,76F3h	; DI OR (HALT SHL 8)
(1)  696/    E3D8 : 22 00 E0            		LD	(CCPLOC),HL
(1)  697/    E3DB : 21 00 E0            		LD	HL,CCPLOC
(1)  698/    E3DE : E9                  		JP	(HL)
(1)  699/    E3DF :                     ;
(1)  700/    E3DF :                     ;
(1)  701/    E3DF :                     ;utility subroutines for intrinsic handlers
(1)  702/    E3DF :                     READERR:
(1)  703/    E3DF :                     ;print the read error message
(1)  704/    E3DF : 01 E5 E3            		LD	BC,RDMSG
(1)  705/    E3E2 : C3 A5 E0            		JP	PRINT
(1)  706/    E3E5 : 52 45 41 44 20 45   RDMSG:		DB	"READ ERROR",0
                    52 52 4F 52 00    
(1)  707/    E3F0 :                     ;
(1)  708/    E3F0 :                     NOFILE:
(1)  709/    E3F0 :                     ;print no file message
(1)  710/    E3F0 : 01 F6 E3            		LD	BC,NOFMSG
(1)  711/    E3F3 : C3 A5 E0            		JP	PRINT
(1)  712/    E3F6 : 4E 4F 20 46 49 4C   NOFMSG:		DB	"NO FILE",0
                    45 00             
(1)  713/    E3FE :                     ;
(1)  714/    E3FE :                     GETNUMBER:	;read a number from the command line
(1)  715/    E3FE : CD 56 E2            		CALL	FILLFCB0	;should be number
(1)  716/    E401 : 3A F9 E7            		LD	A,(SDISK)
(1)  717/    E404 : B7                  		OR	A
(1)  718/    E405 : C2 01 E2            		JP	NZ,COMERR	;cannot be prefixed
(1)  719/    E408 :                     ;convert the byte value in comfcb to binary
(1)  720/    E408 : 21 D7 E7            		LD	HL,COMFCB+1
(1)  721/    E40B : 01 0B 00            		LD	BC,11		;(b=0, c=11)
(1)  722/    E40E :                     ;value accumulated in b, c counts name length to zero
(1)  723/    E40E : 7E                  CONV0:		LD	A,(HL)
(1)  724/    E40F : FE 20               		CP	' '
(1)  725/    E411 : CA 39 E4            		JP	Z,CONV1
(1)  726/    E414 :                     ;more to scan, convert char to binary and add
(1)  727/    E414 : 23                  		INC	HL
(1)  728/    E415 : D6 30               		SUB	'0'
(1)  729/    E417 : FE 0A               		CP	10
(1)  730/    E419 : D2 01 E2            		JP	NC,COMERR	;valid?
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(ccp22_ac1.asm) - Page 14 - 3/8/2023 15:39:33


(1)  731/    E41C : 57                  		LD	D,A		;save value
(1)  732/    E41D : 78                  		LD	A,B		;mult by 10
(1)  733/    E41E : E6 E0               		AND	11100000B
(1)  734/    E420 : C2 01 E2            		JP	NZ,COMERR
(1)  735/    E423 : 78                  		LD	A,B		;recover value
(1)  736/    E424 : 07                  		RLCA
(1)  737/    E425 : 07                  		RLCA
(1)  738/    E426 : 07                  		RLCA	;*8
(1)  739/    E427 : 80                  		ADD	A,B
(1)  740/    E428 : DA 01 E2            		JP	C,COMERR
(1)  741/    E42B : 80                  		ADD	A,B
(1)  742/    E42C : DA 01 E2            		JP	C,COMERR	;*8+*2 = *10
(1)  743/    E42F : 82                  		ADD	A,D
(1)  744/    E430 : DA 01 E2            		JP	C,COMERR	;+digit
(1)  745/    E433 : 47                  		LD	B,A
(1)  746/    E434 : 0D                  		DEC	C
(1)  747/    E435 : C2 0E E4            		JP	NZ,CONV0	;for another digit
(1)  748/    E438 : C9                  		RET
(1)  749/    E439 :                     CONV1:		;end of digits, check for all blanks
(1)  750/    E439 : 7E                  		LD	A,(HL)
(1)  751/    E43A : FE 20               		CP	' '
(1)  752/    E43C : C2 01 E2            		JP	NZ,COMERR	;blanks?
(1)  753/    E43F : 23                  		INC	HL
(1)  754/    E440 : 0D                  		DEC	C
(1)  755/    E441 : C2 39 E4            		JP	NZ,CONV1
(1)  756/    E444 : 78                  		LD	A,B		;recover value
(1)  757/    E445 : C9                  		RET
(1)  758/    E446 :                     ;
(1)  759/    E446 :                     MOVENAME:
(1)  760/    E446 :                     ;move 3 characters from h,l to d,e addresses
(1)  761/    E446 : 06 03               		LD	B,3
(1)  762/    E448 : 7E                  MOVE0:		LD	A,(HL)
(1)  763/    E449 : 12                  		LD	(DE),A
(1)  764/    E44A : 23                  		INC	HL
(1)  765/    E44B : 13                  		INC	DE
(1)  766/    E44C : 05                  		DEC	B
(1)  767/    E44D : C2 48 E4            		JP	NZ,MOVE0
(1)  768/    E450 : C9                  		RET
(1)  769/    E451 :                     ;
(1)  770/    E451 :                     ADDHCF:		;buff + a + c to h,l followed by fetch
(1)  771/    E451 : 21 80 00            		LD	HL,BUFF
(1)  772/    E454 : 81                  		ADD	A,C
(1)  773/    E455 : CD 51 E2            		CALL	ADDH
(1)  774/    E458 : 7E                  		LD	A,(HL)
(1)  775/    E459 : C9                  		RET
(1)  776/    E45A :                     ;
(1)  777/    E45A :                     SETDISK:
(1)  778/    E45A :                     ;change disks for this command, if requested
(1)  779/    E45A : AF                  		XOR	A
(1)  780/    E45B : 32 D6 E7            		LD	(COMFCB),A	;clear disk name from fcb
(1)  781/    E45E : 3A F9 E7            		LD	A,(SDISK)
(1)  782/    E461 : B7                  		OR	A
(1)  783/    E462 : C8                  		RET	Z		;no action if not specified
(1)  784/    E463 : 3D                  		DEC	A
(1)  785/    E464 : 21 F8 E7            		LD	HL,CDISK
(1)  786/    E467 : BE                  		CP	(HL)
(1)  787/    E468 : C8                  		RET	Z		;already selected
(1)  788/    E469 : C3 BA E0            		JP	SELECT
(1)  789/    E46C :                     ;
(1)  790/    E46C :                     RESETDISK:
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(ccp22_ac1.asm) - Page 15 - 3/8/2023 15:39:33


(1)  791/    E46C :                     ;return to original disk after command
(1)  792/    E46C : 3A F9 E7            		LD	A,(SDISK)
(1)  793/    E46F : B7                  		OR	A
(1)  794/    E470 : C8                  		RET	Z		;no action if not selected
(1)  795/    E471 : 3D                  		DEC	A
(1)  796/    E472 : 21 F8 E7            		LD	HL,CDISK
(1)  797/    E475 : BE                  		CP	(HL)
(1)  798/    E476 : C8                  		RET	Z		;same disk
(1)  799/    E477 : 3A F8 E7            		LD	A,(CDISK)
(1)  800/    E47A : C3 BA E0            		JP	SELECT
(1)  801/    E47D :                     ;
(1)  802/    E47D :                     ;individual intrinsics follow
(1)  803/    E47D :                     DIRECT:
(1)  804/    E47D :                     ;directory search
(1)  805/    E47D : CD 56 E2            		CALL	FILLFCB0	;comfcb gets file name
(1)  806/    E480 : CD 5A E4            		CALL	SETDISK		;change disk drives if requested
(1)  807/    E483 : 21 D7 E7            		LD	HL,COMFCB+1
(1)  808/    E486 : 7E                  		LD	A,(HL)		;may be empty request
(1)  809/    E487 : FE 20               		CP	' '
(1)  810/    E489 : C2 95 E4            		JP	NZ,DIR1		;skip fill of ??? if not blank
(1)  811/    E48C :                     ;set comfcb to all ??? for current disk
(1)  812/    E48C : 06 0B               		LD	B,11		;length of fill ????????.???
(1)  813/    E48E : 36 3F               DIR0:		LD	(HL),'?'
(1)  814/    E490 : 23                  		INC	HL
(1)  815/    E491 : 05                  		DEC	B
(1)  816/    E492 : C2 8E E4            		JP	NZ,DIR0
(1)  817/    E495 :                     ;not a blank request, must be in comfcb
(1)  818/    E495 : 1E 00               DIR1:		LD	E,0
(1)  819/    E497 : D5                  		PUSH	DE		;E counts directory entries
(1)  820/    E498 : CD E1 E0            		CALL	SEARCHCOM	;first one has been found
(1)  821/    E49B : CC F0 E3            		CALL	Z,NOFILE	;not found message
(1)  822/    E49E : CA 21 E5            DIR2:		JP	Z,ENDIR
(1)  823/    E4A1 :                     ;found, but may be system file
(1)  824/    E4A1 : 3A F7 E7            		LD	A,(DCNT)	;get the location of the element
(1)  825/    E4A4 : 0F                  		RRCA
(1)  826/    E4A5 : 0F                  		RRCA
(1)  827/    E4A6 : 0F                  		RRCA
(1)  828/    E4A7 : E6 60               		AND	1100000B
(1)  829/    E4A9 : 4F                  		LD	C,A
(1)  830/    E4AA :                     ;c contains base index into buff for dir entry
(1)  831/    E4AA : 3E 0A               		LD	A,SYSFILE
(1)  832/    E4AC : CD 51 E4            		CALL	ADDHCF		;value to A
(1)  833/    E4AF : 17                  		RLA
(1)  834/    E4B0 : DA 15 E5            		JP	C,DIR6		;skip if system file
(1)  835/    E4B3 :                     ;c holds index into buffer
(1)  836/    E4B3 :                     ;another fcb found, new line?
(1)  837/    E4B3 : D1                  		POP	DE
(1)  838/    E4B4 : 7B                  		LD	A,E
(1)  839/    E4B5 : 1C                  		INC	E
(1)  840/    E4B6 : D5                  		PUSH	DE
(1)  841/    E4B7 :                     ;e=0,1,2,3,...new line if mod 4 = 0
(1)  842/    E4B7 : E6 03               		AND	11B
(1)  843/    E4B9 : =0E4B8H             dircol:		equ $-1		
(1)  844/    E4B9 : F5                  		PUSH	AF		;and save the test
(1)  845/    E4BA : C2 D2 E4            		JP	NZ,DIRHDR0	;header on current line
(1)  846/    E4BD : CD 98 E0            		CALL	CRLF
(1)  847/    E4C0 : C5                  		PUSH	BC
(1)  848/    E4C1 : CD C8 E1            		CALL	CSELECT
(1)  849/    E4C4 : C1                  		POP	BC
(1)  850/    E4C5 :                     ;current disk in A
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(ccp22_ac1.asm) - Page 16 - 3/8/2023 15:39:33


(1)  851/    E4C5 : C6 41               		ADD	A,'A'
(1)  852/    E4C7 : CD 92 E0            		CALL	PRINTBC
(1)  853/    E4CA : 3E 3A               		LD	A,':'
(1)  854/    E4CC : CD 92 E0            		CALL	PRINTBC
(1)  855/    E4CF : C3 DA E4            		JP	DIRHDR1		;skip current line hdr
(1)  856/    E4D2 : CD A1 E0            DIRHDR0:	CALL	BLANK		;after last one
(1)  857/    E4D5 : 3E 3A               		LD	A,':'
(1)  858/    E4D7 : CD 92 E0            		CALL	PRINTBC
(1)  859/    E4DA :                     DIRHDR1:
(1)  860/    E4DA : CD A1 E0            		CALL	BLANK
(1)  861/    E4DD :                     ;compute position of name in buffer
(1)  862/    E4DD : 06 01               		LD	B,1		;start with first character of name
(1)  863/    E4DF : 78                  DIR3:		LD	A,B     	
(1)  864/    E4E0 : CD 51 E4            		CALL	ADDHCF		;buff+a+c fetched
(1)  865/    E4E3 : E6 7F               		AND	7FH		;mask flags
(1)  866/    E4E5 :                     ;may delete trailing blanks     	
(1)  867/    E4E5 : FE 20               		CP	' '     	
(1)  868/    E4E7 : C2 FF E4            		JP	NZ,DIR4		;check for blank type
(1)  869/    E4EA : F1                  		POP	AF      	
(1)  870/    E4EB : F5                  		PUSH	AF		;may be 3rd item
(1)  871/    E4EC : FE 03               		CP	3       	
(1)  872/    E4EE : C2 FD E4            		JP	NZ,DIRB		;place blank at end if not
(1)  873/    E4F1 : 3E 09               		LD	A,9     	
(1)  874/    E4F3 : CD 51 E4            		CALL	ADDHCF		;first char of type
(1)  875/    E4F6 : E6 7F               		AND	7FH
(1)  876/    E4F8 : FE 20               		CP	' '
(1)  877/    E4FA : CA 14 E5            		JP	Z,DIR5
(1)  878/    E4FD :                     ;not a blank in the file type field
(1)  879/    E4FD : 3E 20               DIRB:		LD	A,' '		;restore trailing filename chr
(1)  880/    E4FF :                     DIR4:                           	
(1)  881/    E4FF : CD 92 E0            		CALL	PRINTBC		;char printed
(1)  882/    E502 : 04                  		INC	B       	
(1)  883/    E503 : 78                  		LD	A,B     	
(1)  884/    E504 : FE 0C               		CP	12      	
(1)  885/    E506 : D2 14 E5            		JP	NC,DIR5 	
(1)  886/    E509 :                     ;check for break between names  	
(1)  887/    E509 : FE 09               		CP	9       	
(1)  888/    E50B : C2 DF E4            		JP	NZ,DIR3		;for another char
(1)  889/    E50E :                     ;print a blank between names
(1)  890/    E50E : CD A1 E0            		CALL	BLANK
(1)  891/    E511 : C3 DF E4            		JP	DIR3
(1)  892/    E514 :                     ;
(1)  893/    E514 :                     DIR5:		;end of current entry
(1)  894/    E514 : F1                  		POP	AF		;discard the directory counter (mod 4)
(1)  895/    E515 : CD BA E1            DIR6:		CALL	BREAK_KEY	;check for interrupt at keyboard
(1)  896/    E518 : C2 21 E5            		JP	NZ,ENDIR	;abort directory search
(1)  897/    E51B : CD DD E0            		CALL	SEARCHN
(1)  898/    E51E : C3 9E E4            		JP	DIR2		;for another entry
(1)  899/    E521 :                     ENDIR:		;end of directory scan
(1)  900/    E521 : D1                  		POP	DE		;discard directory counter
(1)  901/    E522 : C3 8F E7            		JP	RETCOM
(1)  902/    E525 :                     ;
(1)  903/    E525 :                     ;
(1)  904/    E525 :                     ERASE:
(1)  905/    E525 : CD 56 E2            		CALL	FILLFCB0	;cannot be all ???'s
(1)  906/    E528 : FE 0B               		CP	11
(1)  907/    E52A : C2 48 E5            		JP	NZ,ERASEFILE
(1)  908/    E52D :                     ;erasing all of the disk
(1)  909/    E52D : 01 58 E5            		LD	BC,ERMSG
(1)  910/    E530 : CD A5 E0            		CALL	PRINT
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(ccp22_ac1.asm) - Page 17 - 3/8/2023 15:39:33


(1)  911/    E533 : CD 31 E1            		CALL	READCOM
(1)  912/    E536 : 21 07 E0            		LD	HL,COMLEN
(1)  913/    E539 : 35                  		DEC	(HL)
(1)  914/    E53A : C2 82 E3            		JP	NZ,CCP		;bad input
(1)  915/    E53D : 23                  		INC	HL
(1)  916/    E53E : 7E                  		LD	A,(HL)
(1)  917/    E53F : FE 59               		CP	'Y'
(1)  918/    E541 : C2 82 E3            		JP	NZ,CCP
(1)  919/    E544 :                     ;ok, erase the entire diskette
(1)  920/    E544 : 23                  		INC	HL
(1)  921/    E545 : 22 88 E0            		LD	(COMADDR),HL	;otherwise error at retcom
(1)  922/    E548 :                     ERASEFILE:
(1)  923/    E548 : CD 5A E4            		CALL	SETDISK
(1)  924/    E54B : 11 D6 E7            		LD	DE,COMFCB
(1)  925/    E54E : CD E7 E0            		CALL	DELETE
(1)  926/    E551 : 3C                  		INC	A		;255 returned if not found
(1)  927/    E552 : CC F0 E3            		CALL	Z,NOFILE	;no file message if so
(1)  928/    E555 : C3 8F E7            		JP	RETCOM
(1)  929/    E558 :                     ;
(1)  930/    E558 : 41 4C 4C 20 28 59   ERMSG:		DB	"ALL (Y/N)?",0
                    2F 4E 29 3F 00    
(1)  931/    E563 :                     ;
(1)  932/    E563 :                     TYPE:
(1)  933/    E563 : CD 56 E2            		CALL	FILLFCB0
(1)  934/    E566 : C2 01 E2            		JP	NZ,COMERR	;don't allow ?'s in file name
(1)  935/    E569 : CD 5A E4            		CALL	SETDISK
(1)  936/    E56C : CD CC E0            		CALL	OPENC		;open the file
(1)  937/    E56F : CA AD E5            		JP	Z,TYPERR	;zero flag indicates not found
(1)  938/    E572 :                     ;file opened, read 'til eof
(1)  939/    E572 : CD 98 E0            		CALL	CRLF
(1)  940/    E575 : 21 FA E7            		LD	HL,BPTR
(1)  941/    E578 : 36 FF               		LD	(HL),255	;read first buffer
(1)  942/    E57A :                     TYPE0:		;loop on bptr
(1)  943/    E57A : 21 FA E7            		LD	HL,BPTR
(1)  944/    E57D : 7E                  		LD	A,(HL)
(1)  945/    E57E : FE 80               		CP	128		;end buffer
(1)  946/    E580 : DA 8D E5            		JP	C,TYPE1
(1)  947/    E583 : E5                  		PUSH	HL		;carry if 0,1,...,127
(1)  948/    E584 :                     ;read another buffer full
(1)  949/    E584 : CD F6 E0            		CALL	DISKREADC
(1)  950/    E587 : E1                  		POP	HL		;recover address of bptr
(1)  951/    E588 : C2 A6 E5            		JP	NZ,TYPEOF	;hard end of file
(1)  952/    E58B : AF                  		XOR	A
(1)  953/    E58C : 77                  		LD	(HL),A		;bptr = 0
(1)  954/    E58D :                     TYPE1:		;read character at bptr and print
(1)  955/    E58D : 34                  		INC	(HL)		;bptr = bptr + 1
(1)  956/    E58E : 21 80 00            		LD	HL,BUFF
(1)  957/    E591 : CD 51 E2            		CALL	ADDH		;h,l addresses char
(1)  958/    E594 : 7E                  		LD	A,(HL)
(1)  959/    E595 : FE 1A               		CP	EOFILE
(1)  960/    E597 : CA 8F E7            		JP	Z,RETCOM
(1)  961/    E59A : CD 8C E0            		CALL	PRINTCHAR
(1)  962/    E59D : CD BA E1            		CALL	BREAK_KEY
(1)  963/    E5A0 : C2 8F E7            		JP	NZ,RETCOM	;abort if break
(1)  964/    E5A3 : C3 7A E5            		JP	TYPE0		;for another character
(1)  965/    E5A6 :                     ;
(1)  966/    E5A6 :                     TYPEOF:		;end of file, check for errors
(1)  967/    E5A6 : 3D                  		DEC	A
(1)  968/    E5A7 : CA 8F E7            		JP	Z,RETCOM
(1)  969/    E5AA : CD DF E3            		CALL	READERR
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(ccp22_ac1.asm) - Page 18 - 3/8/2023 15:39:33


(1)  970/    E5AD : CD 6C E4            TYPERR:		CALL	RESETDISK
(1)  971/    E5B0 : C3 01 E2            		JP	COMERR
(1)  972/    E5B3 :                     ;
(1)  973/    E5B3 :                     SAVE:
(1)  974/    E5B3 : CD FE E3            		CALL	GETNUMBER	; value to register a
(1)  975/    E5B6 : F5                  		PUSH	AF		;save it for later
(1)  976/    E5B7 :                     ;
(1)  977/    E5B7 :                     ;should be followed by a file to save the memory image
(1)  978/    E5B7 : CD 56 E2            		CALL	FILLFCB0
(1)  979/    E5BA : C2 01 E2            		JP	NZ,COMERR	;cannot be ambiguous
(1)  980/    E5BD : CD 5A E4            		CALL	SETDISK		;may be a disk change
(1)  981/    E5C0 : 11 D6 E7            		LD	DE,COMFCB
(1)  982/    E5C3 : D5                  		PUSH	DE
(1)  983/    E5C4 : CD E7 E0            		CALL	DELETE		;existing file removed
(1)  984/    E5C7 : D1                  		POP	DE
(1)  985/    E5C8 : CD 01 E1            		CALL	MAKE		;create a new file on disk
(1)  986/    E5CB : CA 01 E6            		JP	Z,SAVERR	;no directory space
(1)  987/    E5CE : AF                  		XOR	A
(1)  988/    E5CF : 32 F6 E7            		LD	(COMREC),A	; clear next record field
(1)  989/    E5D2 : F1                  		POP	AF		;#pages to write is in a, change to #sectors
(1)  990/    E5D3 : 6F                  		LD	L,A
(1)  991/    E5D4 : 26 00               		LD	H,0
(1)  992/    E5D6 : 29                  		ADD	HL,HL
(1)  993/    E5D7 :                     
(1)  994/    E5D7 : 11 00 01            		LD	DE,TRAN		;h,l is sector count, d,e is load address
(1)  995/    E5DA :                     SAVE0:		;check for sector count zero
(1)  996/    E5DA : 7C                  		LD	A,H
(1)  997/    E5DB : B5                  		OR	L
(1)  998/    E5DC : CA F7 E5            		JP	Z,SAVE1		;may be completed
(1)  999/    E5DF : 2B                  		DEC	HL		;sector count = sector count - 1
(1) 1000/    E5E0 : E5                  		PUSH	HL		;save it for next time around
(1) 1001/    E5E1 : 21 80 00            		LD	HL,128  	
(1) 1002/    E5E4 : 19                  		ADD	HL,DE   	
(1) 1003/    E5E5 : E5                  		PUSH	HL		;next dma address saved
(1) 1004/    E5E6 : CD D0 E1            		CALL	SETDMA		;current dma address set
(1) 1005/    E5E9 : 11 D6 E7            		LD	DE,COMFCB
(1) 1006/    E5EC : CD FC E0            		CALL	DISKWRITE
(1) 1007/    E5EF : D1                  		POP	DE
(1) 1008/    E5F0 : E1                  		POP	HL		;dma address, sector count
(1) 1009/    E5F1 : C2 01 E6            		JP	NZ,SAVERR	;may be disk full case
(1) 1010/    E5F4 : C3 DA E5            		JP	SAVE0		;for another sector
(1) 1011/    E5F7 :                     ;
(1) 1012/    E5F7 :                     SAVE1:		;end of dump, close the file
(1) 1013/    E5F7 : 11 D6 E7            		LD	DE,COMFCB
(1) 1014/    E5FA : CD D5 E0            		CALL	CLOSE
(1) 1015/    E5FD : 3C                  		INC	A		; 255 becomes 00 if error
(1) 1016/    E5FE : C2 07 E6            		JP	NZ,RETSAVE	;for another command
(1) 1017/    E601 :                     SAVERR:		;must be full or read only disk
(1) 1018/    E601 : 01 0D E6            		LD	BC,FULLMSG
(1) 1019/    E604 : CD A5 E0            		CALL	PRINT
(1) 1020/    E607 :                     RETSAVE:
(1) 1021/    E607 :                     ;reset dma buffer
(1) 1022/    E607 : CD CD E1            		CALL	SETDMABUFF
(1) 1023/    E60A : C3 8F E7            		JP	RETCOM
(1) 1024/    E60D : 4E 4F 20 53 50 41   FULLMSG:	DB	"NO SPACE",0
                    43 45 00          
(1) 1025/    E616 :                     ;
(1) 1026/    E616 :                     ;
(1) 1027/    E616 :                     RENAME:
(1) 1028/    E616 :                     ;rename a file on a specific disk
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(ccp22_ac1.asm) - Page 19 - 3/8/2023 15:39:33


(1) 1029/    E616 : CD 56 E2            		CALL	FILLFCB0
(1) 1030/    E619 : C2 01 E2            		JP	NZ,COMERR	;must be unambiguous
(1) 1031/    E61C : 3A F9 E7            		LD	A,(SDISK)
(1) 1032/    E61F : F5                  		PUSH	AF		;save for later compare
(1) 1033/    E620 : CD 5A E4            		CALL	SETDISK		;disk selected
(1) 1034/    E623 : CD E1 E0            		CALL	SEARCHCOM	;is new name already there?
(1) 1035/    E626 : C2 7F E6            		JP	NZ,RENERR3
(1) 1036/    E629 :                     ;file doesn't exist, move to second half of fcb
(1) 1037/    E629 : 21 D6 E7            		LD	HL,COMFCB
(1) 1038/    E62C : 11 E6 E7            		LD	DE,COMFCB+16
(1) 1039/    E62F : 06 10               		LD	B,16
(1) 1040/    E631 : CD 48 E4            		CALL	MOVE0
(1) 1041/    E634 :                     ;check for = or left arrow
(1) 1042/    E634 : 2A 88 E0            		LD	HL,(COMADDR)
(1) 1043/    E637 : EB                  		EX	DE,HL
(1) 1044/    E638 : CD 47 E2            		CALL	DEBLANK
(1) 1045/    E63B : FE 3D               		CP	'='
(1) 1046/    E63D : CA 45 E6            		JP	Z,REN1	;ok if =
(1) 1047/    E640 : FE 5F               		CP	LA
(1) 1048/    E642 : C2 79 E6            		JP	NZ,RENERR2
(1) 1049/    E645 : EB                  REN1:		EX	DE,HL
(1) 1050/    E646 : 23                  		INC	HL
(1) 1051/    E647 : 22 88 E0            		LD	(COMADDR),HL	;past delimiter
(1) 1052/    E64A :                     ;proper delimiter found
(1) 1053/    E64A : CD 56 E2            		CALL	FILLFCB0
(1) 1054/    E64D : C2 79 E6            		JP	NZ,RENERR2
(1) 1055/    E650 :                     ;check for drive conflict
(1) 1056/    E650 : F1                  		POP	AF
(1) 1057/    E651 : 47                  		LD	B,A		;previous drive number
(1) 1058/    E652 : 21 F9 E7            		LD	HL,SDISK
(1) 1059/    E655 : 7E                  		LD	A,(HL)
(1) 1060/    E656 : B7                  		OR	A
(1) 1061/    E657 : CA 5F E6            		JP	Z,REN2
(1) 1062/    E65A :                     ;drive name was specified.  same one?
(1) 1063/    E65A : B8                  		CP	B
(1) 1064/    E65B : 70                  		LD	(HL),B
(1) 1065/    E65C : C2 79 E6            		JP	NZ,RENERR2
(1) 1066/    E65F : 70                  REN2:		LD	(HL),B		;store the name in case drives switched
(1) 1067/    E660 : AF                  		XOR	A
(1) 1068/    E661 : 32 D6 E7            		LD	(COMFCB),A
(1) 1069/    E664 : CD E1 E0            		CALL	SEARCHCOM	;is old file there?
(1) 1070/    E667 : CA 73 E6            		JP	Z,RENERR1
(1) 1071/    E66A :                     ;
(1) 1072/    E66A :                     ;everything is ok, rename the file
(1) 1073/    E66A : 11 D6 E7            		LD	DE,COMFCB
(1) 1074/    E66D : CD 06 E1            		CALL	RENAM
(1) 1075/    E670 : C3 8F E7            		JP	RETCOM
(1) 1076/    E673 :                     ;
(1) 1077/    E673 :                     RENERR1:	; no file on disk
(1) 1078/    E673 : CD F0 E3            		CALL	NOFILE
(1) 1079/    E676 : C3 8F E7            		JP	RETCOM
(1) 1080/    E679 :                     RENERR2:	; ambigous reference/name conflict
(1) 1081/    E679 : CD 6C E4            		CALL	RESETDISK
(1) 1082/    E67C : C3 01 E2            		JP	COMERR
(1) 1083/    E67F :                     RENERR3:	; file already exists
(1) 1084/    E67F : 01 88 E6            		LD	BC,RENMSG
(1) 1085/    E682 : CD A5 E0            		CALL	PRINT
(1) 1086/    E685 : C3 8F E7            		JP	RETCOM
(1) 1087/    E688 : 46 49 4C 45 20 45   RENMSG:		DB	"FILE EXISTS",0
                    58 49 53 54 53 00 
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(ccp22_ac1.asm) - Page 20 - 3/8/2023 15:39:33


(1) 1088/    E694 :                     ;
(1) 1089/    E694 :                     USER:
(1) 1090/    E694 :                     ;set user number
(1) 1091/    E694 : CD FE E3            		CALL	GETNUMBER	; leaves the value in the accumulator
(1) 1092/    E697 : FE 10               		CP	16
(1) 1093/    E699 : D2 01 E2            		JP	NC,COMERR	; must be between 0 and 15
(1) 1094/    E69C : 5F                  		LD	E,A		;save for setuser call
(1) 1095/    E69D : 3A D7 E7            		LD	A,(COMFCB+1)
(1) 1096/    E6A0 : FE 20               		CP	' '
(1) 1097/    E6A2 : CA 01 E2            		JP	Z,COMERR
(1) 1098/    E6A5 : CD 0D E1            		CALL	SETUSER		;new user number set
(1) 1099/    E6A8 : C3 92 E7            		JP	ENDCOM
(1) 1100/    E6AB :                     
(1) 1101/    E6AB : C3 00 01            go100:		jp	100h
(1) 1102/    E6AE :                     ;
(1) 1103/    E6AE :                     USERFUNC:
(1) 1104/    E6AE : CD ED E1            		CALL	SERIALIZE	;check serialization
(1) 1105/    E6B1 :                     ;load user function and set up for execution
(1) 1106/    E6B1 : 3A D7 E7            		LD	A,(COMFCB+1)
(1) 1107/    E6B4 : FE 20               		CP	' '
(1) 1108/    E6B6 : C2 CD E6            		JP	NZ,USER0
(1) 1109/    E6B9 :                     ;no file name, but may be disk switch
(1) 1110/    E6B9 : 3A F9 E7            		LD	A,(SDISK)
(1) 1111/    E6BC : B7                  		OR	A
(1) 1112/    E6BD : CA 92 E7            		JP	Z,ENDCOM	;no disk name if 0
(1) 1113/    E6C0 : 3D                  		DEC	A
(1) 1114/    E6C1 : 32 F8 E7            		LD	(CDISK),A
(1) 1115/    E6C4 : CD 21 E1            		CALL	SETDISKA	;set user/disk
(1) 1116/    E6C7 : CD BA E0            		CALL	SELECT
(1) 1117/    E6CA : C3 92 E7            		JP	ENDCOM
(1) 1118/    E6CD :                     USER0:		;file name is present
(1) 1119/    E6CD : 11 DF E7            		LD	DE,COMFCB+9
(1) 1120/    E6D0 : 1A                  		LD	A,(DE)
(1) 1121/    E6D1 : FE 20               		CP	' '
(1) 1122/    E6D3 : C2 01 E2            		JP	NZ,COMERR	;type ' '
(1) 1123/    E6D6 : D5                  		PUSH	DE
(1) 1124/    E6D7 : CD 5A E4            		CALL	SETDISK
(1) 1125/    E6DA : D1                  		POP	DE
(1) 1126/    E6DB : 21 8C E7            		LD	HL,COMTYPE	;.com
(1) 1127/    E6DE : CD 46 E4            		CALL	MOVENAME	;file type is set to .com
(1) 1128/    E6E1 : CD CC E0            		CALL	OPENC
(1) 1129/    E6E4 : CA 74 E7            		JP	Z,USERER
(1) 1130/    E6E7 :                     ;file opened properly, read it into memory
(1) 1131/    E6E7 : 21 00 01            		LD	HL,TRAN		;transient program base
(1) 1132/    E6EA : E5                  LOAD0:		PUSH	HL		;save dma address
(1) 1133/    E6EB : EB                  		EX	DE,HL
(1) 1134/    E6EC : CD D0 E1            		CALL	SETDMA
(1) 1135/    E6EF : 11 D6 E7            		LD	DE,COMFCB
(1) 1136/    E6F2 : CD F1 E0            		CALL	DISKREAD
(1) 1137/    E6F5 : C2 0A E7            		JP	NZ,LOAD1
(1) 1138/    E6F8 :                     ;sector loaded, set new dma address and compare
(1) 1139/    E6F8 : E1                  		POP	HL
(1) 1140/    E6F9 : 11 80 00            		LD	DE,128
(1) 1141/    E6FC : 19                  		ADD	HL,DE
(1) 1142/    E6FD : 11 00 E0            		LD	DE,TRANM	;has the load overflowed?
(1) 1143/    E700 : 7D                  		LD	A,L
(1) 1144/    E701 : 93                  		SUB	E
(1) 1145/    E702 : 7C                  		LD	A,H
(1) 1146/    E703 : 9A                  		SBC	A,D
(1) 1147/    E704 : D2 7A E7            		JP	NC,LOADERR
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(ccp22_ac1.asm) - Page 21 - 3/8/2023 15:39:33


(1) 1148/    E707 : C3 EA E6            		JP	LOAD0		;for another sector
(1) 1149/    E70A :                     ;
(1) 1150/    E70A : E1                  LOAD1:		POP	HL
(1) 1151/    E70B : 3D                  		DEC	A
(1) 1152/    E70C : C2 7A E7            		JP	NZ,LOADERR	;end file is 1
(1) 1153/    E70F :                     GO:
(1) 1154/    E70F : CD 6C E4            		CALL	RESETDISK	;back to original disk
(1) 1155/    E712 : CD 56 E2            		CALL	FILLFCB0
(1) 1156/    E715 : 21 F9 E7            		LD	HL,SDISK
(1) 1157/    E718 : E5                  		PUSH	HL
(1) 1158/    E719 : 7E                  		LD	A,(HL)
(1) 1159/    E71A : 32 D6 E7            		LD	(COMFCB),A	;drive number set
(1) 1160/    E71D : 3E 10               		LD	A,16
(1) 1161/    E71F : CD 58 E2            		CALL	FILLFCB		;move entire fcb to memory
(1) 1162/    E722 : E1                  		POP	HL
(1) 1163/    E723 : 7E                  		LD	A,(HL)
(1) 1164/    E724 : 32 E6 E7            		LD	(COMFCB+16),A
(1) 1165/    E727 : AF                  		XOR	A
(1) 1166/    E728 : 32 F6 E7            		LD	(COMREC),A	;record number set to zero
(1) 1167/    E72B : 11 5C 00            		LD	DE,FCB
(1) 1168/    E72E : 21 D6 E7            		LD	HL,COMFCB
(1) 1169/    E731 : 06 21               		LD	B,33
(1) 1170/    E733 : CD 48 E4            		CALL	MOVE0
(1) 1171/    E736 :                     ;move command line to buff
(1) 1172/    E736 : 21 08 E0            		LD	HL,COMBUF
(1) 1173/    E739 : 7E                  BMOVE0:		LD	A,(HL)
(1) 1174/    E73A : B7                  		OR	A
(1) 1175/    E73B : CA 47 E7            		JP	Z,BMOVE1
(1) 1176/    E73E : FE 20               		CP	' '
(1) 1177/    E740 : CA 47 E7            		JP	Z,BMOVE1
(1) 1178/    E743 : 23                  		INC	HL
(1) 1179/    E744 : C3 39 E7            		JP	BMOVE0		;for another scan
(1) 1180/    E747 :                     ;first blank position found
(1) 1181/    E747 : 06 00               BMOVE1:		LD	B,0
(1) 1182/    E749 : 11 81 00            		LD	DE,BUFF+1
(1) 1183/    E74C :                     ;ready for the move
(1) 1184/    E74C : 7E                  BMOVE2:		LD	A,(HL)
(1) 1185/    E74D : 12                  		LD	(DE),A
(1) 1186/    E74E : B7                  		OR	A
(1) 1187/    E74F : CA 58 E7            		JP	Z,BMOVE3
(1) 1188/    E752 :                     ;more to move
(1) 1189/    E752 : 04                  		INC	B
(1) 1190/    E753 : 23                  		INC	HL
(1) 1191/    E754 : 13                  		INC	DE
(1) 1192/    E755 : C3 4C E7            		JP	BMOVE2
(1) 1193/    E758 :                     BMOVE3:		;b has character count
(1) 1194/    E758 : 78                  		LD	A,B
(1) 1195/    E759 : 32 80 00            		LD	(BUFF),A
(1) 1196/    E75C : CD 98 E0            		CALL	CRLF
(1) 1197/    E75F :                     ;now go to the loaded program
(1) 1198/    E75F : CD CD E1            		CALL	SETDMABUFF	;default dma
(1) 1199/    E762 : CD 12 E1            		CALL	SAVEUSER	;user code saved
(1) 1200/    E765 :                     ;low memory diska contains user code
(1) 1201/    E765 : CD 00 01            		CALL	TRAN		;gone to the loaded program
(1) 1202/    E768 : 31 B4 E7            		LD	SP,STACK	;may come back here
(1) 1203/    E76B : CD 21 E1            		CALL	SETDISKA
(1) 1204/    E76E : CD BA E0            		CALL	SELECT
(1) 1205/    E771 : C3 82 E3            		JP	CCP
(1) 1206/    E774 :                     ;
(1) 1207/    E774 :                     USERER:		;arrive here on command error
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(ccp22_ac1.asm) - Page 22 - 3/8/2023 15:39:33


(1) 1208/    E774 : CD 6C E4            		CALL	RESETDISK
(1) 1209/    E777 : C3 01 E2            		JP	COMERR
(1) 1210/    E77A :                     ;
(1) 1211/    E77A :                     LOADERR:	;cannot load the program
(1) 1212/    E77A : 01 83 E7            		LD	BC,LOADMSG
(1) 1213/    E77D : CD A5 E0            		CALL	PRINT
(1) 1214/    E780 : C3 8F E7            		JP	RETCOM
(1) 1215/    E783 : 42 41 44 20 4C 4F   LOADMSG:	DB	"BAD LOAD",0
                    41 44 00          
(1) 1216/    E78C : 43 4F 4D            COMTYPE:	DB	"COM"		;for com files
(1) 1217/    E78F :                     ;
(1) 1218/    E78F :                     ;
(1) 1219/    E78F :                     RETCOM:		;reset disk before end of command check
(1) 1220/    E78F : CD 6C E4            		CALL	RESETDISK
(1) 1221/    E792 :                     ;
(1) 1222/    E792 :                     ENDCOM:		;end of intrinsic command
(1) 1223/    E792 : CD 56 E2            		CALL	FILLFCB0	;to check for garbage at end of line
(1) 1224/    E795 : 3A D7 E7            		LD	A,(COMFCB+1)
(1) 1225/    E798 : D6 20               		SUB	' '
(1) 1226/    E79A : 21 F9 E7            		LD	HL,SDISK
(1) 1227/    E79D : B6                  		OR	(HL)
(1) 1228/    E79E :                     ;0 in accumulator if no disk selected, and blank fcb
(1) 1229/    E79E : C2 01 E2            		JP	NZ,COMERR
(1) 1230/    E7A1 : C3 82 E3            		JP	CCP
(1) 1231/    E7A4 :                     ;
(1) 1232/    E7A4 :                     ;
(1) 1233/    E7A4 :                     ;
(1) 1234/    E7A4 :                     ;	data areas
(1) 1235/    E7A4 :                     		DS	16		;8 level stack
(1) 1236/    E7B4 :                     STACK:
(1) 1237/    E7B4 :                     ;
(1) 1238/    E7B4 :                     ;	'submit' file control block
(1) 1239/    E7B4 : 00                  SUBMIT:		DB	0		;00 if no submit file, ff if submitting
(1) 1240/    E7B5 : 00 24 24 24 20 20   SUBFCB:		DB	0,"$$$     "	;file name is $$$
                    20 20 20          
(1) 1241/    E7BE : 53 55 42 00 00      		DB	"SUB",0,0	;file type is sub
(1) 1242/    E7C3 : 00                  SUBMOD:		DB	0		;module number
(1) 1243/    E7C4 :                     SUBRC:		DS	1		;record count filed
(1) 1244/    E7C5 :                     		DS	16		;disk map
(1) 1245/    E7D5 :                     SUBCR:		DS	1		;current record to read
(1) 1246/    E7D6 :                     ;
(1) 1247/    E7D6 :                     ;	command file control block
(1) 1248/    E7D6 :                     COMFCB:		DS	32		;fields filled in later
(1) 1249/    E7F6 :                     COMREC:		DS	1		;current record to read/write
(1) 1250/    E7F7 :                     DCNT:		DS	1		;disk directory count (used for error codes)
(1) 1251/    E7F8 :                     CDISK:		DS	1		;current disk
(1) 1252/    E7F9 :                     SDISK:		DS	1		;selected disk for current operation
(1) 1253/    E7FA :                     ;none=0, a=1, b=2 ...           	
(1) 1254/    E7FA :                     BPTR:		DS	1		;buffer pointer
(1) 1255/    E7FB :                     
(1) 1256/    E7FB :                     ;;	END	CCPLOC
(1) 1257/    E7FB :                     
      49/    E7FB : [CCP]               		endsection
      50/    E7FB :                     		LISTING	NOSKIPPED
      51/    E7FB :                     		
      52/    E7FB :                     ;-----------------------------------------------------------------------------
      53/    E7FB :                     ; BDOS = CPA
      54/    E7FB :                     ; frühere CPA-Version 24.08.86
      55/    E7FB :                     ;-----------------------------------------------------------------------------
      56/    E7FB :                     
 AS V1.42 Beta [Bld 157] - Source File cpm.asm - Page 23 - 3/8/2023 15:39:33


      57/    E800 :                     		org	BDOS
      58/    E800 :                     		;LISTING	OFF
      59/    E800 :                     		section BDOS
      60/    E800 :                     		include	bdos_cpa_ac1.asm
(1)    1/    E800 :                     		cpu	Z80
(1)    2/    E800 :                     ;*****************************************************************
(1)    3/    E800 :                     ;*****************************************************************
(1)    4/    E800 :                     ;**                                                             **
(1)    5/    E800 :                     ;**   B a s i c    D i s k   O p e r a t i n g   S y s t e m    **
(1)    6/    E800 :                     ;**            I n t e r f a c e   M o d u l e                   **
(1)    7/    E800 :                     ;**                                                             **
(1)    8/    E800 :                     ;*****************************************************************
(1)    9/    E800 :                     ;*****************************************************************
(1)   10/    E800 :                     ;
(1)   11/    E800 :                     ;	CP/A	Akademie der Wissenschaften der DDR
(1)   12/    E800 :                     ;		
(1)   13/    E800 :                     ;	rebuild from original Digital Research Code Comments
(1)   14/    E800 :                     ;	(Bdos Interface, Bdos, Version 2.2 Feb, 1980)
(1)   15/    E800 :                     ; 	for AS-Assembler and Z80 mnemonics 
(1)   16/    E800 :                     ;	V.Pohlers 14.02.2011
(1)   17/    E800 :                     ; 	Version vom AC1-CPM64_FA, vermutlich etwas älter
(1)   18/    E800 :                     
(1)   19/    E800 : =0FFFFH             ON		EQU	0FFFFH
(1)   20/    E800 : =0H                 OFF		EQU	00000H
(1)   21/    E800 : =0FFFFH             TEST		EQU	ON
(1)   22/    E800 :                     ;
(1)   23/    E800 :                     ;;		IF	TEST
(1)   24/    E800 :                     ;;		ORG	0CC00H+800H
(1)   25/    E800 :                     ;;		ELSE
(1)   26/    E800 :                     ;;		ORG	0800H
(1)   27/    E800 :                     ;;		ENDIF
(1)   28/    E800 :                     ;	bios value defined at end of module
(1)   29/    E800 :                     ;
(1)   30/    E800 : =20H                SSIZE		EQU	32		;32 level stack
(1)   31/    E800 :                     ;
(1)   32/    E800 :                     ;	low memory locations
(1)   33/    E800 : =0H                 REBOOT		EQU	0000H		;reboot system
(1)   34/    E800 :                     ;;IOLOC		EQU	0003H		;i/o byte location
(1)   35/    E800 :                     ;;DISKA		EQU	0004H		;disk address for current disk
(1)   36/    E800 : =6H                 BDOSA		EQU	0006H		;address field of jmp BDOS
(1)   37/    E800 :                     ;
(1)   38/    E800 :                     ;
(1)   39/    E800 :                     ;	equates for non graphic characters
(1)   40/    E800 : =3H                 CTLC		EQU	03H		;control c
(1)   41/    E800 : =5H                 CTLE		EQU	05H		;physical eol
(1)   42/    E800 : =8H                 CTLH		EQU	08H		;backspace
(1)   43/    E800 : =10H                CTLP		EQU	10H		;prnt toggle
(1)   44/    E800 : =12H                CTLR		EQU	12H		;repeat line
(1)   45/    E800 : =13H                CTLS		EQU	13H		;stop/start screen
(1)   46/    E800 : =15H                CTLU		EQU	15H		;line delete
(1)   47/    E800 : =18H                CTLX		EQU	18H		;=ctl-u
(1)   48/    E800 : =1AH                CTLZ		EQU	1AH		;end of file
(1)   49/    E800 : =7FH                RUBOUT		EQU	7FH		;char delete
(1)   50/    E800 : =9H                 TAB		EQU	09H		;tab char
(1)   51/    E800 : =0DH                CR		EQU	0DH		;carriage return
(1)   52/    E800 : =0AH                LF		EQU	0AH		;line feed
(1)   53/    E800 : =5EH                CTL		EQU	5EH		;up arrow
(1)   54/    E800 :                     ;
(1)   55/    E800 : 02 08 00 08 05 05   loc_0:		DB	2,8,0,8,5,5
(1)   56/    E806 :                     ;
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bdos_cpa_ac1.asm) - Page 24 - 3/8/2023 15:39:33


(1)   57/    E806 :                     ;	enter here from the user's program with function number in c,
(1)   58/    E806 :                     ;	and information address in d,e
(1)   59/    E806 : C3 63 E8            		JP	BDOSE		;past parameter block
(1)   60/    E809 :                     ;
(1)   61/    E809 :                     ;	************************************************
(1)   62/    E809 :                     ;	*** relative locations 0009 - 000e           ***
(1)   63/    E809 :                     ;	************************************************
(1)   64/    E809 : 9D E8               PERERR:		DW	PERSUB		;permanent error subroutine
(1)   65/    E80B : A9 E8               SELERR:		DW	SELSUB		;select error subroutine
(1)   66/    E80D : AE E8               RODERR:		DW	RODSUB		;ro disk error subroutine
(1)   67/    E80F : B3 E8               ROFERR:		DW	ROFSUB		;ro file error subroutine
(1)   68/    E811 :                     ;
(1)   69/    E811 :                     ;
(1)   70/    E811 :                     ;	dispatch table for functions
(1)   71/    E811 :                     FUNCTAB:
(1)   72/    E811 : 03 F6 8E EA 81 E9   		DW	WBOOTF, FUNC1, FUNC2, FUNC3
                    93 EA             
(1)   73/    E819 : 12 F6 0F F6 98 EA   		DW	PUNCHF, LISTF, FUNC6, FUNC7
                    AD EA             
(1)   74/    E821 : B2 EA B7 EA CE E9   		DW	FUNC8, FUNC9, FUNC10,FUNC11
                    BD EA             
(1)   75/    E829 : =0CH                DISKF		EQU	($-FUNCTAB)/2	;disk funcs
(1)   76/    E829 : 58 F4 5D F4 03 F4   		DW	FUNC12,FUNC13,FUNC14,FUNC15
                    8B F4             
(1)   77/    E831 : 94 F4 9A F4 B6 F4   		DW	FUNC16,FUNC17,FUNC18,FUNC19
                    C5 F4             
(1)   78/    E839 : CE F4 D4 F4 DA F4   		DW	FUNC20,FUNC21,FUNC22,FUNC23
                    E3 F4             
(1)   79/    E841 : EC F4 F2 F4 02 F5   		DW	FUNC24,FUNC25,FUNC26,FUNC27
                    09 F5             
(1)   80/    E849 : E8 EC 0F F5 15 F5   		DW	FUNC28,FUNC29,FUNC30,FUNC31
                    1E F5             
(1)   81/    E851 : 25 F5 38 F5 3E F5   		DW	FUNC32,FUNC33,FUNC34,FUNC35
                    44 F5             
(1)   82/    E859 : CC F3 4A F5 C3 EA   		DW	FUNC36,FUNC37,FUNC38,FUNC39;
                    C3 EA             
(1)   83/    E861 : 86 F5               		DW	FUNC40;
(1)   84/    E863 : =29H                NFUNCS		EQU	($-FUNCTAB)/2
(1)   85/    E863 :                     ;
(1)   86/    E863 :                     BDOSE:		;arrive here from user programs
(1)   87/    E863 : EB                  		EX	DE,HL
(1)   88/    E864 : 22 10 EB            		LD	(INFO),HL
(1)   89/    E867 : EB                  		EX	DE,HL		;info=DE, DE=info
(1)   90/    E868 : 7B                  		LD	A,E
(1)   91/    E869 : 32 D6 F5            		LD	(LINFO),A	;linfo = low(info) - don't equ
(1)   92/    E86C : 21 00 00            		LD	HL,0
(1)   93/    E86F : 22 12 EB            		LD	(ARET),HL	;return value defaults to 0000
(1)   94/    E872 :                     ;save user's stack pointer, set to local stack
(1)   95/    E872 : 39                  		ADD	HL,SP
(1)   96/    E873 : 22 CC EA            		LD	(ENTSP),HL	;entsp = stackptr
(1)   97/    E876 : 31 0E EB            		LD	SP,LSTACK	;local stack setup
(1)   98/    E879 : AF                  		XOR	A
(1)   99/    E87A : 32 E0 F5            		LD	(FCBDSK),A
(1)  100/    E87D : 32 DE F5            		LD	(RESEL),A	;fcbdsk,resel=FALSE_
(1)  101/    E880 : DD E5               		push	ix
(1)  102/    E882 : FD E5               		push	iy
(1)  103/    E884 : 21 6B F5            		LD	HL,GOBACK	;return here after all functions
(1)  104/    E887 : E5                  		PUSH	HL		;jmp goback equivalent to ret
(1)  105/    E888 : 79                  		LD	A,C
(1)  106/    E889 : FE 29               		CP	NFUNCS
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bdos_cpa_ac1.asm) - Page 25 - 3/8/2023 15:39:33


(1)  107/    E88B : D0                  		RET	NC		;skip if invalid #
(1)  108/    E88C : 4B                  		LD	C,E		;possible output character to C
(1)  109/    E88D : 21 11 E8            		LD	HL,FUNCTAB
(1)  110/    E890 : 5F                  		LD	E,A
(1)  111/    E891 : 16 00               		LD	D,0		;DE=func, HL=.ciotab
(1)  112/    E893 : 19                  		ADD	HL,DE
(1)  113/    E894 : 19                  		ADD	HL,DE
(1)  114/    E895 : 5E                  		LD	E,(HL)
(1)  115/    E896 : 23                  		INC	HL
(1)  116/    E897 : 56                  		LD	D,(HL)		;DE=functab(func)
(1)  117/    E898 : 2A 10 EB            		LD	HL,(INFO)	;info in DE for later xchg
(1)  118/    E89B : EB                  		EX	DE,HL
(1)  119/    E89C : E9                  		JP	(HL)		;dispatched
(1)  120/    E89D :                     ;
(1)  121/    E89D :                     ;
(1)  122/    E89D :                     ;	error subroutines
(1)  123/    E89D :                     PERSUB:		;report permanent error
(1)  124/    E89D : 21 CC E8            		LD	HL,PERMSG
(1)  125/    E8A0 : CD 00 E9            		CALL	ERRFLG		;to report the error
(1)  126/    E8A3 : FE 03               		CP	CTLC
(1)  127/    E8A5 : CA 00 00            		JP	Z,REBOOT	;reboot if response is ctlc
(1)  128/    E8A8 : C9                  		RET			;and ignore the error
(1)  129/    E8A9 :                     ;
(1)  130/    E8A9 :                     SELSUB:		;report select error
(1)  131/    E8A9 : 21 F0 E8            		LD	HL,SELMSG
(1)  132/    E8AC : 18 08               		jr	WAIT_ERR	;wait console before boot
(1)  133/    E8AE :                     ;
(1)  134/    E8AE :                     RODSUB:		;report write to read/only disk
(1)  135/    E8AE : 21 FC E8            		LD	HL,RODMSG
(1)  136/    E8B1 : 18 03               		jr	WAIT_ERR	;wait console
(1)  137/    E8B3 :                     ;
(1)  138/    E8B3 :                     ROFSUB:		;report read/only file
(1)  139/    E8B3 : 21 F7 E8            		LD	HL,ROFMSG	;drop through to wait for console
(1)  140/    E8B6 :                     ;
(1)  141/    E8B6 :                     WAIT_ERR:
(1)  142/    E8B6 :                     ;wait for response before boot
(1)  143/    E8B6 : CD 00 E9            		CALL	ERRFLG
(1)  144/    E8B9 : C3 00 00            		JP	REBOOT
(1)  145/    E8BC :                     ;
(1)  146/    E8BC :                     ;	error messages
(1)  147/    E8BC : 42 64 6F 73 20 45   DSKMSG:		DB	"Bdos Err On "
                    72 72 20 4F 6E 20 
(1)  148/    E8C8 : 20 3A 20 24         DSKERR:		DB	" : $"		;filled in by errflg
(1)  149/    E8CC : 42 61 64 20 53 65   permsg:		db 	"Bad Sector (^C=abort, other=ignore)$"
                    63 74 6F 72 20 28 
                    5E 43 3D 61 62 6F 
                    72 74 2C 20 6F 74 
                    68 65 72 3D 69 67 
                    6E 6F 72 65 29 24 
(1)  150/    E8F0 : 53 65 6C 65 63 74   SELMSG:		DB	"Select$"
                    24                
(1)  151/    E8F7 : 46 69 6C 65 20      ROFMSG:		DB	"File "
(1)  152/    E8FC : 52 2F 4F 24         RODMSG:		DB	"R/O$"
(1)  153/    E900 :                     ;
(1)  154/    E900 :                     ;
(1)  155/    E900 :                     ERRFLG:
(1)  156/    E900 :                     ;report error to console, message address in HL
(1)  157/    E900 : E5                  		PUSH	HL
(1)  158/    E901 : CD B7 E9            		CALL	CRLF		;stack mssg address, new line
(1)  159/    E904 : 3A 0F EB            		LD	A,(CURDSK)
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bdos_cpa_ac1.asm) - Page 26 - 3/8/2023 15:39:33


(1)  160/    E907 : C6 41               		ADD	A,'A'
(1)  161/    E909 : 32 C8 E8            		LD	(DSKERR),A	;current disk name
(1)  162/    E90C : 01 BC E8            		LD	BC,DSKMSG
(1)  163/    E90F : CD C1 E9            		CALL	PRINT		;the error message
(1)  164/    E912 : C1                  		POP	BC
(1)  165/    E913 : CD C1 E9            		CALL	PRINT		;error mssage tail
(1)  166/    E916 : C3 09 F6            		jp	CONINF		; to get the input character
(1)  167/    E919 :                     ;(drop through to conin)
(1)  168/    E919 :                     ;ret
(1)  169/    E919 :                     ;
(1)  170/    E919 :                     CONECH:
(1)  171/    E919 :                     ;read character with echo
(1)  172/    E919 : CD 09 F6            		CALL	CONINF
(1)  173/    E91C : CD 27 E9            		CALL	ECHOC
(1)  174/    E91F : D8                  		RET	C		;echo character?
(1)  175/    E920 :                     ;character must be echoed before return
(1)  176/    E920 : F5                  		PUSH	AF
(1)  177/    E921 : 4F                  		LD	C,A
(1)  178/    E922 : CD 81 E9            		CALL	TABOUT
(1)  179/    E925 : F1                  		POP	AF
(1)  180/    E926 : C9                  		RET			;with character in A
(1)  181/    E927 :                     ;
(1)  182/    E927 :                     ECHOC:
(1)  183/    E927 :                     ;echo character if graphic
(1)  184/    E927 :                     ;cr, lf, tab, or backspace
(1)  185/    E927 : FE 0D               		CP	CR
(1)  186/    E929 : C8                  		RET	Z		;carriage return?
(1)  187/    E92A : FE 0A               		CP	LF
(1)  188/    E92C : C8                  		RET	Z		;line feed?
(1)  189/    E92D : FE 09               		CP	TAB
(1)  190/    E92F : C8                  		RET	Z		;tab?
(1)  191/    E930 : FE 08               		CP	CTLH
(1)  192/    E932 : C8                  		RET	Z		;backspace?
(1)  193/    E933 : FE 20               		CP	' '
(1)  194/    E935 : C9                  		RET			;carry set if not graphic
(1)  195/    E936 :                     ;
(1)  196/    E936 :                     CONBRK:
(1)  197/    E936 :                     ;no active kbchar, check external break
(1)  198/    E936 : CD 06 F6            		CALL	CONSTF
(1)  199/    E939 : E6 01               		AND	1
(1)  200/    E93B : C9                  		RET
(1)  201/    E93C :                     
(1)  202/    E93C :                     CONOUT:
(1)  203/    E93C :                     ;compute character position/write console char from C
(1)  204/    E93C :                     ;compcol = TRUE_ if computing column position
(1)  205/    E93C : 3A C8 EA            		LD	A,(COMPCOL)
(1)  206/    E93F : B7                  		OR	A
(1)  207/    E940 : 20 13               		Jr	NZ,COMPOUT
(1)  208/    E942 :                     ;write the character, then compute the column
(1)  209/    E942 :                     ;write console character from C
(1)  210/    E942 : C5                  		PUSH	BC
(1)  211/    E943 : CD 36 E9            		CALL	CONBRK		;check for screen stop function
(1)  212/    E946 : C1                  		POP	BC
(1)  213/    E947 : C5                  		PUSH	BC		;recall/save character
(1)  214/    E948 : CD 0C F6            		CALL	CONOUTF		;externally, to console
(1)  215/    E94B : C1                  		POP	BC
(1)  216/    E94C : C5                  		PUSH	BC		;recall/save character
(1)  217/    E94D :                     ;may be copying to the list device
(1)  218/    E94D : 3A CB EA            		LD	A,(LISTCP)
(1)  219/    E950 : B7                  		OR	A
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bdos_cpa_ac1.asm) - Page 27 - 3/8/2023 15:39:33


(1)  220/    E951 : C4 0F F6            		CALL	NZ,LISTF	;to printer, if so
(1)  221/    E954 : C1                  		POP	BC		;recall the character
(1)  222/    E955 :                     COMPOUT:
(1)  223/    E955 : 79                  		LD	A,C		;recall the character
(1)  224/    E956 :                     ;and compute column position
(1)  225/    E956 : 21 CA EA            		LD	HL,COLUMN	;A = char, HL = .column
(1)  226/    E959 : FE 7F               		CP	RUBOUT
(1)  227/    E95B : C8                  		RET	Z		;no column change if nulls
(1)  228/    E95C : 34                  		INC	(HL)		;column = column + 1
(1)  229/    E95D : FE 20               		CP	' '
(1)  230/    E95F : D0                  		RET	NC		;return if graphic
(1)  231/    E960 :                     ;not graphic, reset column position
(1)  232/    E960 : 35                  		DEC	(HL)		;column = column - 1
(1)  233/    E961 : 7E                  		LD	A,(HL)
(1)  234/    E962 : B7                  		OR	A
(1)  235/    E963 : C8                  		RET	Z		;return if at zero
(1)  236/    E964 :                     ;not at zero, may be backspace or end line
(1)  237/    E964 : 79                  		LD	A,C		;character back to A
(1)  238/    E965 : FE 08               		CP	CTLH
(1)  239/    E967 : 20 02               		Jr	NZ,NOTBACKSP
(1)  240/    E969 :                     ;backspace character
(1)  241/    E969 : 35                  		DEC	(HL)		;column = column - 1
(1)  242/    E96A : C9                  		RET
(1)  243/    E96B :                     NOTBACKSP:
(1)  244/    E96B :                     ;not a backspace character, eol?
(1)  245/    E96B : FE 0A               		CP	LF
(1)  246/    E96D : C0                  		RET	NZ		;return if not
(1)  247/    E96E :                     ;end of line, column = 0
(1)  248/    E96E : 36 00               		LD	(HL),0		;column = 0
(1)  249/    E970 : C9                  		RET
(1)  250/    E971 :                     ;
(1)  251/    E971 :                     CTLOUT:
(1)  252/    E971 :                     ;send C character with possible preceding up-arrow
(1)  253/    E971 : 79                  		LD	A,C
(1)  254/    E972 : CD 27 E9            		CALL	ECHOC		;cy if not graphic (or special case)
(1)  255/    E975 : 30 0A               		Jr	NC,TABOUT	;skip if graphic, tab, cr, lf, or ctlh
(1)  256/    E977 :                     ;send preceding up arrow
(1)  257/    E977 : F5                  		PUSH	AF
(1)  258/    E978 : 0E 5E               		LD	C,CTL
(1)  259/    E97A : CD 3C E9            		CALL	CONOUT		;up arrow
(1)  260/    E97D : F1                  		POP	AF
(1)  261/    E97E : F6 40               		OR	40H		;becomes graphic letter
(1)  262/    E980 : 4F                  		LD	C,A		;ready to print
(1)  263/    E981 :                     ;(drop through to tabout)
(1)  264/    E981 :                     ;
(1)  265/    E981 :                     TABOUT:
(1)  266/    E981 :                     ;expand tabs to console
(1)  267/    E981 : 79                  		LD	A,C
(1)  268/    E982 : FE 09               		CP	TAB
(1)  269/    E984 : 20 B6               		Jr	NZ,CONOUT	;direct to conout if not
(1)  270/    E986 :                     ;tab encountered, move to next tab position
(1)  271/    E986 :                     TAB0:
(1)  272/    E986 : 0E 20               		LD	C,' '
(1)  273/    E988 : CD 3C E9            		CALL	CONOUT		;another blank
(1)  274/    E98B : 3A CA EA            		LD	A,(COLUMN)
(1)  275/    E98E : E6 07               		AND	111B		;column mod 8 = 0 ?
(1)  276/    E990 : 20 F4               		Jr	NZ,TAB0		;back for another if not
(1)  277/    E992 : C9                  		RET
(1)  278/    E993 :                     ;
(1)  279/    E993 :                     ;
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bdos_cpa_ac1.asm) - Page 28 - 3/8/2023 15:39:33


(1)  280/    E993 :                     BACKUP:
(1)  281/    E993 :                     ;back-up one screen position
(1)  282/    E993 : CD 9B E9            		CALL	PCTLH
(1)  283/    E996 : 0E 20               		LD	C,' '
(1)  284/    E998 : CD 0C F6            		CALL	CONOUTF
(1)  285/    E99B :                     ;	(drop through to pctlh)				;
(1)  286/    E99B :                     PCTLH:
(1)  287/    E99B :                     ;send ctlh to console without affecting column count
(1)  288/    E99B : 0E 08               		LD	C,CTLH
(1)  289/    E99D : C3 0C F6            		JP	CONOUTF
(1)  290/    E9A0 :                     ;ret
(1)  291/    E9A0 :                     ;
(1)  292/    E9A0 :                     CRLFP:
(1)  293/    E9A0 :                     ;print #, cr, lf for ctlx, ctlu, ctlr functions
(1)  294/    E9A0 :                     ;then move to strtcol (starting column)
(1)  295/    E9A0 : 0E 23               		LD	C,'#'
(1)  296/    E9A2 : CD 3C E9            		CALL	CONOUT
(1)  297/    E9A5 : CD B7 E9            		CALL	CRLF
(1)  298/    E9A8 :                     ;column = 0, move to position strtcol
(1)  299/    E9A8 :                     CRLFP0:
(1)  300/    E9A8 : 3A CA EA            		LD	A,(COLUMN)
(1)  301/    E9AB : 21 C9 EA            		LD	HL,STRTCOL
(1)  302/    E9AE : BE                  		CP	(HL)
(1)  303/    E9AF : D0                  		RET	NC		;stop when column reaches strtcol
(1)  304/    E9B0 : 0E 20               		LD	C,' '
(1)  305/    E9B2 : CD 3C E9            		CALL	CONOUT		;print blank
(1)  306/    E9B5 : 18 F1               		Jr	CRLFP0
(1)  307/    E9B7 :                     ;;
(1)  308/    E9B7 :                     ;
(1)  309/    E9B7 :                     CRLF:
(1)  310/    E9B7 :                     ;carriage return line feed sequence
(1)  311/    E9B7 : 0E 0D               		LD	C,CR
(1)  312/    E9B9 : CD 3C E9            		CALL	CONOUT
(1)  313/    E9BC : 0E 0A               		LD	C,LF
(1)  314/    E9BE : C3 3C E9            		JP	CONOUT
(1)  315/    E9C1 :                     ;ret
(1)  316/    E9C1 :                     ;
(1)  317/    E9C1 :                     PRINT:
(1)  318/    E9C1 :                     ;print message until M(BC) = '$'
(1)  319/    E9C1 : 0A                  		LD	A,(BC)
(1)  320/    E9C2 : FE 24               		CP	'$'
(1)  321/    E9C4 : C8                  		RET	Z		;stop on _
(1)  322/    E9C5 :                     ;more to print
(1)  323/    E9C5 : 03                  		INC	BC
(1)  324/    E9C6 : C5                  		PUSH	BC
(1)  325/    E9C7 : 4F                  		LD	C,A		;char to C
(1)  326/    E9C8 : CD 81 E9            		CALL	TABOUT		;another character printed
(1)  327/    E9CB : C1                  		POP	BC
(1)  328/    E9CC : 18 F3               		Jr	PRINT
(1)  329/    E9CE :                     ;
(1)  330/    E9CE :                     READ:		;read to info address (max length, current length, buffer)
(1)  331/    E9CE : 3A CA EA            		LD	A,(COLUMN)
(1)  332/    E9D1 : 32 C9 EA            		LD	(STRTCOL),A	;save start for ctl-x, ctl-h
(1)  333/    E9D4 : 2A 10 EB            		LD	HL,(INFO)
(1)  334/    E9D7 : 4E                  		LD	C,(HL)
(1)  335/    E9D8 : 23                  		INC	HL
(1)  336/    E9D9 : E5                  		PUSH	HL
(1)  337/    E9DA : 06 00               		LD	B,0
(1)  338/    E9DC :                     ;B = current buffer length,
(1)  339/    E9DC :                     ;C = maximum buffer length,
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bdos_cpa_ac1.asm) - Page 29 - 3/8/2023 15:39:33


(1)  340/    E9DC :                     ;HL= next to fill - 1
(1)  341/    E9DC :                     READNX:
(1)  342/    E9DC :                     ;read next character, BC, HL active
(1)  343/    E9DC : C5                  		PUSH	BC
(1)  344/    E9DD : E5                  		PUSH	HL		;blen, cmax, HL saved
(1)  345/    E9DE :                     READN0:
(1)  346/    E9DE : CD 09 F6            		CALL	CONINF		;next char in A
(1)  347/    E9E1 : E6 7F               		AND	7FH		;mask parity bit
(1)  348/    E9E3 : E1                  		POP	HL
(1)  349/    E9E4 : C1                  		POP	BC		;reactivate counters
(1)  350/    E9E5 : FE 0D               		CP	CR
(1)  351/    E9E7 : CA 87 EA            		JP	Z,READEN	;end of line?
(1)  352/    E9EA : FE 0A               		CP	LF
(1)  353/    E9EC : CA 87 EA            		JP	Z,READEN	;also end of line
(1)  354/    E9EF : FE 13               		cp	13h
(1)  355/    E9F1 : 28 08               		jr	z, loc_D5F9
(1)  356/    E9F3 : FE 08               		CP	CTLH
(1)  357/    E9F5 : 28 04               		jr	z, loc_D5F9
(1)  358/    E9F7 : FE 7F               		cp	7Fh
(1)  359/    E9F9 : 20 0D               		jr	nz, notrub
(1)  360/    E9FB :                     ;do we have any characters to back over?
(1)  361/    E9FB : 78                  loc_D5F9:	LD	A,B
(1)  362/    E9FC : B7                  		OR	A
(1)  363/    E9FD : 28 DD               		Jr	Z,READNX
(1)  364/    E9FF :                     ;characters remain in buffer, backup one
(1)  365/    E9FF : 05                  		DEC	B		;remove one character
(1)  366/    EA00 : 3A CA EA            		LD	A,(COLUMN)
(1)  367/    EA03 : 32 C8 EA            		LD	(COMPCOL),A	;col > 0
(1)  368/    EA06 :                     ;compcol > 0 marks repeat as length compute
(1)  369/    EA06 : 18 32               		Jr	LINELEN		;uses same code as repeat
(1)  370/    EA08 :                     NOTRUB:
(1)  371/    EA08 :                     ;not a rubout character, check end line
(1)  372/    EA08 : FE 05               		CP	CTLE
(1)  373/    EA0A : 20 0B               		Jr	NZ,NOTE		;physical end line?
(1)  374/    EA0C :                     ;yes, save active counters and force eol
(1)  375/    EA0C : C5                  		PUSH	BC
(1)  376/    EA0D : E5                  		PUSH	HL
(1)  377/    EA0E : CD B7 E9            		CALL	CRLF
(1)  378/    EA11 : AF                  		XOR	A
(1)  379/    EA12 : 32 C9 EA            		LD	(STRTCOL),A	;start position = 00
(1)  380/    EA15 : 18 C7               		Jr	READN0		;for another character
(1)  381/    EA17 :                     NOTE:
(1)  382/    EA17 :                     ;not end of line, list toggle?
(1)  383/    EA17 : FE 10               		CP	CTLP
(1)  384/    EA19 : 20 0B               		Jr	NZ,NOTP		;skip if not ctlp
(1)  385/    EA1B :                     ;list toggle - change parity
(1)  386/    EA1B : E5                  		PUSH	HL		;save next to fill - 1
(1)  387/    EA1C : 21 CB EA            		LD	HL,LISTCP	;HL=.listcp flag
(1)  388/    EA1F : 3E 01               		LD	A,1
(1)  389/    EA21 : 96                  		SUB	(HL)		;TRUE_-listcp
(1)  390/    EA22 : 77                  		LD	(HL),A		;listcp = not listcp
(1)  391/    EA23 : E1                  		POP	HL
(1)  392/    EA24 : 18 B6               		Jr	READNX		;for another char
(1)  393/    EA26 :                     NOTP:
(1)  394/    EA26 :                     ;not a ctlp, line delete?
(1)  395/    EA26 : FE 18               		CP	CTLX
(1)  396/    EA28 : 20 43               		Jr	NZ,rdecho
(1)  397/    EA2A : E1                  		POP	HL		;discard start position
(1)  398/    EA2B :                     ;loop while column > strtcol
(1)  399/    EA2B :                     BACKX:
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bdos_cpa_ac1.asm) - Page 30 - 3/8/2023 15:39:33


(1)  400/    EA2B : 3A C9 EA            		LD	A,(STRTCOL)
(1)  401/    EA2E : 21 CA EA            		LD	HL,COLUMN
(1)  402/    EA31 : BE                  		CP	(HL)
(1)  403/    EA32 : 30 9A               		Jr	NC,READ		;start again
(1)  404/    EA34 : 35                  		DEC	(HL)		;column = column - 1
(1)  405/    EA35 : CD 93 E9            		CALL	BACKUP		;one position
(1)  406/    EA38 : 18 F1               		Jr	BACKX
(1)  407/    EA3A :                     LINELEN:
(1)  408/    EA3A :                     ;repeat line, or compute line len (ctlh)
(1)  409/    EA3A :                     ;if compcol > 0
(1)  410/    EA3A : C5                  		PUSH	BC
(1)  411/    EA3B : CD A0 E9            		CALL	CRLFP		;save line length
(1)  412/    EA3E : C1                  		POP	BC
(1)  413/    EA3F : E1                  		POP	HL
(1)  414/    EA40 : E5                  		PUSH	HL
(1)  415/    EA41 : C5                  		PUSH	BC
(1)  416/    EA42 :                     ;bcur, cmax active, beginning buff at HL
(1)  417/    EA42 :                     REP0:
(1)  418/    EA42 : 78                  		LD	A,B
(1)  419/    EA43 : B7                  		OR	A
(1)  420/    EA44 : 28 0C               		Jr	Z,REP1		;count len to 00
(1)  421/    EA46 : 23                  		INC	HL
(1)  422/    EA47 : 4E                  		LD	C,(HL)		;next to print
(1)  423/    EA48 : 05                  		DEC	B
(1)  424/    EA49 : C5                  		PUSH	BC
(1)  425/    EA4A : E5                  		PUSH	HL		;count length down
(1)  426/    EA4B : CD 71 E9            		CALL	CTLOUT		;character echoed
(1)  427/    EA4E : E1                  		POP	HL
(1)  428/    EA4F : C1                  		POP	BC		;recall remaining count
(1)  429/    EA50 : 18 F0               		Jr	REP0		;for the next character
(1)  430/    EA52 :                     REP1:
(1)  431/    EA52 :                     ;end of repeat, recall lengths
(1)  432/    EA52 :                     ;original BC still remains pushed
(1)  433/    EA52 : E5                  		PUSH	HL		;save next to fill
(1)  434/    EA53 : 3A C8 EA            		LD	A,(COMPCOL)
(1)  435/    EA56 : B7                  		OR	A		;>0 if computing length
(1)  436/    EA57 : CA DE E9            		JP	Z,READN0	;for another char if so
(1)  437/    EA5A :                     ;column position computed for ctlh
(1)  438/    EA5A : 21 CA EA            		LD	HL,COLUMN
(1)  439/    EA5D : 96                  		SUB	(HL)		;diff > 0
(1)  440/    EA5E : 32 C8 EA            		LD	(COMPCOL),A	;count down below
(1)  441/    EA61 :                     ;move back compcol-column spaces
(1)  442/    EA61 :                     BACKSP:
(1)  443/    EA61 :                     ;move back one more space
(1)  444/    EA61 : CD 93 E9            		CALL	BACKUP		;one space
(1)  445/    EA64 : 21 C8 EA            		LD	HL,COMPCOL
(1)  446/    EA67 : 35                  		DEC	(HL)
(1)  447/    EA68 : 20 F7               		Jr	NZ,BACKSP
(1)  448/    EA6A : C3 DE E9            		JP	READN0		;for next character
(1)  449/    EA6D :                     ;not a ctlr, place into buffer
(1)  450/    EA6D :                     RDECHO:
(1)  451/    EA6D : 23                  		INC	HL
(1)  452/    EA6E : 77                  		LD	(HL),A		;character filled to mem
(1)  453/    EA6F : 04                  		INC	B		;blen = blen + 1
(1)  454/    EA70 :                     RDECH1:
(1)  455/    EA70 :                     ;look for a random control character
(1)  456/    EA70 : C5                  		PUSH	BC
(1)  457/    EA71 : E5                  		PUSH	HL		;active values saved
(1)  458/    EA72 : 4F                  		LD	C,A		;ready to print
(1)  459/    EA73 : CD 71 E9            		CALL	CTLOUT		;may be up-arrow C
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bdos_cpa_ac1.asm) - Page 31 - 3/8/2023 15:39:33


(1)  460/    EA76 : E1                  		POP	HL
(1)  461/    EA77 : C1                  		POP	BC
(1)  462/    EA78 : 7E                  		LD	A,(HL)		;recall char
(1)  463/    EA79 : FE 03               		CP	CTLC		;set flags for reboot test
(1)  464/    EA7B : 78                  		LD	A,B		;move length to A
(1)  465/    EA7C : 20 05               		Jr	NZ,NOTC		;skip if not a control c
(1)  466/    EA7E : FE 01               		CP	1		;control C, must be length 1
(1)  467/    EA80 : CA 00 00            		JP	Z,REBOOT	;reboot if blen = 1
(1)  468/    EA83 :                     ;length not one, so skip reboot
(1)  469/    EA83 :                     NOTC:
(1)  470/    EA83 :                     ;not reboot, are we at end of buffer?
(1)  471/    EA83 : B9                  		CP	C
(1)  472/    EA84 : DA DC E9            		JP	C,READNX	;go for another if not
(1)  473/    EA87 :                     READEN:
(1)  474/    EA87 :                     ;end of read operation, store blen
(1)  475/    EA87 : E1                  		POP	HL
(1)  476/    EA88 : 70                  		LD	(HL),B		;M(current len) = B
(1)  477/    EA89 : 0E 0D               		LD	C,CR
(1)  478/    EA8B : C3 3C E9            		JP	CONOUT		;return carriage
(1)  479/    EA8E :                     ;ret
(1)  480/    EA8E :                     FUNC1:
(1)  481/    EA8E :                     ;return console character with echo
(1)  482/    EA8E : CD 19 E9            		CALL	CONECH
(1)  483/    EA91 : 18 2D               		Jr	STA_RET
(1)  484/    EA93 :                     ;
(1)  485/    EA93 : =0E981H             FUNC2		EQU	TABOUT
(1)  486/    EA93 :                     ;write console character with tab expansion
(1)  487/    EA93 :                     ;
(1)  488/    EA93 :                     FUNC3:
(1)  489/    EA93 :                     ;return reader character
(1)  490/    EA93 : CD 15 F6            		CALL	READERF
(1)  491/    EA96 : 18 28               		Jr	STA_RET
(1)  492/    EA98 :                     ;
(1)  493/    EA98 :                     ;func4:	equated to punchf
(1)  494/    EA98 :                     ;write punch character
(1)  495/    EA98 :                     ;
(1)  496/    EA98 :                     ;func5:	equated to listf
(1)  497/    EA98 :                     ;write list character
(1)  498/    EA98 :                     ;write to list device
(1)  499/    EA98 :                     ;
(1)  500/    EA98 :                     FUNC6:
(1)  501/    EA98 :                     ;direct console i/o - read if 0ffh
(1)  502/    EA98 : 79                  		LD	A,C
(1)  503/    EA99 : 3C                  		INC	A
(1)  504/    EA9A : 28 07               		Jr	Z,DIRINP	;0ffh => 00h, means input mode
(1)  505/    EA9C : 3C                  		INC	A
(1)  506/    EA9D : CA 06 F6            		JP	Z,CONSTF	;0feH in C for status
(1)  507/    EAA0 :                     ;direct output function
(1)  508/    EAA0 : C3 0C F6            		JP	CONOUTF;
(1)  509/    EAA3 :                     DIRINP:
(1)  510/    EAA3 : CD 06 F6            		CALL	CONSTF		;status check
(1)  511/    EAA6 : B7                  		OR	A
(1)  512/    EAA7 : C8                  		ret	z		;skip, return 00 if not ready
(1)  513/    EAA8 :                     ;character is ready, get it
(1)  514/    EAA8 : CD 09 F6            		CALL	CONINF	;to A
(1)  515/    EAAB : 18 13               		Jr	STA_RET
(1)  516/    EAAD :                     ;
(1)  517/    EAAD :                     FUNC7:
(1)  518/    EAAD :                     ;return io byte
(1)  519/    EAAD : 3A 03 00            		LD	A,(IOLOC)
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bdos_cpa_ac1.asm) - Page 32 - 3/8/2023 15:39:33


(1)  520/    EAB0 : 18 0E               		Jr	STA_RET
(1)  521/    EAB2 :                     ;
(1)  522/    EAB2 :                     FUNC8:
(1)  523/    EAB2 :                     ;set i/o byte
(1)  524/    EAB2 : 21 03 00            		LD	HL,IOLOC
(1)  525/    EAB5 : 71                  		LD	(HL),C
(1)  526/    EAB6 : C9                  		RET			;jmp goback
(1)  527/    EAB7 :                     ;
(1)  528/    EAB7 :                     FUNC9:
(1)  529/    EAB7 :                     ;write line until _ encountered
(1)  530/    EAB7 : EB                  		EX	DE,HL		;was lhld info
(1)  531/    EAB8 : 4D                  		LD	C,L
(1)  532/    EAB9 : 44                  		LD	B,H		;BC=string address
(1)  533/    EABA : C3 C1 E9            		JP	PRINT		;out to console
(1)  534/    EABD :                     ;
(1)  535/    EABD : =0E9CEH             FUNC10		EQU	READ
(1)  536/    EABD :                     ;read a buffered console line
(1)  537/    EABD :                     ;
(1)  538/    EABD :                     FUNC11:
(1)  539/    EABD :                     ;check console status
(1)  540/    EABD : CD 36 E9            		CALL	CONBRK
(1)  541/    EAC0 :                     ;(drop through to sta_ret)
(1)  542/    EAC0 :                     STA_RET:
(1)  543/    EAC0 :                     ;store the A register to aret
(1)  544/    EAC0 : 32 12 EB            		LD	(ARET),A
(1)  545/    EAC3 :                     FUNC_RET:	;
(1)  546/    EAC3 : C9                  		RET			;jmp goback (pop stack for non cp/m functions)
(1)  547/    EAC4 :                     ;
(1)  548/    EAC4 :                     SETLRET1:
(1)  549/    EAC4 :                     ;set lret = 1
(1)  550/    EAC4 : 3E 01               		LD	A,1
(1)  551/    EAC6 : 18 F8               		Jr	STA_RET;
(1)  552/    EAC8 :                     ;
(1)  553/    EAC8 :                     ;
(1)  554/    EAC8 :                     ;
(1)  555/    EAC8 :                     ;	data areas
(1)  556/    EAC8 :                     ;
(1)  557/    EAC8 : 00                  COMPCOL:	DB	0		;TRUE_ if computing column position
(1)  558/    EAC9 : 00                  STRTCOL:	DB	0		;starting column position after read
(1)  559/    EACA : 00                  COLUMN:		DB	0		;column position
(1)  560/    EACB : 00                  LISTCP:		DB	0		;listing toggle
(1)  561/    EACC :                     ENTSP:		DS	2		;entry stack pointer
(1)  562/    EACE :                     		DS	SSIZE*2		;stack size
(1)  563/    EB0E :                     LSTACK:
(1)  564/    EB0E :                     ;	end of Basic I/O System
(1)  565/    EB0E :                     ;
(1)  566/    EB0E :                     ;*****************************************************************
(1)  567/    EB0E :                     ;*****************************************************************
(1)  568/    EB0E :                     ;
(1)  569/    EB0E :                     ;	common values shared between bdosi and bdos
(1)  570/    EB0E : 00                  USRCODE:	DB	0		;current user number
(1)  571/    EB0F : 00                  CURDSK:		DB	0		;current disk number
(1)  572/    EB10 :                     INFO:		DS	2		;information address
(1)  573/    EB12 :                     ARET:		DS	2		;address value to return
(1)  574/    EB14 : =0EB12H             LRET		EQU	ARET		;low(aret)
(1)  575/    EB14 :                     ;
(1)  576/    EB14 :                     ;*****************************************************************
(1)  577/    EB14 :                     ;*****************************************************************
(1)  578/    EB14 :                     ;**                                                             **
(1)  579/    EB14 :                     ;**   B a s i c    D i s k   O p e r a t i n g   S y s t e m    **
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bdos_cpa_ac1.asm) - Page 33 - 3/8/2023 15:39:33


(1)  580/    EB14 :                     ;**                                                             **
(1)  581/    EB14 :                     ;*****************************************************************
(1)  582/    EB14 :                     ;*****************************************************************
(1)  583/    EB14 :                     ;
(1)  584/    EB14 : =22H                DVERS		EQU	22H		;version 2.2
(1)  585/    EB14 :                     ;	module addresses
(1)  586/    EB14 :                     ;
(1)  587/    EB14 :                     ;	literal constants
(1)  588/    EB14 : =0FFH               TRUE_		EQU	0FFH		;constant TRUE_
(1)  589/    EB14 : =0H                 FALSE_		EQU	000H		;constant FALSE_
(1)  590/    EB14 : =0FFFFH             ENDDIR		EQU	0FFFFH		;end of directory
(1)  591/    EB14 : =1H                 BYTE		EQU	1		;number of bytes for "byte" type
(1)  592/    EB14 : =2H                 WORD		EQU	2		;number of bytes for "word" type
(1)  593/    EB14 :                     ;
(1)  594/    EB14 :                     ;	fixed addresses in low memory
(1)  595/    EB14 : =5CH                TFCB		EQU	005CH		;default fcb location
(1)  596/    EB14 : =80H                TBUFF		EQU	0080H		;default buffer location
(1)  597/    EB14 :                     ;
(1)  598/    EB14 :                     ;	fixed addresses referenced in bios module are
(1)  599/    EB14 :                     ;	pererr (0009), selerr (000c), roderr (000f)
(1)  600/    EB14 :                     ;
(1)  601/    EB14 :                     ;	error message handlers
(1)  602/    EB14 :                     ;
(1)  603/    EB14 :                     ;per_error:
(1)  604/    EB14 :                     ;report permanent error to user
(1)  605/    EB14 :                     ;	lxi h,pererr  jmp goerr
(1)  606/    EB14 :                     ;
(1)  607/    EB14 :                     ;rod_error:						;
(1)  608/    EB14 :                     ;report read/only disk error
(1)  609/    EB14 :                     ;	lxi h,roderr  jmp goerr				;
(1)  610/    EB14 :                     ;
(1)  611/    EB14 :                     ;rof_error:						;
(1)  612/    EB14 :                     ;report read/only file error			;
(1)  613/    EB14 :                     ;	lxi h,roferr	;jmp goerr
(1)  614/    EB14 :                     ;
(1)  615/    EB14 :                     SEL_ERROR:
(1)  616/    EB14 :                     ;report select error
(1)  617/    EB14 : 21 0B E8            		LD	HL,SELERR;
(1)  618/    EB17 :                     ;
(1)  619/    EB17 :                     ;
(1)  620/    EB17 :                     GOERR:
(1)  621/    EB17 :                     ;HL = .errorhandler, call subroutine
(1)  622/    EB17 : 5E                  		LD	E,(HL)
(1)  623/    EB18 : 23                  		INC	HL
(1)  624/    EB19 : 56                  		LD	D,(HL)		;address of routine in DE
(1)  625/    EB1A : EB                  		EX	DE,HL
(1)  626/    EB1B : E9                  		JP	(HL)		;to subroutine
(1)  627/    EB1C :                     ;
(1)  628/    EB1C :                     ;
(1)  629/    EB1C :                     ;
(1)  630/    EB1C :                     ;	local subroutines for bios interface
(1)  631/    EB1C :                     ;
(1)  632/    EB1C :                     MOVE:
(1)  633/    EB1C :                     ;move data length of length C from source DE to
(1)  634/    EB1C :                     ;destination given by HL
(1)  635/    EB1C : 0C                  		INC	C		;in case it is zero
(1)  636/    EB1D :                     MOVE0:
(1)  637/    EB1D : 0D                  		DEC	C
(1)  638/    EB1E : C8                  		RET	Z		;more to move
(1)  639/    EB1F : 1A                  		LD	A,(DE)
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bdos_cpa_ac1.asm) - Page 34 - 3/8/2023 15:39:33


(1)  640/    EB20 : 77                  		LD	(HL),A		;one byte moved
(1)  641/    EB21 : 13                  		INC	DE
(1)  642/    EB22 : 23                  		INC	HL		;to next byte
(1)  643/    EB23 : 18 F8               		Jr	MOVE0
(1)  644/    EB25 :                     ;
(1)  645/    EB25 :                     SELECTDISK:
(1)  646/    EB25 :                     ;select the disk drive given by curdsk, and fill
(1)  647/    EB25 :                     ;the base addresses curtrka - alloca, then fill
(1)  648/    EB25 :                     ;the values of the disk parameter block
(1)  649/    EB25 : 3A 0F EB            		LD	A,(CURDSK)
(1)  650/    EB28 : 4F                  		LD	C,A		;current disk# to c
(1)  651/    EB29 :                     ;lsb of e = 0 if not yet logged - in
(1)  652/    EB29 : CD 1B F6            		CALL	SELDSKF		;HL filled by call
(1)  653/    EB2C :                     ;HL = 0000 if error, otherwise disk headers
(1)  654/    EB2C : 7C                  		LD	A,H
(1)  655/    EB2D : B5                  		OR	L
(1)  656/    EB2E : C8                  		RET	Z		;return with 0000 in HL and z flag
(1)  657/    EB2F :                     ;disk header block address in hl
(1)  658/    EB2F : 5E                  		LD	E,(HL)
(1)  659/    EB30 : 23                  		INC	HL
(1)  660/    EB31 : 56                  		LD	D,(HL)
(1)  661/    EB32 : 23                  		INC	HL		;DE=.tran
(1)  662/    EB33 : 22 B3 F5            		LD	(CDRMAXA),HL
(1)  663/    EB36 : 23                  		INC	HL
(1)  664/    EB37 : 23                  		INC	HL		;.cdrmax
(1)  665/    EB38 : 22 B5 F5            		LD	(CURTRKA),HL
(1)  666/    EB3B : 23                  		INC	HL
(1)  667/    EB3C : 23                  		INC	HL		;HL=.currec
(1)  668/    EB3D : 22 B7 F5            		LD	(CURRECA),HL
(1)  669/    EB40 : 23                  		INC	HL
(1)  670/    EB41 : 23                  		INC	HL		;HL=.buffa
(1)  671/    EB42 :                     ;DE still contains .tran
(1)  672/    EB42 : EB                  		EX	DE,HL
(1)  673/    EB43 : 22 D0 F5            		LD	(TRANV),HL	;.tran vector
(1)  674/    EB46 : 21 B9 F5            		LD	HL,BUFFA	;DE= source for move, HL=dest
(1)  675/    EB49 : 0E 08               		LD	C,ADDLIST
(1)  676/    EB4B : CD 1C EB            		CALL	MOVE		;addlist filled
(1)  677/    EB4E :                     ;now fill the disk parameter block
(1)  678/    EB4E : 2A BB F5            		LD	HL,(DPBADDR)
(1)  679/    EB51 : EB                  		EX	DE,HL		;DE is source
(1)  680/    EB52 : 21 C1 F5            		LD	HL,SECTPT	;HL is destination
(1)  681/    EB55 : 0E 0F               		LD	C,DPBLIST
(1)  682/    EB57 : CD 1C EB            		CALL	MOVE		;data filled
(1)  683/    EB5A :                     ;now set single/double map mode
(1)  684/    EB5A : 2A C6 F5            		LD	HL,(MAXALL)	;largest allocation number
(1)  685/    EB5D : 7C                  		LD	A,H		;00 indicates < 255
(1)  686/    EB5E : 21 DD F5            		LD	HL,SINGLE
(1)  687/    EB61 : 36 FF               		LD	(HL),TRUE_	;assume a=00
(1)  688/    EB63 : B7                  		OR	A
(1)  689/    EB64 : 28 02               		Jr	Z,RETSELECT
(1)  690/    EB66 :                     ;high order of maxall not zero, use double dm
(1)  691/    EB66 : 36 00               		LD	(HL),FALSE_
(1)  692/    EB68 :                     RETSELECT:
(1)  693/    EB68 : 3E FF               		LD	A,TRUE_
(1)  694/    EB6A : B7                  		OR	A
(1)  695/    EB6B : C9                  		RET			;select disk function ok
(1)  696/    EB6C :                     ;
(1)  697/    EB6C :                     HOME:
(1)  698/    EB6C :                     ;move to home position, then offset to start of dir
(1)  699/    EB6C : CD 18 F6            		CALL	HOMEF		;move to track 00, sector 00 reference
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bdos_cpa_ac1.asm) - Page 35 - 3/8/2023 15:39:33


(1)  700/    EB6F :                     ;lxi h,offset ;mov c,m ;inx h ;mov b,m ;call settrkf	;
(1)  701/    EB6F :                     ;first directory position selected
(1)  702/    EB6F : AF                  		XOR	A		;constant zero to accumulator
(1)  703/    EB70 : 2A B5 F5            		LD	HL,(CURTRKA)
(1)  704/    EB73 : 77                  		LD	(HL),A
(1)  705/    EB74 : 23                  		INC	HL
(1)  706/    EB75 : 77                  		LD	(HL),A		;curtrk=0000
(1)  707/    EB76 : 2A B7 F5            		LD	HL,(CURRECA)
(1)  708/    EB79 : 77                  		LD	(HL),A
(1)  709/    EB7A : 23                  		INC	HL
(1)  710/    EB7B : 77                  		LD	(HL),A		;currec=0000
(1)  711/    EB7C :                     ;curtrk, currec both set to 0000
(1)  712/    EB7C : C9                  		RET
(1)  713/    EB7D :                     ;
(1)  714/    EB7D :                     RDBUFF:
(1)  715/    EB7D :                     ;read buffer and check condition
(1)  716/    EB7D : CD 27 F6            		CALL	READF		;current drive, track, sector, dma
(1)  717/    EB80 : 18 03               		Jr	DIOCOMP		;check for i/o errors
(1)  718/    EB82 :                     ;
(1)  719/    EB82 :                     WRBUFF:
(1)  720/    EB82 :                     ;write buffer and check condition
(1)  721/    EB82 :                     ;write type (wrtype) is in register C
(1)  722/    EB82 :                     ;wrtype = 0 => normal write operation
(1)  723/    EB82 :                     ;wrtype = 1 => directory write operation
(1)  724/    EB82 :                     ;wrtype = 2 => start of new block
(1)  725/    EB82 : CD 2A F6            		CALL	WRITEF		;current drive, track, sector, dma
(1)  726/    EB85 :                     DIOCOMP:	;check for disk errors
(1)  727/    EB85 : B7                  		OR	A
(1)  728/    EB86 : C8                  		RET	Z	;
(1)  729/    EB87 : 21 09 E8            		LD	HL,PERERR;
(1)  730/    EB8A : C3 17 EB            		JP	GOERR
(1)  731/    EB8D :                     ;
(1)  732/    EB8D :                     SEEK_DIR:
(1)  733/    EB8D :                     ;seek the record containing the current dir entry
(1)  734/    EB8D : 2A EA F5            		LD	HL,(DCNT)	;directory counter to HL
(1)  735/    EB90 : 0E 02               		LD	C,DSKSHF
(1)  736/    EB92 : CD A9 EC            		CALL	HLROTR		;value to HL
(1)  737/    EB95 : 22 E5 F5            		LD	(ARECORD),HL
(1)  738/    EB98 : 22 EC F5            		LD	(DREC),HL	;ready for seek
(1)  739/    EB9B :                     ;  jmp seek				;
(1)  740/    EB9B :                     ;ret
(1)  741/    EB9B :                     ;
(1)  742/    EB9B :                     ;
(1)  743/    EB9B :                     SEEK:
(1)  744/    EB9B :                     ;seek the track given by arecord (actual record)
(1)  745/    EB9B :                     ;local equates for registers
(1)  746/    EB9B :                     ;ARECH		EQU	B
(1)  747/    EB9B :                     ;ARECL		EQU	C		;arecord = BC
(1)  748/    EB9B :                     ;CRECH		EQU	D
(1)  749/    EB9B :                     ;CRECL		EQU	E		;currec  = DE
(1)  750/    EB9B :                     ;CTRKH		EQU	H
(1)  751/    EB9B :                     ;CTRKL		EQU	L		;curtrk  = HL
(1)  752/    EB9B :                     ;TCRECH		EQU	H
(1)  753/    EB9B :                     ;TCRECL		EQU	L		;tcurrec = HL
(1)  754/    EB9B :                     ;load the registers from memory
(1)  755/    EB9B : 21 E5 F5            		LD	HL,ARECORD                     ;LD	HL,ARECORD
(1)  756/    EB9E : 4E                  		LD	c,(hl)                         ;LD	ARECL,M
(1)  757/    EB9F : 23                  		INC	HL                             ;INC	HL
(1)  758/    EBA0 : 46                  		LD	b,(hl)                         ;LD	ARECH,M
(1)  759/    EBA1 : 2A B7 F5            		LD	HL,(CURRECA)                   ;LD	HL,(CURRECA)
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bdos_cpa_ac1.asm) - Page 36 - 3/8/2023 15:39:33


(1)  760/    EBA4 : 5E                  		LD	e,(hl)                         ;LD	CRECL,M
(1)  761/    EBA5 : 23                  		INC	HL                             ;INC	HL
(1)  762/    EBA6 : 56                  		LD	d,(hl)                         ;LD	CRECH,M
(1)  763/    EBA7 : 2A B5 F5            		LD	HL,(CURTRKA)                   ;LD	HL,(CURTRKA)
(1)  764/    EBAA : 7E                  		LD	A,(HL)                         ;LD	A,(HL)
(1)  765/    EBAB : 23                  		INC	HL                             ;INC	HL
(1)  766/    EBAC : 66                  		LD	h,(hl)                         ;LD	CTRKH,M
(1)  767/    EBAD : 6F                  		LD	l,A                            ;LD	CTRKL,A
(1)  768/    EBAE :                     ;loop while arecord < currec
(1)  769/    EBAE :                     SEEK0:
(1)  770/    EBAE : 79                  		LD	A,c                            ;LD	A,ARECL
(1)  771/    EBAF : 93                  		SUB	e                              ;SUB	CRECL
(1)  772/    EBB0 : 78                  		LD	A,b                            ;LD	A,ARECH
(1)  773/    EBB1 : 9A                  		SBC	A,d                            ;SBC	A,CRECH
(1)  774/    EBB2 : 30 0E               		Jr	NC,SEEK1	;skip if arecord >= currec
(1)  775/    EBB4 :                     ;currec = currec - sectpt
(1)  776/    EBB4 : E5                  		PUSH	hl                              ;PUSH	CTRKH
(1)  777/    EBB5 : 2A C1 F5            		LD	HL,(SECTPT)                     ;LD	HL,(SECTPT)
(1)  778/    EBB8 : 7B                  		LD	A,e                             ;LD	A,CRECL
(1)  779/    EBB9 : 95                  		SUB	L                               ;SUB	L
(1)  780/    EBBA : 5F                  		LD	e,A                             ;LD	CRECL,A
(1)  781/    EBBB : 7A                  		LD	A,d                             ;LD	A,CRECH
(1)  782/    EBBC : 9C                  		SBC	A,H                             ;SBC	A,H
(1)  783/    EBBD : 57                  		LD	d,A                             ;LD	CRECH,A
(1)  784/    EBBE : E1                  		POP	hl                              ;POP	CTRKH
(1)  785/    EBBF :                     ;curtrk = curtrk - 1
(1)  786/    EBBF : 2B                  		DEC	hl                              ;DEC	CTRKH
(1)  787/    EBC0 : 18 EC               		Jr	SEEK0		;for another try
(1)  788/    EBC2 :                     SEEK1:
(1)  789/    EBC2 :                     ;look while arecord >= (t:=currec + sectpt)
(1)  790/    EBC2 : E5                  		PUSH	hl                       	;PUSH	CTRKH
(1)  791/    EBC3 : 2A C1 F5            		LD	HL,(SECTPT)                     ;LD	HL,(SECTPT)
(1)  792/    EBC6 : 19                  		ADD	HL,de	;HL = currec+sectpt     ;ADD	HL,CRECH
(1)  793/    EBC7 : 38 0B               		Jr	C,SEEK2	;can be > FFFFH         ;JP	C,SEEK2
(1)  794/    EBC9 : 79                  		LD	A,c                             ;LD	A,ARECL
(1)  795/    EBCA : 95                  		SUB	l                               ;SUB	TCRECL
(1)  796/    EBCB : 78                  		LD	A,b                             ;LD	A,ARECH
(1)  797/    EBCC : 9C                  		SBC	A,h                             ;SBC	A,TCRECH
(1)  798/    EBCD : 38 05               		Jr	C,SEEK2	;skip if t > arecord    ;JP	C,SEEK2
(1)  799/    EBCF :                     ;currec = t
(1)  800/    EBCF : EB                  		EX	DE,HL                           ;EX	DE,HL
(1)  801/    EBD0 :                     ;curtrk = curtrk + 1
(1)  802/    EBD0 : E1                  		POP	hl                              ;POP	CTRKH
(1)  803/    EBD1 : 23                  		INC	hl                              ;INC	CTRKH
(1)  804/    EBD2 : 18 EE               		Jr	SEEK1	;for another try        ;JP	SEEK1
(1)  805/    EBD4 : E1                  SEEK2:		POP	hl                              ;POP	CTRKH
(1)  806/    EBD5 :                     ;arrive here with updated values in each register
(1)  807/    EBD5 : C5                  		PUSH	bc                              ;PUSH	ARECH
(1)  808/    EBD6 : D5                  		PUSH	de                              ;PUSH	CRECH
(1)  809/    EBD7 : E5                  		PUSH	hl	;to stack for later     ;PUSH	CTRKH
(1)  810/    EBD8 :                     ;stack contains (lowest) BC=arecord, DE=currec, HL=curtrk
(1)  811/    EBD8 : EB                  		EX	DE,HL                           ;EX	DE,HL
(1)  812/    EBD9 : 2A CE F5            		LD	HL,(OFFSET)                     ;LD	HL,(OFFSET)
(1)  813/    EBDC : 19                  		ADD	HL,DE	;HL = curtrk+offset     ;ADD	HL,DE
(1)  814/    EBDD : 44                  		LD	B,H                             ;LD	B,H
(1)  815/    EBDE : 4D                  		LD	C,L                             ;LD	C,L
(1)  816/    EBDF : CD 1E F6            		CALL	SETTRKF	;track set up           ;CALL	SETTRKF
(1)  817/    EBE2 :                     ;note that BC - curtrk is difference to move in bios
(1)  818/    EBE2 : D1                  		POP	DE	;recall curtrk          ;POP	DE
(1)  819/    EBE3 : 2A B5 F5            		LD	HL,(CURTRKA)                    ;LD	HL,(CURTRKA)
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bdos_cpa_ac1.asm) - Page 37 - 3/8/2023 15:39:33


(1)  820/    EBE6 : 73                  		LD	(HL),E                          ;LD	(HL),E
(1)  821/    EBE7 : 23                  		INC	HL                              ;INC	HL
(1)  822/    EBE8 : 72                  		LD	(HL),D	;curtrk updated         ;LD	(HL),D
(1)  823/    EBE9 :                     ;now compute sector as arecord-currec
(1)  824/    EBE9 : D1                  		POP	de	;recall currec          ;POP	CRECH
(1)  825/    EBEA : 2A B7 F5            		LD	HL,(CURRECA)                    ;LD	HL,(CURRECA)
(1)  826/    EBED : 73                  		LD	(HL),e                          ;LD	(HL),CRECL
(1)  827/    EBEE : 23                  		INC	HL                              ;INC	HL
(1)  828/    EBEF : 72                  		LD	(HL),d                          ;LD	(HL),CRECH
(1)  829/    EBF0 : C1                  		POP	bc	;BC=arecord, DE=currec  ;POP	ARECH
(1)  830/    EBF1 : 79                  		LD	A,c                             ;LD	A,ARECL
(1)  831/    EBF2 : 93                  		SUB	e                               ;SUB	CRECL
(1)  832/    EBF3 : 4F                  		LD	c,A                             ;LD	ARECL,A
(1)  833/    EBF4 : 78                  		LD	A,b                             ;LD	A,ARECH
(1)  834/    EBF5 : 9A                  		SBC	A,d                             ;SBC	A,CRECH
(1)  835/    EBF6 : 47                  		LD	b,A                             ;LD	ARECH,A
(1)  836/    EBF7 : 2A D0 F5            		LD	HL,(TRANV)                      ;LD	HL,(TRANV)
(1)  837/    EBFA : EB                  		EX	DE,HL	;BC=sector#, DE=.tran   ;EX	DE,HL
(1)  838/    EBFB : CD 30 F6            		CALL	SECTRAN	;HL = tran(sector)      ;CALL	SECTRAN
(1)  839/    EBFE : 4D                  		LD	C,L                             ;LD	C,L
(1)  840/    EBFF : 44                  		LD	B,H	;BC = tran(sector)      ;LD	B,H
(1)  841/    EC00 : C3 21 F6            		JP	SETSECF	;sector selected        ;JP	SETSECF
(1)  842/    EC03 :                     ;ret
(1)  843/    EC03 :                     ;
(1)  844/    EC03 :                     ;	file control block (fcb) constants
(1)  845/    EC03 : =0E5H               EMPTY		EQU	0E5H		;empty directory entry
(1)  846/    EC03 : =7FH                LSTREC		EQU	127		;last record# in extent
(1)  847/    EC03 : =80H                RECSIZ		EQU	128		;record size
(1)  848/    EC03 : =20H                FCBLEN		EQU	32		;file control block size
(1)  849/    EC03 : =4H                 DIRREC		EQU	RECSIZ/FCBLEN	;directory elts / record
(1)  850/    EC03 : =2H                 DSKSHF		EQU	2		;log2(dirrec)
(1)  851/    EC03 : =3H                 DSKMSK		EQU	DIRREC-1
(1)  852/    EC03 : =5H                 FCBSHF		EQU	5		;log2(fcblen)
(1)  853/    EC03 :                     ;
(1)  854/    EC03 : =0CH                EXTNUM		EQU	12		;extent number field
(1)  855/    EC03 : =1FH                MAXEXT		EQU	31		;largest extent number
(1)  856/    EC03 : =0DH                UBYTES		EQU	13		;unfilled bytes field
(1)  857/    EC03 : =0EH                MODNUM		EQU	14		;data module number
(1)  858/    EC03 : =0FH                MAXMOD		EQU	15		;largest module number
(1)  859/    EC03 : =80H                FWFMSK		EQU	80H		;file write flag is high order modnum
(1)  860/    EC03 : =0FH                NAMLEN		EQU	15		;name length
(1)  861/    EC03 : =0FH                RECCNT		EQU	15		;record count field
(1)  862/    EC03 : =10H                DSKMAP		EQU	16		;disk map field
(1)  863/    EC03 : =1FH                LSTFCB		EQU	FCBLEN-1
(1)  864/    EC03 : =20H                NXTREC		EQU	FCBLEN
(1)  865/    EC03 : =21H                RANREC		EQU	NXTREC+1	;random record field (2 bytes)
(1)  866/    EC03 :                     ;
(1)  867/    EC03 :                     ;	reserved file indicators
(1)  868/    EC03 : =9H                 ROFILE		EQU	9		;high order of first type char
(1)  869/    EC03 : =0AH                INVIS		EQU	10		;invisible file in dir command
(1)  870/    EC03 :                     ;	equ	11	;reserved
(1)  871/    EC03 :                     ;
(1)  872/    EC03 :                     ;	utility functions for file access
(1)  873/    EC03 :                     ;
(1)  874/    EC03 :                     DM_POSITION:
(1)  875/    EC03 :                     ;compute disk map position for vrecord to HL
(1)  876/    EC03 : 21 C3 F5            		LD	HL,BLKSHF
(1)  877/    EC06 : 4E                  		LD	C,(HL)		;shift count to C
(1)  878/    EC07 : 3A E3 F5            		LD	A,(VRECORD)	;current virtual record to A
(1)  879/    EC0A :                     DMPOS0:
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bdos_cpa_ac1.asm) - Page 38 - 3/8/2023 15:39:33


(1)  880/    EC0A : B7                  		OR	A
(1)  881/    EC0B : 1F                  		RRA
(1)  882/    EC0C : 0D                  		DEC	C
(1)  883/    EC0D : 20 FB               		Jr	NZ,DMPOS0
(1)  884/    EC0F :                     ;A = shr(vrecord,blkshf) = vrecord/2**(sect/block)
(1)  885/    EC0F : 47                  		LD	B,A		;save it for later addition
(1)  886/    EC10 : 3E 08               		LD	A,8
(1)  887/    EC12 : 96                  		SUB	(HL)		;8-blkshf to accumulator
(1)  888/    EC13 : 4F                  		LD	C,A		;extent shift count in register c
(1)  889/    EC14 : 3A E2 F5            		LD	A,(EXTVAL)	;extent value ani extmsk
(1)  890/    EC17 :                     DMPOS1:
(1)  891/    EC17 :                     ;blkshf = 3,4,5,6,7, C=5,4,3,2,1
(1)  892/    EC17 :                     ;shift is 4,3,2,1,0
(1)  893/    EC17 : 0D                  		DEC	C
(1)  894/    EC18 : 28 04               		Jr	Z,DMPOS2
(1)  895/    EC1A : B7                  		OR	A
(1)  896/    EC1B : 17                  		RLA
(1)  897/    EC1C : 18 F9               		Jr	DMPOS1
(1)  898/    EC1E :                     DMPOS2:
(1)  899/    EC1E :                     ;arrive here with A = shl(ext and extmsk,7-blkshf)
(1)  900/    EC1E : 80                  		ADD	A,B		;add the previous shr(vrecord,blkshf) value
(1)  901/    EC1F :                     ;A is one of the following values, depending upon alloc
(1)  902/    EC1F :                     ;bks blkshf
(1)  903/    EC1F :                     ;1k   3     v/8 + extval * 16
(1)  904/    EC1F :                     ;2k   4     v/16+ extval * 8
(1)  905/    EC1F :                     ;4k   5     v/32+ extval * 4
(1)  906/    EC1F :                     ;8k   6     v/64+ extval * 2
(1)  907/    EC1F :                     ;16k  7     v/128+extval * 1
(1)  908/    EC1F : C9                  		RET			;with dm_position in A
(1)  909/    EC20 :                     ;
(1)  910/    EC20 :                     GETDM:
(1)  911/    EC20 :                     ;return disk map value from position given by BC
(1)  912/    EC20 : 2A 10 EB            		LD	HL,(INFO)	;base address of file control block
(1)  913/    EC23 : 11 10 00            		LD	DE,DSKMAP
(1)  914/    EC26 : 19                  		ADD	HL,DE		;HL =.diskmap
(1)  915/    EC27 : 09                  		ADD	HL,BC		;index by a single byte value
(1)  916/    EC28 : 3A DD F5            		LD	A,(SINGLE)	;single byte/map entry?
(1)  917/    EC2B : B7                  		OR	A
(1)  918/    EC2C : 28 04               		Jr	Z,GETDMD	;get disk map single byte
(1)  919/    EC2E : 6E                  		LD	L,(HL)
(1)  920/    EC2F : 26 00               		LD	H,0
(1)  921/    EC31 : C9                  		RET			;with HL=00bb
(1)  922/    EC32 :                     GETDMD:
(1)  923/    EC32 : 09                  		ADD	HL,BC		;HL=.fcb(dm+i*2)
(1)  924/    EC33 :                     ;double precision value returned
(1)  925/    EC33 : 5E                  		LD	E,(HL)
(1)  926/    EC34 : 23                  		INC	HL
(1)  927/    EC35 : 56                  		LD	D,(HL)
(1)  928/    EC36 : EB                  		EX	DE,HL
(1)  929/    EC37 : C9                  		RET
(1)  930/    EC38 :                     ;
(1)  931/    EC38 :                     INDEX:
(1)  932/    EC38 :                     ;compute disk block number from current fcb
(1)  933/    EC38 : CD 03 EC            		CALL	DM_POSITION	;0...15 in register A
(1)  934/    EC3B : 4F                  		LD	C,A
(1)  935/    EC3C : 06 00               		LD	B,0
(1)  936/    EC3E : CD 20 EC            		CALL	GETDM		;value to HL
(1)  937/    EC41 : 22 E5 F5            		LD	(ARECORD),HL
(1)  938/    EC44 : C9                  		RET
(1)  939/    EC45 :                     ;
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bdos_cpa_ac1.asm) - Page 39 - 3/8/2023 15:39:33


(1)  940/    EC45 :                     ALLOCATED:
(1)  941/    EC45 :                     ;called following index to see if block allocated
(1)  942/    EC45 : 2A E5 F5            		LD	HL,(ARECORD)
(1)  943/    EC48 : 7D                  		LD	A,L
(1)  944/    EC49 : B4                  		OR	H
(1)  945/    EC4A : C9                  		RET
(1)  946/    EC4B :                     ;
(1)  947/    EC4B :                     ATRAN:
(1)  948/    EC4B :                     ;compute actual record address, assuming index called
(1)  949/    EC4B : 3A C3 F5            		LD	A,(BLKSHF)	;shift count to reg A
(1)  950/    EC4E : 2A E5 F5            		LD	HL,(ARECORD)
(1)  951/    EC51 :                     ATRAN0:
(1)  952/    EC51 : 29                  		ADD	HL,HL
(1)  953/    EC52 : 3D                  		DEC	A
(1)  954/    EC53 : 20 FC               		Jr	NZ,ATRAN0	;shl(arecord,blkshf)
(1)  955/    EC55 : 22 E7 F5            		LD	(ARECORD1),HL	;save shifted block #
(1)  956/    EC58 : 3A C4 F5            		LD	A,(BLKMSK)
(1)  957/    EC5B : 4F                  		LD	C,A		;mask value to C
(1)  958/    EC5C : 3A E3 F5            		LD	A,(VRECORD)
(1)  959/    EC5F : A1                  		AND	C		;masked value in A
(1)  960/    EC60 : B5                  		OR	L
(1)  961/    EC61 : 6F                  		LD	L,A		;to HL
(1)  962/    EC62 : 22 E5 F5            		LD	(ARECORD),HL	;arecord=HL or (vrecord and blkmsk)
(1)  963/    EC65 : C9                  		RET
(1)  964/    EC66 :                     ;
(1)  965/    EC66 :                     GETEXTA:
(1)  966/    EC66 :                     ;get current extent field address to A
(1)  967/    EC66 : 2A 10 EB            		LD	HL,(INFO)
(1)  968/    EC69 : 11 0C 00            		LD	DE,EXTNUM
(1)  969/    EC6C : 19                  		ADD	HL,DE		;HL=.fcb(extnum)
(1)  970/    EC6D : C9                  		RET
(1)  971/    EC6E :                     ;
(1)  972/    EC6E :                     GETFCBA:
(1)  973/    EC6E :                     ;compute reccnt and nxtrec addresses for get/setfcb
(1)  974/    EC6E : 2A 10 EB            		LD	HL,(INFO)
(1)  975/    EC71 : 11 0F 00            		LD	DE,RECCNT
(1)  976/    EC74 : 19                  		ADD	HL,DE
(1)  977/    EC75 : EB                  		EX	DE,HL		;DE=.fcb(reccnt)
(1)  978/    EC76 : 21 11 00            		LD	HL,NXTREC-RECCNT
(1)  979/    EC79 : 19                  		ADD	HL,DE		;HL=.fcb(nxtrec)
(1)  980/    EC7A : C9                  		RET
(1)  981/    EC7B :                     ;
(1)  982/    EC7B :                     GETFCB:
(1)  983/    EC7B :                     ;set variables from currently addressed fcb
(1)  984/    EC7B : CD 6E EC            		CALL	GETFCBA		;addresses in DE, HL
(1)  985/    EC7E : 7E                  		LD	A,(HL)
(1)  986/    EC7F : 32 E3 F5            		LD	(VRECORD),A	;vrecord=fcb(nxtrec)
(1)  987/    EC82 : EB                  		EX	DE,HL
(1)  988/    EC83 : 7E                  		LD	A,(HL)
(1)  989/    EC84 : 32 E1 F5            		LD	(RCOUNT),A	;rcount=fcb(reccnt)
(1)  990/    EC87 : CD 66 EC            		CALL	GETEXTA		;HL=.fcb(extnum)
(1)  991/    EC8A : 3A C5 F5            		LD	A,(EXTMSK)	;extent mask to a
(1)  992/    EC8D : A6                  		AND	(HL)		;fcb(extnum) and extmsk
(1)  993/    EC8E : 32 E2 F5            		LD	(EXTVAL),A
(1)  994/    EC91 : C9                  		RET
(1)  995/    EC92 :                     ;
(1)  996/    EC92 :                     SETFCB:
(1)  997/    EC92 :                     ;place values back into current fcb
(1)  998/    EC92 : CD 6E EC            		CALL	GETFCBA		;addresses to DE, HL
(1)  999/    EC95 : 3A D5 F5            		LD	A,(SEQIO)
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bdos_cpa_ac1.asm) - Page 40 - 3/8/2023 15:39:33


(1) 1000/    EC98 : FE 02               		CP	02
(1) 1001/    EC9A : 20 01               		Jr	NZ,SETFCB1
(1) 1002/    EC9C : AF                  		XOR	A		;check ranfill
(1) 1003/    EC9D :                     SETFCB1:
(1) 1004/    EC9D : 4F                  		LD	C,A		;=1 if sequential i/o
(1) 1005/    EC9E : 3A E3 F5            		LD	A,(VRECORD)
(1) 1006/    ECA1 : 81                  		ADD	A,C
(1) 1007/    ECA2 : 77                  		LD	(HL),A		;fcb(nxtrec)=vrecord+seqio
(1) 1008/    ECA3 : EB                  		EX	DE,HL
(1) 1009/    ECA4 : 3A E1 F5            		LD	A,(RCOUNT)
(1) 1010/    ECA7 : 77                  		LD	(HL),A		;fcb(reccnt)=rcount
(1) 1011/    ECA8 : C9                  		RET
(1) 1012/    ECA9 :                     ;
(1) 1013/    ECA9 :                     HLROTR:
(1) 1014/    ECA9 :                     ;hl rotate right by amount C
(1) 1015/    ECA9 : 0C                  		INC	C		;in case zero
(1) 1016/    ECAA : 0D                  HLROTR0:	DEC	C
(1) 1017/    ECAB : C8                  		RET	Z		;return when zero
(1) 1018/    ECAC : 7C                  		LD	A,H
(1) 1019/    ECAD : B7                  		OR	A
(1) 1020/    ECAE : 1F                  		RRA
(1) 1021/    ECAF : 67                  		LD	H,A		;high byte
(1) 1022/    ECB0 : 7D                  		LD	A,L
(1) 1023/    ECB1 : 1F                  		RRA
(1) 1024/    ECB2 : 6F                  		LD	L,A		;low byte
(1) 1025/    ECB3 : 18 F5               		Jr	HLROTR0
(1) 1026/    ECB5 :                     ;
(1) 1027/    ECB5 :                     ;
(1) 1028/    ECB5 :                     COMPUTE_CS:
(1) 1029/    ECB5 :                     ;compute checksum for current directory buffer
(1) 1030/    ECB5 : 0E 80               		LD	C,RECSIZ	;size of directory buffer
(1) 1031/    ECB7 : 2A B9 F5            		LD	HL,(BUFFA)	;current directory buffer
(1) 1032/    ECBA : AF                  		XOR	A		;clear checksum value
(1) 1033/    ECBB :                     COMPUTECS0:
(1) 1034/    ECBB : 86                  		ADD	A,(HL)
(1) 1035/    ECBC : 23                  		INC	HL
(1) 1036/    ECBD : 0D                  		DEC	C		;cs=cs+buff(recsiz-C)
(1) 1037/    ECBE : 20 FB               		Jr	NZ,COMPUTECS0
(1) 1038/    ECC0 : C9                  		RET	;with checksum in A
(1) 1039/    ECC1 :                     ;
(1) 1040/    ECC1 :                     HLROTL:
(1) 1041/    ECC1 :                     ;rotate the mask in HL by amount in C
(1) 1042/    ECC1 : 0C                  		INC	C		;may be zero
(1) 1043/    ECC2 : 0D                  HLROTL0:	DEC	C
(1) 1044/    ECC3 : C8                  		RET	Z		;return if zero
(1) 1045/    ECC4 : 29                  		ADD	HL,HL
(1) 1046/    ECC5 : 18 FB               		Jr	HLROTL0
(1) 1047/    ECC7 :                     ;
(1) 1048/    ECC7 :                     SET_CDISK:
(1) 1049/    ECC7 :                     ;set a "1" value in curdsk position of BC
(1) 1050/    ECC7 : C5                  		PUSH	BC		;save input parameter
(1) 1051/    ECC8 : 3A 0F EB            		LD	A,(CURDSK)
(1) 1052/    ECCB : 4F                  		LD	C,A		;ready parameter for shift
(1) 1053/    ECCC : 21 01 00            		LD	HL,1		;number to shift
(1) 1054/    ECCF : CD C1 EC            		CALL	HLROTL		;HL = mask to integrate
(1) 1055/    ECD2 : C1                  		POP	BC		;original mask
(1) 1056/    ECD3 : 79                  		LD	A,C
(1) 1057/    ECD4 : B5                  		OR	L
(1) 1058/    ECD5 : 6F                  		LD	L,A
(1) 1059/    ECD6 : 78                  		LD	A,B
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bdos_cpa_ac1.asm) - Page 41 - 3/8/2023 15:39:33


(1) 1060/    ECD7 : B4                  		OR	H
(1) 1061/    ECD8 : 67                  		LD	H,A		;HL = mask or rol(1,curdsk)
(1) 1062/    ECD9 : C9                  		RET
(1) 1063/    ECDA :                     ;
(1) 1064/    ECDA :                     NOWRITE:
(1) 1065/    ECDA :                     ;return TRUE_ if dir checksum difference occurred
(1) 1066/    ECDA : 2A AD F5            		LD	HL,(RODSK)
(1) 1067/    ECDD : 3A 0F EB            loc_D8DB:	LD	A,(CURDSK)
(1) 1068/    ECE0 : 4F                  		LD	C,A
(1) 1069/    ECE1 : CD A9 EC            		CALL	HLROTR
(1) 1070/    ECE4 : 7D                  		LD	A,L
(1) 1071/    ECE5 : E6 01               		AND	1B
(1) 1072/    ECE7 : C9                  		RET			;non zero if nowrite
(1) 1073/    ECE8 :                     ;
(1) 1074/    ECE8 :                     SET_RO:
(1) 1075/    ECE8 :                     ;set current disk to read only
(1) 1076/    ECE8 : 21 AD F5            		LD	HL,RODSK
(1) 1077/    ECEB : 4E                  		LD	C,(HL)
(1) 1078/    ECEC : 23                  		INC	HL
(1) 1079/    ECED : 46                  		LD	B,(HL)
(1) 1080/    ECEE : CD C7 EC            		CALL	SET_CDISK	;sets bit to 1
(1) 1081/    ECF1 : 22 AD F5            		LD	(RODSK),HL
(1) 1082/    ECF4 :                     ;high water mark in directory goes to max
(1) 1083/    ECF4 : 2A C8 F5            		LD	HL,(DIRMAX)
(1) 1084/    ECF7 : 23                  		INC	HL
(1) 1085/    ECF8 : EB                  		EX	DE,HL		;DE = directory max
(1) 1086/    ECF9 : 2A B3 F5            		LD	HL,(CDRMAXA)	;HL = .cdrmax
(1) 1087/    ECFC : 73                  		LD	(HL),E
(1) 1088/    ECFD : 23                  		INC	HL
(1) 1089/    ECFE : 72                  		LD	(HL),D		;cdrmax = dirmax
(1) 1090/    ECFF : C9                  		RET
(1) 1091/    ED00 :                     ;
(1) 1092/    ED00 :                     CHECK_RODIR:
(1) 1093/    ED00 :                     ;check current directory element for read/only status
(1) 1094/    ED00 : CD 1A ED            		CALL	GETDPTRA	;address of element
(1) 1095/    ED03 :                     ;
(1) 1096/    ED03 :                     CHECK_ROFILE:
(1) 1097/    ED03 :                     ;check current buff(dptr) or fcb(0) for r/o status
(1) 1098/    ED03 : 11 09 00            		LD	DE,ROFILE
(1) 1099/    ED06 : 19                  		ADD	HL,DE		;offset to ro bit
(1) 1100/    ED07 : 7E                  		LD	A,(HL)
(1) 1101/    ED08 : 17                  		RLA
(1) 1102/    ED09 : D0                  		RET	NC		;return if not set
(1) 1103/    ED0A : 21 0F E8            loc_D908:	LD	HL,ROFERR
(1) 1104/    ED0D : C3 17 EB            		JP	GOERR;
(1) 1105/    ED10 :                     ;	jmp rof_error ;exit to read only disk message
(1) 1106/    ED10 :                     ;
(1) 1107/    ED10 :                     ;
(1) 1108/    ED10 :                     CHECK_WRITE:
(1) 1109/    ED10 :                     ;check for write protected disk
(1) 1110/    ED10 : CD DA EC            		CALL	NOWRITE
(1) 1111/    ED13 : C8                  		RET	Z		;ok to write if not rodsk
(1) 1112/    ED14 : 21 0D E8            		LD	HL,RODERR
(1) 1113/    ED17 : C3 17 EB            		JP	GOERR
(1) 1114/    ED1A :                     ;	jmp rod_error ;read only disk error
(1) 1115/    ED1A :                     ;
(1) 1116/    ED1A :                     GETDPTRA:
(1) 1117/    ED1A :                     ;compute the address of a directory element at
(1) 1118/    ED1A :                     ;positon dptr in the buffer
(1) 1119/    ED1A : 2A B9 F5            		LD	HL,(BUFFA)
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bdos_cpa_ac1.asm) - Page 42 - 3/8/2023 15:39:33


(1) 1120/    ED1D : 3A E9 F5            		LD	A,(DPTR);
(1) 1121/    ED20 :                     ADDH:
(1) 1122/    ED20 :                     ;HL = HL + A
(1) 1123/    ED20 : 85                  		ADD	A,L
(1) 1124/    ED21 : 6F                  		LD	L,A
(1) 1125/    ED22 : D0                  		RET	NC
(1) 1126/    ED23 :                     ;overflow to H
(1) 1127/    ED23 : 24                  		INC	H
(1) 1128/    ED24 : C9                  		RET
(1) 1129/    ED25 :                     ;
(1) 1130/    ED25 :                     ;
(1) 1131/    ED25 :                     GETMODNUM:
(1) 1132/    ED25 :                     ;compute the address of the module number
(1) 1133/    ED25 :                     ;bring module number to accumulator
(1) 1134/    ED25 :                     ;(high order bit is fwf (file write flag)
(1) 1135/    ED25 : 2A 10 EB            		LD	HL,(INFO)
(1) 1136/    ED28 : 11 0E 00            		LD	DE,MODNUM
(1) 1137/    ED2B : 19                  		ADD	HL,DE		;HL=.fcb(modnum)
(1) 1138/    ED2C : 7E                  		LD	A,(HL)
(1) 1139/    ED2D : C9                  		RET			;A=fcb(modnum)
(1) 1140/    ED2E :                     ;
(1) 1141/    ED2E :                     CLRMODNUM:
(1) 1142/    ED2E :                     ;clear the module number field for user open/make
(1) 1143/    ED2E : CD 25 ED            		CALL	GETMODNUM
(1) 1144/    ED31 : 36 00               		LD	(HL),0		;fcb(modnum)=0
(1) 1145/    ED33 : C9                  		RET
(1) 1146/    ED34 :                     ;
(1) 1147/    ED34 :                     SETFWF:
(1) 1148/    ED34 : CD 25 ED            		CALL	GETMODNUM	;HL=.fcb(modnum), A=fcb(modnum)
(1) 1149/    ED37 :                     ;set fwf (file write flag) to "1"
(1) 1150/    ED37 : F6 80               		OR	FWFMSK
(1) 1151/    ED39 : 77                  		LD	(HL),A		;fcb(modnum)=fcb(modnum) or 80h
(1) 1152/    ED3A :                     ;also returns non zero in accumulator
(1) 1153/    ED3A : C9                  		RET
(1) 1154/    ED3B :                     ;
(1) 1155/    ED3B :                     ;
(1) 1156/    ED3B :                     COMPCDR:
(1) 1157/    ED3B :                     ;return cy if cdrmax > dcnt
(1) 1158/    ED3B : 2A EA F5            		LD	HL,(DCNT)
(1) 1159/    ED3E : EB                  		EX	DE,HL		;DE = directory counter
(1) 1160/    ED3F : 2A B3 F5            		LD	HL,(CDRMAXA)	;HL=.cdrmax
(1) 1161/    ED42 : 7B                  		LD	A,E
(1) 1162/    ED43 : 96                  		SUB	(HL)		;low(dcnt) - low(cdrmax)
(1) 1163/    ED44 : 23                  		INC	HL		;HL = .cdrmax+1
(1) 1164/    ED45 : 7A                  		LD	A,D
(1) 1165/    ED46 : 9E                  		SBC	A,(HL)		;hig(dcnt) - hig(cdrmax)
(1) 1166/    ED47 :                     ;condition dcnt - cdrmax  produces cy if cdrmax>dcnt
(1) 1167/    ED47 : C9                  		RET
(1) 1168/    ED48 :                     ;
(1) 1169/    ED48 :                     SETCDR:
(1) 1170/    ED48 :                     ;if not (cdrmax > dcnt) then cdrmax = dcnt+1
(1) 1171/    ED48 : CD 3B ED            		CALL	COMPCDR
(1) 1172/    ED4B : D8                  		RET	C		;return if cdrmax > dcnt
(1) 1173/    ED4C :                     ;otherwise, HL = .cdrmax+1, DE = dcnt
(1) 1174/    ED4C : 13                  		INC	DE
(1) 1175/    ED4D : 72                  		LD	(HL),D
(1) 1176/    ED4E : 2B                  		DEC	HL
(1) 1177/    ED4F : 73                  		LD	(HL),E
(1) 1178/    ED50 : C9                  		RET
(1) 1179/    ED51 :                     ;
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bdos_cpa_ac1.asm) - Page 43 - 3/8/2023 15:39:33


(1) 1180/    ED51 :                     SUBDH:
(1) 1181/    ED51 :                     ;compute HL = DE - HL
(1) 1182/    ED51 : 7B                  		LD	A,E
(1) 1183/    ED52 : 95                  		SUB	L
(1) 1184/    ED53 : 6F                  		LD	L,A
(1) 1185/    ED54 : 7A                  		LD	A,D
(1) 1186/    ED55 : 9C                  		SBC	A,H
(1) 1187/    ED56 : 67                  		LD	H,A
(1) 1188/    ED57 : C9                  		RET
(1) 1189/    ED58 :                     ;
(1) 1190/    ED58 :                     NEWCHECKSUM:
(1) 1191/    ED58 : 0E FF               		LD	C,TRUE_		;drop through to compute new checksum
(1) 1192/    ED5A :                     CHECKSUM:
(1) 1193/    ED5A :                     ;compute current checksum record and update the
(1) 1194/    ED5A :                     ;directory element if C=TRUE_, or check for = if not
(1) 1195/    ED5A :                     ;drec < chksiz?
(1) 1196/    ED5A : 2A EC F5            		LD	HL,(DREC)
(1) 1197/    ED5D : EB                  		EX	DE,HL
(1) 1198/    ED5E : 2A CC F5            		LD	HL,(CHKSIZ)
(1) 1199/    ED61 : CD 51 ED            		CALL	SUBDH		;DE-HL
(1) 1200/    ED64 : D0                  		RET	NC		;skip checksum if past checksum vector size
(1) 1201/    ED65 :                     ;drec < chksiz, so continue
(1) 1202/    ED65 : C5                  		PUSH	BC		;save init flag
(1) 1203/    ED66 : CD B5 EC            		CALL	COMPUTE_CS	;check sum value to A
(1) 1204/    ED69 : 2A BD F5            		LD	HL,(CHECKA)	;address of check sum vector
(1) 1205/    ED6C : EB                  		EX	DE,HL
(1) 1206/    ED6D : 2A EC F5            		LD	HL,(DREC)	;value of drec
(1) 1207/    ED70 : 19                  		ADD	HL,DE		;HL = .check(drec)
(1) 1208/    ED71 : C1                  		POP	BC		;recall TRUE_=0ffh or FALSE_=00 to C
(1) 1209/    ED72 : 0C                  		INC	C		;0ffh produces zero flag
(1) 1210/    ED73 : 28 09               		Jr	Z,INITIAL_CS
(1) 1211/    ED75 :                     ;not initializing, compare
(1) 1212/    ED75 : BE                  		CP	(HL)		;compute_cs=check(drec)?
(1) 1213/    ED76 : C8                  		RET	Z		;no message if ok
(1) 1214/    ED77 :                     ;checksum error, are we beyond
(1) 1215/    ED77 :                     ;the end of the disk?
(1) 1216/    ED77 : CD 3B ED            		CALL	COMPCDR
(1) 1217/    ED7A : D0                  		RET	NC		;no message if so
(1) 1218/    ED7B : C3 E8 EC            		jp	SET_RO		;read/only disk set
(1) 1219/    ED7E :                     INITIAL_CS:
(1) 1220/    ED7E :                     ;initializing the checksum
(1) 1221/    ED7E : 77                  		LD	(HL),A
(1) 1222/    ED7F : C9                  		RET
(1) 1223/    ED80 :                     ;
(1) 1224/    ED80 :                     ;
(1) 1225/    ED80 :                     WRDIR:
(1) 1226/    ED80 :                     ;write the current directory entry, set checksum
(1) 1227/    ED80 : CD 58 ED            		CALL	NEWCHECKSUM	;initialize entry
(1) 1228/    ED83 : CD 98 ED            		CALL	SETDIR		;directory dma
(1) 1229/    ED86 : 0E 01               		LD	C,1		;indicates a write directory operation
(1) 1230/    ED88 : CD 82 EB            		CALL	WRBUFF		;write the buffer
(1) 1231/    ED8B : 18 06               		Jr	SETDATA		;to data dma address
(1) 1232/    ED8D :                     ;ret
(1) 1233/    ED8D :                     ;
(1) 1234/    ED8D :                     RD_DIR:
(1) 1235/    ED8D :                     ;read a directory entry into the directory buffer
(1) 1236/    ED8D : CD 98 ED            		CALL	SETDIR		;directory dma
(1) 1237/    ED90 : CD 7D EB            		CALL	RDBUFF		;directory record loaded
(1) 1238/    ED93 :                     ; jmp setdata to data dma address
(1) 1239/    ED93 :                     ;ret
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bdos_cpa_ac1.asm) - Page 44 - 3/8/2023 15:39:33


(1) 1240/    ED93 :                     ;
(1) 1241/    ED93 :                     SETDATA:
(1) 1242/    ED93 :                     ;set data dma address
(1) 1243/    ED93 : 21 B1 F5            		LD	HL,DMAAD
(1) 1244/    ED96 : 18 03               		Jr	SETDMA		;to complete the call
(1) 1245/    ED98 :                     ;
(1) 1246/    ED98 :                     SETDIR:
(1) 1247/    ED98 :                     ;set directory dma address
(1) 1248/    ED98 : 21 B9 F5            		LD	HL,BUFFA	;jmp setdma to complete call
(1) 1249/    ED9B :                     ;
(1) 1250/    ED9B :                     SETDMA:
(1) 1251/    ED9B :                     ;HL=.dma address to set (i.e., buffa or dmaad)
(1) 1252/    ED9B : 4E                  		LD	C,(HL)
(1) 1253/    ED9C : 23                  		INC	HL
(1) 1254/    ED9D : 46                  		LD	B,(HL)		;parameter ready
(1) 1255/    ED9E : C3 24 F6            		JP	SETDMAF
(1) 1256/    EDA1 :                     ;
(1) 1257/    EDA1 :                     ;
(1) 1258/    EDA1 :                     DIR_TO_USER:
(1) 1259/    EDA1 :                     ;copy the directory entry to the user buffer
(1) 1260/    EDA1 :                     ;after call to search or searchn by user code
(1) 1261/    EDA1 : 2A B9 F5            		LD	HL,(BUFFA)
(1) 1262/    EDA4 : EB                  		EX	DE,HL		;source is directory buffer
(1) 1263/    EDA5 : 2A B1 F5            		LD	HL,(DMAAD)	;destination is user dma address
(1) 1264/    EDA8 : 0E 80               		LD	C,RECSIZ	;copy entire record
(1) 1265/    EDAA : C3 1C EB            		JP	MOVE
(1) 1266/    EDAD :                     ;ret
(1) 1267/    EDAD :                     ;
(1) 1268/    EDAD :                     END_OF_DIR:
(1) 1269/    EDAD :                     ;return zero flag if at end of directory, non zero
(1) 1270/    EDAD :                     ;if not at end (end of dir if dcnt = 0ffffh)
(1) 1271/    EDAD : 21 EA F5            		LD	HL,DCNT
(1) 1272/    EDB0 : 7E                  		LD	A,(HL)		;may be 0ffh
(1) 1273/    EDB1 : 23                  		INC	HL
(1) 1274/    EDB2 : BE                  		CP	(HL)		;low(dcnt) = high(dcnt)?
(1) 1275/    EDB3 : C0                  		RET	NZ		;non zero returned if different
(1) 1276/    EDB4 :                     ;high and low the same, = 0ffh?
(1) 1277/    EDB4 : 3C                  		INC	A		;0ffh becomes 00 if so
(1) 1278/    EDB5 : C9                  		RET
(1) 1279/    EDB6 :                     ;
(1) 1280/    EDB6 :                     SET_END_DIR:
(1) 1281/    EDB6 :                     ;set dcnt to the end of the directory
(1) 1282/    EDB6 : 21 FF FF            		LD	HL,ENDDIR
(1) 1283/    EDB9 : 22 EA F5            		LD	(DCNT),HL
(1) 1284/    EDBC : C9                  		RET
(1) 1285/    EDBD :                     ;
(1) 1286/    EDBD :                     READ_DIR:
(1) 1287/    EDBD :                     ;read next directory entry, with C=TRUE_ if initializing
(1) 1288/    EDBD : 2A C8 F5            		LD	HL,(DIRMAX)
(1) 1289/    EDC0 : EB                  		EX	DE,HL		;in preparation for subtract
(1) 1290/    EDC1 : 2A EA F5            		LD	HL,(DCNT)
(1) 1291/    EDC4 : 23                  		INC	HL
(1) 1292/    EDC5 : 22 EA F5            		LD	(DCNT),HL	;dcnt=dcnt+1
(1) 1293/    EDC8 :                     ;continue while dirmax >= dcnt (dirmax-dcnt no cy)
(1) 1294/    EDC8 : CD 51 ED            		CALL	SUBDH		;DE-HL
(1) 1295/    EDCB : 30 02               		Jr	NC,READ_DIR0
(1) 1296/    EDCD :                     ;yes, set dcnt to end of directory
(1) 1297/    EDCD : 18 E7               		Jr	SET_END_DIR;
(1) 1298/    EDCF :                     ;		ret				;
(1) 1299/    EDCF :                     READ_DIR0:
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bdos_cpa_ac1.asm) - Page 45 - 3/8/2023 15:39:33


(1) 1300/    EDCF :                     ;not at end of directory, seek next element
(1) 1301/    EDCF :                     ;initialization flag is in C
(1) 1302/    EDCF : 3A EA F5            		LD	A,(DCNT)
(1) 1303/    EDD2 : E6 03               		AND	DSKMSK		;low(dcnt) and dskmsk
(1) 1304/    EDD4 : 06 05               		LD	B,FCBSHF	;to multiply by fcb size
(1) 1305/    EDD6 :                     READ_DIR1:
(1) 1306/    EDD6 : 87                  		ADD	A,A
(1) 1307/    EDD7 : 05                  		DEC	B
(1) 1308/    EDD8 : 20 FC               		Jr	NZ,READ_DIR1
(1) 1309/    EDDA :                     ;A = (low(dcnt) and dskmsk) shl fcbshf
(1) 1310/    EDDA : 32 E9 F5            		LD	(DPTR),A	;ready for next dir operation
(1) 1311/    EDDD : B7                  		OR	A
(1) 1312/    EDDE : C0                  		RET	NZ		;return if not a new record
(1) 1313/    EDDF : C5                  		PUSH	BC		;save initialization flag C
(1) 1314/    EDE0 : CD 8D EB            		CALL	SEEK_DIR	;seek proper record
(1) 1315/    EDE3 : CD 8D ED            		CALL	RD_DIR		;read the directory record
(1) 1316/    EDE6 : C1                  		POP	BC		;recall initialization flag
(1) 1317/    EDE7 : C3 5A ED            		JP	CHECKSUM	;checksum the directory elt
(1) 1318/    EDEA :                     ;ret
(1) 1319/    EDEA :                     ;
(1) 1320/    EDEA :                     ;
(1) 1321/    EDEA :                     GETALLOCBIT:
(1) 1322/    EDEA :                     ;given allocation vector position BC, return with byte
(1) 1323/    EDEA :                     ;containing BC shifted so that the least significant
(1) 1324/    EDEA :                     ;bit is in the low order accumulator position.  HL is
(1) 1325/    EDEA :                     ;the address of the byte for possible replacement in
(1) 1326/    EDEA :                     ;memory upon return, and D contains the number of shifts
(1) 1327/    EDEA :                     ;required to place the returned value back into position
(1) 1328/    EDEA : 79                  		LD	A,C
(1) 1329/    EDEB : E6 07               		AND	111B
(1) 1330/    EDED : 3C                  		INC	A
(1) 1331/    EDEE : 5F                  		LD	E,A
(1) 1332/    EDEF : 57                  		LD	D,A
(1) 1333/    EDF0 :                     ;d and e both contain the number of bit positions to shift
(1) 1334/    EDF0 : 79                  		LD	A,C
(1) 1335/    EDF1 : 0F                  		RRCA
(1) 1336/    EDF2 : 0F                  		RRCA
(1) 1337/    EDF3 : 0F                  		RRCA
(1) 1338/    EDF4 : E6 1F               		AND	11111B
(1) 1339/    EDF6 : 4F                  		LD	C,A		;C shr 3 to C
(1) 1340/    EDF7 : 78                  		LD	A,B
(1) 1341/    EDF8 : 87                  		ADD	A,A
(1) 1342/    EDF9 : 87                  		ADD	A,A
(1) 1343/    EDFA : 87                  		ADD	A,A
(1) 1344/    EDFB : 87                  		ADD	A,A
(1) 1345/    EDFC : 87                  		ADD	A,A		;B shl 5
(1) 1346/    EDFD : B1                  		OR	C
(1) 1347/    EDFE : 4F                  		LD	C,A		;bbbccccc to C
(1) 1348/    EDFF : 78                  		LD	A,B
(1) 1349/    EE00 : 0F                  		RRCA
(1) 1350/    EE01 : 0F                  		RRCA
(1) 1351/    EE02 : 0F                  		RRCA
(1) 1352/    EE03 : E6 1F               		AND	11111B
(1) 1353/    EE05 : 47                  		LD	B,A		;BC shr 3 to BC
(1) 1354/    EE06 : 2A BF F5            		LD	HL,(ALLOCA)	;base address of allocation vector
(1) 1355/    EE09 : 09                  		ADD	HL,BC
(1) 1356/    EE0A : 7E                  		LD	A,(HL)		;byte to A, hl = .alloc(BC shr 3)
(1) 1357/    EE0B :                     ;now move the bit to the low order position of A
(1) 1358/    EE0B : 07                  ROTL:		RLCA
(1) 1359/    EE0C : 1D                  		DEC	E
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bdos_cpa_ac1.asm) - Page 46 - 3/8/2023 15:39:33


(1) 1360/    EE0D : 20 FC               		Jr	NZ,ROTL
(1) 1361/    EE0F : C9                  		RET
(1) 1362/    EE10 :                     ;
(1) 1363/    EE10 :                     ;
(1) 1364/    EE10 :                     SETALLOCBIT:
(1) 1365/    EE10 :                     ;BC is the bit position of ALLOC to set or reset.  The
(1) 1366/    EE10 :                     ;value of the bit is in register E.
(1) 1367/    EE10 : D5                  		PUSH	DE
(1) 1368/    EE11 : CD EA ED            		CALL	GETALLOCBIT	;shifted val A, count in D
(1) 1369/    EE14 : E6 FE               		AND	11111110B	;mask low bit to zero (may be set)
(1) 1370/    EE16 : C1                  		POP	BC
(1) 1371/    EE17 : B1                  		OR	C		;low bit of C is masked into A
(1) 1372/    EE18 :                     ;	jmp rotr ;to rotate back into proper position
(1) 1373/    EE18 :                     ;ret
(1) 1374/    EE18 :                     ROTR:
(1) 1375/    EE18 :                     ;byte value from ALLOC is in register A, with shift count
(1) 1376/    EE18 :                     ;in register C (to place bit back into position), and
(1) 1377/    EE18 :                     ;target ALLOC position in registers HL, rotate and replace
(1) 1378/    EE18 : 0F                  		RRCA
(1) 1379/    EE19 : 15                  		DEC	D
(1) 1380/    EE1A : 20 FC               		Jr	NZ,ROTR		;back into position
(1) 1381/    EE1C : 77                  		LD	(HL),A		;back to ALLOC
(1) 1382/    EE1D : C9                  		RET
(1) 1383/    EE1E :                     ;
(1) 1384/    EE1E :                     SCANDM:
(1) 1385/    EE1E :                     ;scan the disk map addressed by dptr for non-zero
(1) 1386/    EE1E :                     ;entries, the allocation vector entry corresponding
(1) 1387/    EE1E :                     ;to a non-zero entry is set to the value of C (0,1)
(1) 1388/    EE1E : CD 1A ED            		CALL	GETDPTRA	;HL = buffa + dptr
(1) 1389/    EE21 :                     ;HL addresses the beginning of the directory entry
(1) 1390/    EE21 : 11 10 00            		LD	DE,DSKMAP
(1) 1391/    EE24 : 19                  		ADD	HL,DE		;hl now addresses the disk map
(1) 1392/    EE25 : C5                  		PUSH	BC		;save the 0/1 bit to set
(1) 1393/    EE26 : 0E 11               		LD	C,FCBLEN-DSKMAP+1	;size of single byte disk map + 1
(1) 1394/    EE28 :                     SCANDM0:
(1) 1395/    EE28 :                     ;loop once for each disk map entry
(1) 1396/    EE28 : D1                  		POP	DE		;recall bit parity
(1) 1397/    EE29 : 0D                  		DEC	C
(1) 1398/    EE2A : C8                  		RET	Z		;all done scanning?
(1) 1399/    EE2B :                     ;no, get next entry for scan
(1) 1400/    EE2B : D5                  		PUSH	DE		;replace bit parity
(1) 1401/    EE2C : 3A DD F5            		LD	A,(SINGLE)
(1) 1402/    EE2F : B7                  		OR	A
(1) 1403/    EE30 : 28 07               		Jr	Z,SCANDM1
(1) 1404/    EE32 :                     ;single byte scan operation
(1) 1405/    EE32 : C5                  		PUSH	BC		;save counter
(1) 1406/    EE33 : E5                  		PUSH	HL		;save map address
(1) 1407/    EE34 : 4E                  		LD	C,(HL)
(1) 1408/    EE35 : 06 00               		LD	B,0		;BC=block#
(1) 1409/    EE37 : 18 06               		Jr	SCANDM2
(1) 1410/    EE39 :                     SCANDM1:
(1) 1411/    EE39 :                     ;double byte scan operation
(1) 1412/    EE39 : 0D                  		DEC	C		;count for double byte
(1) 1413/    EE3A : C5                  		PUSH	BC		;save counter
(1) 1414/    EE3B : 4E                  		LD	C,(HL)
(1) 1415/    EE3C : 23                  		INC	HL
(1) 1416/    EE3D : 46                  		LD	B,(HL)		;BC=block#
(1) 1417/    EE3E : E5                  		PUSH	HL		;save map address
(1) 1418/    EE3F :                     SCANDM2:
(1) 1419/    EE3F :                     ;arrive here with BC=block#, E=0/1
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bdos_cpa_ac1.asm) - Page 47 - 3/8/2023 15:39:33


(1) 1420/    EE3F : 79                  		LD	A,C
(1) 1421/    EE40 : B0                  		OR	B		;skip if = 0000
(1) 1422/    EE41 : 28 0A               		Jr	Z,SCANM3
(1) 1423/    EE43 : 2A C6 F5            		LD	HL,(MAXALL)	;check invalid index
(1) 1424/    EE46 : 7D                  		LD	A,L
(1) 1425/    EE47 : 91                  		SUB	C
(1) 1426/    EE48 : 7C                  		LD	A,H
(1) 1427/    EE49 : 98                  		SBC	A,B		;maxall - block#
(1) 1428/    EE4A : D4 10 EE            		CALL	NC,SETALLOCBIT	;
(1) 1429/    EE4D :                     ;bit set to 0/1
(1) 1430/    EE4D :                     SCANM3:		;
(1) 1431/    EE4D : E1                  		POP	HL
(1) 1432/    EE4E : 23                  		INC	HL		;to next bit position
(1) 1433/    EE4F : C1                  		POP	BC		;recall counter
(1) 1434/    EE50 : 18 D6               		Jr	SCANDM0		;for another item
(1) 1435/    EE52 :                     ;
(1) 1436/    EE52 :                     INITIALIZE:
(1) 1437/    EE52 :                     ;initialize the current disk
(1) 1438/    EE52 :                     ;lret = FALSE_ ;set to TRUE_ if _ file exists
(1) 1439/    EE52 :                     ;compute the length of the allocation vector - 2
(1) 1440/    EE52 : 2A C6 F5            		LD	HL,(MAXALL)
(1) 1441/    EE55 : 0E 03               		LD	C,3		;perform maxall/8
(1) 1442/    EE57 :                     ;number of bytes in alloc vector is (maxall/8)+1
(1) 1443/    EE57 : CD A9 EC            		CALL	HLROTR
(1) 1444/    EE5A : 23                  		INC	HL		;HL = maxall/8+1
(1) 1445/    EE5B : 44                  		LD	B,H
(1) 1446/    EE5C : 4D                  		LD	C,L		;count down BC til zero
(1) 1447/    EE5D : 2A BF F5            		LD	HL,(ALLOCA)	;base of allocation vector
(1) 1448/    EE60 :                     ;fill the allocation vector with zeros
(1) 1449/    EE60 :                     INITIAL0:
(1) 1450/    EE60 : 36 00               		LD	(HL),0
(1) 1451/    EE62 : 23                  		INC	HL		;alloc(i)=0
(1) 1452/    EE63 : 0B                  		DEC	BC		;count length down
(1) 1453/    EE64 : 78                  		LD	A,B
(1) 1454/    EE65 : B1                  		OR	C
(1) 1455/    EE66 : 20 F8               		Jr	NZ,INITIAL0
(1) 1456/    EE68 :                     ;set the reserved space for the directory
(1) 1457/    EE68 : 2A CA F5            		LD	HL,(DIRBLK)
(1) 1458/    EE6B : EB                  		EX	DE,HL
(1) 1459/    EE6C : 2A BF F5            		LD	HL,(ALLOCA)	;HL=.alloc()
(1) 1460/    EE6F : 73                  		LD	(HL),E
(1) 1461/    EE70 : 23                  		INC	HL
(1) 1462/    EE71 : 72                  		LD	(HL),D		;sets reserved directory blks
(1) 1463/    EE72 :                     ;allocation vector initialized, home disk
(1) 1464/    EE72 : CD 6C EB            		CALL	HOME
(1) 1465/    EE75 :                     ;cdrmax = 3 (scans at least one directory record)
(1) 1466/    EE75 : 2A B3 F5            		LD	HL,(CDRMAXA)
(1) 1467/    EE78 : 36 03               		LD	(HL),3
(1) 1468/    EE7A : 23                  		INC	HL
(1) 1469/    EE7B : 36 00               		LD	(HL),0
(1) 1470/    EE7D :                     ;cdrmax = 0000
(1) 1471/    EE7D : CD B6 ED            		CALL	SET_END_DIR	;dcnt = enddir
(1) 1472/    EE80 :                     ;read directory entries and check for allocated storage
(1) 1473/    EE80 :                     INITIAL2:
(1) 1474/    EE80 : 0E FF               		LD	C,TRUE_
(1) 1475/    EE82 : CD BD ED            		CALL	READ_DIR
(1) 1476/    EE85 : CD AD ED            		CALL	END_OF_DIR
(1) 1477/    EE88 : C8                  		RET	Z		;return if end of directory
(1) 1478/    EE89 :                     ;not end of directory, valid entry?
(1) 1479/    EE89 : CD 1A ED            		CALL	GETDPTRA	;HL = buffa + dptr
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bdos_cpa_ac1.asm) - Page 48 - 3/8/2023 15:39:33


(1) 1480/    EE8C : 7E                  		LD	A,(HL)
(1) 1481/    EE8D : FE E5               		CP	EMPTY
(1) 1482/    EE8F : 28 EF               		Jr	Z,INITIAL2	;go get another item
(1) 1483/    EE91 : 23                  		inc	hl
(1) 1484/    EE92 : 7E                  		ld	a, (hl)
(1) 1485/    EE93 : 2B                  		dec	hl
(1) 1486/    EE94 : C6 10               		add	a, 10h
(1) 1487/    EE96 : FE 11               		cp	11h
(1) 1488/    EE98 : 38 E6               		jr	c, initial2
(1) 1489/    EE9A :                     ;not empty, user code the same?
(1) 1490/    EE9A : 3A 0E EB            		LD	A,(USRCODE)
(1) 1491/    EE9D : BE                  		CP	(HL)
(1) 1492/    EE9E : 20 0A               		Jr	NZ,PDOLLAR
(1) 1493/    EEA0 :                     ;same user code, check for '$' submit
(1) 1494/    EEA0 : 23                  		INC	HL
(1) 1495/    EEA1 : 7E                  		LD	A,(HL)		;first character
(1) 1496/    EEA2 : D6 24               		SUB	'$'		;dollar file?
(1) 1497/    EEA4 : 20 04               		Jr	NZ,PDOLLAR
(1) 1498/    EEA6 :                     ;dollar file found, mark in lret
(1) 1499/    EEA6 : 3D                  		DEC	A
(1) 1500/    EEA7 : 32 12 EB            		LD	(LRET),A	;lret = 255
(1) 1501/    EEAA :                     PDOLLAR:
(1) 1502/    EEAA :                     ;now scan the disk map for allocated blocks
(1) 1503/    EEAA : 0E 01               		LD	C,1		;set to allocated
(1) 1504/    EEAC : CD 1E EE            		CALL	SCANDM
(1) 1505/    EEAF : CD 48 ED            		CALL	SETCDR		;set cdrmax to dcnt
(1) 1506/    EEB2 : 18 CC               		Jr	INITIAL2	;for another entry
(1) 1507/    EEB4 :                     ;
(1) 1508/    EEB4 :                     COPY_DIRLOC:
(1) 1509/    EEB4 :                     ;copy directory location to lret following
(1) 1510/    EEB4 :                     ;delete, rename, ... ops
(1) 1511/    EEB4 : 3A D4 F5            		LD	A,(DIRLOC)
(1) 1512/    EEB7 : C3 C0 EA            		JP	STA_RET;
(1) 1513/    EEBA :                     ;	ret						;
(1) 1514/    EEBA :                     ;
(1) 1515/    EEBA :                     COMPEXT:
(1) 1516/    EEBA :                     ;compare extent# in A with that in C, return nonzero
(1) 1517/    EEBA :                     ;if they do not match
(1) 1518/    EEBA : C5                  		PUSH	BC		;save C's original value
(1) 1519/    EEBB : F5                  		PUSH	AF
(1) 1520/    EEBC : 3A C5 F5            		LD	A,(EXTMSK)
(1) 1521/    EEBF : 2F                  		CPL
(1) 1522/    EEC0 : 47                  		LD	B,A
(1) 1523/    EEC1 :                     ;B has negated form of extent mask
(1) 1524/    EEC1 : 79                  		LD	A,C
(1) 1525/    EEC2 : A0                  		AND	B
(1) 1526/    EEC3 : 4F                  		LD	C,A		;low bits removed from C
(1) 1527/    EEC4 : F1                  		POP	AF
(1) 1528/    EEC5 : A0                  		AND	B		;low bits removed from A
(1) 1529/    EEC6 : 91                  		SUB	C
(1) 1530/    EEC7 : E6 1F               		AND	MAXEXT		;set flags
(1) 1531/    EEC9 : C1                  		POP	BC		;restore original values
(1) 1532/    EECA : C9                  		RET
(1) 1533/    EECB :                     ;
(1) 1534/    EECB :                     SEARCH:
(1) 1535/    EECB :                     ;search for directory element of length C at info
(1) 1536/    EECB : 3E FF               		LD	A,0FFH
(1) 1537/    EECD : 32 D4 F5            		LD	(DIRLOC),A	;changed if actually found
(1) 1538/    EED0 : 21 D8 F5            		LD	HL,SEARCHL
(1) 1539/    EED3 : 71                  		LD	(HL),C		;searchl = C
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bdos_cpa_ac1.asm) - Page 49 - 3/8/2023 15:39:33


(1) 1540/    EED4 : 2A 10 EB            		LD	HL,(INFO)
(1) 1541/    EED7 : 22 D9 F5            		LD	(SEARCHA),HL	;searcha = info
(1) 1542/    EEDA : CD B6 ED            		CALL	SET_END_DIR	;dcnt = enddir
(1) 1543/    EEDD : CD 6C EB            		CALL	HOME		;to start at the beginning
(1) 1544/    EEE0 :                     ;(drop through to searchn)			;
(1) 1545/    EEE0 :                     ;
(1) 1546/    EEE0 :                     SEARCHN:
(1) 1547/    EEE0 :                     ;search for the next directory element, assuming
(1) 1548/    EEE0 :                     ;a previous call on search which sets searcha and
(1) 1549/    EEE0 :                     ;searchl
(1) 1550/    EEE0 : 0E 00               		LD	C,FALSE_
(1) 1551/    EEE2 : CD BD ED            		CALL	READ_DIR	;read next dir element
(1) 1552/    EEE5 : CD AD ED            		CALL	END_OF_DIR
(1) 1553/    EEE8 : 28 52               		Jr	Z,SEARCH_FIN	;skip to end if so
(1) 1554/    EEEA :                     ;not end of directory, scan for match
(1) 1555/    EEEA : 2A D9 F5            		LD	HL,(SEARCHA)
(1) 1556/    EEED : EB                  		EX	DE,HL		;DE=beginning of user fcb
(1) 1557/    EEEE : 1A                  		LD	A,(DE)		;first character
(1) 1558/    EEEF : FE E5               		CP	EMPTY		;keep scanning if empty
(1) 1559/    EEF1 : 28 07               		Jr	Z,SEARCHNEXT
(1) 1560/    EEF3 :                     ;not empty, may be end of logical directory
(1) 1561/    EEF3 : D5                  		PUSH	DE		;save search address
(1) 1562/    EEF4 : CD 3B ED            		CALL	COMPCDR		;past logical end?
(1) 1563/    EEF7 : D1                  		POP	DE		;recall address
(1) 1564/    EEF8 : 30 42               		Jr	NC,SEARCH_FIN	;artificial stop
(1) 1565/    EEFA :                     SEARCHNEXT:
(1) 1566/    EEFA : CD 1A ED            		CALL	GETDPTRA	;HL = buffa+dptr
(1) 1567/    EEFD : 3A D8 F5            		LD	A,(SEARCHL)
(1) 1568/    EF00 : 4F                  		LD	C,A		;length of search to c
(1) 1569/    EF01 : 06 00               		LD	B,0		;b counts up, c counts down
(1) 1570/    EF03 :                     SEARCHLOOP:
(1) 1571/    EF03 : 79                  		LD	A,C
(1) 1572/    EF04 : B7                  		OR	A
(1) 1573/    EF05 : 28 24               		Jr	Z,ENDSEARCH
(1) 1574/    EF07 : 1A                  		LD	A,(DE)
(1) 1575/    EF08 : FE 3F               		CP	'?'
(1) 1576/    EF0A : 28 19               		Jr	Z,SEARCHOK	;? matches all
(1) 1577/    EF0C :                     ;scan next character if not ubytes
(1) 1578/    EF0C : 78                  		LD	A,B
(1) 1579/    EF0D : FE 0D               		CP	UBYTES
(1) 1580/    EF0F : 28 14               		Jr	Z,SEARCHOK
(1) 1581/    EF11 :                     ;not the ubytes field, extent field?
(1) 1582/    EF11 : FE 0C               		CP	EXTNUM		;may be extent field
(1) 1583/    EF13 : 1A                  		LD	A,(DE)		;fcb character
(1) 1584/    EF14 : 28 07               		Jr	Z,SEARCHEXT	;skip to search extent
(1) 1585/    EF16 : 96                  		SUB	(HL)
(1) 1586/    EF17 : E6 7F               		AND	7FH		;mask-out flags/extent modulus
(1) 1587/    EF19 : 20 C5               		Jr	NZ,SEARCHN	;skip if not matched
(1) 1588/    EF1B : 18 08               		Jr	SEARCHOK	;matched character
(1) 1589/    EF1D :                     SEARCHEXT:
(1) 1590/    EF1D :                     ;A has fcb character
(1) 1591/    EF1D :                     ;attempt an extent # match
(1) 1592/    EF1D : C5                  		PUSH	BC		;save counters
(1) 1593/    EF1E : 4E                  		LD	C,(HL)		;directory character to c
(1) 1594/    EF1F : CD BA EE            		CALL	COMPEXT		;compare user/dir char
(1) 1595/    EF22 : C1                  		POP	BC		;recall counters
(1) 1596/    EF23 : 20 BB               		Jr	NZ,SEARCHN	;skip if no match
(1) 1597/    EF25 :                     SEARCHOK:
(1) 1598/    EF25 :                     ;current character matches
(1) 1599/    EF25 : 13                  		INC	DE
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bdos_cpa_ac1.asm) - Page 50 - 3/8/2023 15:39:33


(1) 1600/    EF26 : 23                  		INC	HL
(1) 1601/    EF27 : 04                  		INC	B
(1) 1602/    EF28 : 0D                  		DEC	C
(1) 1603/    EF29 : 18 D8               		Jr	SEARCHLOOP
(1) 1604/    EF2B :                     ENDSEARCH:
(1) 1605/    EF2B :                     ;entire name matches, return dir position
(1) 1606/    EF2B : 3A EA F5            		LD	A,(DCNT)
(1) 1607/    EF2E : E6 03               		AND	DSKMSK
(1) 1608/    EF30 : 32 12 EB            		LD	(LRET),A
(1) 1609/    EF33 :                     ;lret = low(dcnt) and 11b
(1) 1610/    EF33 : 21 D4 F5            		LD	HL,DIRLOC
(1) 1611/    EF36 : 7E                  		LD	A,(HL)
(1) 1612/    EF37 : 17                  		RLA
(1) 1613/    EF38 : D0                  		RET	NC		;dirloc=0ffh?
(1) 1614/    EF39 :                     ;yes, change it to 0 to mark as found
(1) 1615/    EF39 : AF                  		XOR	A
(1) 1616/    EF3A : 77                  		LD	(HL),A		;dirloc=0
(1) 1617/    EF3B : C9                  		RET
(1) 1618/    EF3C :                     SEARCH_FIN:
(1) 1619/    EF3C :                     ;end of directory, or empty name
(1) 1620/    EF3C : CD B6 ED            		CALL	SET_END_DIR	;may be artifical end
(1) 1621/    EF3F : 3E FF               		LD	A,255
(1) 1622/    EF41 : C3 C0 EA            		JP	STA_RET;
(1) 1623/    EF44 :                     ;
(1) 1624/    EF44 :                     ;
(1) 1625/    EF44 :                     DELETE:
(1) 1626/    EF44 :                     ;delete the currently addressed file
(1) 1627/    EF44 : CD 10 ED            		CALL	CHECK_WRITE	;write protected?
(1) 1628/    EF47 : 0E 0C               		LD	C,EXTNUM
(1) 1629/    EF49 : CD CB EE            		CALL	SEARCH		;search through file type
(1) 1630/    EF4C :                     DELETE0:
(1) 1631/    EF4C :                     ;loop while directory matches
(1) 1632/    EF4C : CD AD ED            		CALL	END_OF_DIR
(1) 1633/    EF4F : C8                  		RET	Z		;stop if end
(1) 1634/    EF50 :                     ;set each non zero disk map entry to 0
(1) 1635/    EF50 :                     ;in the allocation vector
(1) 1636/    EF50 :                     ;may be r/o file
(1) 1637/    EF50 : CD 00 ED            		CALL	CHECK_RODIR	;ro disk error if found
(1) 1638/    EF53 : CD 1A ED            		CALL	GETDPTRA	;HL=.buff(dptr)
(1) 1639/    EF56 : 36 E5               		LD	(HL),EMPTY
(1) 1640/    EF58 : 0E 00               		LD	C,0
(1) 1641/    EF5A : CD 1E EE            		CALL	SCANDM		;alloc elts set to 0
(1) 1642/    EF5D : CD 80 ED            		CALL	WRDIR		;write the directory
(1) 1643/    EF60 : CD E0 EE            		CALL	SEARCHN		;to next element
(1) 1644/    EF63 : 18 E7               		Jr	DELETE0		;for another record
(1) 1645/    EF65 :                     ;
(1) 1646/    EF65 :                     GET_BLOCK:
(1) 1647/    EF65 :                     ;given allocation vector position BC, find the zero bit
(1) 1648/    EF65 :                     ;closest to this position by searching left and right.
(1) 1649/    EF65 :                     ;if found, set the bit to one and return the bit position
(1) 1650/    EF65 :                     ;in hl.  if not found (i.e., we pass 0 on the left, or
(1) 1651/    EF65 :                     ;maxall on the right), return 0000 in hl
(1) 1652/    EF65 : 50                  		LD	D,B
(1) 1653/    EF66 : 59                  		LD	E,C		;copy of starting position to de
(1) 1654/    EF67 :                     LEFTTST:
(1) 1655/    EF67 : 79                  		LD	A,C
(1) 1656/    EF68 : B0                  		OR	B
(1) 1657/    EF69 : 28 0B               		Jr	Z,RIGHTTST	;skip if left=0000
(1) 1658/    EF6B :                     ;left not at position zero, bit zero?
(1) 1659/    EF6B : 0B                  		DEC	BC
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bdos_cpa_ac1.asm) - Page 51 - 3/8/2023 15:39:33


(1) 1660/    EF6C : D5                  		PUSH	DE
(1) 1661/    EF6D : C5                  		PUSH	BC		;left,right pushed
(1) 1662/    EF6E : CD EA ED            		CALL	GETALLOCBIT
(1) 1663/    EF71 : 1F                  		RRA
(1) 1664/    EF72 : 30 1A               		Jr	NC,RETBLOCK	;return block number if zero
(1) 1665/    EF74 :                     ;bit is one, so try the right
(1) 1666/    EF74 : C1                  		POP	BC
(1) 1667/    EF75 : D1                  		POP	DE		;left, right restored
(1) 1668/    EF76 :                     RIGHTTST:
(1) 1669/    EF76 : 2A C6 F5            		LD	HL,(MAXALL)	;value of maximum allocation#
(1) 1670/    EF79 : 7B                  		LD	A,E
(1) 1671/    EF7A : 95                  		SUB	L
(1) 1672/    EF7B : 7A                  		LD	A,D
(1) 1673/    EF7C : 9C                  		SBC	A,H		;right=maxall?
(1) 1674/    EF7D : 30 17               		Jr	NC,RETBLOCK0	;return block 0000 if so
(1) 1675/    EF7F : 13                  		INC	DE
(1) 1676/    EF80 : C5                  		PUSH	BC
(1) 1677/    EF81 : D5                  		PUSH	DE		;left, right pushed
(1) 1678/    EF82 : 42                  		LD	B,D
(1) 1679/    EF83 : 4B                  		LD	C,E		;ready right for call
(1) 1680/    EF84 : CD EA ED            		CALL	GETALLOCBIT
(1) 1681/    EF87 : 1F                  		RRA
(1) 1682/    EF88 : 30 04               		Jr	NC,RETBLOCK	;return block number if zero
(1) 1683/    EF8A : D1                  		POP	DE
(1) 1684/    EF8B : C1                  		POP	BC		;restore left and right pointers
(1) 1685/    EF8C : 18 D9               		Jr	LEFTTST		;for another attempt
(1) 1686/    EF8E :                     RETBLOCK:
(1) 1687/    EF8E : 17                  		RLA
(1) 1688/    EF8F : 3C                  		INC	A		;bit back into position and set to 1
(1) 1689/    EF90 :                     ;d contains the number of shifts required to reposition
(1) 1690/    EF90 : CD 18 EE            		CALL	ROTR		;move bit back to position and store
(1) 1691/    EF93 : E1                  		POP	HL
(1) 1692/    EF94 : D1                  		POP	DE		;HL returned value, DE discarded
(1) 1693/    EF95 : C9                  		RET
(1) 1694/    EF96 :                     RETBLOCK0:
(1) 1695/    EF96 :                     ;cannot find an available bit, return 0000
(1) 1696/    EF96 : 79                  		LD	A,C;
(1) 1697/    EF97 : B0                  		OR	B
(1) 1698/    EF98 : 20 CD               		Jr	NZ,LEFTTST	;also at beginning
(1) 1699/    EF9A : 21 00 00            		LD	HL,0000H
(1) 1700/    EF9D : C9                  		RET
(1) 1701/    EF9E :                     ;
(1) 1702/    EF9E :                     COPY_FCB:
(1) 1703/    EF9E :                     ;copy the entire file control block
(1) 1704/    EF9E : 0E 00               		LD	C,0
(1) 1705/    EFA0 : 1E 20               		LD	E,FCBLEN	;start at 0, to fcblen-1
(1) 1706/    EFA2 :                     ;	jmp copy_dir			;
(1) 1707/    EFA2 :                     ;
(1) 1708/    EFA2 :                     COPY_DIR:
(1) 1709/    EFA2 :                     ;copy fcb information starting at C for E bytes
(1) 1710/    EFA2 :                     ;into the currently addressed directory entry
(1) 1711/    EFA2 : D5                  		PUSH	DE		;save length for later
(1) 1712/    EFA3 : 06 00               		LD	B,0		;double index to BC
(1) 1713/    EFA5 : 2A 10 EB            		LD	HL,(INFO)	;HL = source for data
(1) 1714/    EFA8 : 09                  		ADD	HL,BC
(1) 1715/    EFA9 : EB                  		EX	DE,HL		;DE=.fcb(C), source for copy
(1) 1716/    EFAA : CD 1A ED            		CALL	GETDPTRA	;HL=.buff(dptr), destination
(1) 1717/    EFAD : C1                  		POP	BC		;DE=source, HL=dest, C=length
(1) 1718/    EFAE : CD 1C EB            		CALL	MOVE		;data moved
(1) 1719/    EFB1 :                     SEEK_COPY:
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bdos_cpa_ac1.asm) - Page 52 - 3/8/2023 15:39:33


(1) 1720/    EFB1 :                     ;enter from close to seek and copy current element
(1) 1721/    EFB1 : CD 8D EB            		CALL	SEEK_DIR	;to the directory element
(1) 1722/    EFB4 : C3 80 ED            		JP	WRDIR		;write the directory element
(1) 1723/    EFB7 :                     ;ret
(1) 1724/    EFB7 :                     ;
(1) 1725/    EFB7 :                     ;
(1) 1726/    EFB7 :                     RENAME:
(1) 1727/    EFB7 :                     ;rename the file described by the first half of
(1) 1728/    EFB7 :                     ;the currently addressed file control block. the
(1) 1729/    EFB7 :                     ;new name is contained in the last half of the
(1) 1730/    EFB7 :                     ;currently addressed file conrol block.  the file
(1) 1731/    EFB7 :                     ;name and type are changed, but the reel number
(1) 1732/    EFB7 :                     ;is ignored.  the user number is identical
(1) 1733/    EFB7 : CD 10 ED            		CALL	CHECK_WRITE	;may be write protected
(1) 1734/    EFBA :                     ;search up to the extent field
(1) 1735/    EFBA : 0E 0C               		LD	C,EXTNUM
(1) 1736/    EFBC : CD CB EE            		CALL	SEARCH
(1) 1737/    EFBF :                     ;copy position 0
(1) 1738/    EFBF : 2A 10 EB            		LD	HL,(INFO)
(1) 1739/    EFC2 : E5                  		push	hl
(1) 1740/    EFC3 : DD E1               		pop	ix
(1) 1741/    EFC5 : 01 10 0C            		ld	bc, 0C10h	;B=12 Länge fn C=DSKMAP
(1) 1742/    EFC8 :                     ;extra Copy-Protection CP/A		
(1) 1743/    EFC8 : DD CB 1B 7E         		bit	7, (ix+1Bh)	;T3 Bit 7 nfn (POWER SET -X)
(1) 1744/    EFCC : 28 1E               		jr	z, loc_DBEA
(1) 1745/    EFCE : 3E 24               		ld	a, '$'		;temp file *.$$$?
(1) 1746/    EFD0 : DD BE 09            		cp	(ix+9)		;T1, Filetyp
(1) 1747/    EFD3 : 20 17               		jr	nz, loc_DBEA
(1) 1748/    EFD5 : DD BE 0A            		cp	(ix+0Ah)	;T2, Filetyp
(1) 1749/    EFD8 : 20 12               		jr	nz, loc_DBEA
(1) 1750/    EFDA : DD BE 0B            		cp	(ix+0Bh)	;T3, Filetyp
(1) 1751/    EFDD : 20 0D               		jr	nz, loc_DBEA
(1) 1752/    EFDF : 21 0A ED            		ld	hl, loc_D908	;Abbruch mit FILE R/O
(1) 1753/    EFE2 : E5                  		push	hl
(1) 1754/    EFE3 : 21 08 F0            		ld	hl, unk_DC06	;empty fcb
(1) 1755/    EFE6 : 22 10 EB            		ld	(info),	hl
(1) 1756/    EFE9 : 01 00 20            		ld	bc, 2000h	;b=32 Länge leerer FCB, C=0 (Anfang FCB)
(1) 1757/    EFEC : C5                  loc_DBEA:	push	bc
(1) 1758/    EFED : DD 7E 00            		ld	a, (ix+0)	;A=fcb(0)
(1) 1759/    EFF0 : DD 77 10            		ld	(ix+10h), a	;fcb(dskmap)=fcb(0)
(1) 1760/    EFF3 :                     
(1) 1761/    EFF3 :                     ;assume the same disk drive for new named file
(1) 1762/    EFF3 :                     RENAME0:
(1) 1763/    EFF3 : CD AD ED            		CALL	END_OF_DIR
(1) 1764/    EFF6 : 28 0E               		jr	z, loc_DC04 	;stop at end of dir
(1) 1765/    EFF8 :                     ;not end of directory, rename next element
(1) 1766/    EFF8 : CD 00 ED            		CALL	CHECK_RODIR	;may be read-only file
(1) 1767/    EFFB : C1                  		pop	bc
(1) 1768/    EFFC : C5                  		push	bc
(1) 1769/    EFFD : 58                  		ld	e, b		;Anz. zu kopierender Bytes
(1) 1770/    EFFE : CD A2 EF            		CALL	COPY_DIR
(1) 1771/    F001 :                     ;element renamed, move to next
(1) 1772/    F001 : CD E0 EE            		CALL	SEARCHN
(1) 1773/    F004 : 18 ED               		Jr	RENAME0
(1) 1774/    F006 :                     ;
(1) 1775/    F006 : C1                  loc_DC04:	pop	bc
(1) 1776/    F007 : C9                  		ret
(1) 1777/    F008 :                     
(1) 1778/    F008 : E5 E5 E5 E5 E5 E5   unk_DC06:	db	32 dup(0E5h)	;empty fcb
                    E5 E5 E5 E5 E5 E5 
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bdos_cpa_ac1.asm) - Page 53 - 3/8/2023 15:39:33


                    E5 E5 E5 E5 E5 E5 
                    E5 E5 E5 E5 E5 E5 
                    E5 E5 E5 E5 E5 E5 
                    E5 E5             
(1) 1779/    F028 :                     
(1) 1780/    F028 :                     INDICATORS:
(1) 1781/    F028 :                     ;set file indicators for current fcb
(1) 1782/    F028 : 0E 0C               		LD	C,EXTNUM
(1) 1783/    F02A : CD CB EE            		CALL	SEARCH		;through file type
(1) 1784/    F02D :                     INDIC0:
(1) 1785/    F02D : CD AD ED            		CALL	END_OF_DIR
(1) 1786/    F030 : C8                  		RET	Z		;stop at end of dir
(1) 1787/    F031 :                     ;not end of directory, continue to change
(1) 1788/    F031 : 0E 00               		LD	C,0
(1) 1789/    F033 : 1E 0C               		LD	E,EXTNUM	;copy name
(1) 1790/    F035 : CD A2 EF            		CALL	COPY_DIR
(1) 1791/    F038 : CD E0 EE            		CALL	SEARCHN
(1) 1792/    F03B : 18 F0               		Jr	INDIC0
(1) 1793/    F03D :                     ;
(1) 1794/    F03D :                     OPEN:
(1) 1795/    F03D :                     ;search for the directory entry, copy to fcb
(1) 1796/    F03D : 0E 0F               		LD	C,NAMLEN
(1) 1797/    F03F : CD CB EE            		CALL	SEARCH
(1) 1798/    F042 : CD AD ED            		CALL	END_OF_DIR
(1) 1799/    F045 : C8                  		RET	Z		;return with lret=255 if end
(1) 1800/    F046 :                     ;not end of directory, copy fcb information
(1) 1801/    F046 :                     OPEN_COPY:
(1) 1802/    F046 :                     ;(referenced below to copy fcb info)
(1) 1803/    F046 : CD 66 EC            		CALL	GETEXTA
(1) 1804/    F049 : 7E                  		LD	A,(HL)
(1) 1805/    F04A : F5                  		PUSH	AF
(1) 1806/    F04B : E5                  		PUSH	HL		;save extent#
(1) 1807/    F04C : CD 1A ED            		CALL	GETDPTRA
(1) 1808/    F04F : EB                  		EX	DE,HL		;DE = .buff(dptr)
(1) 1809/    F050 : 2A 10 EB            		LD	HL,(INFO)	;HL=.fcb(0)
(1) 1810/    F053 : 0E 20               		LD	C,NXTREC	;length of move operation
(1) 1811/    F055 : D5                  		PUSH	DE		;save .buff(dptr)
(1) 1812/    F056 : CD 1C EB            		CALL	MOVE		;from .buff(dptr) to .fcb(0)
(1) 1813/    F059 :                     ;note that entire fcb is copied, including indicators
(1) 1814/    F059 : CD 34 ED            		CALL	SETFWF		;sets file write flag
(1) 1815/    F05C : D1                  		POP	DE
(1) 1816/    F05D : 21 0C 00            		LD	HL,EXTNUM
(1) 1817/    F060 : 19                  		ADD	HL,DE		;HL=.buff(dptr+extnum)
(1) 1818/    F061 : 4E                  		LD	C,(HL)		;C = directory extent number
(1) 1819/    F062 : 21 0F 00            		LD	HL,RECCNT
(1) 1820/    F065 : 19                  		ADD	HL,DE		;HL=.buff(dptr+reccnt)
(1) 1821/    F066 : 46                  		LD	B,(HL)		;B holds directory record count
(1) 1822/    F067 : E1                  		POP	HL
(1) 1823/    F068 : F1                  		POP	AF
(1) 1824/    F069 : 77                  		LD	(HL),A		;restore extent number
(1) 1825/    F06A :                     ;HL = .user extent#, B = dir rec cnt, C = dir extent#
(1) 1826/    F06A :                     ;if user ext < dir ext then user := 128 records
(1) 1827/    F06A :                     ;if user ext = dir ext then user := dir records
(1) 1828/    F06A :                     ;if user ext > dir ext then user := 0 records
(1) 1829/    F06A : 79                  		LD	A,C
(1) 1830/    F06B : BE                  		CP	(HL)
(1) 1831/    F06C : 78                  		LD	A,B		;ready dir reccnt
(1) 1832/    F06D : 28 06               		Jr	Z,OPEN_RCNT	;if same, user gets dir reccnt
(1) 1833/    F06F : 3E 00               		LD	A,0
(1) 1834/    F071 : 38 02               		Jr	C,OPEN_RCNT	;user is larger
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bdos_cpa_ac1.asm) - Page 54 - 3/8/2023 15:39:33


(1) 1835/    F073 : 3E 80               		LD	A,128		;directory is larger
(1) 1836/    F075 :                     OPEN_RCNT:	;A has record count to fill
(1) 1837/    F075 : 2A 10 EB            		LD	HL,(INFO)
(1) 1838/    F078 : 11 0F 00            		LD	DE,RECCNT
(1) 1839/    F07B : 19                  		ADD	HL,DE
(1) 1840/    F07C : 77                  		LD	(HL),A
(1) 1841/    F07D : C9                  		RET
(1) 1842/    F07E :                     ;
(1) 1843/    F07E :                     MERGEZERO:
(1) 1844/    F07E :                     ;HL = .fcb1(i), DE = .fcb2(i),
(1) 1845/    F07E :                     ;if fcb1(i) = 0 then fcb1(i) := fcb2(i)
(1) 1846/    F07E : 7E                  		LD	A,(HL)
(1) 1847/    F07F : 23                  		INC	HL
(1) 1848/    F080 : B6                  		OR	(HL)
(1) 1849/    F081 : 2B                  		DEC	HL
(1) 1850/    F082 : C0                  		RET	NZ		;return if = 0000
(1) 1851/    F083 : 1A                  		LD	A,(DE)
(1) 1852/    F084 : 77                  		LD	(HL),A
(1) 1853/    F085 : 13                  		INC	DE
(1) 1854/    F086 : 23                  		INC	HL		;low byte copied
(1) 1855/    F087 : 1A                  		LD	A,(DE)
(1) 1856/    F088 : 77                  		LD	(HL),A
(1) 1857/    F089 : 1B                  		DEC	DE
(1) 1858/    F08A : 2B                  		DEC	HL		;back to input form
(1) 1859/    F08B : C9                  		RET
(1) 1860/    F08C :                     ;
(1) 1861/    F08C :                     CLOSE:
(1) 1862/    F08C :                     ;locate the directory element and re-write it
(1) 1863/    F08C : AF                  		XOR	A
(1) 1864/    F08D : 32 12 EB            		LD	(LRET),A
(1) 1865/    F090 : 32 EA F5            		LD	(DCNT),A
(1) 1866/    F093 : 32 EB F5            		LD	(DCNT+1),A;
(1) 1867/    F096 : CD DA EC            		CALL	NOWRITE
(1) 1868/    F099 : C0                  		RET	NZ		;skip close if r/o disk
(1) 1869/    F09A :                     ;check file write flag - 0 indicates written
(1) 1870/    F09A : CD 25 ED            		CALL	GETMODNUM	;fcb(modnum) in A
(1) 1871/    F09D : E6 80               		AND	FWFMSK
(1) 1872/    F09F : C0                  		RET	NZ		;return if bit remains set
(1) 1873/    F0A0 : 0E 0F               		LD	C,NAMLEN
(1) 1874/    F0A2 : CD CB EE            		CALL	SEARCH		;locate file
(1) 1875/    F0A5 : CD AD ED            		CALL	END_OF_DIR
(1) 1876/    F0A8 : C8                  		RET	Z		;return if not found
(1) 1877/    F0A9 :                     ;merge the disk map at info with that at buff(dptr)
(1) 1878/    F0A9 : 01 10 00            		LD	BC,DSKMAP
(1) 1879/    F0AC : CD 1A ED            		CALL	GETDPTRA
(1) 1880/    F0AF : 09                  		ADD	HL,BC
(1) 1881/    F0B0 : EB                  		EX	DE,HL		;DE is .buff(dptr+16)
(1) 1882/    F0B1 : 2A 10 EB            		LD	HL,(INFO)
(1) 1883/    F0B4 : 09                  		ADD	HL,BC		;DE=.buff(dptr+16), HL=.fcb(16)
(1) 1884/    F0B5 :                     ;;lo              function x,x&255
(1) 1885/    F0B5 : 0E 10               		LD	C,lo(FCBLEN-DSKMAP)	;length of single byte dm
(1) 1886/    F0B7 :                     MERGE0:
(1) 1887/    F0B7 : 3A DD F5            		LD	A,(SINGLE)
(1) 1888/    F0BA : B7                  		OR	A
(1) 1889/    F0BB : 28 10               		Jr	Z,MERGED	;skip to double
(1) 1890/    F0BD :                     ;this is a single byte map
(1) 1891/    F0BD :                     ;if fcb(i) = 0 then fcb(i) = buff(i)
(1) 1892/    F0BD :                     ;if buff(i) = 0 then buff(i) = fcb(i)
(1) 1893/    F0BD :                     ;if fcb(i) <> buff(i) then error
(1) 1894/    F0BD : 7E                  		LD	A,(HL)
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bdos_cpa_ac1.asm) - Page 55 - 3/8/2023 15:39:33


(1) 1895/    F0BE : B7                  		OR	A
(1) 1896/    F0BF : 1A                  		LD	A,(DE)
(1) 1897/    F0C0 : 20 01               		Jr	NZ,FCBNZERO
(1) 1898/    F0C2 :                     ;fcb(i) = 0
(1) 1899/    F0C2 : 77                  		LD	(HL),A		;fcb(i) = buff(i)
(1) 1900/    F0C3 :                     FCBNZERO:
(1) 1901/    F0C3 : B7                  		OR	A
(1) 1902/    F0C4 : 20 02               		Jr	NZ,BUFFNZERO
(1) 1903/    F0C6 :                     ;buff(i) = 0
(1) 1904/    F0C6 : 7E                  		LD	A,(HL)
(1) 1905/    F0C7 : 12                  		LD	(DE),A		;buff(i)=fcb(i)
(1) 1906/    F0C8 :                     BUFFNZERO:
(1) 1907/    F0C8 : BE                  		CP	(HL)
(1) 1908/    F0C9 : 20 35               		Jr	NZ,MERGERR	;fcb(i) = buff(i)?
(1) 1909/    F0CB : 18 13               		Jr	DMSET		;if merge ok
(1) 1910/    F0CD :                     MERGED:
(1) 1911/    F0CD :                     ;this is a double byte merge operation
(1) 1912/    F0CD : CD 7E F0            		CALL	MERGEZERO	;buff = fcb if buff 0000
(1) 1913/    F0D0 : EB                  		EX	DE,HL
(1) 1914/    F0D1 : CD 7E F0            		CALL	MERGEZERO
(1) 1915/    F0D4 : EB                  		EX	DE,HL		;fcb = buff if fcb 0000
(1) 1916/    F0D5 :                     ;they should be identical at this point
(1) 1917/    F0D5 : 1A                  		LD	A,(DE)
(1) 1918/    F0D6 : BE                  		CP	(HL)
(1) 1919/    F0D7 : 20 27               		Jr	NZ,MERGERR	;low same?
(1) 1920/    F0D9 : 13                  		INC	DE
(1) 1921/    F0DA : 23                  		INC	HL		;to high byte
(1) 1922/    F0DB : 1A                  		LD	A,(DE)
(1) 1923/    F0DC : BE                  		CP	(HL)
(1) 1924/    F0DD : 20 21               		Jr	NZ,MERGERR	;high same?
(1) 1925/    F0DF :                     ;merge operation ok for this pair
(1) 1926/    F0DF : 0D                  		DEC	C		;extra count for double byte
(1) 1927/    F0E0 :                     DMSET:
(1) 1928/    F0E0 : 13                  		INC	DE
(1) 1929/    F0E1 : 23                  		INC	HL		;to next byte position
(1) 1930/    F0E2 : 0D                  		DEC	C
(1) 1931/    F0E3 : 20 D2               		Jr	NZ,MERGE0	;for more
(1) 1932/    F0E5 :                     ;end of disk map merge, check record count
(1) 1933/    F0E5 :                     ;DE = .buff(dptr)+32, HL = .fcb(32)
(1) 1934/    F0E5 : 01 EC FF            		LD	BC,-(FCBLEN-EXTNUM)
(1) 1935/    F0E8 : 09                  		ADD	HL,BC
(1) 1936/    F0E9 : EB                  		EX	DE,HL
(1) 1937/    F0EA : 09                  		ADD	HL,BC
(1) 1938/    F0EB :                     ;DE = .fcb(extnum), HL = .buff(dptr+extnum)
(1) 1939/    F0EB : 1A                  		LD	A,(DE)		;current user extent number
(1) 1940/    F0EC :                     ;if fcb(ext) >= buff(fcb) then
(1) 1941/    F0EC :                     ;buff(ext) := fcb(ext), buff(rec) := fcb(rec)
(1) 1942/    F0EC : BE                  		CP	(HL)
(1) 1943/    F0ED : 38 09               		Jr	C,ENDMERGE
(1) 1944/    F0EF :                     ;fcb extent number >= dir extent number
(1) 1945/    F0EF : 77                  		LD	(HL),A		;buff(ext) = fcb(ext)
(1) 1946/    F0F0 :                     ;update directory record count field
(1) 1947/    F0F0 : 01 03 00            		LD	BC,RECCNT-EXTNUM
(1) 1948/    F0F3 : 09                  		ADD	HL,BC
(1) 1949/    F0F4 : EB                  		EX	DE,HL
(1) 1950/    F0F5 : 09                  		ADD	HL,BC
(1) 1951/    F0F6 :                     ;DE=.buff(reccnt), HL=.fcb(reccnt)
(1) 1952/    F0F6 : 7E                  		LD	A,(HL)
(1) 1953/    F0F7 : 12                  		LD	(DE),A		;buff(reccnt)=fcb(reccnt)
(1) 1954/    F0F8 :                     ENDMERGE:
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bdos_cpa_ac1.asm) - Page 56 - 3/8/2023 15:39:33


(1) 1955/    F0F8 : 3E FF               		LD	A,TRUE_
(1) 1956/    F0FA : 32 D2 F5            		LD	(FCB_COPIED),A	;mark as copied
(1) 1957/    F0FD : C3 B1 EF            		JP	SEEK_COPY	;ok to "wrdir" here - 1.4 compat
(1) 1958/    F100 :                     ;		ret				;
(1) 1959/    F100 :                     MERGERR:
(1) 1960/    F100 :                     ;elements did not merge correctly
(1) 1961/    F100 : 21 12 EB            		LD	HL,LRET
(1) 1962/    F103 : 35                  		DEC	(HL)		;=255 non zero flag set
(1) 1963/    F104 : C9                  		RET
(1) 1964/    F105 :                     ;
(1) 1965/    F105 :                     MAKE:
(1) 1966/    F105 :                     ;create a new file by creating a directory entry
(1) 1967/    F105 :                     ;then opening the file
(1) 1968/    F105 : CD 10 ED            		CALL	CHECK_WRITE	;may be write protected
(1) 1969/    F108 : 2A 10 EB            		LD	HL,(INFO)
(1) 1970/    F10B : E5                  		PUSH	HL		;save fcb address, look for e5
(1) 1971/    F10C : 21 AC F5            		LD	HL,EFCB
(1) 1972/    F10F : 22 10 EB            		LD	(INFO),HL	;info = .empty
(1) 1973/    F112 : 0E 01               		LD	C,1
(1) 1974/    F114 : CD CB EE            		CALL	SEARCH		;length 1 match on empty entry
(1) 1975/    F117 : CD AD ED            		CALL	END_OF_DIR	;zero flag set if no space
(1) 1976/    F11A : E1                  		POP	HL		;recall info address
(1) 1977/    F11B : 22 10 EB            		LD	(INFO),HL	;in case we return here
(1) 1978/    F11E : C8                  		RET	Z		;return with error condition 255 if not found
(1) 1979/    F11F : EB                  		EX	DE,HL		;DE = info address
(1) 1980/    F120 :                     ;clear the remainder of the fcb
(1) 1981/    F120 : 21 0F 00            		LD	HL,NAMLEN
(1) 1982/    F123 : 19                  		ADD	HL,DE		;HL=.fcb(namlen)
(1) 1983/    F124 : 0E 11               		LD	C,FCBLEN-NAMLEN	;number of bytes to fill
(1) 1984/    F126 : AF                  		XOR	A		;clear accumulator to 00 for fill
(1) 1985/    F127 :                     MAKE0:
(1) 1986/    F127 : 77                  		LD	(HL),A
(1) 1987/    F128 : 23                  		INC	HL
(1) 1988/    F129 : 0D                  		DEC	C
(1) 1989/    F12A : 20 FB               		Jr	NZ,MAKE0
(1) 1990/    F12C : 21 0D 00            		LD	HL,UBYTES
(1) 1991/    F12F : 19                  		ADD	HL,DE		;HL = .fcb(ubytes)
(1) 1992/    F130 : 77                  		LD	(HL),A		;fcb(ubytes) = 0
(1) 1993/    F131 : CD 48 ED            		CALL	SETCDR		;may have extended the directory
(1) 1994/    F134 :                     ;now copy entry to the directory
(1) 1995/    F134 : CD 9E EF            		CALL	COPY_FCB
(1) 1996/    F137 :                     ;and set the file write flag to "1"
(1) 1997/    F137 : C3 34 ED            		JP	SETFWF
(1) 1998/    F13A :                     ;ret
(1) 1999/    F13A :                     ;
(1) 2000/    F13A :                     OPEN_REEL:
(1) 2001/    F13A :                     ;close the current extent, and open the next one
(1) 2002/    F13A :                     ;if possible.  RMF is TRUE_ if in read mode
(1) 2003/    F13A : AF                  		XOR	A
(1) 2004/    F13B : 32 D2 F5            		LD	(FCB_COPIED),A	;set TRUE_ if actually copied
(1) 2005/    F13E : CD 8C F0            		CALL	CLOSE		;close current extent
(1) 2006/    F141 :                     ;lret remains at enddir if we cannot open the next ext
(1) 2007/    F141 : CD AD ED            		CALL	END_OF_DIR
(1) 2008/    F144 : C8                  		RET	Z		;return if end
(1) 2009/    F145 :                     ;increment extent number
(1) 2010/    F145 : 2A 10 EB            		LD	HL,(INFO)
(1) 2011/    F148 : 01 0C 00            		LD	BC,EXTNUM
(1) 2012/    F14B : 09                  		ADD	HL,BC		;HL=.fcb(extnum)
(1) 2013/    F14C : 7E                  		LD	A,(HL)
(1) 2014/    F14D : 3C                  		INC	A
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bdos_cpa_ac1.asm) - Page 57 - 3/8/2023 15:39:33


(1) 2015/    F14E : E6 1F               		AND	MAXEXT
(1) 2016/    F150 : 77                  		LD	(HL),A		;fcb(extnum)=++1
(1) 2017/    F151 : 28 0D               		Jr	Z,OPEN_MOD	;move to next module if zero
(1) 2018/    F153 :                     ;may be in the same extent group
(1) 2019/    F153 : 47                  		LD	B,A
(1) 2020/    F154 : 3A C5 F5            		LD	A,(EXTMSK)
(1) 2021/    F157 : A0                  		AND	B
(1) 2022/    F158 :                     ;if result is zero, then not in the same group
(1) 2023/    F158 : 21 D2 F5            		LD	HL,FCB_COPIED	;TRUE_ if the fcb was copied to directory
(1) 2024/    F15B : A6                  		AND	(HL)		;produces a 00 in accumulator if not written
(1) 2025/    F15C : 28 0C               		Jr	Z,OPEN_REEL0	;go to next physical extent
(1) 2026/    F15E :                     ;result is non zero, so we must be in same logical ext
(1) 2027/    F15E : 18 24               		Jr	OPEN_REEL1	;to copy fcb information
(1) 2028/    F160 :                     OPEN_MOD:
(1) 2029/    F160 :                     ;extent number overflow, go to next module
(1) 2030/    F160 : 01 02 00            		LD	BC,MODNUM-EXTNUM
(1) 2031/    F163 : 09                  		ADD	HL,BC		;HL=.fcb(modnum)
(1) 2032/    F164 : 34                  		INC	(HL)		;fcb(modnum)=++1
(1) 2033/    F165 :                     ;module number incremented, check for overflow
(1) 2034/    F165 : 7E                  		LD	A,(HL)
(1) 2035/    F166 : E6 0F               		AND	MAXMOD		;mask high order bits
(1) 2036/    F168 : 28 24               		Jr	Z,OPEN_R_ERR	;cannot overflow to zero
(1) 2037/    F16A :                     ;otherwise, ok to continue with new module
(1) 2038/    F16A :                     OPEN_REEL0:
(1) 2039/    F16A : 0E 0F               		LD	C,NAMLEN
(1) 2040/    F16C : CD CB EE            		CALL	SEARCH		;next extent found?
(1) 2041/    F16F : CD AD ED            		CALL	END_OF_DIR
(1) 2042/    F172 : 20 10               		Jr	NZ,OPEN_REEL1
(1) 2043/    F174 :                     ;end of file encountered
(1) 2044/    F174 : 3A D3 F5            		LD	A,(RMF)
(1) 2045/    F177 : 3C                  		INC	A		;0ffh becomes 00 if read
(1) 2046/    F178 : 28 14               		Jr	Z,OPEN_R_ERR	;sets lret = 1
(1) 2047/    F17A :                     ;try to extend the current file
(1) 2048/    F17A : CD 05 F1            		CALL	MAKE
(1) 2049/    F17D :                     ;cannot be end of directory
(1) 2050/    F17D : CD AD ED            		CALL	END_OF_DIR
(1) 2051/    F180 : 28 0C               		Jr	Z,OPEN_R_ERR	;with lret = 1
(1) 2052/    F182 : 18 03               		Jr	OPEN_REEL2
(1) 2053/    F184 :                     OPEN_REEL1:
(1) 2054/    F184 :                     ;not end of file, open
(1) 2055/    F184 : CD 46 F0            		CALL	OPEN_COPY
(1) 2056/    F187 :                     OPEN_REEL2:
(1) 2057/    F187 : CD 7B EC            		CALL	GETFCB		;set parameters
(1) 2058/    F18A : AF                  		XOR	A
(1) 2059/    F18B : C3 C0 EA            		JP	STA_RET		;lret = 0	;
(1) 2060/    F18E :                     ;			ret ;with lret = 0
(1) 2061/    F18E :                     OPEN_R_ERR:
(1) 2062/    F18E :                     ;cannot move to next extent of this file
(1) 2063/    F18E : CD C4 EA            		CALL	SETLRET1	;lret = 1
(1) 2064/    F191 : C3 34 ED            		JP	SETFWF		;ensure that it will not be closed
(1) 2065/    F194 :                     ;ret
(1) 2066/    F194 :                     ;
(1) 2067/    F194 :                     SEQDISKREAD:
(1) 2068/    F194 :                     ;sequential disk read operation
(1) 2069/    F194 : 3E 01               		LD	A,1
(1) 2070/    F196 : 32 D5 F5            		LD	(SEQIO),A
(1) 2071/    F199 :                     ;drop through to diskread
(1) 2072/    F199 :                     ;
(1) 2073/    F199 :                     DISKREAD: ;(may enter from seqdiskread)
(1) 2074/    F199 : 3E FF               		LD	A,TRUE_
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bdos_cpa_ac1.asm) - Page 58 - 3/8/2023 15:39:33


(1) 2075/    F19B : 32 D3 F5            		LD	(RMF),A		;read mode flag = TRUE_ (open_reel)
(1) 2076/    F19E :                     ;read the next record from the current fcb
(1) 2077/    F19E : CD 7B EC            		CALL	GETFCB		;sets parameters for the read
(1) 2078/    F1A1 : 3A E3 F5            		LD	A,(VRECORD)
(1) 2079/    F1A4 : 21 E1 F5            		LD	HL,RCOUNT
(1) 2080/    F1A7 : BE                  		CP	(HL)		;vrecord-rcount
(1) 2081/    F1A8 :                     ;skip if rcount > vrecord
(1) 2082/    F1A8 : 38 11               		Jr	C,RECORDOK
(1) 2083/    F1AA :                     ;not enough records in the extent
(1) 2084/    F1AA :                     ;record count must be 128 to continue
(1) 2085/    F1AA : FE 80               		CP	128		;vrecord = 128?
(1) 2086/    F1AC : 20 21               		Jr	NZ,DISKEOF	;skip if vrecord<>128
(1) 2087/    F1AE : CD 3A F1            		CALL	OPEN_REEL	;go to next extent if so
(1) 2088/    F1B1 : AF                  		XOR	A
(1) 2089/    F1B2 : 32 E3 F5            		LD	(VRECORD),A	;vrecord=00
(1) 2090/    F1B5 :                     ;now check for open ok
(1) 2091/    F1B5 : 3A 12 EB            		LD	A,(LRET)
(1) 2092/    F1B8 : B7                  		OR	A
(1) 2093/    F1B9 : 20 14               		Jr	NZ,DISKEOF	;stop at eof
(1) 2094/    F1BB :                     RECORDOK:
(1) 2095/    F1BB :                     ;arrive with fcb addressing a record to read
(1) 2096/    F1BB : CD 38 EC            		CALL	INDEX
(1) 2097/    F1BE :                     ;error 2 if reading unwritten data
(1) 2098/    F1BE :                     ;(returns 1 to be compatible with 1.4)
(1) 2099/    F1BE : CD 45 EC            		CALL	ALLOCATED	;arecord=0000?
(1) 2100/    F1C1 : 28 0C               		Jr	Z,DISKEOF
(1) 2101/    F1C3 :                     ;record has been allocated, read it
(1) 2102/    F1C3 : CD 4B EC            		CALL	ATRAN		;arecord now a disk address
(1) 2103/    F1C6 : CD 9B EB            		CALL	SEEK		;to proper track,sector
(1) 2104/    F1C9 : CD 7D EB            		CALL	RDBUFF		;to dma address
(1) 2105/    F1CC : C3 92 EC            		JP	SETFCB		;replace parameter
(1) 2106/    F1CF :                     ;		ret					;
(1) 2107/    F1CF :                     DISKEOF:
(1) 2108/    F1CF : C3 C4 EA            		JP	SETLRET1	;lret = 1
(1) 2109/    F1D2 :                     ;ret
(1) 2110/    F1D2 :                     ;
(1) 2111/    F1D2 :                     SEQDISKWRITE:
(1) 2112/    F1D2 :                     ;sequential disk write
(1) 2113/    F1D2 : 3E 01               		LD	A,1
(1) 2114/    F1D4 : 32 D5 F5            		LD	(SEQIO),A
(1) 2115/    F1D7 :                     ;drop through to diskwrite
(1) 2116/    F1D7 :                     ;
(1) 2117/    F1D7 :                     DISKWRITE:	;(may enter here from seqdiskwrite above)
(1) 2118/    F1D7 : 3E 00               		LD	A,FALSE_
(1) 2119/    F1D9 : 32 D3 F5            		LD	(RMF),A		;read mode flag
(1) 2120/    F1DC :                     ;write record to currently selected file
(1) 2121/    F1DC : CD 10 ED            		CALL	CHECK_WRITE	;in case write protected
(1) 2122/    F1DF : 2A 10 EB            		LD	HL,(INFO)	;HL = .fcb(0)
(1) 2123/    F1E2 : CD 03 ED            		CALL	CHECK_ROFILE	;may be a read-only file
(1) 2124/    F1E5 : CD 7B EC            		CALL	GETFCB		;to set local parameters
(1) 2125/    F1E8 : 3A E3 F5            		LD	A,(VRECORD)
(1) 2126/    F1EB : FE 80               		CP	LSTREC+1	;vrecord-128
(1) 2127/    F1ED :                     ;skip if vrecord > lstrec
(1) 2128/    F1ED :                     ;vrecord = 128, cannot open next extent
(1) 2129/    F1ED : D2 C4 EA            		JP	NC,SETLRET1	;lret=1		;
(1) 2130/    F1F0 :                     DISKWR0:
(1) 2131/    F1F0 :                     ;can write the next record, so continue
(1) 2132/    F1F0 : CD 38 EC            		CALL	INDEX
(1) 2133/    F1F3 : CD 45 EC            		CALL	ALLOCATED
(1) 2134/    F1F6 : 0E 00               		LD	C,0		;marked as normal write operation for wrbuff
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bdos_cpa_ac1.asm) - Page 59 - 3/8/2023 15:39:33


(1) 2135/    F1F8 : 20 43               		Jr	NZ,DISKWR1
(1) 2136/    F1FA :                     ;not allocated
(1) 2137/    F1FA :                     ;the argument to getblock is the starting
(1) 2138/    F1FA :                     ;position for the disk search, and should be
(1) 2139/    F1FA :                     ;the last allocated block for this file, or
(1) 2140/    F1FA :                     ;the value 0 if no space has been allocated
(1) 2141/    F1FA : CD 03 EC            		CALL	DM_POSITION
(1) 2142/    F1FD : 32 D7 F5            		LD	(DMINX),A	;save for later
(1) 2143/    F200 : 01 00 00            		LD	BC,0000H	;may use block zero
(1) 2144/    F203 : B7                  		OR	A
(1) 2145/    F204 : 28 07               		Jr	Z,NOPBLOCK	;skip if no previous block
(1) 2146/    F206 :                     ;previous block exists at A
(1) 2147/    F206 : 4F                  		LD	C,A
(1) 2148/    F207 : 0B                  		DEC	BC		;previous block # in BC
(1) 2149/    F208 : CD 20 EC            		CALL	GETDM		;previous block # to HL
(1) 2150/    F20B : 44                  		LD	B,H
(1) 2151/    F20C : 4D                  		LD	C,L		;BC=prev block#
(1) 2152/    F20D :                     NOPBLOCK:
(1) 2153/    F20D :                     ;BC = 0000, or previous block #
(1) 2154/    F20D : CD 65 EF            		CALL	GET_BLOCK	;block # to HL
(1) 2155/    F210 :                     ;arrive here with block# or zero
(1) 2156/    F210 : 7D                  		LD	A,L
(1) 2157/    F211 : B4                  		OR	H
(1) 2158/    F212 : 20 05               		Jr	NZ,BLOCKOK
(1) 2159/    F214 :                     ;cannot find a block to allocate
(1) 2160/    F214 : 3E 02               		LD	A,2
(1) 2161/    F216 : C3 C0 EA            		JP	STA_RET		;lret=2
(1) 2162/    F219 :                     BLOCKOK:
(1) 2163/    F219 :                     ;allocated block number is in HL
(1) 2164/    F219 : 22 E5 F5            		LD	(ARECORD),HL
(1) 2165/    F21C : EB                  		EX	DE,HL		;block number to DE
(1) 2166/    F21D : 2A 10 EB            		LD	HL,(INFO)
(1) 2167/    F220 : 01 10 00            		LD	BC,DSKMAP
(1) 2168/    F223 : 09                  		ADD	HL,BC		;HL=.fcb(dskmap)
(1) 2169/    F224 : 3A DD F5            		LD	A,(SINGLE)
(1) 2170/    F227 : B7                  		OR	A		;set flags for single byte dm
(1) 2171/    F228 : 3A D7 F5            		LD	A,(DMINX)	;recall dm index
(1) 2172/    F22B : 28 06               		Jr	Z,ALLOCWD	;skip if allocating word
(1) 2173/    F22D :                     ;allocating a byte value
(1) 2174/    F22D : CD 20 ED            		CALL	ADDH
(1) 2175/    F230 : 73                  		LD	(HL),E		;single byte alloc
(1) 2176/    F231 : 18 08               		Jr	DISKWRU		;to continue
(1) 2177/    F233 :                     ALLOCWD:
(1) 2178/    F233 :                     ;allocate a word value
(1) 2179/    F233 : 4F                  		LD	C,A
(1) 2180/    F234 : 06 00               		LD	B,0		;double(dminx)
(1) 2181/    F236 : 09                  		ADD	HL,BC
(1) 2182/    F237 : 09                  		ADD	HL,BC		;HL=.fcb(dminx*2)
(1) 2183/    F238 : 73                  		LD	(HL),E
(1) 2184/    F239 : 23                  		INC	HL
(1) 2185/    F23A : 72                  		LD	(HL),D		;double wd
(1) 2186/    F23B :                     DISKWRU:
(1) 2187/    F23B :                     ;disk write to previously unallocated block
(1) 2188/    F23B : 0E 02               		LD	C,2		;marked as unallocated write
(1) 2189/    F23D :                     DISKWR1:
(1) 2190/    F23D :                     ;continue the write operation of no allocation error
(1) 2191/    F23D :                     ;C = 0 if normal write, 2 if to prev unalloc block
(1) 2192/    F23D : 3A 12 EB            		LD	A,(LRET)
(1) 2193/    F240 : B7                  		OR	A
(1) 2194/    F241 : C0                  		RET	NZ		;stop if non zero returned value
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bdos_cpa_ac1.asm) - Page 60 - 3/8/2023 15:39:33


(1) 2195/    F242 : C5                  		PUSH	BC		;save write flag
(1) 2196/    F243 : CD 4B EC            		CALL	ATRAN		;arecord set
(1) 2197/    F246 : 3A D5 F5            		LD	A,(SEQIO)
(1) 2198/    F249 : 3D                  		DEC	A
(1) 2199/    F24A : 3D                  		DEC	A
(1) 2200/    F24B : 20 3A               		Jr	NZ,DISKWR11;
(1) 2201/    F24D : C1                  		POP	BC
(1) 2202/    F24E : C5                  		PUSH	BC
(1) 2203/    F24F : 79                  		LD	A,C
(1) 2204/    F250 : 3D                  		DEC	A
(1) 2205/    F251 : 3D                  		DEC	A;
(1) 2206/    F252 : 20 33               		Jr	NZ,DISKWR11	;old allocation
(1) 2207/    F254 : E5                  		PUSH	HL		;arecord in hl ret from atran
(1) 2208/    F255 : 2A B9 F5            		LD	HL,(BUFFA)
(1) 2209/    F258 : 57                  		LD	D,A		;zero buffa & fill
(1) 2210/    F259 : 77                  FILL0:		LD	(HL),A
(1) 2211/    F25A : 23                  		INC	HL
(1) 2212/    F25B : 14                  		INC	D
(1) 2213/    F25C : F2 59 F2            		JP	P,FILL0;
(1) 2214/    F25F : CD 98 ED            		CALL	SETDIR
(1) 2215/    F262 : 2A E7 F5            		LD	HL,(ARECORD1);
(1) 2216/    F265 : 0E 02               		LD	C,2;
(1) 2217/    F267 : 22 E5 F5            FILL1:		LD	(ARECORD),HL
(1) 2218/    F26A : C5                  		PUSH	BC
(1) 2219/    F26B : CD 9B EB            		CALL	SEEK
(1) 2220/    F26E : C1                  		POP	BC;
(1) 2221/    F26F : CD 82 EB            		CALL	WRBUFF		;write fill record	;
(1) 2222/    F272 : 2A E5 F5            		LD	HL,(ARECORD)
(1) 2223/    F275 :                     ;restore last record
(1) 2224/    F275 : 0E 00               		LD	C,0		;change  allocate flag
(1) 2225/    F277 : 3A C4 F5            		LD	A,(BLKMSK)
(1) 2226/    F27A : 47                  		LD	B,A
(1) 2227/    F27B : A5                  		AND	L
(1) 2228/    F27C : B8                  		CP	B
(1) 2229/    F27D : 23                  		INC	HL;
(1) 2230/    F27E : 20 E7               		Jr	NZ,FILL1	;cont until cluster is zeroed
(1) 2231/    F280 : E1                  		POP	HL
(1) 2232/    F281 : 22 E5 F5            		LD	(ARECORD),HL
(1) 2233/    F284 : CD 93 ED            		CALL	SETDATA
(1) 2234/    F287 :                     DISKWR11:	;
(1) 2235/    F287 : CD 9B EB            		CALL	SEEK		;to proper file position
(1) 2236/    F28A : C1                  		POP	BC
(1) 2237/    F28B : C5                  		PUSH	BC		;restore/save write flag (C=2 if new block)
(1) 2238/    F28C : CD 82 EB            		CALL	WRBUFF		;written to disk
(1) 2239/    F28F : C1                  		POP	BC		;C = 2 if a new block was allocated, 0 if not
(1) 2240/    F290 :                     ;increment record count if rcount<=vrecord
(1) 2241/    F290 : 3A E3 F5            		LD	A,(VRECORD)
(1) 2242/    F293 : 21 E1 F5            		LD	HL,RCOUNT
(1) 2243/    F296 : BE                  		CP	(HL)		;vrecord-rcount
(1) 2244/    F297 : 38 04               		Jr	C,DISKWR2
(1) 2245/    F299 :                     ;rcount <= vrecord
(1) 2246/    F299 : 77                  		LD	(HL),A
(1) 2247/    F29A : 34                  		INC	(HL)		;rcount = vrecord+1
(1) 2248/    F29B : 0E 02               		LD	C,2		;mark as record count incremented
(1) 2249/    F29D :                     DISKWR2:
(1) 2250/    F29D :                     ;A has vrecord, C=2 if new block or new record#
(1) 2251/    F29D :                     ;patch for blocking/deblocking error
(1) 2252/    F29D : 00                  		nop
(1) 2253/    F29E : 00                  		nop
(1) 2254/    F29F : 21 00 D8            		ld	hl, 0d800h	;value will not used
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bdos_cpa_ac1.asm) - Page 61 - 3/8/2023 15:39:33


(1) 2255/    F2A2 :                     ;orig
(1) 2256/    F2A2 :                     ;		DEC	C
(1) 2257/    F2A2 :                     ;		DEC	C
(1) 2258/    F2A2 :                     ;		JP	NZ,NOUPDATE
(1) 2259/    F2A2 : F5                  		PUSH	AF		;save vrecord value
(1) 2260/    F2A3 : CD 25 ED            		CALL	GETMODNUM	;HL=.fcb(modnum), A=fcb(modnum)
(1) 2261/    F2A6 :                     ;reset the file write flag to mark as written fcb
(1) 2262/    F2A6 : E6 7F               		AND	A,(~FWFMSK) & 0FFH	;bit reset
(1) 2263/    F2A8 : 77                  		LD	(HL),A		;fcb(modnum) = fcb(modnum) and 7fh
(1) 2264/    F2A9 : F1                  		POP	AF		;restore vrecord
(1) 2265/    F2AA :                     NOUPDATE:
(1) 2266/    F2AA :                     ;check for end of extent, if found attempt to open
(1) 2267/    F2AA :                     ;next extent in preparation for next write
(1) 2268/    F2AA : FE 7F               		CP	LSTREC		;vrecord=lstrec?
(1) 2269/    F2AC : 20 1A               		Jr	NZ,DISKWR3	;skip if not
(1) 2270/    F2AE :                     ;may be random access write, if so we are done
(1) 2271/    F2AE :                     ;change next
(1) 2272/    F2AE : 3A D5 F5            		LD	A,(SEQIO)
(1) 2273/    F2B1 : FE 01               		CP	1
(1) 2274/    F2B3 : 20 13               		Jr	NZ,DISKWR3	;skip next extent open op
(1) 2275/    F2B5 :                     ;update current fcb before going to next extent
(1) 2276/    F2B5 : CD 92 EC            		CALL	SETFCB
(1) 2277/    F2B8 : CD 3A F1            		CALL	OPEN_REEL	;rmf=FALSE_
(1) 2278/    F2BB :                     ;vrecord remains at lstrec causing eof if
(1) 2279/    F2BB :                     ;no more directory space is available
(1) 2280/    F2BB : 21 12 EB            		LD	HL,LRET
(1) 2281/    F2BE : 7E                  		LD	A,(HL)
(1) 2282/    F2BF : B7                  		OR	A
(1) 2283/    F2C0 : 20 04               		Jr	NZ,NOSPACE
(1) 2284/    F2C2 :                     ;space available, set vrecord=255
(1) 2285/    F2C2 : 3D                  		DEC	A
(1) 2286/    F2C3 : 32 E3 F5            		LD	(VRECORD),A	;goes to 00 next time
(1) 2287/    F2C6 :                     NOSPACE:
(1) 2288/    F2C6 : 36 00               		LD	(HL),0		;lret = 00 for returned value
(1) 2289/    F2C8 :                     DISKWR3:
(1) 2290/    F2C8 : C3 92 EC            		JP	SETFCB		;replace parameters
(1) 2291/    F2CB :                     ;ret
(1) 2292/    F2CB :                     ;
(1) 2293/    F2CB :                     RSEEK:
(1) 2294/    F2CB :                     ;random access seek operation, C=0ffh if read mode
(1) 2295/    F2CB :                     ;fcb is assumed to address an active file control block
(1) 2296/    F2CB :                     ;(modnum has been set to 1100_0000b if previous bad seek)
(1) 2297/    F2CB : AF                  		XOR	A
(1) 2298/    F2CC : 32 D5 F5            		LD	(SEQIO),A	;marked as random access operation
(1) 2299/    F2CF :                     RSEEK1:
(1) 2300/    F2CF : C5                  		PUSH	BC		;save r/w flag
(1) 2301/    F2D0 : 2A 10 EB            		LD	HL,(INFO)
(1) 2302/    F2D3 : EB                  		EX	DE,HL		;DE will hold base of fcb
(1) 2303/    F2D4 : 21 21 00            		LD	HL,RANREC
(1) 2304/    F2D7 : 19                  		ADD	HL,DE		;HL=.fcb(ranrec)
(1) 2305/    F2D8 : 7E                  		LD	A,(HL)
(1) 2306/    F2D9 : E6 7F               		AND	7FH
(1) 2307/    F2DB : F5                  		PUSH	AF		;record number
(1) 2308/    F2DC : 7E                  		LD	A,(HL)
(1) 2309/    F2DD : 17                  		RLA	;cy=lsb of extent#
(1) 2310/    F2DE : 23                  		INC	HL
(1) 2311/    F2DF : 7E                  		LD	A,(HL)
(1) 2312/    F2E0 : 17                  		RLA
(1) 2313/    F2E1 : E6 1F               		AND	11111B		;A=ext#
(1) 2314/    F2E3 : 4F                  		LD	C,A		;C holds extent number, record stacked
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bdos_cpa_ac1.asm) - Page 62 - 3/8/2023 15:39:33


(1) 2315/    F2E4 : 7E                  		LD	A,(HL)
(1) 2316/    F2E5 : 1F                  		RRA
(1) 2317/    F2E6 : 1F                  		RRA
(1) 2318/    F2E7 : 1F                  		RRA
(1) 2319/    F2E8 : 1F                  		RRA
(1) 2320/    F2E9 : E6 0F               		AND	1111B		;mod#
(1) 2321/    F2EB : 47                  		LD	B,A		;B holds module#, C holds ext#
(1) 2322/    F2EC : F1                  		POP	AF		;recall sought record #
(1) 2323/    F2ED :                     ;check to insure that high byte of ran rec = 00
(1) 2324/    F2ED : 23                  		INC	HL
(1) 2325/    F2EE : 6E                  		LD	L,(HL)		;l=high byte (must be 00)
(1) 2326/    F2EF : 2C                  		INC	L
(1) 2327/    F2F0 : 2D                  		DEC	L
(1) 2328/    F2F1 : 2E 06               		LD	L,6		;zero flag, l=6
(1) 2329/    F2F3 :                     ;produce error 6, seek past physical eod
(1) 2330/    F2F3 : 20 57               		Jr	NZ,SEEKERR
(1) 2331/    F2F5 :                     ;otherwise, high byte = 0, A = sought record
(1) 2332/    F2F5 : 21 20 00            		LD	HL,NXTREC
(1) 2333/    F2F8 : 19                  		ADD	HL,DE		;HL = .fcb(nxtrec)
(1) 2334/    F2F9 : 77                  		LD	(HL),A		;sought rec# stored away
(1) 2335/    F2FA :                     ;arrive here with B=mod#, C=ext#, DE=.fcb, rec stored
(1) 2336/    F2FA :                     ;the r/w flag is still stacked.  compare fcb values
(1) 2337/    F2FA : 21 0C 00            		LD	HL,EXTNUM
(1) 2338/    F2FD : 19                  		ADD	HL,DE
(1) 2339/    F2FE : 79                  		LD	A,C		;A=seek ext#
(1) 2340/    F2FF : 96                  		SUB	(HL)
(1) 2341/    F300 : 20 0A               		Jr	NZ,RANCLOSE	;tests for = extents
(1) 2342/    F302 :                     ;extents match, check mod#
(1) 2343/    F302 : 21 0E 00            		LD	HL,MODNUM
(1) 2344/    F305 : 19                  		ADD	HL,DE
(1) 2345/    F306 : 78                  		LD	A,B		;B=seek mod#
(1) 2346/    F307 :                     ;could be overflow at eof, producing module#
(1) 2347/    F307 :                     ;of 90H or 10H, so compare all but fwf
(1) 2348/    F307 : 96                  		SUB	(HL)
(1) 2349/    F308 : E6 7F               		AND	7FH
(1) 2350/    F30A : 28 34               		Jr	Z,SEEKOK	;same?
(1) 2351/    F30C :                     RANCLOSE:
(1) 2352/    F30C : C5                  		PUSH	BC
(1) 2353/    F30D : D5                  		PUSH	DE		;save seek mod#,ext#, .fcb
(1) 2354/    F30E : CD 8C F0            		CALL	CLOSE		;current extent closed
(1) 2355/    F311 : D1                  		POP	DE
(1) 2356/    F312 : C1                  		POP	BC		;recall parameters and fill
(1) 2357/    F313 : 2E 03               		LD	L,3		;cannot close error #3
(1) 2358/    F315 : 3A 12 EB            		LD	A,(LRET)
(1) 2359/    F318 : 3C                  		INC	A
(1) 2360/    F319 : 28 2A               		Jr	Z,BADSEEK
(1) 2361/    F31B : 21 0C 00            		LD	HL,EXTNUM
(1) 2362/    F31E : 19                  		ADD	HL,DE
(1) 2363/    F31F : 71                  		LD	(HL),C		;fcb(extnum)=ext#
(1) 2364/    F320 : 21 0E 00            		LD	HL,MODNUM
(1) 2365/    F323 : 19                  		ADD	HL,DE
(1) 2366/    F324 : 70                  		LD	(HL),B		;fcb(modnum)=mod#
(1) 2367/    F325 : CD 3D F0            		CALL	OPEN		;is the file present?
(1) 2368/    F328 : 3A 12 EB            		LD	A,(LRET)
(1) 2369/    F32B : 3C                  		INC	A
(1) 2370/    F32C : 20 12               		Jr	NZ,SEEKOK	;open successful?
(1) 2371/    F32E :                     ;cannot open the file, read mode?
(1) 2372/    F32E : C1                  		POP	BC		;r/w flag to c (=0ffh if read)
(1) 2373/    F32F : C5                  		PUSH	BC		;everyone expects this item stacked
(1) 2374/    F330 : 2E 04               		LD	L,4		;seek to unwritten extent #4
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bdos_cpa_ac1.asm) - Page 63 - 3/8/2023 15:39:33


(1) 2375/    F332 : 0C                  		INC	C		;becomes 00 if read operation
(1) 2376/    F333 : 28 10               		Jr	Z,BADSEEK	;skip to error if read operation
(1) 2377/    F335 :                     ;write operation, make new extent
(1) 2378/    F335 : CD 05 F1            		CALL	MAKE
(1) 2379/    F338 : 2E 05               		LD	L,5		;cannot create new extent #5
(1) 2380/    F33A : 3A 12 EB            		LD	A,(LRET)
(1) 2381/    F33D : 3C                  		INC	A
(1) 2382/    F33E : 28 05               		Jr	Z,BADSEEK	;no dir space
(1) 2383/    F340 :                     ;file make operation successful
(1) 2384/    F340 :                     SEEKOK:
(1) 2385/    F340 : C1                  		POP	BC		;discard r/w flag
(1) 2386/    F341 : AF                  		XOR	A
(1) 2387/    F342 : C3 C0 EA            		JP	STA_RET		;with zero set
(1) 2388/    F345 :                     BADSEEK:
(1) 2389/    F345 :                     ;fcb no longer contains a valid fcb, mark
(1) 2390/    F345 :                     ;with 1100_000b in modnum field so that it
(1) 2391/    F345 :                     ;appears as overflow with file write flag set
(1) 2392/    F345 : E5                  		PUSH	HL		;save error flag
(1) 2393/    F346 : CD 25 ED            		CALL	GETMODNUM	;HL = .modnum
(1) 2394/    F349 : 36 C0               		LD	(HL),11000000B
(1) 2395/    F34B : E1                  		POP	HL		;and drop through
(1) 2396/    F34C :                     SEEKERR:
(1) 2397/    F34C : C1                  		POP	BC		;discard r/w flag
(1) 2398/    F34D : 7D                  		LD	A,L
(1) 2399/    F34E : 32 12 EB            		LD	(LRET),A	;lret=#, nonzero
(1) 2400/    F351 :                     ;setfwf returns non-zero accumulator for err
(1) 2401/    F351 : C3 34 ED            		JP	SETFWF		;flag set, so subsequent close ok
(1) 2402/    F354 :                     ;ret
(1) 2403/    F354 :                     ;
(1) 2404/    F354 :                     RANDISKREAD:
(1) 2405/    F354 :                     ;random disk read operation
(1) 2406/    F354 : 0E FF               		LD	C,TRUE_		;marked as read operation
(1) 2407/    F356 : CD CB F2            		CALL	RSEEK
(1) 2408/    F359 : CC 99 F1            		CALL	Z,DISKREAD	;if seek successful
(1) 2409/    F35C : C9                  		RET
(1) 2410/    F35D :                     ;
(1) 2411/    F35D :                     RANDISKWRITE:
(1) 2412/    F35D :                     ;random disk write operation
(1) 2413/    F35D : 0E 00               		LD	C,FALSE_	;marked as write operation
(1) 2414/    F35F : CD CB F2            		CALL	RSEEK
(1) 2415/    F362 : CC D7 F1            		CALL	Z,DISKWRITE	;if seek successful
(1) 2416/    F365 : C9                  		RET
(1) 2417/    F366 :                     ;
(1) 2418/    F366 :                     COMPUTE_RR:
(1) 2419/    F366 :                     ;compute random record position for getfilesize/setrandom
(1) 2420/    F366 : EB                  		EX	DE,HL
(1) 2421/    F367 : 19                  		ADD	HL,DE
(1) 2422/    F368 :                     ;DE=.buf(dptr) or .fcb(0), HL = .f(nxtrec/reccnt)
(1) 2423/    F368 : 4E                  		LD	C,(HL)
(1) 2424/    F369 : 06 00               		LD	B,0		;BC = 0000 0000 ?rrr rrrr
(1) 2425/    F36B : 21 0C 00            		LD	HL,EXTNUM
(1) 2426/    F36E : 19                  		ADD	HL,DE
(1) 2427/    F36F : 7E                  		LD	A,(HL)
(1) 2428/    F370 : 0F                  		RRCA
(1) 2429/    F371 : E6 80               		AND	80H		;A=e000 0000
(1) 2430/    F373 : 81                  		ADD	A,C
(1) 2431/    F374 : 4F                  		LD	C,A
(1) 2432/    F375 : 3E 00               		LD	A,0
(1) 2433/    F377 : 88                  		ADC	A,B
(1) 2434/    F378 : 47                  		LD	B,A
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bdos_cpa_ac1.asm) - Page 64 - 3/8/2023 15:39:33


(1) 2435/    F379 :                     ;BC = 0000 000? errrr rrrr
(1) 2436/    F379 : 7E                  		LD	A,(HL)
(1) 2437/    F37A : 0F                  		RRCA
(1) 2438/    F37B : E6 0F               		AND	0FH
(1) 2439/    F37D : 80                  		ADD	A,B
(1) 2440/    F37E : 47                  		LD	B,A
(1) 2441/    F37F :                     ;BC = 000? eeee errrr rrrr
(1) 2442/    F37F : 21 0E 00            		LD	HL,MODNUM
(1) 2443/    F382 : 19                  		ADD	HL,DE
(1) 2444/    F383 : 7E                  		LD	A,(HL)		;A=XXX? mmmm
(1) 2445/    F384 : 87                  		ADD	A,A
(1) 2446/    F385 : 87                  		ADD	A,A
(1) 2447/    F386 : 87                  		ADD	A,A
(1) 2448/    F387 : 87                  		ADD	A,A		;cy=? A=mmmm 0000
(1) 2449/    F388 : F5                  		PUSH	AF
(1) 2450/    F389 : 80                  		ADD	A,B
(1) 2451/    F38A : 47                  		LD	B,A
(1) 2452/    F38B :                     ;cy=?, BC = mmmm eeee errr rrrr
(1) 2453/    F38B : F5                  		PUSH	AF		;possible second carry
(1) 2454/    F38C : E1                  		POP	HL		;cy = lsb of L
(1) 2455/    F38D : 7D                  		LD	A,L		;cy = lsb of A
(1) 2456/    F38E : E1                  		POP	HL		;cy = lsb of L
(1) 2457/    F38F : B5                  		OR	L		;cy/cy = lsb of A
(1) 2458/    F390 : E6 01               		AND	1		;A = 0000 000? possible carry-out
(1) 2459/    F392 : C9                  		RET
(1) 2460/    F393 :                     ;
(1) 2461/    F393 :                     GETFILESIZE:
(1) 2462/    F393 :                     ;compute logical file size for current fcb
(1) 2463/    F393 : 0E 0C               		LD	C,EXTNUM
(1) 2464/    F395 : CD CB EE            		CALL	SEARCH
(1) 2465/    F398 :                     ;zero the receiving ranrec field
(1) 2466/    F398 : 2A 10 EB            		LD	HL,(INFO)
(1) 2467/    F39B : 11 21 00            		LD	DE,RANREC
(1) 2468/    F39E : 19                  		ADD	HL,DE
(1) 2469/    F39F : E5                  		PUSH	HL		;save position
(1) 2470/    F3A0 : 72                  		LD	(HL),D
(1) 2471/    F3A1 : 23                  		INC	HL
(1) 2472/    F3A2 : 72                  		LD	(HL),D
(1) 2473/    F3A3 : 23                  		INC	HL
(1) 2474/    F3A4 : 72                  		LD	(HL),D		;=00 00 00
(1) 2475/    F3A5 :                     GETSIZE:
(1) 2476/    F3A5 : CD AD ED            		CALL	END_OF_DIR
(1) 2477/    F3A8 : 28 20               		Jr	Z,SETSIZE
(1) 2478/    F3AA :                     ;current fcb addressed by dptr
(1) 2479/    F3AA : CD 1A ED            		CALL	GETDPTRA
(1) 2480/    F3AD : 11 0F 00            		LD	DE,RECCNT	;ready for compute size
(1) 2481/    F3B0 : CD 66 F3            		CALL	COMPUTE_RR
(1) 2482/    F3B3 :                     ;A=0000 000? BC = mmmm eeee errr rrrr
(1) 2483/    F3B3 :                     ;compare with memory, larger?
(1) 2484/    F3B3 : E1                  		POP	HL
(1) 2485/    F3B4 : E5                  		PUSH	HL		;recall, replace .fcb(ranrec)
(1) 2486/    F3B5 : 5F                  		LD	E,A		;save cy
(1) 2487/    F3B6 : 79                  		LD	A,C
(1) 2488/    F3B7 : 96                  		SUB	(HL)
(1) 2489/    F3B8 : 23                  		INC	HL		;ls byte
(1) 2490/    F3B9 : 78                  		LD	A,B
(1) 2491/    F3BA : 9E                  		SBC	A,(HL)
(1) 2492/    F3BB : 23                  		INC	HL		;middle byte
(1) 2493/    F3BC : 7B                  		LD	A,E
(1) 2494/    F3BD : 9E                  		SBC	A,(HL)		;carry if .fcb(ranrec) > directory
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bdos_cpa_ac1.asm) - Page 65 - 3/8/2023 15:39:33


(1) 2495/    F3BE : 38 05               		Jr	C,GETNEXTSIZE	;for another try
(1) 2496/    F3C0 :                     ;fcb is less or equal, fill from directory
(1) 2497/    F3C0 : 73                  		LD	(HL),E
(1) 2498/    F3C1 : 2B                  		DEC	HL
(1) 2499/    F3C2 : 70                  		LD	(HL),B
(1) 2500/    F3C3 : 2B                  		DEC	HL
(1) 2501/    F3C4 : 71                  		LD	(HL),C
(1) 2502/    F3C5 :                     GETNEXTSIZE:
(1) 2503/    F3C5 : CD E0 EE            		CALL	SEARCHN
(1) 2504/    F3C8 : 18 DB               		Jr	GETSIZE
(1) 2505/    F3CA :                     SETSIZE:
(1) 2506/    F3CA : E1                  		POP	HL		;discard .fcb(ranrec)
(1) 2507/    F3CB : C9                  		RET
(1) 2508/    F3CC :                     ;
(1) 2509/    F3CC :                     SETRANDOM:
(1) 2510/    F3CC :                     ;set random record from the current file control block
(1) 2511/    F3CC : 2A 10 EB            		LD	HL,(INFO)
(1) 2512/    F3CF : 11 20 00            		LD	DE,NXTREC	;ready params for computesize
(1) 2513/    F3D2 : CD 66 F3            		CALL	COMPUTE_RR	;DE=info, A=cy, BC=mmmm eeee errr rrrr
(1) 2514/    F3D5 : 21 21 00            		LD	HL,RANREC
(1) 2515/    F3D8 : 19                  		ADD	HL,DE		;HL = .fcb(ranrec)
(1) 2516/    F3D9 : 71                  		LD	(HL),C
(1) 2517/    F3DA : 23                  		INC	HL
(1) 2518/    F3DB : 70                  		LD	(HL),B
(1) 2519/    F3DC : 23                  		INC	HL
(1) 2520/    F3DD : 77                  		LD	(HL),A		;to ranrec
(1) 2521/    F3DE : C9                  		RET
(1) 2522/    F3DF :                     ;
(1) 2523/    F3DF :                     SELECT:
(1) 2524/    F3DF :                     ;select disk info for subsequent input or output ops
(1) 2525/    F3DF : 2A AF F5            		LD	HL,(DLOG)
(1) 2526/    F3E2 : 3A 0F EB            		LD	A,(CURDSK)
(1) 2527/    F3E5 : 4F                  		LD	C,A
(1) 2528/    F3E6 : CD A9 EC            		CALL	HLROTR
(1) 2529/    F3E9 : E5                  		PUSH	HL
(1) 2530/    F3EA : EB                  		EX	DE,HL		;save it for test below, send to seldsk
(1) 2531/    F3EB : CD 25 EB            		CALL	SELECTDISK
(1) 2532/    F3EE : E1                  		POP	HL		;recall dlog vector
(1) 2533/    F3EF : CC 14 EB            		CALL	Z,SEL_ERROR	;returns TRUE_ if select ok
(1) 2534/    F3F2 :                     ;is the disk logged in?
(1) 2535/    F3F2 : 7D                  		LD	A,L
(1) 2536/    F3F3 : 1F                  		RRA
(1) 2537/    F3F4 : D8                  		RET	C		;return if bit is set
(1) 2538/    F3F5 :                     ;disk not logged in, set bit and initialize
(1) 2539/    F3F5 : 2A AF F5            		LD	HL,(DLOG)
(1) 2540/    F3F8 : 4D                  		LD	C,L
(1) 2541/    F3F9 : 44                  		LD	B,H		;call ready
(1) 2542/    F3FA : CD C7 EC            		CALL	SET_CDISK
(1) 2543/    F3FD : 22 AF F5            		LD	(DLOG),HL	;dlog=set_cdisk(dlog)
(1) 2544/    F400 : C3 52 EE            		JP	INITIALIZE
(1) 2545/    F403 :                     ;ret
(1) 2546/    F403 :                     ;
(1) 2547/    F403 : 3E FF               func14x:	ld	a, 0FFh
(1) 2548/    F405 : 32 DF F5            		ld	(olddsk), a
(1) 2549/    F408 :                     
(1) 2550/    F408 :                     CURSELECT:
(1) 2551/    F408 : 3A D6 F5            		LD	A,(LINFO)
(1) 2552/    F40B : 21 0F EB            		LD	HL,CURDSK
(1) 2553/    F40E : BE                  		CP	(HL)
(1) 2554/    F40F : C8                  		RET	Z		;skip if linfo=curdsk
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bdos_cpa_ac1.asm) - Page 66 - 3/8/2023 15:39:33


(1) 2555/    F410 : 77                  		LD	(HL),A		;curdsk=info
(1) 2556/    F411 : 18 CC               		Jr	SELECT
(1) 2557/    F413 :                     ;ret
(1) 2558/    F413 :                     ;
(1) 2559/    F413 :                     RESELECT:
(1) 2560/    F413 :                     ;check current fcb to see if reselection necessary
(1) 2561/    F413 : 3E FF               		LD	A,TRUE_
(1) 2562/    F415 : 32 DE F5            		LD	(RESEL),A	;mark possible reselect
(1) 2563/    F418 : 2A 10 EB            		LD	HL,(INFO)
(1) 2564/    F41B : 7E                  		LD	A,(HL)		;drive select code
(1) 2565/    F41C : E6 1F               		AND	11111B		;non zero is auto drive select
(1) 2566/    F41E : 3D                  		DEC	A		;drive code normalized to 0..30, or 255
(1) 2567/    F41F : FE 1E               		CP	30
(1) 2568/    F421 : DA 36 F4            		jp	c, loc_E034
(1) 2569/    F424 : 21 DF F5            		ld	hl, olddsk
(1) 2570/    F427 : 7E                  		ld	a, (hl)
(1) 2571/    F428 : 3C                  		inc	a
(1) 2572/    F429 : 28 24               		jr	z, noselect
(1) 2573/    F42B : 36 FF               		ld	(hl), 0FFh
(1) 2574/    F42D : 3D                  		dec	a
(1) 2575/    F42E : 32 D6 F5            		ld	(linfo), a
(1) 2576/    F431 : CD 08 F4            		call	curselect
(1) 2577/    F434 : 18 19               		jr	noselect
(1) 2578/    F436 :                     
(1) 2579/    F436 : 32 D6 F5            loc_E034:	ld	(linfo), a
(1) 2580/    F439 : 3A DF F5            		ld	a, (olddsk)
(1) 2581/    F43C : 3C                  		inc	a
(1) 2582/    F43D : 20 06               		jr	nz, loc_E043
(1) 2583/    F43F :                     ;auto select function, save curdsk
(1) 2584/    F43F : 3A 0F EB            		LD	A,(CURDSK)
(1) 2585/    F442 : 32 DF F5            		LD	(OLDDSK),A	;olddsk=curdsk
(1) 2586/    F445 : 7E                  loc_E043:	LD	A,(HL)
(1) 2587/    F446 : 32 E0 F5            		LD	(FCBDSK),A	;save drive code
(1) 2588/    F449 : E6 E0               		AND	11100000B
(1) 2589/    F44B : 77                  		LD	(HL),A		;preserve hi bits
(1) 2590/    F44C : CD 08 F4            		CALL	CURSELECT
(1) 2591/    F44F :                     NOSELECT:
(1) 2592/    F44F :                     ;set user code
(1) 2593/    F44F : 3A 0E EB            		LD	A,(USRCODE)	;0...31
(1) 2594/    F452 : 2A 10 EB            		LD	HL,(INFO)
(1) 2595/    F455 : B6                  		OR	(HL)
(1) 2596/    F456 : 77                  		LD	(HL),A
(1) 2597/    F457 : C9                  		RET
(1) 2598/    F458 :                     ;
(1) 2599/    F458 :                     ;	individual function handlers
(1) 2600/    F458 :                     FUNC12:
(1) 2601/    F458 :                     ;return version number
(1) 2602/    F458 : 3E 22               		LD	A,DVERS
(1) 2603/    F45A : C3 C0 EA            		JP	STA_RET		;lret = dvers (high = 00)
(1) 2604/    F45D :                     ;	ret ;jmp goback
(1) 2605/    F45D :                     ;
(1) 2606/    F45D :                     FUNC13:
(1) 2607/    F45D :                     ;reset disk system - initialize to disk 0
(1) 2608/    F45D : 3E FF               		ld	a, 0FFh
(1) 2609/    F45F : 32 DF F5            		ld	(olddsk), a
(1) 2610/    F462 : 21 00 00            		LD	HL,0
(1) 2611/    F465 : 22 AD F5            		LD	(RODSK),HL
(1) 2612/    F468 : 22 AF F5            		LD	(DLOG),HL
(1) 2613/    F46B : 21 EE F5            		ld	hl, DISKO
(1) 2614/    F46E : 7E                  		ld	a, (hl)
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bdos_cpa_ac1.asm) - Page 67 - 3/8/2023 15:39:33


(1) 2615/    F46F : FE FF               		cp	0FFh
(1) 2616/    F471 : 20 06               		jr	nz, FUNC13a
(1) 2617/    F473 : 3A 04 00            		ld	a, (DISKA)	;current disk
(1) 2618/    F476 : E6 0F               		and	0Fh
(1) 2619/    F478 : 77                  		ld	(hl), a
(1) 2620/    F479 : 32 0F EB            FUNC13a:	LD	(CURDSK),A	;note that usrcode remains unchanged
(1) 2621/    F47C : 32 13 EB            		ld	(aret+1), a
(1) 2622/    F47F : 21 80 00            		LD	HL,TBUFF
(1) 2623/    F482 : 22 B1 F5            		LD	(DMAAD),HL	;dmaad = tbuff
(1) 2624/    F485 : CD 93 ED            		CALL	SETDATA		;to data dma address
(1) 2625/    F488 : C3 DF F3            		JP	SELECT
(1) 2626/    F48B :                     ;ret ;jmp goback
(1) 2627/    F48B :                     ;
(1) 2628/    F48B : =0F403H             FUNC14		EQU	FUNC14x;
(1) 2629/    F48B :                     ;select disk info
(1) 2630/    F48B :                     ;ret ;jmp goback
(1) 2631/    F48B :                     ;
(1) 2632/    F48B :                     FUNC15:
(1) 2633/    F48B :                     ;open file
(1) 2634/    F48B : CD 2E ED            		CALL	CLRMODNUM	;clear the module number
(1) 2635/    F48E : CD 13 F4            		CALL	RESELECT
(1) 2636/    F491 : C3 3D F0            		JP	OPEN
(1) 2637/    F494 :                     ;ret ;jmp goback
(1) 2638/    F494 :                     ;
(1) 2639/    F494 :                     FUNC16:
(1) 2640/    F494 :                     ;close file
(1) 2641/    F494 : CD 13 F4            		CALL	RESELECT
(1) 2642/    F497 : C3 8C F0            		JP	CLOSE
(1) 2643/    F49A :                     ;ret ;jmp goback
(1) 2644/    F49A :                     ;
(1) 2645/    F49A :                     FUNC17:
(1) 2646/    F49A :                     ;search for first occurrence of a file
(1) 2647/    F49A : 0E 00               		LD	C,0		;length assuming '?' TRUE_
(1) 2648/    F49C : EB                  		EX	DE,HL		;was lhld info
(1) 2649/    F49D : 7E                  		LD	A,(HL)
(1) 2650/    F49E : FE 3F               		CP	'?'		;no reselect if ?
(1) 2651/    F4A0 : 28 0E               		Jr	Z,QSELECT	;skip reselect if so
(1) 2652/    F4A2 :                     ;normal search
(1) 2653/    F4A2 : CD 66 EC            		CALL	GETEXTA
(1) 2654/    F4A5 : 7E                  		LD	A,(HL)
(1) 2655/    F4A6 : FE 3F               		CP	'?'	;
(1) 2656/    F4A8 : C4 2E ED            		CALL	NZ,CLRMODNUM	;module number zeroed
(1) 2657/    F4AB : CD 13 F4            		CALL	RESELECT
(1) 2658/    F4AE : 0E 0F               		LD	C,NAMLEN
(1) 2659/    F4B0 :                     QSELECT:
(1) 2660/    F4B0 : CD CB EE            		CALL	SEARCH
(1) 2661/    F4B3 : C3 A1 ED            		JP	DIR_TO_USER	;copy directory entry to user
(1) 2662/    F4B6 :                     ;ret ;jmp goback
(1) 2663/    F4B6 :                     ;
(1) 2664/    F4B6 :                     FUNC18:
(1) 2665/    F4B6 :                     ;search for next occurrence of a file name
(1) 2666/    F4B6 : 2A D9 F5            		LD	HL,(SEARCHA)
(1) 2667/    F4B9 : 22 10 EB            		LD	(INFO),HL
(1) 2668/    F4BC : CD 13 F4            		CALL	RESELECT
(1) 2669/    F4BF : CD E0 EE            		CALL	SEARCHN
(1) 2670/    F4C2 : C3 A1 ED            		JP	DIR_TO_USER	;copy directory entry to user
(1) 2671/    F4C5 :                     ;ret ;jmp goback
(1) 2672/    F4C5 :                     ;
(1) 2673/    F4C5 :                     FUNC19:
(1) 2674/    F4C5 :                     ;delete a file
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bdos_cpa_ac1.asm) - Page 68 - 3/8/2023 15:39:33


(1) 2675/    F4C5 : CD 13 F4            		CALL	RESELECT
(1) 2676/    F4C8 : CD 44 EF            		CALL	DELETE
(1) 2677/    F4CB : C3 B4 EE            		JP	COPY_DIRLOC
(1) 2678/    F4CE :                     ;ret ;jmp goback
(1) 2679/    F4CE :                     ;
(1) 2680/    F4CE :                     FUNC20:
(1) 2681/    F4CE :                     ;read a file
(1) 2682/    F4CE : CD 13 F4            		CALL	RESELECT
(1) 2683/    F4D1 : C3 94 F1            		JP	SEQDISKREAD;
(1) 2684/    F4D4 :                     ;jmp goback
(1) 2685/    F4D4 :                     ;
(1) 2686/    F4D4 :                     FUNC21:
(1) 2687/    F4D4 :                     ;write a file
(1) 2688/    F4D4 : CD 13 F4            		CALL	RESELECT
(1) 2689/    F4D7 : C3 D2 F1            		JP	SEQDISKWRITE;
(1) 2690/    F4DA :                     ;jmp goback
(1) 2691/    F4DA :                     ;
(1) 2692/    F4DA :                     FUNC22:
(1) 2693/    F4DA :                     ;make a file
(1) 2694/    F4DA : CD 2E ED            		CALL	CLRMODNUM
(1) 2695/    F4DD : CD 13 F4            		CALL	RESELECT
(1) 2696/    F4E0 : C3 05 F1            		JP	MAKE
(1) 2697/    F4E3 :                     ;ret ;jmp goback
(1) 2698/    F4E3 :                     ;
(1) 2699/    F4E3 :                     FUNC23:
(1) 2700/    F4E3 :                     ;rename a file
(1) 2701/    F4E3 : CD 13 F4            		CALL	RESELECT
(1) 2702/    F4E6 : CD B7 EF            		CALL	RENAME
(1) 2703/    F4E9 : C3 B4 EE            		JP	COPY_DIRLOC
(1) 2704/    F4EC :                     ;ret ;jmp goback
(1) 2705/    F4EC :                     ;
(1) 2706/    F4EC :                     FUNC24:
(1) 2707/    F4EC :                     ;return the login vector
(1) 2708/    F4EC : 2A AF F5            		LD	HL,(DLOG)
(1) 2709/    F4EF : C3 21 F5            		JP	STHL_RET;
(1) 2710/    F4F2 :                     ;	ret ;jmp goback
(1) 2711/    F4F2 :                     ;
(1) 2712/    F4F2 :                     FUNC25:
(1) 2713/    F4F2 :                     ;return selected disk number
(1) 2714/    F4F2 : 3A DF F5            		LD	A,(olddsk)
(1) 2715/    F4F5 : 3C                  		inc	a
(1) 2716/    F4F6 : 28 04               		jr	z, loc_E0FA
(1) 2717/    F4F8 : 3D                  		dec	a
(1) 2718/    F4F9 : C3 C0 EA            		JP	STA_RET;
(1) 2719/    F4FC :                     ;	ret ;jmp goback
(1) 2720/    F4FC : 3A 0F EB            loc_E0FA:	ld	a, (curdsk)
(1) 2721/    F4FF : C3 C0 EA            		jp	sta_ret
(1) 2722/    F502 :                     
(1) 2723/    F502 :                     ;
(1) 2724/    F502 :                     FUNC26:
(1) 2725/    F502 :                     ;set the subsequent dma address to info
(1) 2726/    F502 : EB                  		EX	DE,HL		;was lhld info
(1) 2727/    F503 : 22 B1 F5            		LD	(DMAAD),HL	;dmaad = info
(1) 2728/    F506 : C3 93 ED            		JP	SETDATA		;to data dma address
(1) 2729/    F509 :                     ;ret ;jmp goback
(1) 2730/    F509 :                     ;
(1) 2731/    F509 :                     FUNC27:
(1) 2732/    F509 :                     ;return the login vector address
(1) 2733/    F509 : 2A BF F5            		LD	HL,(ALLOCA)
(1) 2734/    F50C : C3 21 F5            		JP	STHL_RET;
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bdos_cpa_ac1.asm) - Page 69 - 3/8/2023 15:39:33


(1) 2735/    F50F :                     ;	ret ;jmp goback
(1) 2736/    F50F :                     ;
(1) 2737/    F50F : =0ECE8H             FUNC28		EQU	SET_RO;
(1) 2738/    F50F :                     ;write protect current disk
(1) 2739/    F50F :                     ;ret ;jmp goback
(1) 2740/    F50F :                     ;
(1) 2741/    F50F :                     FUNC29:
(1) 2742/    F50F :                     ;return r/o bit vector
(1) 2743/    F50F : 2A AD F5            		LD	HL,(RODSK)
(1) 2744/    F512 : C3 21 F5            		JP	STHL_RET;
(1) 2745/    F515 :                     ;	ret ;jmp goback
(1) 2746/    F515 :                     ;
(1) 2747/    F515 :                     FUNC30:
(1) 2748/    F515 :                     ;set file indicators
(1) 2749/    F515 : CD 13 F4            		CALL	RESELECT
(1) 2750/    F518 : CD 28 F0            		CALL	INDICATORS
(1) 2751/    F51B : C3 B4 EE            		JP	COPY_DIRLOC	;lret=dirloc
(1) 2752/    F51E :                     ;ret ;jmp goback
(1) 2753/    F51E :                     ;
(1) 2754/    F51E :                     FUNC31:
(1) 2755/    F51E :                     ;return address of disk parameter block
(1) 2756/    F51E : 2A BB F5            		LD	HL,(DPBADDR)
(1) 2757/    F521 :                     STHL_RET:
(1) 2758/    F521 : 22 12 EB            		LD	(ARET),HL
(1) 2759/    F524 : C9                  		RET			;jmp goback
(1) 2760/    F525 :                     FUNC32:
(1) 2761/    F525 :                     ;set user code
(1) 2762/    F525 : 3A D6 F5            		LD	A,(LINFO)
(1) 2763/    F528 : FE FF               		CP	0FFH
(1) 2764/    F52A : 20 06               		Jr	NZ,SETUSRCODE
(1) 2765/    F52C :                     ;interrogate user code instead
(1) 2766/    F52C : 3A 0E EB            		LD	A,(USRCODE)
(1) 2767/    F52F : C3 C0 EA            		JP	STA_RET		;lret=usrcode
(1) 2768/    F532 :                     ;		ret ;jmp goback
(1) 2769/    F532 :                     SETUSRCODE:
(1) 2770/    F532 : E6 1F               		AND	1FH
(1) 2771/    F534 : 32 0E EB            		LD	(USRCODE),A
(1) 2772/    F537 : C9                  		RET	;jmp goback
(1) 2773/    F538 :                     ;
(1) 2774/    F538 :                     FUNC33:
(1) 2775/    F538 :                     ;random disk read operation
(1) 2776/    F538 : CD 13 F4            		CALL	RESELECT
(1) 2777/    F53B : C3 54 F3            		JP	RANDISKREAD	;to perform the disk read
(1) 2778/    F53E :                     ;ret ;jmp goback
(1) 2779/    F53E :                     ;
(1) 2780/    F53E :                     FUNC34:
(1) 2781/    F53E :                     ;random disk write operation
(1) 2782/    F53E : CD 13 F4            		CALL	RESELECT
(1) 2783/    F541 : C3 5D F3            		JP	RANDISKWRITE	;to perform the disk write
(1) 2784/    F544 :                     ;ret ;jmp goback
(1) 2785/    F544 :                     ;
(1) 2786/    F544 :                     FUNC35:
(1) 2787/    F544 :                     ;return file size (0-65536)
(1) 2788/    F544 : CD 13 F4            		CALL	RESELECT
(1) 2789/    F547 : C3 93 F3            		JP	GETFILESIZE
(1) 2790/    F54A :                     ;ret ;jmp goback
(1) 2791/    F54A :                     ;
(1) 2792/    F54A : =0F3CCH             FUNC36		EQU	SETRANDOM;
(1) 2793/    F54A :                     ;set random record
(1) 2794/    F54A :                     ;ret ;jmp goback
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bdos_cpa_ac1.asm) - Page 70 - 3/8/2023 15:39:33


(1) 2795/    F54A :                     FUNC37:
(1) 2796/    F54A :                     ;
(1) 2797/    F54A : 2A 10 EB            		LD	HL,(INFO)
(1) 2798/    F54D : 7D                  		LD	A,L
(1) 2799/    F54E : 2F                  		CPL
(1) 2800/    F54F : 5F                  		LD	E,A
(1) 2801/    F550 : 7C                  		LD	A,H
(1) 2802/    F551 : 2F                  		CPL
(1) 2803/    F552 : 2A AF F5            		LD	HL,(DLOG)
(1) 2804/    F555 : A4                  		AND	H
(1) 2805/    F556 : 57                  		LD	D,A
(1) 2806/    F557 : 7D                  		LD	A,L
(1) 2807/    F558 : A3                  		AND	E
(1) 2808/    F559 : 5F                  		LD	E,A
(1) 2809/    F55A : 2A AD F5            		LD	HL,(RODSK)
(1) 2810/    F55D : EB                  		EX	DE,HL
(1) 2811/    F55E : 22 AF F5            		LD	(DLOG),HL
(1) 2812/    F561 : 7D                  		LD	A,L
(1) 2813/    F562 : A3                  		AND	E
(1) 2814/    F563 : 6F                  		LD	L,A
(1) 2815/    F564 : 7C                  		LD	A,H
(1) 2816/    F565 : A2                  		AND	D
(1) 2817/    F566 : 67                  		LD	H,A
(1) 2818/    F567 : 22 AD F5            		LD	(RODSK),HL
(1) 2819/    F56A : C9                  		RET
(1) 2820/    F56B :                     ;
(1) 2821/    F56B :                     ;
(1) 2822/    F56B :                     GOBACK:
(1) 2823/    F56B :                     ;arrive here at end of processing to return to user
(1) 2824/    F56B : 3A DE F5            		LD	A,(RESEL)
(1) 2825/    F56E : B7                  		OR	A
(1) 2826/    F56F : 28 07               		Jr	Z,RETMON
(1) 2827/    F571 :                     ;reselection may have taken place
(1) 2828/    F571 : 2A 10 EB            		LD	HL,(INFO)
(1) 2829/    F574 : 3A E0 F5            		LD	A,(FCBDSK)
(1) 2830/    F577 : 77                  		LD	(HL),A		;fcb(0)=disk
(1) 2831/    F578 :                     ;
(1) 2832/    F578 :                     ;	return from the disk monitor
(1) 2833/    F578 : FD E1               RETMON:		pop	iy
(1) 2834/    F57A : DD E1               		pop	ix
(1) 2835/    F57C : 2A CC EA            		LD	HL,(ENTSP)
(1) 2836/    F57F : F9                  		LD	SP,HL		;user stack restored
(1) 2837/    F580 : 2A 12 EB            		LD	HL,(ARET)
(1) 2838/    F583 : 7D                  		LD	A,L
(1) 2839/    F584 : 44                  		LD	B,H		;BA = HL = aret
(1) 2840/    F585 : C9                  		RET
(1) 2841/    F586 : =0EAC3H             FUNC38		EQU	FUNC_RET
(1) 2842/    F586 : =0EAC3H             FUNC39		EQU	FUNC_RET
(1) 2843/    F586 :                     FUNC40:
(1) 2844/    F586 :                     ;random disk write with zero fill of unallocated block
(1) 2845/    F586 : CD 13 F4            		CALL	RESELECT
(1) 2846/    F589 : 3E 02               		LD	A,2
(1) 2847/    F58B : 32 D5 F5            		LD	(SEQIO),A
(1) 2848/    F58E : 0E 00               		LD	C,FALSE_
(1) 2849/    F590 : CD CF F2            		CALL	RSEEK1
(1) 2850/    F593 : CC D7 F1            		CALL	Z,DISKWRITE	;if seek successful
(1) 2851/    F596 : C9                  		RET
(1) 2852/    F597 :                     
(1) 2853/    F597 : FE                  		db 0FEh
(1) 2854/    F598 : FE                  		db 0FEh
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bdos_cpa_ac1.asm) - Page 71 - 3/8/2023 15:39:33


(1) 2855/    F599 : FE                  		db 0FEh
(1) 2856/    F59A : FE                  		db 0FEh
(1) 2857/    F59B : FE                  		db 0FEh
(1) 2858/    F59C : FE                  		db 0FEh
(1) 2859/    F59D : FE                  		db 0FEh
(1) 2860/    F59E : FE                  		db 0FEh
(1) 2861/    F59F : FE                  		db 0FEh
(1) 2862/    F5A0 : FE                  		db 0FEh
(1) 2863/    F5A1 : FE                  		db 0FEh
(1) 2864/    F5A2 : FE                  		db 0FEh
(1) 2865/    F5A3 : FE                  		db 0FEh
(1) 2866/    F5A4 : FE                  		db 0FEh
(1) 2867/    F5A5 : FE                  		db 0FEh
(1) 2868/    F5A6 : FE                  		db 0FEh
(1) 2869/    F5A7 : FE                  		db 0FEh
(1) 2870/    F5A8 : FE                  		db 0FEh
(1) 2871/    F5A9 : FE                  		db 0FEh
(1) 2872/    F5AA : FE                  		db 0FEh
(1) 2873/    F5AB : FE                  		db 0FEh
(1) 2874/    F5AC :                     
(1) 2875/    F5AC :                     ;		org	F5ACh
(1) 2876/    F5AC :                     ;
(1) 2877/    F5AC :                     ;	data areas
(1) 2878/    F5AC :                     ;
(1) 2879/    F5AC :                     ;	initialized data
(1) 2880/    F5AC : E5                  EFCB:		DB	EMPTY		;0e5=available dir entry
(1) 2881/    F5AD : 00 00               RODSK:		DW	0		;read only disk vector
(1) 2882/    F5AF : 00 00               DLOG:		DW	0		;logged-in disks
(1) 2883/    F5B1 : 80 00               DMAAD:		DW	TBUFF		;initial dma address
(1) 2884/    F5B3 :                     ;
(1) 2885/    F5B3 :                     ;	curtrka - alloca are set upon disk select
(1) 2886/    F5B3 :                     ;	(data must be adjacent, do not insert variables)
(1) 2887/    F5B3 :                     ;	(address of translate vector, not used)
(1) 2888/    F5B3 :                     CDRMAXA:	DS	WORD		;pointer to cur dir max value
(1) 2889/    F5B5 :                     CURTRKA:	DS	WORD		;current track address
(1) 2890/    F5B7 :                     CURRECA:	DS	WORD		;current record address
(1) 2891/    F5B9 :                     BUFFA:		DS	WORD		;pointer to directory dma address
(1) 2892/    F5BB :                     DPBADDR:	DS	WORD		;current disk parameter block address
(1) 2893/    F5BD :                     CHECKA:		DS	WORD		;current checksum vector address
(1) 2894/    F5BF :                     ALLOCA:		DS	WORD		;current allocation vector address
(1) 2895/    F5C1 : =8H                 ADDLIST		EQU	$-BUFFA		;address list size
(1) 2896/    F5C1 :                     ;
(1) 2897/    F5C1 :                     ;	sectpt - offset obtained from disk parm block at dpbaddr
(1) 2898/    F5C1 :                     ;	(data must be adjacent, do not insert variables)
(1) 2899/    F5C1 :                     SECTPT:		DS	WORD		;sectors per track
(1) 2900/    F5C3 :                     BLKSHF:		DS	BYTE		;block shift factor
(1) 2901/    F5C4 :                     BLKMSK:		DS	BYTE		;block mask
(1) 2902/    F5C5 :                     EXTMSK:		DS	BYTE		;extent mask
(1) 2903/    F5C6 :                     MAXALL:		DS	WORD		;maximum allocation number
(1) 2904/    F5C8 :                     DIRMAX:		DS	WORD		;largest directory number
(1) 2905/    F5CA :                     DIRBLK:		DS	WORD		;reserved allocation bits for directory
(1) 2906/    F5CC :                     CHKSIZ:		DS	WORD		;size of checksum vector
(1) 2907/    F5CE :                     OFFSET:		DS	WORD		;offset tracks at beginning
(1) 2908/    F5D0 : =0FH                DPBLIST		EQU	$-SECTPT	;size of area
(1) 2909/    F5D0 :                     ;
(1) 2910/    F5D0 :                     ;	local variables
(1) 2911/    F5D0 :                     TRANV:		DS	WORD		;address of translate vector
(1) 2912/    F5D2 :                     FCB_COPIED:
(1) 2913/    F5D2 :                     		DS	BYTE		;set TRUE_ if copy_fcb called
(1) 2914/    F5D3 :                     RMF:		DS	BYTE		;read mode flag for open_reel
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bdos_cpa_ac1.asm) - Page 72 - 3/8/2023 15:39:33


(1) 2915/    F5D4 :                     DIRLOC:		DS	BYTE		;directory flag in rename, etc.
(1) 2916/    F5D5 :                     SEQIO:		DS	BYTE		;1 if sequential i/o
(1) 2917/    F5D6 :                     LINFO:		DS	BYTE		;low(info)
(1) 2918/    F5D7 :                     DMINX:		DS	BYTE		;local for diskwrite
(1) 2919/    F5D8 :                     SEARCHL:	DS	BYTE		;search length
(1) 2920/    F5D9 :                     SEARCHA:	DS	WORD		;search address
(1) 2921/    F5DB :                     TINFO:		DS	WORD		;temp for info in "make"
(1) 2922/    F5DD :                     SINGLE:		DS	BYTE		;set TRUE_ if single byte allocation map
(1) 2923/    F5DE :                     RESEL:		DS	BYTE		;reselection flag
(1) 2924/    F5DF :                     OLDDSK:		DS	BYTE		;disk on entry to bdos
(1) 2925/    F5E0 :                     FCBDSK:		DS	BYTE		;disk named in fcb
(1) 2926/    F5E1 :                     RCOUNT:		DS	BYTE		;record count in current fcb
(1) 2927/    F5E2 :                     EXTVAL:		DS	BYTE		;extent number and extmsk
(1) 2928/    F5E3 :                     VRECORD:	DS	WORD		;current virtual record
(1) 2929/    F5E5 :                     ARECORD:	DS	WORD		;current actual record
(1) 2930/    F5E7 :                     ARECORD1:	DS	WORD		;current actual block# * blkmsk
(1) 2931/    F5E9 :                     ;
(1) 2932/    F5E9 :                     ;	local variables for directory access
(1) 2933/    F5E9 :                     DPTR:		DS	BYTE		;directory pointer 0,1,2,3
(1) 2934/    F5EA :                     DCNT:		DS	WORD		;directory counter 0,1,...,dirmax
(1) 2935/    F5EC :                     DREC:		DS	WORD		;directory record 0,1,...,dirmax/4
(1) 2936/    F5EE : FF                  DISKO:		db 0FFh			;initial disk on INIT, if <> FFh
(1) 2937/    F5EF : FE                  		db 0FEh
(1) 2938/    F5F0 : FE                  		db 0FEh
(1) 2939/    F5F1 : FE                  		db 0FEh
(1) 2940/    F5F2 : FE                  		db 0FEh
(1) 2941/    F5F3 : FE                  		db 0FEh
(1) 2942/    F5F4 : FE                  		db 0FEh
(1) 2943/    F5F5 : FE                  		db 0FEh
(1) 2944/    F5F6 : FE                  		db 0FEh
(1) 2945/    F5F7 : FE                  		db 0FEh
(1) 2946/    F5F8 : FE                  		db 0FEh
(1) 2947/    F5F9 : FE                  		db 0FEh
(1) 2948/    F5FA : FE                  		db 0FEh
(1) 2949/    F5FB : FE                  		db 0FEh
(1) 2950/    F5FC : FE                  		db 0FEh
(1) 2951/    F5FD : FE                  		db 0FEh
(1) 2952/    F5FE : FE                  		db 0FEh
(1) 2953/    F5FF : FE                  		db 0FEh
(1) 2954/    F600 :                     
(1) 2955/    F600 :                     		db	0E00h-($-loc_0) dup (0FFh)
(1) 2956/    F600 :                     ;
(1) 2957/    F600 :                     ;BIOS:		EQU	($ & 0FF00H)+100H	;next module
(1) 2958/    F600 : =0F600H             BIOS:		EQU	$
(1) 2959/    F600 :                     ;	bios access constants
(1) 2960/    F600 :                     ;bios		equ	$+0E00h
(1) 2961/    F600 : =0F600H             BOOTF		equ	BIOS+3*0	;cold boot function
(1) 2962/    F600 : =0F603H             WBOOTF		equ	BIOS+3*1	;warm boot function
(1) 2963/    F600 : =0F606H             CONSTF		equ	BIOS+3*2	;console status function
(1) 2964/    F600 : =0F609H             CONINF		equ	BIOS+3*3	;console input function
(1) 2965/    F600 : =0F60CH             CONOUTF		equ	BIOS+3*4	;console output function
(1) 2966/    F600 : =0F60FH             LISTF		equ	BIOS+3*5	;list output function
(1) 2967/    F600 : =0F612H             PUNCHF		equ	BIOS+3*6	;punch output function
(1) 2968/    F600 : =0F615H             READERF		equ	BIOS+3*7	;reader input function
(1) 2969/    F600 : =0F618H             HOMEF		equ	BIOS+3*8	;disk home function
(1) 2970/    F600 : =0F61BH             SELDSKF		equ	BIOS+3*9	;select disk function
(1) 2971/    F600 : =0F61EH             SETTRKF		equ	BIOS+3*10	;set track function
(1) 2972/    F600 : =0F621H             SETSECF		equ	BIOS+3*11	;set sector function
(1) 2973/    F600 : =0F624H             SETDMAF		equ	BIOS+3*12	;set dma function
(1) 2974/    F600 : =0F627H             READF		equ	BIOS+3*13	;read disk function
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bdos_cpa_ac1.asm) - Page 73 - 3/8/2023 15:39:33


(1) 2975/    F600 : =0F62AH             WRITEF		equ	BIOS+3*14	;write disk function
(1) 2976/    F600 : =0F62DH             LISTSTF		equ	BIOS+3*15	;list status function
(1) 2977/    F600 : =0F630H             SECTRAN		equ	BIOS+3*16	;sector translate
(1) 2978/    F600 :                     
(1) 2979/    F600 :                     
(1) 2980/    F600 :                     ;;	END
(1) 2981/    F600 :                     
      61/    F600 : [BDOS]              		endsection
      62/    F600 :                     		LISTING	NOSKIPPED
      63/    F600 :                     
      64/    F600 :                     ;-----------------------------------------------------------------------------
      65/    F600 :                     ; BIOS
      66/    F600 :                     ;-----------------------------------------------------------------------------
      67/    F600 :                     
      68/    F600 :                     		org	BIOS
      69/    F600 :                     		section BIOS
      70/    F600 :                     		include	bios22_ac1.asm
(1)    1/    F600 :                     ; File Name   :	d:\hobby3\cpm11\CPM64_FUA_bios_F600.bin
(1)    2/    F600 :                     ; Format      :	Binary file
(1)    3/    F600 :                     ; Base Address:	0000h Range: F600h - FCC0h Loaded length: 06C0h
(1)    4/    F600 :                     
(1)    5/    F600 :                     
(1)    6/    F600 :                     
(1)    7/    F600 :                     ;------------------------------------------------------------------------------
(1)    8/    F600 :                     ; BIOS V2.2 CP/M FA  ist die im FA 10/89 abgedruckte Version
(1)    9/    F600 :                     ; basiert auf cbios.asm aus 
(1)   10/    F600 :                     ; Manfred Kramer, "Praktische Mikrocomputertechnik", Militärverlag DDR,1987
(1)   11/    F600 :                     ;
(1)   12/    F600 :                     ; 1 Laufwerk MP-RAM-Floppy 256K
(1)   13/    F600 :                     ;------------------------------------------------------------------------------
(1)   14/    F600 :                     
(1)   15/    F600 :                     		cpu	z80
(1)   16/    F600 :                     
(1)   17/    F600 :                     ;hi              function x, (x>>8) & 0ffh	; High-Byte
(1)   18/    F600 :                     ;CCP		equ	0E000h		; base of ccp
(1)   19/    F600 :                     ;BDOS       	equ	CCP+0800h	; base of bdos
(1)   20/    F600 :                     ;BIOS		equ	CCP+1600h	; base of bios
(1)   21/    F600 :                     ;IOLOC	EQU	3		;i/o definition byte.
(1)   22/    F600 :                     ;DISKA	EQU	4		;current drive name and user number.
(1)   23/    F600 :                     
(1)   24/    F600 :                     ;		org bios
(1)   25/    F600 :                     
(1)   26/    F600 : =1H                 NDISK:	EQU	1		;ANZAHL LAUFWERKE
(1)   27/    F600 :                     
(1)   28/    F600 : =7FH                CURS	equ	07Fh		;Zeichen f. Cursor
(1)   29/    F600 :                     
(1)   30/    F600 :                     CPMON		macro
(1)   31/    F600 :                     		ld	a, 0FFh
(1)   32/    F600 :                     		out	(1Eh), a	; CPM-Mode on
(1)   33/    F600 :                     		endm
(1)   34/    F600 :                     CPMOFF		macro
(1)   35/    F600 :                     		ld	a, 0
(1)   36/    F600 :                     		out	(1Eh), a	; CPM-Mode off
(1)   37/    F600 :                     		endm
(1)   38/    F600 :                     
(1)   39/    F600 :                     ;------------------------------------------------------------------------------
(1)   40/    F600 :                     ; 
(1)   41/    F600 :                     ;------------------------------------------------------------------------------
(1)   42/    F600 :                     
(1)   43/    F600 : C3 8A F7            entry:		jp	boot
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bios22_ac1.asm) - Page 74 - 3/8/2023 15:39:33


(1)   44/    F603 : C3 E0 F7            WBOTE:		jp	wboot
(1)   45/    F606 : C3 8F FA            		jp	const
(1)   46/    F609 : C3 39 FC            		jp	conin
(1)   47/    F60C : C3 D4 FA            		jp	conout
(1)   48/    F60F : C3 AD FC            		jp	list
(1)   49/    F612 : 3E 1A               		ld	a,1Ah
(1)   50/    F614 : C9                  		ret			; punch
(1)   51/    F615 : 3E 1A               		ld	a,1Ah
(1)   52/    F617 : C9                  		ret			; reader
(1)   53/    F618 : C3 00 F7            		jp	HOME
(1)   54/    F61B : C3 05 F7            		jp	SDISK
(1)   55/    F61E : C3 3A F7            		jp	STRCK
(1)   56/    F621 : C3 35 F7            		jp	SSEC
(1)   57/    F624 : C3 3F F7            		jp	SDMA
(1)   58/    F627 : C3 BA F8            		jp	RRDSK
(1)   59/    F62A : C3 A7 F8            		jp	WRDSK
(1)   60/    F62D : C3 DA FC            		jp	lstst
(1)   61/    F630 : C3 23 F7            		jp	STRAN
(1)   62/    F633 :                     
(1)   63/    F633 :                     ;------------------------------------------------------------------------------
(1)   64/    F633 :                     ; 
(1)   65/    F633 :                     ;------------------------------------------------------------------------------
(1)   66/    F633 :                     
(1)   67/    F633 : 43 50 4D 41 43      		db "CPMAC"
(1)   68/    F638 :                     
(1)   69/    F638 : C3 93 FE            		jp	exit		; residentes Zusatzkommando CCP
(1)   70/    F63B : C3 69 FD            		jp	load		; residentes Zusatzkommando CCP
(1)   71/    F63E :                     
(1)   72/    F63E :                     unk_F63E	ds	6
(1)   73/    F644 :                     
(1)   74/    F644 :                     
(1)   75/    F644 :                     		align	100h		; warum?
(1)   76/    F700 :                     
(1)   77/    F700 :                     ;------------------------------------------------------------------------------
(1)   78/    F700 :                     ; KOPF AUF SPUR NULL STELLEN
(1)   79/    F700 :                     ;------------------------------------------------------------------------------
(1)   80/    F700 :                     
(1)   81/    F700 : 01 00 00            HOME:		ld	bc, 0
(1)   82/    F703 : 18 35               		jr	STRCK
(1)   83/    F705 :                     
(1)   84/    F705 :                     ;------------------------------------------------------------------------------
(1)   85/    F705 :                     ;LAUFWERK AUSWAEHLEN
(1)   86/    F705 :                     ;IN:C LAUFWERK
(1)   87/    F705 :                     ;OUT:HL DPH-VEKTOR
(1)   88/    F705 :                     ;------------------------------------------------------------------------------
(1)   89/    F705 :                     
(1)   90/    F705 : 21 00 00            SDISK:		ld	hl, 0
(1)   91/    F708 : C5                  		push	bc
(1)   92/    F709 : 06 00               		ld	b, 0
(1)   93/    F70B : 79                  		ld	a, c
(1)   94/    F70C : FE 01               		cp	NDISK
(1)   95/    F70E : DA 14 F7            		jp	c, seldsk1
(1)   96/    F711 :                     
(1)   97/    F711 :                     		;Fehler
(1)   98/    F711 : AF                  		xor	a
(1)   99/    F712 : C1                  		pop	bc
(1)  100/    F713 : C9                  		ret
(1)  101/    F714 :                     
(1)  102/    F714 : 69                  seldsk1:	ld	l, c
(1)  103/    F715 : 60                  		ld	h, b
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bios22_ac1.asm) - Page 75 - 3/8/2023 15:39:33


(1)  104/    F716 : 29                  		add	hl, hl
(1)  105/    F717 : 29                  		add	hl, hl
(1)  106/    F718 : 29                  		add	hl, hl
(1)  107/    F719 : 29                  		add	hl, hl
(1)  108/    F71A : 11 59 F9            		ld	de, DPBAS
(1)  109/    F71D : 19                  		add	hl, de
(1)  110/    F71E : 32 04 00            		ld	(DISKA), a
(1)  111/    F721 : C1                  		pop	bc
(1)  112/    F722 : C9                  		ret
(1)  113/    F723 :                     
(1)  114/    F723 :                     ;------------------------------------------------------------------------------
(1)  115/    F723 :                     ;SECTOR TRANSFOR.
(1)  116/    F723 :                     ;------------------------------------------------------------------------------
(1)  117/    F723 :                     
(1)  118/    F723 : 06 00               STRAN:		ld	b, 0
(1)  119/    F725 : 7A                  		ld	a, d
(1)  120/    F726 : B3                  		or	e
(1)  121/    F727 : 20 04               		jr	nz, sectran1
(1)  122/    F729 : 60                  		ld	h, b
(1)  123/    F72A : 69                  		ld	l, c
(1)  124/    F72B : 23                  		inc	hl
(1)  125/    F72C : C9                  		ret
(1)  126/    F72D : EB                  sectran1:		ex	de, hl
(1)  127/    F72E : 09                  		add	hl, bc
(1)  128/    F72F : 7E                  		ld	a, (hl)
(1)  129/    F730 : 32 7A F9            		ld	(SEC1),	a
(1)  130/    F733 : 6F                  		ld	l, a
(1)  131/    F734 : C9                  		ret
(1)  132/    F735 :                     
(1)  133/    F735 :                     ;------------------------------------------------------------------------------
(1)  134/    F735 :                     ;SECTOR EINSTELLEN
(1)  135/    F735 :                     ;IN: C SECTOR
(1)  136/    F735 :                     ;OUT: (SEC1) =C
(1)  137/    F735 :                     ;------------------------------------------------------------------------------
(1)  138/    F735 :                     
(1)  139/    F735 : 79                  SSEC:		ld	a, c
(1)  140/    F736 : 32 7A F9            		ld	(SEC1),	a
(1)  141/    F739 : C9                  		ret
(1)  142/    F73A :                     
(1)  143/    F73A :                     ;------------------------------------------------------------------------------
(1)  144/    F73A :                     ;SPUR ANWAEHLEN
(1)  145/    F73A :                     ;IN: C SPUR
(1)  146/    F73A :                     ;OUT (TRACK)=C
(1)  147/    F73A :                     ;------------------------------------------------------------------------------
(1)  148/    F73A :                     
(1)  149/    F73A : 79                  STRCK:		ld	a, c
(1)  150/    F73B : 32 78 F9            		ld	(TRACK), a
(1)  151/    F73E : C9                  		ret
(1)  152/    F73F :                     
(1)  153/    F73F :                     ;------------------------------------------------------------------------------
(1)  154/    F73F :                     ;DMA SETZEN
(1)  155/    F73F :                     ;IN: BC DMA
(1)  156/    F73F :                     ;------------------------------------------------------------------------------
(1)  157/    F73F :                     
(1)  158/    F73F : ED 43 7C F9         SDMA:		ld	(DMA), bc
(1)  159/    F743 : C9                  		ret
(1)  160/    F744 :                     
(1)  161/    F744 :                     ;------------------------------------------------------------------------------
(1)  162/    F744 :                     ; 
(1)  163/    F744 :                     ;------------------------------------------------------------------------------
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bios22_ac1.asm) - Page 76 - 3/8/2023 15:39:33


(1)  164/    F744 :                     
(1)  165/    F744 : 0C 1B 03 0A         inimsg:		db 0Ch,1Bh,3,0Ah
(1)  166/    F748 : 43 50 2F 4D 20 32   		db "CP/M 2.2  V 2.2  auf AC 1"
                    2E 32 20 20 56 20 
                    32 2E 32 20 20 61 
                    75 66 20 41 43 20 
                    31                
(1)  167/    F761 : 1B 05 0A            		db 1Bh,5,0Ah
(1)  168/    F764 : 52 41 4D 20 2D 20   		db "RAM - Disk neu formatieren (Y/n)?",0
                    44 69 73 6B 20 6E 
                    65 75 20 66 6F 72 
                    6D 61 74 69 65 72 
                    65 6E 20 28 59 2F 
                    6E 29 3F 00       
(1)  169/    F786 : 0D 0A 0A 00         asc_F786:	db 0Dh,0Ah,0Ah,0
(1)  170/    F78A :                     
(1)  171/    F78A :                     ;------------------------------------------------------------------------------
(1)  172/    F78A :                     ; 
(1)  173/    F78A :                     ;------------------------------------------------------------------------------
(1)  174/    F78A :                     
(1)  175/    F78A : 31 00 00            boot:		ld	sp, 0
(1)  176/    F78D : 21 00 E0            		ld	hl, CCP
(1)  177/    F790 : 11 00 18            		ld	de, 1800h
(1)  178/    F793 : 01 00 08            		ld	bc, 800h
(1)  179/    F796 : ED B0               		ldir
(1)  180/    F798 : 11 3E F6            		ld	de, unk_F63E
(1)  181/    F79B : 0E 06               		ld	c, 6
(1)  182/    F79D : ED B0               		ldir
(1)  183/    F79F : 3E 01               		ld	a, 1		; CPMON
(1)  184/    F7A1 : D3 1E               		out	(1Eh), a
(1)  185/    F7A3 : 3E C3               		ld	a, 0C3h		; jp
(1)  186/    F7A5 : 32 00 00            		ld	(0), a
(1)  187/    F7A8 : 21 03 F6            		ld	hl, WBOTE
(1)  188/    F7AB : 22 01 00            		ld	(1), hl
(1)  189/    F7AE : 32 05 00            		ld	(5), a
(1)  190/    F7B1 : 21 06 E8            		ld	hl, BDOS+6
(1)  191/    F7B4 : 22 06 00            		ld	(6), hl
(1)  192/    F7B7 : 32 38 00            		ld	(38h), a	;HALTEPUNKT VORBEREITEN
(1)  193/    F7BA : 21 AA FA            		ld	hl, RESTR
(1)  194/    F7BD : 22 39 00            		ld	(39h), hl
(1)  195/    F7C0 : 21 44 F7            		ld	hl, inimsg	; "CP/M   2.2   V 1.5  auf AC 1"
(1)  196/    F7C3 : CD 9A FA            		call	STR
(1)  197/    F7C6 : CD 39 FC            		call	conin
(1)  198/    F7C9 : E6 5F               		and	5Fh
(1)  199/    F7CB : FE 59               		cp	'Y'
(1)  200/    F7CD : CC 4C F8            		call	z, FRDSK	; Ramdisk formatieren
(1)  201/    F7D0 : 21 86 F7            		ld	hl, asc_F786	; "\r\n\n"
(1)  202/    F7D3 : CD 9A FA            		call	STR
(1)  203/    F7D6 :                     		;
(1)  204/    F7D6 : AF                  		xor	a
(1)  205/    F7D7 : 32 AC FC            		ld	(lstflg), a
(1)  206/    F7DA : 32 03 00            		ld	(IOLOC), a	; IOBYTE
(1)  207/    F7DD : 32 04 00            		ld	(DISKA), a	; DISKA
(1)  208/    F7E0 :                     
(1)  209/    F7E0 :                     ;------------------------------------------------------------------------------
(1)  210/    F7E0 :                     ; 
(1)  211/    F7E0 :                     ;------------------------------------------------------------------------------
(1)  212/    F7E0 :                     
(1)  213/    F7E0 : 01 80 00            wboot:		ld	bc, 80h
(1)  214/    F7E3 : CD 3F F7            		call	SDMA
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bios22_ac1.asm) - Page 77 - 3/8/2023 15:39:33


(1)  215/    F7E6 : AF                  		xor	a
(1)  216/    F7E7 : D3 1E               		out	(1Eh), a	; CPMOFF
(1)  217/    F7E9 :                     		; restore CCP+BDOS
(1)  218/    F7E9 : 21 00 18            		ld	hl, 1800h
(1)  219/    F7EC : 11 00 E0            		ld	de, CCP
(1)  220/    F7EF : 01 00 08            		ld	bc, 800h
(1)  221/    F7F2 : ED B0               		ldir
(1)  222/    F7F4 : 21 3E F6            		ld	hl, unk_F63E
(1)  223/    F7F7 : 0E 06               		ld	c, 6
(1)  224/    F7F9 : ED B0               		ldir
(1)  225/    F7FB : 32 07 18            		ld	(1807h), a
(1)  226/    F7FE : 3C                  		inc	a
(1)  227/    F7FF : D3 1E               		out	(1Eh), a	; CPMON
(1)  228/    F801 : 3A 04 00            		ld	a, (DISKA)
(1)  229/    F804 : 4F                  		ld	c, a
(1)  230/    F805 : C3 00 E0            		jp	CCP
(1)  231/    F808 :                     
(1)  232/    F808 :                     ;------------------------------------------------------------------------------
(1)  233/    F808 :                     ; RAMDISK
(1)  234/    F808 :                     ;------------------------------------------------------------------------------
(1)  235/    F808 :                     
(1)  236/    F808 : 00 00               rafofs		dw	0
(1)  237/    F80A :                     
(1)  238/    F80A : 0D 0A               aEinenMomentBit:db 0Dh,0Ah
(1)  239/    F80C : 0A                  		db 0Ah
(1)  240/    F80D : 45 69 6E 65 6E 20   		db "Einen Moment bitte !",0Dh,0Ah
                    4D 6F 6D 65 6E 74 
                    20 62 69 74 74 65 
                    20 21 0D 0A       
(1)  241/    F823 : 0A 00               		db 0Ah,0
(1)  242/    F825 : 45 73 20 73 74 65   aEsStehen252Kby:db "Es stehen 252 KByte zu Verfuegung !",0Dh,0Ah
                    68 65 6E 20 32 35 
                    32 20 4B 42 79 74 
                    65 20 7A 75 20 56 
                    65 72 66 75 65 67 
                    75 6E 67 20 21 0D 
                    0A                
(1)  243/    F84A : 0A 00               		db 0Ah,0
(1)  244/    F84C :                     
(1)  245/    F84C :                     
(1)  246/    F84C :                     ;------------------------------------------------------------------------------
(1)  247/    F84C :                     ; RAMDISK formatieren
(1)  248/    F84C :                     ;------------------------------------------------------------------------------
(1)  249/    F84C :                     
(1)  250/    F84C : 21 0A F8            FRDSK:		ld	hl, aEinenMomentBit ; "\r\n\nEinen Moment bitte	!\r\n\n"
(1)  251/    F84F : CD 9A FA            		call	STR
(1)  252/    F852 : 21 01 00            		ld	hl, 1
(1)  253/    F855 : 22 7A F9            		ld	(SEC1),	hl
(1)  254/    F858 : 06 02               		ld	b, 2
(1)  255/    F85A : 2E 00               		ld	l, 0
(1)  256/    F85C : 22 78 F9            		ld	(TRACK), hl
(1)  257/    F85F : 11 40 00            		ld	de, 40h
(1)  258/    F862 : 19                  frdsk1:		add	hl, de
(1)  259/    F863 : 10 FD               		djnz	frdsk1
(1)  260/    F865 : 11 02 00            		ld	de, 2
(1)  261/    F868 : AF                  		xor	a
(1)  262/    F869 : ED 52               		sbc	hl, de
(1)  263/    F86B : 22 08 F8            		ld	(rafofs), hl
(1)  264/    F86E : 21 80 00            		ld	hl, 80h
(1)  265/    F871 : 22 7C F9            		ld	(DMA), hl
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bios22_ac1.asm) - Page 78 - 3/8/2023 15:39:33


(1)  266/    F874 : 11 81 00            		ld	de, 81h
(1)  267/    F877 : 01 7F 00            		ld	bc, 7Fh
(1)  268/    F87A : 36 E5               		ld	(hl), 0E5h 	; erased
(1)  269/    F87C : ED B0               		ldir
(1)  270/    F87E :                     
(1)  271/    F87E : CD A7 F8            frdsk2:		call	WRDSK
(1)  272/    F881 : 3A 7A F9            		ld	a, (SEC1)
(1)  273/    F884 : 3C                  		inc	a
(1)  274/    F885 : 32 7A F9            		ld	(SEC1),	a
(1)  275/    F888 : D6 11               		sub	11h
(1)  276/    F88A : 20 F2               		jr	nz, frdsk2
(1)  277/    F88C : 3C                  		inc	a
(1)  278/    F88D : 32 7A F9            		ld	(SEC1),	a
(1)  279/    F890 : 2A 78 F9            		ld	hl, (TRACK)
(1)  280/    F893 : 23                  		inc	hl
(1)  281/    F894 : 22 78 F9            		ld	(TRACK), hl
(1)  282/    F897 : ED 5B 08 F8         		ld	de, (rafofs)
(1)  283/    F89B : ED 52               		sbc	hl, de
(1)  284/    F89D : 38 DF               		jr	c, frdsk2
(1)  285/    F89F : 21 25 F8            		ld	hl, aEsStehen252Kby ; "Es stehen 252 KByte zu Verfuegung !\r\n\n"
(1)  286/    F8A2 : C3 9A FA            		jp	STR
(1)  287/    F8A5 :                     
(1)  288/    F8A5 :                     ;------------------------------------------------------------------------------
(1)  289/    F8A5 :                     ;
(1)  290/    F8A5 :                     ;------------------------------------------------------------------------------
(1)  291/    F8A5 :                     
(1)  292/    F8A5 : 00 00               rafpos:		dw 0
(1)  293/    F8A7 :                     
(1)  294/    F8A7 :                     ;------------------------------------------------------------------------------
(1)  295/    F8A7 :                     ; RAMDISK schreiben
(1)  296/    F8A7 :                     ;------------------------------------------------------------------------------
(1)  297/    F8A7 :                     
(1)  298/    F8A7 : CD D3 F8            WRDSK:		call	ADRE
(1)  299/    F8AA : E5                  		push	hl
(1)  300/    F8AB : ED B3               		otir
(1)  301/    F8AD : E1                  		pop	hl
(1)  302/    F8AE : CD 26 F9            		call	crc
(1)  303/    F8B1 : CD 13 F9            		call	sub_F913
(1)  304/    F8B4 : ED 59               		out	(c), e
(1)  305/    F8B6 : ED 51               		out	(c), d
(1)  306/    F8B8 : AF                  		xor	a
(1)  307/    F8B9 : C9                  		ret
(1)  308/    F8BA :                     ; End of function WRDSK
(1)  309/    F8BA :                     
(1)  310/    F8BA :                     ;------------------------------------------------------------------------------
(1)  311/    F8BA :                     ; RAMDISK lesen
(1)  312/    F8BA :                     ;------------------------------------------------------------------------------
(1)  313/    F8BA :                     
(1)  314/    F8BA : CD D3 F8            RRDSK:		call	ADRE
(1)  315/    F8BD : E5                  		push	hl
(1)  316/    F8BE : ED B2               		inir
(1)  317/    F8C0 : E1                  		pop	hl
(1)  318/    F8C1 : CD 26 F9            		call	crc
(1)  319/    F8C4 : CD 13 F9            		call	sub_F913
(1)  320/    F8C7 : ED 68               		in	l, (c)
(1)  321/    F8C9 : ED 60               		in	h, (c)
(1)  322/    F8CB : AF                  		xor	a
(1)  323/    F8CC : ED 52               		sbc	hl, de
(1)  324/    F8CE : 7C                  		ld	a, h
(1)  325/    F8CF : B5                  		or	l
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bios22_ac1.asm) - Page 79 - 3/8/2023 15:39:33


(1)  326/    F8D0 : C8                  		ret	z
(1)  327/    F8D1 : 3C                  		inc	a
(1)  328/    F8D2 : C9                  		ret
(1)  329/    F8D3 :                     
(1)  330/    F8D3 :                     ;------------------------------------------------------------------------------
(1)  331/    F8D3 :                     ;
(1)  332/    F8D3 :                     ;------------------------------------------------------------------------------
(1)  333/    F8D3 :                     
(1)  334/    F8D3 : 2A 78 F9            ADRE:		ld	hl, (TRACK)
(1)  335/    F8D6 : 11 02 00            		ld	de, 2
(1)  336/    F8D9 : 19                  		add	hl, de
(1)  337/    F8DA : AF                  		xor	a
(1)  338/    F8DB : 29                  		add	hl, hl
(1)  339/    F8DC : 29                  		add	hl, hl
(1)  340/    F8DD : 29                  		add	hl, hl
(1)  341/    F8DE : 29                  		add	hl, hl
(1)  342/    F8DF : ED 5B 7A F9         		ld	de, (SEC1)
(1)  343/    F8E3 : 1B                  		dec	de
(1)  344/    F8E4 : 19                  		add	hl, de
(1)  345/    F8E5 : 22 A5 F8            		ld	(rafpos), hl
(1)  346/    F8E8 : CB 1C               		rr	h
(1)  347/    F8EA : CB 1D               		rr	l
(1)  348/    F8EC : CB 1F               		rr	a
(1)  349/    F8EE : D3 E7               		out	(0E7h),	a
(1)  350/    F8F0 : 7D                  		ld	a, l
(1)  351/    F8F1 : D3 E6               		out	(0E6h),	a
(1)  352/    F8F3 : 7C                  		ld	a, h
(1)  353/    F8F4 : CB 57               		bit	2, a
(1)  354/    F8F6 : 20 04               		jr	nz, ADRE1
(1)  355/    F8F8 : D3 ED               		out	(0EDh),	a
(1)  356/    F8FA : 18 02               		jr	ADRE2
(1)  357/    F8FC : D3 EC               ADRE1:		out	(0ECh),	a
(1)  358/    F8FE : CB 5F               ADRE2:		bit	3, a
(1)  359/    F900 : 20 04               		jr	nz, ADRE3
(1)  360/    F902 : D3 EF               		out	(0EFh),	a
(1)  361/    F904 : 18 02               		jr	ADRE4
(1)  362/    F906 : D3 EE               ADRE3:		out	(0EEh),	a
(1)  363/    F908 : E6 03               ADRE4:		and	3
(1)  364/    F90A : F6 E0               		or	0E0h
(1)  365/    F90C : 4F                  		ld	c, a
(1)  366/    F90D : 06 80               		ld	b, 80h
(1)  367/    F90F : 2A 7C F9            		ld	hl, (DMA)
(1)  368/    F912 : C9                  		ret
(1)  369/    F913 :                     
(1)  370/    F913 :                     ;------------------------------------------------------------------------------
(1)  371/    F913 :                     ;
(1)  372/    F913 :                     ;------------------------------------------------------------------------------
(1)  373/    F913 :                     
(1)  374/    F913 : 2A A5 F8            sub_F913:	ld	hl, (rafpos)
(1)  375/    F916 : 01 20 00            		ld	bc, 20h
(1)  376/    F919 : AF                  		xor	a
(1)  377/    F91A : ED 42               		sbc	hl, bc
(1)  378/    F91C : 29                  		add	hl, hl
(1)  379/    F91D : 7D                  		ld	a, l
(1)  380/    F91E : D3 E7               		out	(0E7h),	a
(1)  381/    F920 : 7C                  		ld	a, h
(1)  382/    F921 : D3 E6               		out	(0E6h),	a
(1)  383/    F923 : 0E E0               		ld	c, 0E0h
(1)  384/    F925 : C9                  		ret
(1)  385/    F926 :                     
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bios22_ac1.asm) - Page 80 - 3/8/2023 15:39:33


(1)  386/    F926 :                     ;------------------------------------------------------------------------------
(1)  387/    F926 :                     ;
(1)  388/    F926 :                     ;------------------------------------------------------------------------------
(1)  389/    F926 :                     
(1)  390/    F926 : 2A 7C F9            crc:		ld	hl, (DMA)
(1)  391/    F929 : 01 80 00            		ld	bc, 80h	
(1)  392/    F92C : 11 FF FF            		ld	de, 0FFFFh
(1)  393/    F92F : 7E                  crc1:		ld	a, (hl)
(1)  394/    F930 : AA                  		xor	d
(1)  395/    F931 : 57                  		ld	d, a
(1)  396/    F932 : 0F                  		rrca
(1)  397/    F933 : 0F                  		rrca
(1)  398/    F934 : 0F                  		rrca
(1)  399/    F935 : 0F                  		rrca
(1)  400/    F936 : E6 0F               		and	0Fh
(1)  401/    F938 : AA                  		xor	d
(1)  402/    F939 : 57                  		ld	d, a
(1)  403/    F93A : 0F                  		rrca
(1)  404/    F93B : 0F                  		rrca
(1)  405/    F93C : 0F                  		rrca
(1)  406/    F93D : F5                  		push	af
(1)  407/    F93E : E6 1F               		and	1Fh
(1)  408/    F940 : AB                  		xor	e
(1)  409/    F941 : 5F                  		ld	e, a
(1)  410/    F942 : F1                  		pop	af
(1)  411/    F943 : F5                  		push	af
(1)  412/    F944 : 0F                  		rrca
(1)  413/    F945 : E6 F0               		and	0F0h ; '­'
(1)  414/    F947 : AB                  		xor	e
(1)  415/    F948 : 5F                  		ld	e, a
(1)  416/    F949 : F1                  		pop	af
(1)  417/    F94A : E6 E0               		and	0E0h ; 'Ó'
(1)  418/    F94C : AA                  		xor	d
(1)  419/    F94D : 53                  		ld	d, e
(1)  420/    F94E : 5F                  		ld	e, a
(1)  421/    F94F : 23                  		inc	hl
(1)  422/    F950 : 0B                  		dec	bc
(1)  423/    F951 : 78                  		ld	a, b
(1)  424/    F952 : B1                  		or	c
(1)  425/    F953 : 20 DA               		jr	nz, crc1
(1)  426/    F955 : C9                  		ret
(1)  427/    F956 :                     
(1)  428/    F956 :                     ;???
(1)  429/    F956 : 3E 01               		ld	a, 1
(1)  430/    F958 : C9                  		ret
(1)  431/    F959 :                     
(1)  432/    F959 :                     ;------------------------------------------------------------------------------
(1)  433/    F959 :                     ; Disk Parameter Header
(1)  434/    F959 :                     ;------------------------------------------------------------------------------
(1)  435/    F959 :                     
(1)  436/    F959 :                     DPBAS:		
(1)  437/    F959 : 00 00               DPHA:		dw 0
(1)  438/    F95B : 00 00               		dw 0
(1)  439/    F95D : 00 00               		dw 0
(1)  440/    F95F : 00 00               		dw 0
(1)  441/    F961 : 7E F9               		dw DIRBF
(1)  442/    F963 : 69 F9               		dw DPBR			;GERABTEBESCHREIBUNG
(1)  443/    F965 : 7E FA               		dw CHK0			;DIRECTORY-KONTROLLE
(1)  444/    F967 : FE F9               		dw ALL0			;BELEGUNG DISKETTE
(1)  445/    F969 :                     
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bios22_ac1.asm) - Page 81 - 3/8/2023 15:39:33


(1)  446/    F969 :                     ;------------------------------------------------------------------------------
(1)  447/    F969 :                     ;DISK-PARAMETER-BLOCK RAM-DISK
(1)  448/    F969 :                     ; Drive Characteristics
(1)  449/    F969 :                     ; 2048:	128 Byte Record	Capacity
(1)  450/    F969 :                     ; 256:	Kilobyte Drive Capacity
(1)  451/    F969 :                     ; 64:	32 Byte	Directory Entries
(1)  452/    F969 :                     ; 0:	Checked	Directory Entries
(1)  453/    F969 :                     ; 128:	Records/Extent
(1)  454/    F969 :                     ; 8:	Records/Block
(1)  455/    F969 :                     ; 16:	Sectors/Track
(1)  456/    F969 :                     ; 0:	Reserved Tracks
(1)  457/    F969 :                     ;------------------------------------------------------------------------------
(1)  458/    F969 :                     
(1)  459/    F969 : 10 00               DPBR:		DW	16		;SECTOREN
(1)  460/    F96B : 04                  		DB	4		;BLOCKGROESSE 2K
(1)  461/    F96C : 0F                  		DB	15		;(SECTOREN/BLOCK)-1
(1)  462/    F96D : 00                  		DB	0
(1)  463/    F96E : 7D 00               		DW	125		;(BLOECKE/DISK)-1
(1)  464/    F970 : 3F 00               		DW	63		;64 DIRECTORY-ENTR.
(1)  465/    F972 : C0                  		DB	0C0H		;1 BELEGTER BLOCK DURCH DIR.
(1)  466/    F973 : 00                  		DB	0
(1)  467/    F974 : 00 00               		DW	0		;DIR/4
(1)  468/    F976 : 00 00               		DW	0		;0 SPUREN DURCH SYSTEM BELEGT
(1)  469/    F978 :                     
(1)  470/    F978 :                     ;------------------------------------------------------------------------------
(1)  471/    F978 :                     ; 
(1)  472/    F978 :                     ;------------------------------------------------------------------------------
(1)  473/    F978 :                     
(1)  474/    F978 : 00 00               TRACK:		dw 0
(1)  475/    F97A : 01 00               SEC1:		dw 1		;BDOS-SEKTOR
(1)  476/    F97C : 80 00               DMA:		dw 80h		;BDOS-DMA
(1)  477/    F97E :                     ;
(1)  478/    F97E :                     DIRBF:		ds 128		;INHALTSVERZ. DISKETTE
(1)  479/    F9FE :                     ALL0:		ds 128
(1)  480/    FA7E :                     CHK0:		ds 17
(1)  481/    FA8F :                     
(1)  482/    FA8F :                     ;------------------------------------------------------------------------------
(1)  483/    FA8F :                     ; Console Status
(1)  484/    FA8F :                     ;------------------------------------------------------------------------------
(1)  485/    FA8F :                     
(1)  486/    FA8F : DB 04               const:		in	a, (4)
(1)  487/    FA91 : CB 7F               		bit	7, a
(1)  488/    FA93 : 20 02               		jr	nz, loc_FA97
(1)  489/    FA95 : AF                  		xor	a
(1)  490/    FA96 : C9                  		ret
(1)  491/    FA97 : AF                  loc_FA97:	xor	a
(1)  492/    FA98 : 3D                  		dec	a
(1)  493/    FA99 : C9                  		ret
(1)  494/    FA9A :                     
(1)  495/    FA9A :                     ;------------------------------------------------------------------------------
(1)  496/    FA9A :                     ;AUSGABE EINER ZEICHENFOLGE,ABSCHLUSS DER FOLGE MIT 00
(1)  497/    FA9A :                     ;IN: ANFANGSADR. IN HL
(1)  498/    FA9A :                     ;------------------------------------------------------------------------------
(1)  499/    FA9A :                     
(1)  500/    FA9A : F5                  STR:		push	af
(1)  501/    FA9B : C5                  		push	bc
(1)  502/    FA9C : 7E                  str1:		ld	a, (hl)
(1)  503/    FA9D : B7                  		or	a
(1)  504/    FA9E : 28 07               		jr	z, str2
(1)  505/    FAA0 : 4F                  		ld	c, a
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bios22_ac1.asm) - Page 82 - 3/8/2023 15:39:33


(1)  506/    FAA1 : CD D4 FA            		call	conout
(1)  507/    FAA4 : 23                  		inc	hl
(1)  508/    FAA5 : 18 F5               		jr	str1
(1)  509/    FAA7 : C1                  str2:		pop	bc
(1)  510/    FAA8 : F1                  		pop	af
(1)  511/    FAA9 : C9                  		ret
(1)  512/    FAAA :                     
(1)  513/    FAAA :                     ;------------------------------------------------------------------------------
(1)  514/    FAAA :                     ; HALTEPUNKT
(1)  515/    FAAA :                     ;------------------------------------------------------------------------------
(1)  516/    FAAA :                     
(1)  517/    FAAA : F5                  RESTR:		push	af
(1)  518/    FAAB : (MACRO)             		CPMOFF
(1)  518/    FAAB : 3E 00                               ld      a, 0
(1)  518/    FAAD : D3 1E                               out     (1Eh), a        ; CPM-Mode off
(1)  519/    FAAF : 21 00 18            		ld	hl, 1800h
(1)  520/    FAB2 : 11 00 E0            		ld	de, 0E000h
(1)  521/    FAB5 : 01 00 08            		ld	bc, 800h
(1)  522/    FAB8 : ED B0               		ldir
(1)  523/    FABA : DF                  		rst	18h
(1)  524/    FABB : 43 50 4D 2D 42 52   		db "CPM-BREAK",8Dh
                    45 41 4B 8D       
(1)  525/    FAC5 : F1                  		pop	af
(1)  526/    FAC6 : FF                  		rst	38h		; durchreichen an Monitor
(1)  527/    FAC7 :                     		;
(1)  528/    FAC7 : DB 04               sub_FAC7:	in	a, (4)
(1)  529/    FAC9 : CB 7F               		bit	7, a
(1)  530/    FACB : C8                  		ret	z
(1)  531/    FACC : CD A1 FC            		call	MS30
(1)  532/    FACF : DB 04               		in	a, (4)
(1)  533/    FAD1 : CB 7F               		bit	7, a
(1)  534/    FAD3 : C9                  		ret
(1)  535/    FAD4 :                     
(1)  536/    FAD4 :                     ;------------------------------------------------------------------------------
(1)  537/    FAD4 :                     ; Console Ausgabe
(1)  538/    FAD4 :                     ;------------------------------------------------------------------------------
(1)  539/    FAD4 :                     
(1)  540/    FAD4 : F3                  conout:		di
(1)  541/    FAD5 : ED 73 E7 FC         		ld	(SYSSK), sp
(1)  542/    FAD9 : 31 69 FD            		ld	sp, load
(1)  543/    FADC : F5                  		push	af
(1)  544/    FADD : E5                  		push	hl
(1)  545/    FADE : D5                  		push	de
(1)  546/    FADF : C5                  		push	bc
(1)  547/    FAE0 : (MACRO)             		CPMOFF
(1)  547/    FAE0 : 3E 00                               ld      a, 0
(1)  547/    FAE2 : D3 1E                               out     (1Eh), a        ; CPM-Mode off
(1)  548/    FAE4 : 2A E2 FC            		ld	hl, (cupos)
(1)  549/    FAE7 : 3A E6 FC            		ld	a, (buff)	; Zeichen unter	Cursor
(1)  550/    FAEA : 77                  		ld	(hl), a
(1)  551/    FAEB : AF                  		xor	a
(1)  552/    FAEC : 21 E5 FC            		ld	hl, escmod
(1)  553/    FAEF : B6                  		or	(hl)
(1)  554/    FAF0 : 28 36               		jr	z, co4
(1)  555/    FAF2 : CB B9               		res	7, c
(1)  556/    FAF4 : 35                  		dec	(hl)
(1)  557/    FAF5 : 28 05               		jr	z, co1
(1)  558/    FAF7 : 2B                  		dec	hl
(1)  559/    FAF8 : 71                  		ld	(hl), c
(1)  560/    FAF9 : C3 22 FC            		jp	routch5
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bios22_ac1.asm) - Page 83 - 3/8/2023 15:39:33


(1)  561/    FAFC : 2B                  co1:		dec	hl
(1)  562/    FAFD : 7E                  		ld	a, (hl)
(1)  563/    FAFE : 69                  		ld	l, c
(1)  564/    FAFF : FE 20               		cp	' '
(1)  565/    FB01 : 38 0C               		jr	c, co2
(1)  566/    FB03 : F5                  		push	af
(1)  567/    FB04 : 79                  		ld	a, c
(1)  568/    FB05 : D6 20               		sub	' '
(1)  569/    FB07 : E6 3F               		and	3Fh ; '?'
(1)  570/    FB09 : 6F                  		ld	l, a
(1)  571/    FB0A : F1                  		pop	af
(1)  572/    FB0B : D6 20               		sub	20h ; ' '
(1)  573/    FB0D : E6 1F               		and	1Fh
(1)  574/    FB0F : 16 00               co2:		ld	d, 0
(1)  575/    FB11 : 62                  		ld	h, d
(1)  576/    FB12 : 5F                  		ld	e, a
(1)  577/    FB13 : 06 06               		ld	b, 6
(1)  578/    FB15 : CB 23               co3:		sla	e
(1)  579/    FB17 : CB 12               		rl	d
(1)  580/    FB19 : 10 FA               		djnz	co3
(1)  581/    FB1B : 19                  		add	hl, de
(1)  582/    FB1C : EB                  		ex	de, hl
(1)  583/    FB1D : 21 FF 17            		ld	hl, 17FFh
(1)  584/    FB20 : A7                  		and	a
(1)  585/    FB21 : ED 52               		sbc	hl, de
(1)  586/    FB23 : 22 E2 FC            		ld	(cupos), hl
(1)  587/    FB26 : 18 5F               		jr	co5
(1)  588/    FB28 : 2A E2 FC            co4:		ld	hl, (cupos)
(1)  589/    FB2B :                     
(1)  590/    FB2B :                     ; Bildschirm-Steuerzeichen, SCP-kompatibel
(1)  591/    FB2B :                     ; 00h            NOP (keine Wirkung)
(1)  592/    FB2B :                     ; 01h            Cursor links oben (home)
(1)  593/    FB2B :                     ; 07h            akustisches  Zeichen an  Tastatur
(1)  594/    FB2B :                     ; 08h            Cursor zurueck
(1)  595/    FB2B :                     ; 0ah            Linefeed (neue Zeile)
(1)  596/    FB2B :                     ; 0ch            Bildschirm  loeschen (verzoegert zum Lesen  der
(1)  597/    FB2B :                     ;                zuletzt ausgegebenen Bildschirmzeilen), Cursor
(1)  598/    FB2B :                     ;                links oben
(1)  599/    FB2B :                     ; 0dh            Carriage Return (an Zeilenanfang)
(1)  600/    FB2B :                     ; 14h            Rest des Bildschirms loeschen
(1)  601/    FB2B :                     ; 15h            Cursor nach rechts
(1)  602/    FB2B :                     ; 16h            Rest der Zeile loeschen
(1)  603/    FB2B :                     ; 18h            Zeile loeschen, Cursor an Zeiilenanfang
(1)  604/    FB2B :                     ; 1ah            Cursor eine Zeile hoch
(1)  605/    FB2B :                     ; 1bh            Einleitung  Cursorpositionierfolge, die naech-
(1)  606/    FB2B :                     ;                sten beiden Bytes beinhalten Zeile und  Spalte
(1)  607/    FB2B :                     ;                Offset 00h oder 80h
(1)  608/    FB2B :                     ; 7fh            Delete (streichen Zeichen links vom Kursor)
(1)  609/    FB2B :                     
(1)  610/    FB2B : 79                  		ld	a, c
(1)  611/    FB2C : FE 1B               		cp	1Bh
(1)  612/    FB2E : 28 5A               		jr	z, oesc
(1)  613/    FB30 : FE 01               		cp	1
(1)  614/    FB32 : 28 5E               		jr	z, ohome
(1)  615/    FB34 : FE 07               		cp	7
(1)  616/    FB36 : 28 63               		jr	z, obell
(1)  617/    FB38 : FE 0A               		cp	0Ah
(1)  618/    FB3A : 28 7C               		jr	z, olf
(1)  619/    FB3C : FE 0D               		cp	0Dh
(1)  620/    FB3E : 28 2A               		jr	z, ocr		; neue Zeile
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bios22_ac1.asm) - Page 84 - 3/8/2023 15:39:33


(1)  621/    FB40 : FE 15               		cp	15h
(1)  622/    FB42 : 28 7C               		jr	z, oright
(1)  623/    FB44 : FE 16               		cp	16h
(1)  624/    FB46 : CA E6 FB            		jp	z, oclrln
(1)  625/    FB49 : FE 18               		cp	18h
(1)  626/    FB4B : CA F2 FB            		jp	z, oclln
(1)  627/    FB4E : FE 1A               		cp	1Ah
(1)  628/    FB50 : 28 7B               		jr	z, oup
(1)  629/    FB52 : FE 7F               		cp	7Fh
(1)  630/    FB54 : 28 6D               		jr	z, odel
(1)  631/    FB56 : FE 14               		cp	14h
(1)  632/    FB58 : CA DB FB            		jp	z, clrscr
(1)  633/    FB5B : FE 0C               		cp	0Ch
(1)  634/    FB5D : 28 15               		jr	z, ocls		; Bildschirm lschen
(1)  635/    FB5F : FE 08               		cp	8
(1)  636/    FB61 : 28 0E               		jr	z, oback	; Backspace
(1)  637/    FB63 : FE 20               		cp	20h ; ' '
(1)  638/    FB65 : 38 20               		jr	c, co5		; sonstige Steuerzeichen bergehen
(1)  639/    FB67 : C3 FD FB            		jp	co10
(1)  640/    FB6A :                     ;neue Zeile
(1)  641/    FB6A : 7D                  ocr:		ld	a, l
(1)  642/    FB6B : F6 3F               		or	3Fh
(1)  643/    FB6D : 6F                  		ld	l, a
(1)  644/    FB6E : C3 FF FB            		jp	routch3
(1)  645/    FB71 :                     ;Zeichen löschen
(1)  646/    FB71 : 23                  oback:		inc	hl
(1)  647/    FB72 : 18 5D               		jr	co7
(1)  648/    FB74 :                     ;Bildschirm löschen		
(1)  649/    FB74 : 3E 20               ocls:		ld	a, ' '
(1)  650/    FB76 : 21 00 10            		ld	hl, 1000h
(1)  651/    FB79 : 77                  		ld	(hl), a
(1)  652/    FB7A : 54                  		ld	d, h
(1)  653/    FB7B : 5D                  		ld	e, l
(1)  654/    FB7C : 1C                  		inc	e
(1)  655/    FB7D : C5                  		push	bc
(1)  656/    FB7E : 01 FF 07            		ld	bc, 7FFh
(1)  657/    FB81 : ED B0               		ldir
(1)  658/    FB83 : 22 E2 FC            		ld	(cupos), hl
(1)  659/    FB86 : C1                  		pop	bc
(1)  660/    FB87 : C3 22 FC            co5:		jp	routch5
(1)  661/    FB8A :                     ;
(1)  662/    FB8A : 3E 02               oesc:		ld	a, 2
(1)  663/    FB8C : 32 E5 FC            		ld	(escmod), a
(1)  664/    FB8F : C3 22 FC            		jp	routch5
(1)  665/    FB92 :                     ;		
(1)  666/    FB92 : 21 FF 17            ohome:		ld	hl, 17FFh
(1)  667/    FB95 : 22 E2 FC            		ld	(cupos), hl
(1)  668/    FB98 : C3 22 FC            		jp	routch5
(1)  669/    FB9B :                     ;
(1)  670/    FB9B : 0E FF               obell:		ld	c, 0FFh
(1)  671/    FB9D : DB 05               		in	a, (5)
(1)  672/    FB9F : CB 87               		res	0, a
(1)  673/    FBA1 : F5                  		push	af
(1)  674/    FBA2 : D3 05               		out	(5), a
(1)  675/    FBA4 : 06 30               		ld	b, 30h
(1)  676/    FBA6 : 10 FE               co6:		djnz	co6
(1)  677/    FBA8 : DB 05               		in	a, (5)
(1)  678/    FBAA : EE 40               		xor	40h
(1)  679/    FBAC : D3 05               		out	(5), a
(1)  680/    FBAE : 0D                  		dec	c
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bios22_ac1.asm) - Page 85 - 3/8/2023 15:39:33


(1)  681/    FBAF : 20 F5               		jr	nz, co6
(1)  682/    FBB1 : F1                  		pop	af
(1)  683/    FBB2 : CB C7               		set	0, a
(1)  684/    FBB4 : D3 05               		out	(5), a
(1)  685/    FBB6 : 18 6A               		jr	routch5
(1)  686/    FBB8 :                     ; line feed
(1)  687/    FBB8 : 11 40 00            olf:		ld	de, 64		
(1)  688/    FBBB : A7                  		and	a
(1)  689/    FBBC : ED 52               		sbc	hl, de
(1)  690/    FBBE : 18 3F               		jr	routch3
(1)  691/    FBC0 :                     ;
(1)  692/    FBC0 : 2B                  oright:		dec	hl
(1)  693/    FBC1 : 18 3C               		jr	routch3
(1)  694/    FBC3 :                     ;
(1)  695/    FBC3 : 23                  odel:		inc	hl
(1)  696/    FBC4 : 3E 18               		ld	a, 18h
(1)  697/    FBC6 : BC                  		cp	h
(1)  698/    FBC7 : 28 59               		jr	z, routch5
(1)  699/    FBC9 : 36 20               		ld	(hl), ' '
(1)  700/    FBCB : 18 32               		jr	routch3
(1)  701/    FBCD :                     ;
(1)  702/    FBCD : 11 40 00            oup:		ld	de, 64
(1)  703/    FBD0 : 19                  		add	hl, de
(1)  704/    FBD1 : 3E 18               co7:		ld	a, 18h
(1)  705/    FBD3 : BC                  		cp	h
(1)  706/    FBD4 : 28 4C               		jr	z, routch5
(1)  707/    FBD6 : 22 E2 FC            		ld	(cupos), hl
(1)  708/    FBD9 : 18 47               		jr	routch5
(1)  709/    FBDB :                     ;
(1)  710/    FBDB : 3E 0F               clrscr:		ld	a, 0Fh
(1)  711/    FBDD : 36 20               co8:		ld	(hl), ' '
(1)  712/    FBDF : 2B                  		dec	hl
(1)  713/    FBE0 : BC                  		cp	h
(1)  714/    FBE1 : C2 DD FB            		jp	nz, co8
(1)  715/    FBE4 : 18 3C               		jr	routch5
(1)  716/    FBE6 :                     ;
(1)  717/    FBE6 : 7D                  oclrln:		ld	a, l
(1)  718/    FBE7 : E6 3F               		and	3Fh ; '?'
(1)  719/    FBE9 : 47                  		ld	b, a
(1)  720/    FBEA : 04                  		inc	b
(1)  721/    FBEB : 36 20               co9:		ld	(hl), ' '
(1)  722/    FBED : 2B                  		dec	hl
(1)  723/    FBEE : 10 FB               		djnz	co9
(1)  724/    FBF0 : 18 30               		jr	routch5
(1)  725/    FBF2 :                     ;
(1)  726/    FBF2 : 7D                  oclln:		ld	a, l
(1)  727/    FBF3 : F6 3F               		or	3Fh ; '?'
(1)  728/    FBF5 : 6F                  		ld	l, a
(1)  729/    FBF6 : 22 E2 FC            		ld	(cupos), hl
(1)  730/    FBF9 : 06 40               		ld	b, 40h ; '@'
(1)  731/    FBFB : 18 EE               		jr	co9
(1)  732/    FBFD :                     ; Zeichenausgabe
(1)  733/    FBFD : 77                  co10:		ld	(hl), a
(1)  734/    FBFE : 2B                  		dec	hl
(1)  735/    FBFF : EB                  routch3:	ex	de, hl
(1)  736/    FC00 : 21 FF 0F            		ld	hl, 0FFFh
(1)  737/    FC03 : A7                  		and	a
(1)  738/    FC04 : ED 52               		sbc	hl, de
(1)  739/    FC06 : EB                  		ex	de, hl
(1)  740/    FC07 : 22 E2 FC            		ld	(cupos), hl
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bios22_ac1.asm) - Page 86 - 3/8/2023 15:39:33


(1)  741/    FC0A : 38 16               		jr	c, routch5
(1)  742/    FC0C :                     ; 1 Zeile hochscrollen
(1)  743/    FC0C : 21 BF 17            		ld	hl, 17BFh
(1)  744/    FC0F : 11 FF 17            		ld	de, 17FFh
(1)  745/    FC12 : 01 C0 07            		ld	bc, 7C0h
(1)  746/    FC15 : ED B8               		lddr
(1)  747/    FC17 : ED 53 E2 FC         		ld	(cupos), de
(1)  748/    FC1B : EB                  		ex	de, hl
(1)  749/    FC1C : 23                  		inc	hl
(1)  750/    FC1D : 2D                  routch4:	dec	l
(1)  751/    FC1E : 36 20               		ld	(hl), ' '
(1)  752/    FC20 : 20 FB               		jr	nz, routch4
(1)  753/    FC22 : C1                  routch5:	pop	bc
(1)  754/    FC23 : D1                  		pop	de
(1)  755/    FC24 : 2A E2 FC            		ld	hl, (cupos)
(1)  756/    FC27 : 7E                  		ld	a, (hl)
(1)  757/    FC28 : 32 E6 FC            		ld	(buff),	a	; Zeichen unter	Cursor
(1)  758/    FC2B : 36 7F               		ld	(hl), CURS
(1)  759/    FC2D : E1                  		pop	hl
(1)  760/    FC2E : (MACRO)             		CPMON
(1)  760/    FC2E : 3E FF                               ld      a, 0FFh
(1)  760/    FC30 : D3 1E                               out     (1Eh), a        ; CPM-Mode on
(1)  761/    FC32 : F1                  		pop	af
(1)  762/    FC33 : ED 7B E7 FC         		ld	sp, (SYSSK)
(1)  763/    FC37 : FB                  		ei
(1)  764/    FC38 : C9                  		ret
(1)  765/    FC39 :                     
(1)  766/    FC39 :                     ;------------------------------------------------------------------------------
(1)  767/    FC39 :                     ; Console Eingabe
(1)  768/    FC39 :                     ;------------------------------------------------------------------------------
(1)  769/    FC39 :                     
(1)  770/    FC39 : F3                  conin:		di
(1)  771/    FC3A : ED 73 E7 FC         		ld	(SYSSK), sp
(1)  772/    FC3E : 31 69 FD            		ld	sp, load
(1)  773/    FC41 : (MACRO)             		CPMOFF
(1)  773/    FC41 : 3E 00                               ld      a, 0
(1)  773/    FC43 : D3 1E                               out     (1Eh), a        ; CPM-Mode off
(1)  774/    FC45 : E5                  		push	hl
(1)  775/    FC46 : C5                  		push	bc
(1)  776/    FC47 : 2A E2 FC            		ld	hl, (cupos)
(1)  777/    FC4A : 36 7F               ci1:		ld	(hl), CURS
(1)  778/    FC4C : 06 00               ci2:		ld	b, 0
(1)  779/    FC4E : C5                  ci3:		push	bc
(1)  780/    FC4F : 06 00               		ld	b, 0
(1)  781/    FC51 : 10 FE               ci4:		djnz	ci4
(1)  782/    FC53 : C1                  		pop	bc
(1)  783/    FC54 : CD C7 FA            		call	sub_FAC7
(1)  784/    FC57 : 20 0D               		jr	nz, ci5
(1)  785/    FC59 : 10 F3               		djnz	ci3
(1)  786/    FC5B : 3E 7F               		ld	a, CURS
(1)  787/    FC5D : BE                  		cp	(hl)
(1)  788/    FC5E : 20 EA               		jr	nz, ci1
(1)  789/    FC60 : 3A E6 FC            		ld	a, (buff)	; Zeichen unter	Cursor
(1)  790/    FC63 : 77                  		ld	(hl), a
(1)  791/    FC64 : 18 E6               		jr	ci2
(1)  792/    FC66 : F5                  ci5:		push	af
(1)  793/    FC67 : 3A E6 FC            		ld	a, (buff)	; Zeichen unter	Cursor
(1)  794/    FC6A : 77                  		ld	(hl), a
(1)  795/    FC6B : DB 05               		in	a, (5)
(1)  796/    FC6D : CB 87               		res	0, a
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bios22_ac1.asm) - Page 87 - 3/8/2023 15:39:33


(1)  797/    FC6F : D3 05               		out	(5), a
(1)  798/    FC71 : CD A1 FC            		call	MS30
(1)  799/    FC74 : DB 05               		in	a, (5)
(1)  800/    FC76 : CB C7               		set	0, a
(1)  801/    FC78 : D3 05               		out	(5), a
(1)  802/    FC7A : DB 04               ci6:		in	a, (4)
(1)  803/    FC7C : CB 7F               		bit	7, a
(1)  804/    FC7E : 20 FA               		jr	nz, ci6
(1)  805/    FC80 : 3E FF               		ld	a,0FFh
(1)  806/    FC82 : D3 1E               		out	(1Eh), a	; CPMON
(1)  807/    FC84 : F1                  		pop	af
(1)  808/    FC85 : E6 7F               		and	7Fh
(1)  809/    FC87 :                     		;
(1)  810/    FC87 : FE 41               		cp	41h ; 'A'
(1)  811/    FC89 : 38 0E               		jr	c, loc_FC99
(1)  812/    FC8B : FE 7B               		cp	7Bh ; '{'
(1)  813/    FC8D : 30 0A               		jr	nc, loc_FC99
(1)  814/    FC8F : FE 5B               		cp	5Bh ; '['
(1)  815/    FC91 : 38 04               		jr	c, loc_FC97
(1)  816/    FC93 : FE 61               		cp	61h ; 'a'
(1)  817/    FC95 : 38 02               		jr	c, loc_FC99
(1)  818/    FC97 : EE 20               loc_FC97:	xor	20h ; ' '
(1)  819/    FC99 :                     loc_FC99:	;
(1)  820/    FC99 : C1                  		pop	bc
(1)  821/    FC9A : E1                  		pop	hl
(1)  822/    FC9B : ED 7B E7 FC         		ld	sp, (SYSSK)
(1)  823/    FC9F : FB                  		ei
(1)  824/    FCA0 : C9                  		ret
(1)  825/    FCA1 :                     
(1)  826/    FCA1 :                     ;------------------------------------------------------------------------------
(1)  827/    FCA1 :                     ; 
(1)  828/    FCA1 :                     ;------------------------------------------------------------------------------
(1)  829/    FCA1 :                     
(1)  830/    FCA1 : C5                  MS30:		push	bc
(1)  831/    FCA2 : 01 03 09            		ld	bc, 903h
(1)  832/    FCA5 : 0B                  ms301:		dec	bc
(1)  833/    FCA6 : 78                  		ld	a, b
(1)  834/    FCA7 : B1                  		or	c
(1)  835/    FCA8 : 20 FB               		jr	nz, ms301
(1)  836/    FCAA : C1                  		pop	bc
(1)  837/    FCAB : C9                  		ret
(1)  838/    FCAC :                     
(1)  839/    FCAC :                     
(1)  840/    FCAC :                     ;------------------------------------------------------------------------------
(1)  841/    FCAC :                     ; LIST
(1)  842/    FCAC :                     ;------------------------------------------------------------------------------
(1)  843/    FCAC :                     
(1)  844/    FCAC : 00                  lstflg:		db 0
(1)  845/    FCAD :                     
(1)  846/    FCAD : F5                  list:		push	af
(1)  847/    FCAE : C5                  		push	bc
(1)  848/    FCAF : 3A AC FC            		ld	a, (lstflg)
(1)  849/    FCB2 : B7                  		or	a
(1)  850/    FCB3 : 20 0F               		jr	nz, list1
(1)  851/    FCB5 : 3E 0F               		ld	a, 0Fh
(1)  852/    FCB7 : D3 26               		out	(26h), a
(1)  853/    FCB9 : 3E FF               		ld	a, 0FFh
(1)  854/    FCBB : D3 22               		out	(22h), a
(1)  855/    FCBD : 3E FD               		ld	a, 0FDh	; '²'
(1)  856/    FCBF : D3 22               		out	(22h), a
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bios22_ac1.asm) - Page 88 - 3/8/2023 15:39:33


(1)  857/    FCC1 : 32 AC FC            		ld	(lstflg), a
(1)  858/    FCC4 :                     		;
(1)  859/    FCC4 : DB 20               list1:		in	a, (20h)
(1)  860/    FCC6 : E6 01               		and	1
(1)  861/    FCC8 : 20 FA               		jr	nz, list1
(1)  862/    FCCA : 3E FF               		ld	a, 0FFh
(1)  863/    FCCC : D3 20               		out	(20h), a
(1)  864/    FCCE : 79                  		ld	a, c
(1)  865/    FCCF : D3 24               		out	(24h), a
(1)  866/    FCD1 : AF                  		xor	a
(1)  867/    FCD2 : D3 20               		out	(20h), a
(1)  868/    FCD4 : 3D                  		dec	a
(1)  869/    FCD5 : D3 20               		out	(20h), a
(1)  870/    FCD7 : C1                  		pop	bc
(1)  871/    FCD8 : F1                  		pop	af
(1)  872/    FCD9 : C9                  		ret
(1)  873/    FCDA :                     
(1)  874/    FCDA :                     ;
(1)  875/    FCDA : DB 20               lstst:		in	a, (20h)
(1)  876/    FCDC : E6 01               		and	1
(1)  877/    FCDE : C8                  		ret	z
(1)  878/    FCDF : 3E FF               		ld	a, 0FFh
(1)  879/    FCE1 : C9                  		ret
(1)  880/    FCE2 :                     
(1)  881/    FCE2 :                     ;------------------------------------------------------------------------------
(1)  882/    FCE2 :                     ; 
(1)  883/    FCE2 :                     ;------------------------------------------------------------------------------
(1)  884/    FCE2 :                     
(1)  885/    FCE2 : FF 17               cupos:		dw 17FFh
(1)  886/    FCE4 : 00                  		db    0
(1)  887/    FCE5 : 00                  escmod:		db 0
(1)  888/    FCE6 : 00                  buff:		db 0		; Zeichen unter	Cursor
(1)  889/    FCE7 : 00 00               SYSSK:		dw 0		; ZW.Speicher f. Stackpointer
(1)  890/    FCE9 :                     
(1)  891/    FCE9 :                     		ds	128
(1)  892/    FD69 :                     		
(1)  893/    FD69 :                     ;------------------------------------------------------------------------------
(1)  894/    FD69 :                     ; residentes Zusatzkommando CCP
(1)  895/    FD69 :                     ; Programm von Kassette laden, AC1-Format
(1)  896/    FD69 :                     ;------------------------------------------------------------------------------
(1)  897/    FD69 :                     
(1)  898/    FD69 : F3                  load:		di
(1)  899/    FD6A : ED 73 A9 FE         		ld	(sysskl), sp	; Stackspeicher	f. load
(1)  900/    FD6E : 31 D1 FE            		ld	sp, loc_FED1
(1)  901/    FD71 : F5                  		push	af
(1)  902/    FD72 : C5                  		push	bc
(1)  903/    FD73 : D5                  		push	de
(1)  904/    FD74 : E5                  		push	hl
(1)  905/    FD75 : AF                  		xor	a
(1)  906/    FD76 : 32 6D FE            		ld	(phako), a
(1)  907/    FD79 : CD 54 FE            loa3:		call	loa17		; Lesen	ein Bit
(1)  908/    FD7C : FE E6               		cp	0E6h
(1)  909/    FD7E : 28 09               		jr	z, loa4
(1)  910/    FD80 : FE 19               		cp	19h
(1)  911/    FD82 : 20 F5               		jr	nz, loa3
(1)  912/    FD84 : 3E FF               		ld	a, 0FFh
(1)  913/    FD86 : 32 6D FE            		ld	(phako), a
(1)  914/    FD89 : CD 45 FE            loa4:		call	loa15		; Lesen	ein Byte A
(1)  915/    FD8C : FE 55               		cp	55h ; 'U'
(1)  916/    FD8E : 20 E9               		jr	nz, loa3
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bios22_ac1.asm) - Page 89 - 3/8/2023 15:39:33


(1)  917/    FD90 : 06 10               		ld	b, 10h
(1)  918/    FD92 : (MACRO)             		CPMOFF
(1)  918/    FD92 : 3E 00                               ld      a, 0
(1)  918/    FD94 : D3 1E                               out     (1Eh), a        ; CPM-Mode off
(1)  919/    FD96 : 2A E2 FC            		ld	hl, (cupos)
(1)  920/    FD99 : CD 45 FE            loa5:		call	loa15		; Lesen	ein Byte A
(1)  921/    FD9C : 77                  		ld	(hl), a
(1)  922/    FD9D : 2B                  		dec	hl
(1)  923/    FD9E : 10 F9               		djnz	loa5
(1)  924/    FDA0 : 2B                  		dec	hl
(1)  925/    FDA1 : (MACRO)             		CPMON
(1)  925/    FDA1 : 3E FF                               ld      a, 0FFh
(1)  925/    FDA3 : D3 1E                               out     (1Eh), a        ; CPM-Mode on
(1)  926/    FDA5 : 22 E2 FC            		ld	(cupos), hl
(1)  927/    FDA8 : EB                  		ex	de, hl
(1)  928/    FDA9 : 21 00 01            		ld	hl, 100h
(1)  929/    FDAC : CD 45 FE            loa6:		call	loa15		; Lesen	ein Byte A
(1)  930/    FDAF : FE 78               		cp	'x'
(1)  931/    FDB1 : 28 35               		jr	z, loa11a
(1)  932/    FDB3 : FE 3C               		cp	'<'
(1)  933/    FDB5 : 20 F5               		jr	nz, loa6
(1)  934/    FDB7 : CD 45 FE            		call	loa15		; Lesen	ein Byte A
(1)  935/    FDBA : 47                  		ld	b, a
(1)  936/    FDBB : E5                  		push	hl
(1)  937/    FDBC : CD 27 FE            		call	loa12		; Lesen	2 Byte L,H
(1)  938/    FDBF : 85                  		add	a, l
(1)  939/    FDC0 : 4F                  		ld	c, a
(1)  940/    FDC1 : E1                  		pop	hl
(1)  941/    FDC2 : CD 45 FE            loa7:		call	loa15		; Lesen	ein Byte A
(1)  942/    FDC5 : 77                  		ld	(hl), a
(1)  943/    FDC6 : 23                  loa9:		inc	hl
(1)  944/    FDC7 : 81                  		add	a, c
(1)  945/    FDC8 : 4F                  		ld	c, a
(1)  946/    FDC9 : 10 F7               		djnz	loa7
(1)  947/    FDCB : CD 45 FE            		call	loa15		; Lesen	ein Byte A
(1)  948/    FDCE : B9                  		cp	c
(1)  949/    FDCF : 28 DB               		jr	z, loa6
(1)  950/    FDD1 : 21 6E FE            		ld	hl, aChecksumerror ; " Checksumerror\n\r"
(1)  951/    FDD4 :                     ; Programmende
(1)  952/    FDD4 : CD 9A FA            loa10:		call	STR
(1)  953/    FDD7 : 21 07 E0            		ld	hl, COMLEN	; 0E007h, CCP.COMLEN
(1)  954/    FDDA : 36 00               		ld	(hl), 0
(1)  955/    FDDC : E1                  		pop	hl
(1)  956/    FDDD : D1                  		pop	de
(1)  957/    FDDE : C1                  		pop	bc
(1)  958/    FDDF : F1                  		pop	af
(1)  959/    FDE0 : ED 7B A9 FE         		ld	sp, (sysskl)	; Stackspeicher	f. load
(1)  960/    FDE4 : FB                  		ei
(1)  961/    FDE5 : C3 8F E7            		jp	RETCOM		; 0E78Fh, CCP.RETCOM
(1)  962/    FDE8 :                     ;		
(1)  963/    FDE8 : A7                  loa11a:		and	a
(1)  964/    FDE9 : 11 01 01            		ld	de, 101h
(1)  965/    FDEC : ED 52               		sbc	hl, de
(1)  966/    FDEE : 7D                  		ld	a, l
(1)  967/    FDEF : B7                  		or	a
(1)  968/    FDF0 : 28 01               		jr	z, loa11b
(1)  969/    FDF2 : 24                  		inc	h
(1)  970/    FDF3 :                     
(1)  971/    FDF3 : AF                  loa11b:		xor	a
(1)  972/    FDF4 : 44                  		ld	b, h
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bios22_ac1.asm) - Page 90 - 3/8/2023 15:39:33


(1)  973/    FDF5 : 67                  		ld	h, a
(1)  974/    FDF6 : C6 01               loa11c:		add	a, 1
(1)  975/    FDF8 : 27                  		daa
(1)  976/    FDF9 : 30 01               		jr	nc, loa11d
(1)  977/    FDFB : 24                  		inc	h
(1)  978/    FDFC : 10 F8               loa11d:		djnz	loa11c
(1)  979/    FDFE : F5                  		push	af
(1)  980/    FDFF : 7C                  		ld	a, h
(1)  981/    FE00 : 21 80 FE            		ld	hl, a0SectorsLoad ; "  0 Sectors load\n\r"
(1)  982/    FE03 : 36 20               		ld	(hl), ' '
(1)  983/    FE05 : B7                  		or	a
(1)  984/    FE06 : 28 03               		jr	z, loa11e
(1)  985/    FE08 : C6 30               		add	a, 30h ; '0'
(1)  986/    FE0A : 77                  		ld	(hl), a
(1)  987/    FE0B : 23                  loa11e:		inc	hl
(1)  988/    FE0C : 36 20               		ld	(hl), ' '
(1)  989/    FE0E : F1                  		pop	af
(1)  990/    FE0F : F5                  		push	af
(1)  991/    FE10 : 07                  		rlca
(1)  992/    FE11 : 07                  		rlca
(1)  993/    FE12 : 07                  		rlca
(1)  994/    FE13 : 07                  		rlca
(1)  995/    FE14 : E6 0F               		and	0Fh
(1)  996/    FE16 : 28 03               		jr	z, loa11f
(1)  997/    FE18 : F6 30               		or	30h ; '0'
(1)  998/    FE1A : 77                  		ld	(hl), a
(1)  999/    FE1B : 23                  loa11f:		inc	hl
(1) 1000/    FE1C : F1                  		pop	af
(1) 1001/    FE1D : E6 0F               		and	0Fh
(1) 1002/    FE1F : F6 30               		or	30h ; '0'
(1) 1003/    FE21 : 77                  		ld	(hl), a
(1) 1004/    FE22 : 21 7F FE            		ld	hl, asc_FC68	; " "
(1) 1005/    FE25 : 18 AD               		jr	loa10
(1) 1006/    FE27 :                     ; Lesen	2 Byte L,H
(1) 1007/    FE27 : CD 45 FE            loa12:		call	loa15		; Lesen	ein Byte A
(1) 1008/    FE2A : 6F                  		ld	l, a
(1) 1009/    FE2B : CD 45 FE            		call	loa15		; Lesen	ein Byte A
(1) 1010/    FE2E : 67                  		ld	h, a
(1) 1011/    FE2F : EB                  		ex	de, hl
(1) 1012/    FE30 : (MACRO)             		CPMOFF
(1) 1012/    FE30 : 3E 00                               ld      a, 0
(1) 1012/    FE32 : D3 1E                               out     (1Eh), a        ; CPM-Mode off
(1) 1013/    FE34 : CB 4E               		bit	1, (hl)
(1) 1014/    FE36 : 28 04               		jr	z, loa13
(1) 1015/    FE38 : 36 20               		ld	(hl), ' '
(1) 1016/    FE3A : 18 02               		jr	loa14
(1) 1017/    FE3C : 36 2A               loa13:		ld	(hl), '*'
(1) 1018/    FE3E : EB                  loa14:		ex	de, hl
(1) 1019/    FE3F : (MACRO)             		CPMON
(1) 1019/    FE3F : 3E FF                               ld      a, 0FFh
(1) 1019/    FE41 : D3 1E                               out     (1Eh), a        ; CPM-Mode on
(1) 1020/    FE43 : 7C                  		ld	a, h
(1) 1021/    FE44 : C9                  		ret
(1) 1022/    FE45 :                     ; Lesen	ein Byte A
(1) 1023/    FE45 : C5                  loa15:		push	bc
(1) 1024/    FE46 : 06 08               		ld	b, 8
(1) 1025/    FE48 : CD 54 FE            loa16:		call	loa17		; Lesen	ein Bit
(1) 1026/    FE4B : 10 FB               		djnz	loa16
(1) 1027/    FE4D : 4F                  		ld	c, a
(1) 1028/    FE4E : 3A 6D FE            		ld	a, (phako)
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bios22_ac1.asm) - Page 91 - 3/8/2023 15:39:33


(1) 1029/    FE51 : A9                  		xor	c
(1) 1030/    FE52 : C1                  		pop	bc
(1) 1031/    FE53 : C9                  		ret
(1) 1032/    FE54 :                     ; Lesen	ein Bit
(1) 1033/    FE54 : C5                  loa17:		push	bc
(1) 1034/    FE55 : F5                  		push	af
(1) 1035/    FE56 : DB 05               		in	a, (5)
(1) 1036/    FE58 : E6 80               		and	80h
(1) 1037/    FE5A : 4F                  		ld	c, a
(1) 1038/    FE5B : DB 05               loa18:		in	a, (5)
(1) 1039/    FE5D : E6 80               		and	80h
(1) 1040/    FE5F : B9                  		cp	c
(1) 1041/    FE60 : 28 F9               		jr	z, loa18
(1) 1042/    FE62 : 4F                  		ld	c, a
(1) 1043/    FE63 : 06 3F               		ld	b, 3Fh
(1) 1044/    FE65 : 10 FE               loa19:		djnz	loa19
(1) 1045/    FE67 : F1                  		pop	af
(1) 1046/    FE68 : CB 11               		rl	c
(1) 1047/    FE6A : 17                  		rla
(1) 1048/    FE6B : C1                  		pop	bc
(1) 1049/    FE6C : C9                  		ret
(1) 1050/    FE6D :                     
(1) 1051/    FE6D : 00                  phako:		db 0
(1) 1052/    FE6E : 20 43 68 65 63 6B   aChecksumerror:	db " Checksumerror",0Ah
                    73 75 6D 65 72 72 
                    6F 72 0A          
(1) 1053/    FE7D : 0D 00               		db 0Dh,0
(1) 1054/    FE7F : 20                  asc_FC68:	db ' '
(1) 1055/    FE80 : 20 30 20 20 53 65   a0SectorsLoad:	db " 0  Sectors load",0Ah
                    63 74 6F 72 73 20 
                    6C 6F 61 64 0A    
(1) 1056/    FE91 : 0D 00               		db 0Dh,0
(1) 1057/    FE93 :                     
(1) 1058/    FE93 :                     		
(1) 1059/    FE93 :                     ;------------------------------------------------------------------------------
(1) 1060/    FE93 :                     ; residentes Zusatzkommando CCP
(1) 1061/    FE93 :                     ;------------------------------------------------------------------------------
(1) 1062/    FE93 :                     
(1) 1063/    FE93 : AF                  exit:		xor	a		; CPMOFF
(1) 1064/    FE94 : D3 1E               		out	(1Eh), a
(1) 1065/    FE96 : 21 00 18            		ld	hl, 1800h
(1) 1066/    FE99 : 11 00 E0            		ld	de, CCP
(1) 1067/    FE9C : 01 00 08            		ld	bc, 800h
(1) 1068/    FE9F : ED B0               		ldir
(1) 1069/    FEA1 : 21 3E F6            		ld	hl, unk_F63E
(1) 1070/    FEA4 : 0E 06               		ld	c, 6
(1) 1071/    FEA6 : ED B0               		ldir
(1) 1072/    FEA8 : C7                  		rst	0
(1) 1073/    FEA9 :                     
(1) 1074/    FEA9 :                     
(1) 1075/    FEA9 :                     ;------------------------------------------------------------------------------
(1) 1076/    FEA9 :                     ;
(1) 1077/    FEA9 :                     ;------------------------------------------------------------------------------
(1) 1078/    FEA9 : 00 00               sysskl:		dw 0			; ZW.Speicher f. Stackpointer
(1) 1079/    FEAB :                     		
(1) 1080/    FEAB :                     		ds 26h	
(1) 1081/    FED1 :                     loc_FED1:				; Stack f. Load
(1) 1082/    FED1 :                     
(1) 1083/    FED1 :                     ;		end
(1) 1084/    FED1 :                     
 AS V1.42 Beta [Bld 157] - Source File cpm.asm(bios22_ac1.asm) - Page 92 - 3/8/2023 15:39:33


      71/    FED1 : [BIOS]              		endsection
      72/    FED1 :                     
      73/    FED1 :                     		end
 AS V1.42 Beta [Bld 157] - Source File cpm.asm - Page 93 - 3/8/2023 15:39:33


  Symbol Table (* = unused):
  --------------------------

 A0SECTORSLOAD [BIOS] :       0FE80 C |  ACHECKSUMERROR [BIOS] :      0FE6E C |
 ADDH [CCP] :                 0E251 C |  ADDH [BDOS] :                0ED20 C |
 ADDHCF [CCP] :               0E451 C |  ADDLIST [BDOS] :                 8 - |
 ADRE [BIOS] :                0F8D3 C |  ADRE1 [BIOS] :               0F8FC C |
 ADRE2 [BIOS] :               0F8FE C |  ADRE3 [BIOS] :               0F906 C |
 ADRE4 [BIOS] :               0F908 C |  AEINENMOMENTBIT [BIOS] :     0F80A C |
 AESSTEHEN252KBY [BIOS] :     0F825 C |  ALL0 [BIOS] :                0F9FE C |
 ALLOCA [BDOS] :              0F5BF C |  ALLOCATED [BDOS] :           0EC45 C |
 ALLOCWD [BDOS] :             0F233 C | *ARCHITECTURE :  i386-unknown-win32 - |
 ARECORD [BDOS] :             0F5E5 C |  ARECORD1 [BDOS] :            0F5E7 C |
 ARET [BDOS] :                0EB12 C |  ASC_F786 [BIOS] :            0F786 C |
 ASC_FC68 [BIOS] :            0FE7F C |  ATRAN [BDOS] :               0EC4B C |
 ATRAN0 [BDOS] :              0EC51 C |  BACKSP [BDOS] :              0EA61 C |
 BACKUP [BDOS] :              0E993 C |  BACKX [BDOS] :               0EA2B C |
 BADSEEK [BDOS] :             0F345 C |  BADSERIAL [CCP] :            0E3D5 C |
 BDOS :                       0E800 - |  BDOS [CCP] :                     5 - |
*BDOSA [BDOS] :                   6 - |  BDOSE [BDOS] :               0E863 C |
 BDOSL [CCP] :                0E800 - |  BDOS_COND [CCP] :            0E0EC C |
 BDOS_INR [CCP] :             0E0C0 C | *BIGENDIAN :                      0 - |
 BIOS :                       0F600 - |  BIOS [BDOS] :                0F600 - |
 BLANK [CCP] :                0E0A1 C |  BLKMSK [BDOS] :              0F5C4 C |
 BLKSHF [BDOS] :              0F5C3 C |  BLOCKOK [BDOS] :             0F219 C |
 BMOVE0 [CCP] :               0E739 C |  BMOVE1 [CCP] :               0E747 C |
 BMOVE2 [CCP] :               0E74C C |  BMOVE3 [CCP] :               0E758 C |
 BOOT [BIOS] :                0F78A C | *BOOTF [BDOS] :               0F600 - |
 BPTR [CCP] :                 0E7FA C | *BRANCHEXT :                      0 - |
 BREAKF [CCP] :                  0B - |  BREAK_KEY [CCP] :            0E1BA C |
 BUFF [CCP] :                    80 - |  BUFF [BIOS] :                0FCE6 C |
 BUFFA [BDOS] :               0F5B9 C |  BUFFNZERO [BDOS] :           0F0C8 C |
 BYTE [BDOS] :                    1 - | *CASESENSITIVE :                  0 - |
 CCP :                        0E000 - |  CCP [CCP] :                  0E382 C |
 CCP0 [CCP] :                 0E398 C |  CCPCLEAR [CCP] :             0E358 C |
 CCPLOC [CCP] :               0E000 - |  CCPSTART [CCP] :             0E35C C |
 CDISK [CCP] :                0E7F8 C |  CDRMAXA [BDOS] :             0F5B3 C |
 CHECKA [BDOS] :              0F5BD C |  CHECKSUM [BDOS] :            0ED5A C |
 CHECK_RODIR [BDOS] :         0ED00 C |  CHECK_ROFILE [BDOS] :        0ED03 C |
 CHECK_WRITE [BDOS] :         0ED10 C |  CHK0 [BIOS] :                0FA7E C |
 CHKSIZ [BDOS] :              0F5CC C |  CI1 [BIOS] :                 0FC4A C |
 CI2 [BIOS] :                 0FC4C C |  CI3 [BIOS] :                 0FC4E C |
 CI4 [BIOS] :                 0FC51 C |  CI5 [BIOS] :                 0FC66 C |
 CI6 [BIOS] :                 0FC7A C |  CLOSE [CCP] :                0E0D5 C |
 CLOSE [BDOS] :               0F08C C |  CLOSEF [CCP] :                  10 - |
 CLRMODNUM [BDOS] :           0ED2E C |  CLRSCR [BIOS] :              0FBDB C |
 CO1 [BIOS] :                 0FAFC C |  CO10 [BIOS] :                0FBFD C |
 CO2 [BIOS] :                 0FB0F C |  CO3 [BIOS] :                 0FB15 C |
 CO4 [BIOS] :                 0FB28 C |  CO5 [BIOS] :                 0FB87 C |
 CO6 [BIOS] :                 0FBA6 C |  CO7 [BIOS] :                 0FBD1 C |
 CO8 [BIOS] :                 0FBDD C |  CO9 [BIOS] :                 0FBEB C |
 COLUMN [BDOS] :              0EACA C |  COMADDR [CCP] :              0E088 C |
 COMBUF [CCP] :               0E008 C |  COMERR [CCP] :               0E201 C |
 COMERR0 [CCP] :              0E207 C |  COMERR1 [CCP] :              0E21A C |
 COMFCB [CCP] :               0E7D6 C |  COMLEN :                     0E007 C |
 COMPCDR [BDOS] :             0ED3B C |  COMPCOL [BDOS] :             0EAC8 C |
 COMPEXT [BDOS] :             0EEBA C |  COMPOUT [BDOS] :             0E955 C |
 COMPUTECS0 [BDOS] :          0ECBB C |  COMPUTE_CS [BDOS] :          0ECB5 C |
 COMPUTE_RR [BDOS] :          0F366 C |  COMREC [CCP] :               0E7F6 C |
 COMTYPE [CCP] :              0E78C C |  CONBRK [BDOS] :              0E936 C |
 AS V1.42 Beta [Bld 157] - Source File cpm.asm - Page 94 - 3/8/2023 15:39:33


 CONECH [BDOS] :              0E919 C |  CONIN [BIOS] :               0FC39 C |
 CONINF [BDOS] :              0F609 - |  CONOUT [BDOS] :              0E93C C |
 CONOUT [BIOS] :              0FAD4 C |  CONOUTF [BDOS] :             0F60C - |
 CONST [BIOS] :               0FA8F C |  CONSTF [BDOS] :              0F606 - |
*CONSTPI :        3.141592653589793 - |  CONV0 [CCP] :                0E40E C |
 CONV1 [CCP] :                0E439 C |  COPY_DIR [BDOS] :            0EFA2 C |
 COPY_DIRLOC [BDOS] :         0EEB4 C |  COPY_FCB [BDOS] :            0EF9E C |
 CR [CCP] :                      0D - |  CR [BDOS] :                     0D - |
 CRC [BIOS] :                 0F926 C |  CRC1 [BIOS] :                0F92F C |
 CRLF [CCP] :                 0E098 C |  CRLF [BDOS] :                0E9B7 C |
 CRLFP [BDOS] :               0E9A0 C |  CRLFP0 [BDOS] :              0E9A8 C |
 CSELECT [CCP] :              0E1C8 C |  CSELF [CCP] :                   19 - |
 CTL [BDOS] :                    5E - |  CTLC [BDOS] :                    3 - |
 CTLE [BDOS] :                    5 - |  CTLH [BDOS] :                    8 - |
 CTLOUT [BDOS] :              0E971 C |  CTLP [BDOS] :                   10 - |
*CTLR [BDOS] :                   12 - | *CTLS [BDOS] :                   13 - |
*CTLU [BDOS] :                   15 - |  CTLX [BDOS] :                   18 - |
*CTLZ [BDOS] :                   1A - |  CUPOS [BIOS] :               0FCE2 C |
 CURDSK [BDOS] :              0EB0F C |  CURRECA [BDOS] :             0F5B7 C |
 CURS [BIOS] :                   7F - |  CURSELECT [BDOS] :           0F408 C |
 CURTRKA [BDOS] :             0F5B5 C | *DATE :                    3/8/2023 - |
 DCNT [CCP] :                 0E7F7 C |  DCNT [BDOS] :                0F5EA C |
 DEBLANK [CCP] :              0E247 C |  DELETE [CCP] :               0E0E7 C |
 DELETE [BDOS] :              0EF44 C |  DELETE0 [BDOS] :             0EF4C C |
 DELF [CCP] :                    13 - |  DELIM [CCP] :                0E228 C |
 DEL_SUB [CCP] :              0E1D5 C |  DIOCOMP [BDOS] :             0EB85 C |
 DIR0 [CCP] :                 0E48E C |  DIR1 [CCP] :                 0E495 C |
 DIR2 [CCP] :                 0E49E C |  DIR3 [CCP] :                 0E4DF C |
 DIR4 [CCP] :                 0E4FF C |  DIR5 [CCP] :                 0E514 C |
 DIR6 [CCP] :                 0E515 C |  DIRB [CCP] :                 0E4FD C |
 DIRBF [BIOS] :               0F97E C |  DIRBLK [BDOS] :              0F5CA C |
*DIRCOL :                     0E4B8 - |  DIRECT [CCP] :               0E47D C |
 DIRHDR0 [CCP] :              0E4D2 C |  DIRHDR1 [CCP] :              0E4DA C |
 DIRINP [BDOS] :              0EAA3 C |  DIRLOC [BDOS] :              0F5D4 C |
 DIRMAX [BDOS] :              0F5C8 C |  DIRREC [BDOS] :                  4 - |
 DIR_TO_USER [BDOS] :         0EDA1 C |  DISKA :                          4 - |
 DISKEOF [BDOS] :             0F1CF C | *DISKF [BDOS] :                  0C - |
 DISKO [BDOS] :               0F5EE C |  DISKREAD [CCP] :             0E0F1 C |
 DISKREAD [BDOS] :            0F199 C |  DISKREADC [CCP] :            0E0F6 C |
*DISKWR0 [BDOS] :             0F1F0 C |  DISKWR1 [BDOS] :             0F23D C |
 DISKWR11 [BDOS] :            0F287 C |  DISKWR2 [BDOS] :             0F29D C |
 DISKWR3 [BDOS] :             0F2C8 C |  DISKWRITE [CCP] :            0E0FC C |
 DISKWRITE [BDOS] :           0F1D7 C |  DISKWRU [BDOS] :             0F23B C |
 DLOG [BDOS] :                0F5AF C |  DMA [BIOS] :                 0F97C C |
 DMAAD [BDOS] :               0F5B1 C |  DMAF [CCP] :                    1A - |
 DMINX [BDOS] :               0F5D7 C |  DMPOS0 [BDOS] :              0EC0A C |
 DMPOS1 [BDOS] :              0EC17 C |  DMPOS2 [BDOS] :              0EC1E C |
 DMSET [BDOS] :               0F0E0 C |  DM_POSITION [BDOS] :         0EC03 C |
 DPBADDR [BDOS] :             0F5BB C |  DPBAS [BIOS] :               0F959 C |
 DPBLIST [BDOS] :                0F - |  DPBR [BIOS] :                0F969 C |
*DPHA [BIOS] :                0F959 C |  DPTR [BDOS] :                0F5E9 C |
 DREADF [CCP] :                  14 - |  DREC [BDOS] :                0F5EC C |
 DSKERR [BDOS] :              0E8C8 C |  DSKMAP [BDOS] :                 10 - |
 DSKMSG [BDOS] :              0E8BC C |  DSKMSK [BDOS] :                  3 - |
 DSKSHF [BDOS] :                  2 - |  DVERS [BDOS] :                  22 - |
 DWRITF [CCP] :                  15 - |  ECHOC [BDOS] :               0E927 C |
 EFCB [BDOS] :                0F5AC C |  EFILL [CCP] :                0E2E8 C |
 EFILL0 [CCP] :               0E2EA C |  EMPTY [BDOS] :                 0E5 - |
 ENDCOM [CCP] :               0E792 C |  ENDDIR [BDOS] :              0FFFF - |
 ENDIR [CCP] :                0E521 C |  ENDMERGE [BDOS] :            0F0F8 C |
 AS V1.42 Beta [Bld 157] - Source File cpm.asm - Page 95 - 3/8/2023 15:39:33


 ENDSEARCH [BDOS] :           0EF2B C |  END_OF_DIR [BDOS] :          0EDAD C |
*ENTRY [BIOS] :               0F600 C |  ENTSP [BDOS] :               0EACC C |
 EOFILE [CCP] :                  1A - |  ERASE [CCP] :                0E525 C |
 ERASEFILE [CCP] :            0E548 C |  ERMSG [CCP] :                0E558 C |
 ERRFLG [BDOS] :              0E900 C |  ESCMOD [BIOS] :              0FCE5 C |
 EXIT [BIOS] :                0FE93 C |  EXTMSK [BDOS] :              0F5C5 C |
 EXTNUM [BDOS] :                 0C - |  EXTVAL [BDOS] :              0F5E2 C |
 FALSE :                          0 - |  FALSE_ [BDOS] :                  0 - |
 FCB [CCP] :                     5C - |  FCBDSK [BDOS] :              0F5E0 C |
 FCBLEN [BDOS] :                 20 - |  FCBNZERO [BDOS] :            0F0C3 C |
 FCBSHF [BDOS] :                  5 - |  FCB_COPIED [BDOS] :          0F5D2 C |
 FILL0 [BDOS] :               0F259 C |  FILL1 [BDOS] :               0F267 C |
 FILLFCB [CCP] :              0E258 C |  FILLFCB0 [CCP] :             0E256 C |
 FRDSK [BIOS] :               0F84C C |  FRDSK1 [BIOS] :              0F862 C |
 FRDSK2 [BIOS] :              0F87E C |  FULLMSG [CCP] :              0E60D C |
*FULLPMMU :                       1 - |  FUNC1 [BDOS] :               0EA8E C |
 FUNC10 [BDOS] :              0E9CE - |  FUNC11 [BDOS] :              0EABD C |
 FUNC12 [BDOS] :              0F458 C |  FUNC13 [BDOS] :              0F45D C |
 FUNC13A [BDOS] :             0F479 C |  FUNC14 [BDOS] :              0F403 - |
 FUNC14X [BDOS] :             0F403 C |  FUNC15 [BDOS] :              0F48B C |
 FUNC16 [BDOS] :              0F494 C |  FUNC17 [BDOS] :              0F49A C |
 FUNC18 [BDOS] :              0F4B6 C |  FUNC19 [BDOS] :              0F4C5 C |
 FUNC2 [BDOS] :               0E981 - |  FUNC20 [BDOS] :              0F4CE C |
 FUNC21 [BDOS] :              0F4D4 C |  FUNC22 [BDOS] :              0F4DA C |
 FUNC23 [BDOS] :              0F4E3 C |  FUNC24 [BDOS] :              0F4EC C |
 FUNC25 [BDOS] :              0F4F2 C |  FUNC26 [BDOS] :              0F502 C |
 FUNC27 [BDOS] :              0F509 C |  FUNC28 [BDOS] :              0ECE8 - |
 FUNC29 [BDOS] :              0F50F C |  FUNC3 [BDOS] :               0EA93 C |
 FUNC30 [BDOS] :              0F515 C |  FUNC31 [BDOS] :              0F51E C |
 FUNC32 [BDOS] :              0F525 C |  FUNC33 [BDOS] :              0F538 C |
 FUNC34 [BDOS] :              0F53E C |  FUNC35 [BDOS] :              0F544 C |
 FUNC36 [BDOS] :              0F3CC - |  FUNC37 [BDOS] :              0F54A C |
 FUNC38 [BDOS] :              0EAC3 - |  FUNC39 [BDOS] :              0EAC3 - |
 FUNC40 [BDOS] :              0F586 C |  FUNC6 [BDOS] :               0EA98 C |
 FUNC7 [BDOS] :               0EAAD C |  FUNC8 [BDOS] :               0EAB2 C |
 FUNC9 [BDOS] :               0EAB7 C |  FUNCTAB [BDOS] :             0E811 C |
 FUNC_RET [BDOS] :            0EAC3 C |  FWFMSK [BDOS] :                 80 - |
 GETALLOCBIT [BDOS] :         0EDEA C |  GETDM [BDOS] :               0EC20 C |
 GETDMD [BDOS] :              0EC32 C |  GETDPTRA [BDOS] :            0ED1A C |
 GETEXTA [BDOS] :             0EC66 C |  GETFCB [BDOS] :              0EC7B C |
 GETFCBA [BDOS] :             0EC6E C |  GETFILESIZE [BDOS] :         0F393 C |
 GETMODNUM [BDOS] :           0ED25 C |  GETNEXTSIZE [BDOS] :         0F3C5 C |
 GETNUMBER [CCP] :            0E3FE C |  GETSIZE [BDOS] :             0F3A5 C |
 GETUSER [CCP] :              0E10B C |  GET_BLOCK [BDOS] :           0EF65 C |
 GO [CCP] :                   0E70F C | *GO100 [CCP] :                0E6AB C |
 GOBACK [BDOS] :              0F56B C |  GOERR [BDOS] :               0EB17 C |
*HAS64 :                          1 - | *HASDSP :                         0 - |
*HASFPU :                         0 - | *HASPMMU :                        0 - |
 HLROTL [BDOS] :              0ECC1 C |  HLROTL0 [BDOS] :             0ECC2 C |
 HLROTR [BDOS] :              0ECA9 C |  HLROTR0 [BDOS] :             0ECAA C |
 HOME [BDOS] :                0EB6C C |  HOME [BIOS] :                0F700 C |
 HOMEF [BDOS] :               0F618 - |  INDEX [BDOS] :               0EC38 C |
 INDIC0 [BDOS] :              0F02D C |  INDICATORS [BDOS] :          0F028 C |
*INEXTMODE :                      0 - | *INEXTMODE [CCP] :                0 - |
*INEXTMODE [BDOS] :               0 - | *INEXTMODE [BIOS] :               0 - |
 INFO [BDOS] :                0EB10 C |  INIMSG [BIOS] :              0F744 C |
 INITF [CCP] :                   0D - |  INITIAL0 [BDOS] :            0EE60 C |
 INITIAL2 [BDOS] :            0EE80 C |  INITIALIZE [CCP] :           0E0B5 C |
 INITIALIZE [BDOS] :          0EE52 C |  INITIAL_CS [BDOS] :          0ED7E C |
*INLWORDMODE :                    0 - | *INLWORDMODE [CCP] :              0 - |
 AS V1.42 Beta [Bld 157] - Source File cpm.asm - Page 96 - 3/8/2023 15:39:33


*INLWORDMODE [BDOS] :             0 - | *INLWORDMODE [BIOS] :             0 - |
*INMAXMODE :                      0 - | *INSRCMODE :                      0 - |
*INSUPMODE :                      0 - |  INTLEN [CCP] :                   9 - |
 INTRIN0 [CCP] :              0E337 C |  INTRIN1 [CCP] :              0E340 C |
 INTRIN2 [CCP] :              0E350 C |  INTRIN3 [CCP] :              0E354 C |
 INTRINSIC [CCP] :            0E332 C |  INTVEC [CCP] :               0E308 C |
*INVIS [BDOS] :                  0A - |  IOLOC :                          3 - |
 JMPTAB [CCP] :               0E3C1 C |  LA [CCP] :                      5F - |
 LEFTTST [BDOS] :             0EF67 C |  LF [CCP] :                      0A - |
 LF [BDOS] :                     0A - | *LIFTF [CCP] :                   0C - |
 LINELEN [BDOS] :             0EA3A C |  LINFO [BDOS] :               0F5D6 C |
 LIST [BIOS] :                0FCAD C |  LIST1 [BIOS] :               0FCC4 C |
 LISTCP [BDOS] :              0EACB C |  LISTF [BDOS] :               0F60F - |
*LISTON :                         2 - | *LISTSTF [BDOS] :             0F62D - |
 LOA10 [BIOS] :               0FDD4 C |  LOA11A [BIOS] :              0FDE8 C |
 LOA11B [BIOS] :              0FDF3 C |  LOA11C [BIOS] :              0FDF6 C |
 LOA11D [BIOS] :              0FDFC C |  LOA11E [BIOS] :              0FE0B C |
 LOA11F [BIOS] :              0FE1B C |  LOA12 [BIOS] :               0FE27 C |
 LOA13 [BIOS] :               0FE3C C |  LOA14 [BIOS] :               0FE3E C |
 LOA15 [BIOS] :               0FE45 C |  LOA16 [BIOS] :               0FE48 C |
 LOA17 [BIOS] :               0FE54 C |  LOA18 [BIOS] :               0FE5B C |
 LOA19 [BIOS] :               0FE65 C |  LOA3 [BIOS] :                0FD79 C |
 LOA4 [BIOS] :                0FD89 C |  LOA5 [BIOS] :                0FD99 C |
 LOA6 [BIOS] :                0FDAC C |  LOA7 [BIOS] :                0FDC2 C |
*LOA9 [BIOS] :                0FDC6 C |  LOAD [BIOS] :                0FD69 C |
 LOAD0 [CCP] :                0E6EA C |  LOAD1 [CCP] :                0E70A C |
 LOADERR [CCP] :              0E77A C |  LOADMSG [CCP] :              0E783 C |
 LOC_0 [BDOS] :               0E800 C |  LOC_D5F9 [BDOS] :            0E9FB C |
*LOC_D8DB [BDOS] :            0ECDD C |  LOC_D908 [BDOS] :            0ED0A C |
 LOC_DBEA [BDOS] :            0EFEC C |  LOC_DC04 [BDOS] :            0F006 C |
 LOC_E034 [BDOS] :            0F436 C |  LOC_E043 [BDOS] :            0F445 C |
 LOC_E0FA [BDOS] :            0F4FC C |  LOC_FA97 [BIOS] :            0FA97 C |
 LOC_FC97 [BIOS] :            0FC97 C |  LOC_FC99 [BIOS] :            0FC99 C |
 LOC_FED1 [BIOS] :            0FED1 C | *LOGF [CCP] :                    18 - |
 LRET [BDOS] :                0EB12 - |  LSTACK [BDOS] :              0EB0E C |
*LSTFCB [BDOS] :                 1F - |  LSTFLG [BIOS] :              0FCAC C |
 LSTREC [BDOS] :                 7F - |  LSTST [BIOS] :               0FCDA C |
*MACEXP :                         7 - |  MAKE [CCP] :                 0E101 C |
 MAKE [BDOS] :                0F105 C |  MAKE0 [BDOS] :               0F127 C |
 MAKEF [CCP] :                   16 - |  MAXALL [BDOS] :              0F5C6 C |
 MAXEXT [BDOS] :                 1F - |  MAXLEN [CCP] :               0E006 C |
 MAXMOD [BDOS] :                 0F - |  MERGE0 [BDOS] :              0F0B7 C |
 MERGED [BDOS] :              0F0CD C |  MERGERR [BDOS] :             0F100 C |
 MERGEZERO [BDOS] :           0F07E C |  MODNUM [BDOS] :                 0E - |
*MOMCPU :                        80 - | *MOMCPU [CCP] :                  80 - |
*MOMCPU [BDOS] :                 80 - | *MOMCPU [BIOS] :                 80 - |
*MOMCPUNAME :                   Z80 - | *MOMCPUNAME [CCP] :             Z80 - |
*MOMCPUNAME [BDOS] :            Z80 - | *MOMCPUNAME [BIOS] :            Z80 - |
 MOVE [BDOS] :                0EB1C C |  MOVE0 [CCP] :                0E448 C |
 MOVE0 [BDOS] :               0EB1D C |  MOVENAME [CCP] :             0E446 C |
 MS30 [BIOS] :                0FCA1 C |  MS301 [BIOS] :               0FCA5 C |
 NAMLEN [BDOS] :                 0F - |  NDISK [BIOS] :                   1 - |
*NESTMAX :                      100 - |  NEWCHECKSUM [BDOS] :         0ED58 C |
 NFUNCS [BDOS] :                 29 - |  NOFILE [CCP] :               0E3F0 C |
 NOFMSG [CCP] :               0E3F6 C |  NOPBLOCK [BDOS] :            0F20D C |
 NOREAD [CCP] :               0E19F C |  NOSELECT [BDOS] :            0F44F C |
 NOSPACE [BDOS] :             0F2C6 C |  NOSUB [CCP] :                0E18E C |
 NOTBACKSP [BDOS] :           0E96B C |  NOTC [BDOS] :                0EA83 C |
 NOTE [BDOS] :                0EA17 C |  NOTP [BDOS] :                0EA26 C |
 NOTRUB [BDOS] :              0EA08 C | *NOUPDATE [BDOS] :            0F2AA C |
 AS V1.42 Beta [Bld 157] - Source File cpm.asm - Page 97 - 3/8/2023 15:39:33


 NOWRITE [BDOS] :             0ECDA C |  NXTREC [BDOS] :                 20 - |
 OBACK [BIOS] :               0FB71 C |  OBELL [BIOS] :               0FB9B C |
 OCLLN [BIOS] :               0FBF2 C |  OCLRLN [BIOS] :              0FBE6 C |
 OCLS [BIOS] :                0FB74 C |  OCR [BIOS] :                 0FB6A C |
 ODEL [BIOS] :                0FBC3 C |  OESC [BIOS] :                0FB8A C |
*OFF [BDOS] :                     0 - |  OFFSET [BDOS] :              0F5CE C |
 OHOME [BIOS] :               0FB92 C |  OLDDSK [BDOS] :              0F5DF C |
 OLF [BIOS] :                 0FBB8 C |  ON [BDOS] :                  0FFFF - |
 OPEN [CCP] :                 0E0C8 C |  OPEN [BDOS] :                0F03D C |
 OPENC [CCP] :                0E0CC C |  OPENF [CCP] :                   0F - |
 OPEN_COPY [BDOS] :           0F046 C |  OPEN_MOD [BDOS] :            0F160 C |
 OPEN_RCNT [BDOS] :           0F075 C |  OPEN_REEL [BDOS] :           0F13A C |
 OPEN_REEL0 [BDOS] :          0F16A C |  OPEN_REEL1 [BDOS] :          0F184 C |
 OPEN_REEL2 [BDOS] :          0F187 C |  OPEN_R_ERR [BDOS] :          0F18E C |
 ORIGHT [BIOS] :              0FBC0 C |  OUP [BIOS] :                 0FBCD C |
*PACKING :                        0 - | *PADDING :                        1 - |
 PADNAME [CCP] :              0E2B1 C |  PADTY [CCP] :                0E2E1 C |
*PBUFF [CCP] :                    9 - |  PCHARF [CCP] :                   2 - |
 PCTLH [BDOS] :               0E99B C |  PDOLLAR [BDOS] :             0EEAA C |
 PERERR [BDOS] :              0E809 C |  PERMSG [BDOS] :              0E8CC C |
 PERSUB [BDOS] :              0E89D C |  PHAKO [BIOS] :               0FE6D C |
 PRIN0 [CCP] :                0E0AA C |  PRINT [CCP] :                0E0A5 C |
 PRINT [BDOS] :               0E9C1 C |  PRINTBC [CCP] :              0E092 C |
 PRINTCHAR [CCP] :            0E08C C |  PUNCHF [BDOS] :              0F612 - |
 QSELECT [BDOS] :             0F4B0 C |  RAFOFS [BIOS] :              0F808 C |
 RAFPOS [BIOS] :              0F8A5 C |  RANCLOSE [BDOS] :            0F30C C |
 RANDISKREAD [BDOS] :         0F354 C |  RANDISKWRITE [BDOS] :        0F35D C |
 RANREC [BDOS] :                 21 - |  RBUFF [CCP] :                   0A - |
 RCHARF [CCP] :                   1 - |  RCOUNT [BDOS] :              0F5E1 C |
 RDBUFF [BDOS] :              0EB7D C | *RDECH1 [BDOS] :              0EA70 C |
 RDECHO [BDOS] :              0EA6D C |  RDMSG [CCP] :                0E3E5 C |
 RD_DIR [BDOS] :              0ED8D C |  READ [BDOS] :                0E9CE C |
 READCOM [CCP] :              0E131 C |  READCOM0 [CCP] :             0E1A3 C |
 READCOM1 [CCP] :             0E1B2 C |  READEN [BDOS] :              0EA87 C |
 READERF [BDOS] :             0F615 - |  READERR [CCP] :              0E3DF C |
 READF [BDOS] :               0F627 - |  READN0 [BDOS] :              0E9DE C |
 READNX [BDOS] :              0E9DC C |  READ_DIR [BDOS] :            0EDBD C |
 READ_DIR0 [BDOS] :           0EDCF C |  READ_DIR1 [BDOS] :           0EDD6 C |
 REBOOT [BDOS] :                  0 - |  RECCNT [BDOS] :                 0F - |
 RECORDOK [BDOS] :            0F1BB C |  RECSIZ [BDOS] :                 80 - |
*RELAXED :                        0 - |  REN1 [CCP] :                 0E645 C |
 REN2 [CCP] :                 0E65F C |  RENAM [CCP] :                0E106 C |
 RENAME [CCP] :               0E616 C |  RENAME [BDOS] :              0EFB7 C |
 RENAME0 [BDOS] :             0EFF3 C |  RENERR1 [CCP] :              0E673 C |
 RENERR2 [CCP] :              0E679 C |  RENERR3 [CCP] :              0E67F C |
 RENF [CCP] :                    17 - |  RENMSG [CCP] :               0E688 C |
 REP0 [BDOS] :                0EA42 C |  REP1 [BDOS] :                0EA52 C |
 RESEL [BDOS] :               0F5DE C |  RESELECT [BDOS] :            0F413 C |
 RESETDISK [CCP] :            0E46C C |  RESTR [BIOS] :               0FAAA C |
 RETBLOCK [BDOS] :            0EF8E C |  RETBLOCK0 [BDOS] :           0EF96 C |
 RETCOM :                     0E78F C |  RETMON [BDOS] :              0F578 C |
 RETSAVE [CCP] :              0E607 C |  RETSELECT [BDOS] :           0EB68 C |
 RIGHTTST [BDOS] :            0EF76 C |  RMF [BDOS] :                 0F5D3 C |
 RODERR [BDOS] :              0E80D C |  RODMSG [BDOS] :              0E8FC C |
 RODSK [BDOS] :               0F5AD C |  RODSUB [BDOS] :              0E8AE C |
 ROFERR [BDOS] :              0E80F C | *ROFILE [CCP] :                   9 - |
 ROFILE [BDOS] :                  9 - |  ROFMSG [BDOS] :              0E8F7 C |
 ROFSUB [BDOS] :              0E8B3 C |  ROTL [BDOS] :                0EE0B C |
 ROTR [BDOS] :                0EE18 C |  ROUTCH3 [BIOS] :             0FBFF C |
 ROUTCH4 [BIOS] :             0FC1D C |  ROUTCH5 [BIOS] :             0FC22 C |
 AS V1.42 Beta [Bld 157] - Source File cpm.asm - Page 98 - 3/8/2023 15:39:33


 RRDSK [BIOS] :               0F8BA C |  RSEEK [BDOS] :               0F2CB C |
 RSEEK1 [BDOS] :              0F2CF C |  RUBOUT [BDOS] :                 7F - |
 SAVE [CCP] :                 0E5B3 C |  SAVE0 [CCP] :                0E5DA C |
 SAVE1 [CCP] :                0E5F7 C |  SAVERR [CCP] :               0E601 C |
 SAVEUSER [CCP] :             0E112 C |  SCANDM [BDOS] :              0EE1E C |
 SCANDM0 [BDOS] :             0EE28 C |  SCANDM1 [BDOS] :             0EE39 C |
 SCANDM2 [BDOS] :             0EE3F C |  SCANM3 [BDOS] :              0EE4D C |
 SCNQ [CCP] :                 0E2F9 C |  SCNQ0 [CCP] :                0E301 C |
 SDISK [CCP] :                0E7F9 C |  SDISK [BIOS] :               0F705 C |
 SDMA [BIOS] :                0F73F C |  SEARCH [CCP] :               0E0D9 C |
 SEARCH [BDOS] :              0EECB C |  SEARCHA [BDOS] :             0F5D9 C |
 SEARCHCOM [CCP] :            0E0E1 C |  SEARCHEXT [BDOS] :           0EF1D C |
 SEARCHL [BDOS] :             0F5D8 C |  SEARCHLOOP [BDOS] :          0EF03 C |
 SEARCHN [CCP] :              0E0DD C |  SEARCHN [BDOS] :             0EEE0 C |
 SEARCHNEXT [BDOS] :          0EEFA C |  SEARCHOK [BDOS] :            0EF25 C |
 SEARCH_FIN [BDOS] :          0EF3C C |  SEARF [CCP] :                   11 - |
 SEARNF [CCP] :                  12 - |  SEC1 [BIOS] :                0F97A C |
 SECTPT [BDOS] :              0F5C1 C |  SECTRAN [BDOS] :             0F630 - |
 SECTRAN1 [BIOS] :            0F72D C |  SEEK [BDOS] :                0EB9B C |
 SEEK0 [BDOS] :               0EBAE C |  SEEK1 [BDOS] :               0EBC2 C |
 SEEK2 [BDOS] :               0EBD4 C |  SEEKERR [BDOS] :             0F34C C |
 SEEKOK [BDOS] :              0F340 C |  SEEK_COPY [BDOS] :           0EFB1 C |
 SEEK_DIR [BDOS] :            0EB8D C |  SELDSK1 [BIOS] :             0F714 C |
 SELDSKF [BDOS] :             0F61B - |  SELECT [CCP] :               0E0BA C |
 SELECT [BDOS] :              0F3DF C |  SELECTDISK [BDOS] :          0EB25 C |
 SELERR [BDOS] :              0E80B C |  SELF [CCP] :                    0E - |
 SELMSG [BDOS] :              0E8F0 C |  SELSUB [BDOS] :              0E8A9 C |
 SEL_ERROR [BDOS] :           0EB14 C |  SEQDISKREAD [BDOS] :         0F194 C |
 SEQDISKWRITE [BDOS] :        0F1D2 C |  SEQIO [BDOS] :               0F5D5 C |
 SER0 [CCP] :                 0E1F5 C |  SERIAL [CCP] :               0E32C C |
 SERIALIZE [CCP] :            0E1ED C |  SETALLOCBIT [BDOS] :         0EE10 C |
 SETCDR [BDOS] :              0ED48 C | *SETCUR [CCP] :               0E280 C |
 SETCUR0 [CCP] :              0E281 C |  SETDATA [BDOS] :             0ED93 C |
 SETDIR [BDOS] :              0ED98 C |  SETDISK [CCP] :              0E45A C |
 SETDISKA [CCP] :             0E121 C |  SETDMA [CCP] :               0E1D0 C |
 SETDMA [BDOS] :              0ED9B C |  SETDMABUFF [CCP] :           0E1CD C |
 SETDMAF [BDOS] :             0F624 - |  SETDSK [CCP] :               0E288 C |
 SETFCB [BDOS] :              0EC92 C |  SETFCB1 [BDOS] :             0EC9D C |
 SETFWF [BDOS] :              0ED34 C |  SETLRET1 [BDOS] :            0EAC4 C |
 SETNAM0 [CCP] :              0E290 C |  SETNAM1 [CCP] :              0E2A1 C |
 SETNAM2 [CCP] :              0E2A3 C |  SETNAME [CCP] :              0E28E C |
 SETRANDOM [BDOS] :           0F3CC C |  SETSECF [BDOS] :             0F621 - |
 SETSIZE [BDOS] :             0F3CA C |  SETTRKF [BDOS] :             0F61E - |
 SETTY [CCP] :                0E2B8 C |  SETTY0 [CCP] :               0E2C0 C |
 SETTY1 [CCP] :               0E2D1 C |  SETTY2 [CCP] :               0E2D3 C |
 SETUSER [CCP] :              0E10D C |  SETUSRCODE [BDOS] :          0F532 C |
 SET_CDISK [BDOS] :           0ECC7 C |  SET_END_DIR [BDOS] :         0EDB6 C |
 SET_RO [BDOS] :              0ECE8 C |  SINGLE [BDOS] :              0F5DD C |
 SSEC [BIOS] :                0F735 C |  SSIZE [BDOS] :                  20 - |
 STACK [CCP] :                0E7B4 C |  STADDR [CCP] :               0E08A C |
 STA_RET [BDOS] :             0EAC0 C |  STHL_RET [BDOS] :            0F521 C |
 STR [BIOS] :                 0FA9A C |  STR1 [BIOS] :                0FA9C C |
 STR2 [BIOS] :                0FAA7 C |  STRAN [BIOS] :               0F723 C |
 STRCK [BIOS] :               0F73A C |  STRTCOL [BDOS] :             0EAC9 C |
 SUBCR [CCP] :                0E7D5 C |  SUBDH [BDOS] :               0ED51 C |
 SUBFCB [CCP] :               0E7B5 C |  SUBMIT [CCP] :               0E7B4 C |
 SUBMOD [CCP] :               0E7C3 C |  SUBRC [CCP] :                0E7C4 C |
 SUB_F913 [BIOS] :            0F913 C |  SUB_FAC7 [BIOS] :            0FAC7 C |
 SYSFILE [CCP] :                 0A - |  SYSSK [BIOS] :               0FCE7 C |
 SYSSKL [BIOS] :              0FEA9 C |  TAB [BDOS] :                     9 - |
 AS V1.42 Beta [Bld 157] - Source File cpm.asm - Page 99 - 3/8/2023 15:39:33


 TAB0 [BDOS] :                0E986 C |  TABOUT [BDOS] :              0E981 C |
 TBUFF [BDOS] :                  80 - | *TEST [BDOS] :                0FFFF - |
*TESTING [CCP] :                  0 - | *TFCB [BDOS] :                   5C - |
*TIME :                    15:39:33 - | *TINFO [BDOS] :               0F5DB C |
 TRACK [BIOS] :               0F978 C |  TRAN [CCP] :                   100 - |
 TRANM [CCP] :                0E000 - |  TRANSLATE [CCP] :            0E128 C |
 TRANV [BDOS] :               0F5D0 C |  TRNAME [CCP] :               0E2A7 C |
 TRTYP [CCP] :                0E2D7 C | *TRUE :                           1 - |
 TRUE_ [BDOS] :                 0FF - |  TYPE [CCP] :                 0E563 C |
 TYPE0 [CCP] :                0E57A C |  TYPE1 [CCP] :                0E58D C |
 TYPEOF [CCP] :               0E5A6 C |  TYPERR [CCP] :               0E5AD C |
 UBYTES [BDOS] :                 0D - |  UNK_DC06 [BDOS] :            0F008 C |
 UNK_F63E [BIOS] :            0F63E C |  USER [CCP] :                 0E694 C |
 USER0 [CCP] :                0E6CD C |  USERER [CCP] :               0E774 C |
 USERF [CCP] :                   20 - |  USERFUNC [CCP] :             0E6AE C |
 USRCODE [BDOS] :             0EB0E C | *VERSION :                     142F - |
 VRECORD [BDOS] :             0F5E3 C |  WAIT_ERR [BDOS] :            0E8B6 C |
 WBOOT [BIOS] :               0F7E0 C |  WBOOTF [BDOS] :              0F603 - |
 WBOTE [BIOS] :               0F603 C |  WORD [BDOS] :                    2 - |
 WRBUFF [BDOS] :              0EB82 C |  WRDIR [BDOS] :               0ED80 C |
 WRDSK [BIOS] :               0F8A7 C |  WRITEF [BDOS] :              0F62A - |

    756 symbols
     68 unused symbols

 AS V1.42 Beta [Bld 157] - Source File cpm.asm - Page 100 - 3/8/2023 15:39:33


  Defined Macros:
  ---------------

CPMOFF[BIOS]                          | CPMON[BIOS]                          

      2 macros

 AS V1.42 Beta [Bld 157] - Source File cpm.asm - Page 101 - 3/8/2023 15:39:33


  Defined Functions:
  ------------------

LO                                    | HI                                   
X_ALIGN                               |

 AS V1.42 Beta [Bld 157] - Source File cpm.asm - Page 102 - 3/8/2023 15:39:33


  Code Pages:
  ----------

STANDARD (0 changed characters)

1 code page

0.05 seconds assembly time

   5396 lines source file
   5412 lines incl. macro expansions
      2 passes
      0 errors
      0 warnings
