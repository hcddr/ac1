 AS V1.42 Beta [Bld 157] - Source File mon_v8.asm - Page 1 - 1/25/2023 11:3:40


       1/       0 :                     ; File Name   :	d:\hobby3\ac1-2010\monitor\v8\mon_v8.bin
       2/       0 :                     ; Base Address:	0000h Range: 0000h - 1000h Loaded length: 1000h
       3/       0 :                     
       4/       0 :                     		page	0
       5/       0 :                     		cpu	z80undoc
       6/       0 :                     
       7/       0 :                     ;AC1-MONITOR V8 E. Ludwig SCCH, Monitor Version Nov. 1987
       8/       0 :                     ;reass. Volker Pohlers, Neustadt i.H., 10.01.2023
       9/       0 :                     ;letzte Änderung 23.01.2023 v24
      10/       0 :                     
      11/       0 :                     ;------------------------------------------------------------------------------
      12/       0 :                     ;
      13/       0 :                     ;------------------------------------------------------------------------------
      14/       0 :                     
      15/       0 :                     ; Makros
      16/       0 :                     hi              function x, (x>>8) & 0ffh	; High-Byte
      17/       0 :                     lo              function x, x & 0ffh		; Low-Byte
      18/       0 :                     
      19/       0 :                     ; Speicheraufteilung
      20/       0 : =0H                 ROM		equ	0000h
      21/       0 : =1000H              BWS		equ	1000h		; 2K
      22/       0 : =1800H              RAM		equ	1800h
      23/       0 :                     ; BWS
      24/       0 : =40H                COLS		equ	64		; muss 2er-Potenz sein!
      25/       0 : =20H                LINES		equ	32		; muss 2er-Potenz sein!
      26/       0 :                     
      27/       0 : =17FFH              BWSANF		equ	BWS+LINES*COLS-1	; Adresse Home (links oben)
      28/       0 : =1000H              BWSEND		equ	BWS			; letzte Adresse (rechts unten)
      29/       0 :                     
      30/       0 :                     ; I/O
      31/       0 : =0H                 CTC0		equ	0
      32/       0 : =1H                 CTC1		equ	1
      33/       0 : =2H                 CTC2		equ	2
      34/       0 : =3H                 CTC3		equ	3
      35/       0 : =4H                 PIODA		equ	4		; Tastatur
      36/       0 : =5H                 PIODB		equ	5		; Grafik/Ton
      37/       0 : =6H                 PIOCA		equ	6
      38/       0 : =7H                 PIOCB		equ	7
      39/       0 :                     
      40/       0 :                     ;Belegung PIOA
      41/       0 :                     ;B0..B6 ASCII-Code Zeichen
      42/       0 :                     ;B7 Taste gedrückt
      43/       0 :                     
      44/       0 :                     ;Belegung PIOB
      45/       0 :                     ;B0 Ton-Ausgang
      46/       0 :                     ;B1 Joystick ges. A
      47/       0 :                     ;B2 Grafiktaste
      48/       0 :                     ;B3 Bildschim-Mode
      49/       0 :                     ;B4 frei
      50/       0 :                     ;B5 Start/Stop-Schaltung
      51/       0 :                     ;B6 TB-Interface-Ausgang
      52/       0 :                     ;B7 TB-Interface-Eingang
      53/       0 :                     
      54/       0 : =8H                 PIO2DA		equ	8		; b0..b3 V24, b4..b7 IEC	/ U555 Eprommer
      55/       0 : =9H                 PIO2DB		equ	9		; U555 Eprommer
      56/       0 : =0AH                PIO2CA		equ	0ah
      57/       0 : =0BH                PIO2CB		equ	0bh
      58/       0 :                     
      59/       0 :                     ; PIO 2 / IOSEL2
      60/       0 :                     ; A0 Eingang Daten RxD 			serielle Schnittstelle	
      61/       0 :                     ; A1 Ausgang Daten TxD 			serielle Schnittstelle
      62/       0 :                     ; A2 Eingang empfangsbereit CTS		serielle Schnittstelle
      63/       0 :                     ; A3 Ausgang sendebereit DTR		serielle Schnittstelle
      64/       0 :                     ; A4 SRQ		IEC - Schnittstelle (in CPM + BASIC)
      65/       0 :                     ; A5 ATN		IEC - Schnittstelle (in CPM + BASIC)
      66/       0 :                     ; A6 CLK		IEC - Schnittstelle (in CPM + BASIC)
      67/       0 :                     ; A7 DATA		IEC - Schnittstelle (in CPM + BASIC)
      68/       0 :                     ; Der Eprommer arbeitet mit PIO 2 Port A + B.
      69/       0 :                     
      70/       0 :                     
      71/       0 : =14H                modul1		equ	14h		; Konfigurationsbyte für SCCH-Modul 1
      72/       0 :                     ; Port 14h, OUT-Port
      73/       0 :                     ; 	00 - Modul nicht aktiv
      74/       0 :                     ; 	01 - 8K-ROM "PaketX" E000-FFFF
      75/       0 :                     ; 	02 - 16K-ROM "Basic" 2000-5FFF
      76/       0 :                     ; 	x8 - 512K ROM1 aktiv, jeweils 32K-Bänke, x = 0..F Bank0..Bank15, 8000-FFFF
      77/       0 :                     ; 	x9 - 512K ROM2 aktiv, jeweils 32K-Bänke, x = 0..F Bank0..Bank15, 8000-FFFF
      78/       0 :                     
      79/       0 :                     ;
      80/       0 : =28H                NAMELEN		equ	40		; max. Länge des Dateinamens bei LOAD/SAVE
      81/       0 : =400H               KDOANF		equ	0400h		; Beginn f. Kdo-Suche
      82/       0 : =0BFFFH             RAMEND		equ	0BFFFh		; Ende f. Kdo-Suche, auf RAM beschränkt
      83/       0 :                     
      84/       0 :                     ; Zeitkonstanten (bei 2 MHz-Takt)
      85/       0 : =31H                ZK1    EQU  49        ;Laenge 1.Halbwelle
      86/       0 : =2EH                ZK2    EQU  46        ;Laenge 2.Halbwelle
      87/       0 : =3FH                ZKR    EQU  (ZK1+ZK2)*2/3
      88/       0 :                     
      89/       0 :                     ;------------------------------------------------------------------------------
      90/       0 :                     ; Reset
      91/       0 :                     ;------------------------------------------------------------------------------
      92/       0 :                     
      93/       0 :                     		org	ROM
      94/       0 : F3                  init:		di
      95/       1 : 31 56 18            		ld	sp, SYSSK	; Stack
      96/       4 : ED 5E               		im	2
      97/       6 : 18 03               		jr	init1
      98/       8 :                     
      99/       8 :                     		org	8
     100/       8 :                     ; RST 8: Eingabekanal, normal Tastatur
     101/       8 : C3 02 18            inch:		jp	jp_rst08	; -> rinch
     102/       B :                     
     103/       B :                     
     104/       B : 11 1C 18            init1:		ld	de, warmcod	; Warmstartcode
     105/       E : 18 13               		jr	init2
     106/      10 :                     
     107/      10 :                     		org	10h
     108/      10 :                     ; RST 10: Ausgabekanal,	normal Bildschirm
     109/      10 : C3 05 18            outch:		jp	jp_rst10	; -> routch
     110/      13 :                     
     111/      13 : E5                  routch:		push	hl
     112/      14 : D5                  		push	de
     113/      15 : C3 43 0E            		jp	routch0
     114/      18 :                     
     115/      18 :                     		org	18h
     116/      18 :                     ; RST 18: PRNST
     117/      18 : C3 08 18            prnst:		jp	jp_rst18	; -> rprnst
     118/      1B :                     
     119/      1B : CD 7B 0A            init5:		call	tstsch		; test auf warmstart, de = warmcod
     120/      1E : 20 2C               		jr	nz, init6	; wenn nicht init, d.h. Kaltstart
     121/      20 :                     
     122/      20 :                     		org	20h
     123/      20 :                     ; RST 20: Warmstart Betriebssystem
     124/      20 : C3 0B 18            warm:		jp	jp_rst20
     125/      23 :                     
     126/      23 : CD 1D 01            init2:		call	MS30		; ca. 30 ms warten
     127/      26 : 18 13               		jr	init3
     128/      28 :                     
     129/      28 :                     		org	28h
     130/      28 :                     ; RST 28: 1 byte von Kassette laden, AC1-Format
     131/      28 : C3 0E 18            loadb:		jp	jp_rst28	; -> loa15
     132/      2B :                     
     133/      2B : E5                  co00:		push	hl
     134/      2C : D5                  		push	de
     135/      2D : C3 00 03            		jp	co0
     136/      30 :                     
     137/      30 :                     		org	30h
     138/      30 :                     ; RST 30: 1 Byte auf Kassette speichern, AC1-Format
     139/      30 : C3 11 18            savb:		jp	jp_rst30	; -> sav10
     140/      33 :                     
     141/      33 :                     ; Ausgabe über Bildschirm
     142/      33 : F5                  co:		push	af
     143/      34 : 18 F5               		jr	co00
     144/      36 : FF                  		db 0FFh
     145/      37 : FF                  		db 0FFh
     146/      38 :                     
     147/      38 :                     		org	38h
     148/      38 :                     ; RST 38: Breakpoint, Einsprung bei Einzelschritt
     149/      38 : C3 14 18            sub_38:		jp	jp_rst38	; -> rst38
     150/      3B :                     
     151/      3B :                     
     152/      3B :                     ;------------------------------------------------------------------------------
     153/      3B :                     ; Kaltstart
     154/      3B :                     ; Sprungverteiler initialisieren, RAM löschen
     155/      3B :                     ;------------------------------------------------------------------------------
     156/      3B :                     
     157/      3B : 3E 02               init3:		ld	a, hi(inttab)
     158/      3D : ED 47               		ld	i, a
     159/      3F : 21 D8 0A            		ld	hl, TABIO	; Tabelle Peripherie
     160/      42 : 06 11               		ld	b, 11h
     161/      44 : 4E                  init4:		ld	c, (hl)		; Port
     162/      45 : 23                  		inc	hl
     163/      46 : ED A3               		outi			; Wert ausgeben
     164/      48 : 20 FA               		jr	nz, init4
     165/      4A : 18 CF               		jr	init5		; test auf warmstart
     166/      4C :                     
     167/      4C :                     ;------------------------------------------------------------------------------
     168/      4C :                     ; Kaltstart
     169/      4C :                     ; Sprungverteiler initialisieren, RAM löschen
     170/      4C :                     ;------------------------------------------------------------------------------
     171/      4C :                     ; Einsprung von init5,
     172/      4C :                     ; damit init6 funktioniert, muss das Adresse 220h sein
     173/      4C :                     ; und lo(sv_rst) = Bereichsgröße sv_rstend-sv_rst
     174/      4C :                     ; in: hl = 23A, de = 181c
     175/      4C :                     init6:		; Sprungverteiler initialisieren
     176/      4C : 01 20 00            		ld	bc, lo(sv_rst)	; == Länge sv_rst-Bereich
     177/      4F : 69                  		ld	l, c		; hl=220 = sv_rst
     178/      50 : 5C                  		ld	e, h		; de=1802
     179/      51 : ED B0               		ldir
     180/      53 :                     		; RAM löschen
     181/      53 : EB                  		ex	de, hl		; hl=1822
     182/      54 : 03                  		inc	bc		; bc=1
     183/      55 : 36 FF               init7:		ld	(hl), 0FFh
     184/      57 : 09                  		add	hl, bc
     185/      58 : 30 FB               		jr	nc, init7	; bis FFFF
     186/      5A :                     
     187/      5A :                     ;------------------------------------------------------------------------------
     188/      5A :                     ; Test auf Autostartmodul auf 2000h
     189/      5A :                     ; Befindet sich dort die Bitfolge 53 43 48, erkennt der Computer ein Autostart-
     190/      5A :                     ; Modul und springt an die Adresse, die in 2003/2004 steht. Der Autostart kann
     191/      5A :                     ; verhindert werden, indem beim Einschalten bzw. RESET die Taste "CR" gedrückt
     192/      5A :                     ; wird: Sprung in den Monitor, oder Taste "X" gedrückt: Sprung in Programmpaket X.
     193/      5A :                     ;------------------------------------------------------------------------------
     194/      5A :                     
     195/      5A : CD 97 02            rWarm:		call	UPTAST		; Taste bei Einschalten gedrückt?
     196/      5D : 20 0A               		jr	nz, rWarm1
     197/      5F :                     		; ist Autostartmodul aktiv?
     198/      5F : CD 78 0A            		call	tstsch2		; Test auf SCH auf 2000h
     199/      62 : 20 0A               		jr	nz, init8	; wenn kein Autostartmodul
     200/      64 : E9                  		jp	(hl)		; sonst dieses starten
     201/      65 : FF                  		db 0FFh
     202/      66 :                     
     203/      66 :                     ;------------------------------------------------------------------------------
     204/      66 :                     ; MNI-Befehl, Programmunterbrechnung, Breakpoint
     205/      66 :                     ;------------------------------------------------------------------------------
     206/      66 :                     
     207/      66 :                     		org	66h
     208/      66 : C3 17 18            		jp	nmi		; -> BREAK
     209/      69 :                     
     210/      69 :                     ;------------------------------------------------------------------------------
     211/      69 :                     ; Taste "X" gedrückt: Sprung in Programmpaket X.
     212/      69 :                     ; sonst Systemmeldung ausgeben
     213/      69 :                     ;------------------------------------------------------------------------------
     214/      69 :                     
     215/      69 : FE 58               rWarm1:		cp	'X'		; 'X' bei Einschalten gedrückt?
     216/      6B : CA 16 01            rWarm2:		jp	z, PROGX	; dann zu "Paket X"
     217/      6E :                     ;
     218/      6E : AF                  init8:		xor	a
     219/      6F : D3 14               		out	(modul1), a	; Modul1 disablen
     220/      71 :                     ;
     221/      71 : DF                  		rst	18h		; PRNST
     222/      72 : 0C 0D 0F 0F 41 43   		db 0Ch,0Dh,0Fh,0Fh,"AC 1 * MONITOR * V.8.0 (C) SCCH ",0Dh,8Dh
                    20 31 20 2A 20 4D 
                    4F 4E 49 54 4F 52 
                    20 2A 20 56 2E 38 
                    2E 30 20 28 43 29 
                    20 53 43 43 48 20 
                    0D 8D             
     223/      98 : C3 5E 02            		jp	break2
     224/      9B :                     
     225/      9B :                     ;------------------------------------------------------------------------------
     226/      9B :                     ; Tasten-Piep
     227/      9B :                     ;------------------------------------------------------------------------------
     228/      9B :                     
     229/      9B : 71                  PIEP:		ld	(hl), c		; Tasten-Piep
     230/      9C : 01 34 A0            		ld	bc, 0A034h
     231/      9F : CD 87 02            		call	UPTON		; UP "Ton", Reg, B = Tonlaenge, C = Tonhoehe
     232/      A2 :                     ; Ende von rinch
     233/      A2 : C1                  ENDE8:		pop	bc
     234/      A3 : E1                  		pop	hl
     235/      A4 : C9                  		ret
     236/      A5 :                     
     237/      A5 :                     ;------------------------------------------------------------------------------
     238/      A5 :                     ; Einsprungpunkt fuer RST 08H
     239/      A5 :                     ; Eingabekanal auswerten
     240/      A5 :                     ; iobyt
     241/      A5 :                     ; Eingabe: b0 Tastatur, b1 V24 (Rs 232c), b2 Reserve, b3 User
     242/      A5 :                     ;------------------------------------------------------------------------------
     243/      A5 :                     
     244/      A5 : E5                  rinch:		push	hl		; UP "Eingabekanal"
     245/      A6 : C5                  		push	bc
     246/      A7 : 3A 21 18            		ld	a, (IOBYT)	; Ein/Ausgabebyte
     247/      AA : 0F                  		rrca			; b0 gesetzt?
     248/      AB : 30 29               		jr	nc, NOTAST	; nein, anderes Eingabegeraet (keine Tastatur)
     249/      AD :                     
     250/      AD :                     ; Eingabe von Tastatur		
     251/      AD : 21 24 18            		ld	hl, repeat	; Hilfsregister	Repetierfunktion Tastatur
     252/      B0 : 46                  		ld	b, (hl)
     253/      B1 : 36 0E               		ld	(hl), 0Eh
     254/      B3 : CD 97 02            rinch1:		call	UPTAST
     255/      B6 : 28 05               		jr	z, rinch2	; keine Taste gedrückt
     256/      B8 : 05                  		dec	b
     257/      B9 : 20 F8               		jr	nz, rinch1
     258/      BB : 36 01               		ld	(hl), 1
     259/      BD : 2A 00 18            rinch2:		ld	hl, (cupos)	; Zwischenspeicher Kursor
     260/      C0 : 4E                  		ld	c, (hl)		; Zeichen merken
     261/      C1 : 36 7F               rinch3:		ld	(hl), 7Fh	; Cursorsymbol anzeigen
     262/      C3 : CD 97 02            rinch4:		call	UPTAST
     263/      C6 :                     ; Taste gedrückt? dann Piep und ENDE8
     264/      C6 : 20 D3               		jr	nz, PIEP	; Tasten-Piep
     265/      C8 :                     ; sonst kurz warten
     266/      C8 : 3E 78               		ld	a, 78h
     267/      CA : 3D                  rinch5:		dec	a
     268/      CB : 20 FD               		jr	nz, rinch5
     269/      CD : 10 F4               		djnz	rinch4
     270/      CF :                     ; und Cursor toggeln
     271/      CF : 79                  		ld	a, c
     272/      D0 : BE                  		cp	(hl)		; ist Zeichen zu sehen?
     273/      D1 : 28 EE               		jr	z, rinch3	; dann Cursorsymbol anzeigen
     274/      D3 : 71                  		ld	(hl), c		; sonst Zeichen wieder anzeigen
     275/      D4 : 18 ED               		jr	rinch4
     276/      D6 :                     
     277/      D6 :                     ;------------------------------------------------------------------------------
     278/      D6 :                     ; Eingabe von V24 (RS232)
     279/      D6 :                     ;------------------------------------------------------------------------------
     280/      D6 :                     
     281/      D6 : 0F                  NOTAST:		rrca			; IOBYT b1 gesetzt?
     282/      D7 : 30 32               		jr	nc, NOV24	; nein, anderes Eingabegeraet (kein V.24)
     283/      D9 :                     
     284/      D9 :                     ; Eingabe von V24 (RS232)
     285/      D9 : 3A 20 18            v24in0:		ld	a, (kdov24)	; Kommandocode V 24
     286/      DC : E6 07               		and	7		; Baudrate
     287/      DE : 47                  		ld	b, a
     288/      DF : 3E 01               		ld	a, 1
     289/      E1 : 87                  v24in1:		add	a, a
     290/      E2 : 10 FD               		djnz	v24in1
     291/      E4 : 67                  		ld	h, a		; Baudratenzähler h=2^b
     292/      E5 :                     					; b=1,h=2 19200 Baud, 
     293/      E5 :                     					; b=2, h=4 9600 Baud
     294/      E5 :                     					; .. b=7, h=128 300 Baud 
     295/      E5 : AF                  		xor	a		; alles 0
     296/      E6 : D3 08               		out	(PIO2DA), a	; DTR=0,CTS=0,TxD=0,RxD=0
     297/      E8 : DB 08               v24in2:		in	a, (PIO2DA)	; Pegel am Datenport abfragen
     298/      EA : E6 01               		and	1		; nur RxD zulassen (Bits 7-1 ausblenden)
     299/      EC : 20 FA               		jr	nz, v24in2	; Dateneingang war L warten auf H-Pegel
     300/      EE : 44                  		ld	b, h		; Zeitkonstante nach B
     301/      EF : ED 5F               v24in3:		ld	a, r		; xx Takte
     302/      F1 : 7F                  		ld	a, a		; xx Takte
     303/      F2 : 10 FB               		djnz	v24in3		; warten
     304/      F4 : 06 0A               		ld	b, 10		; 10 Bits empfangen (Start - 8Bit - Stop)
     305/      F6 : 6C                  v24in4:		ld	l, h		; Baudrate
     306/      F7 : CB 19               		rr	c		; gelesenes CarryBit ins Bit 7 schieben
     307/      F9 : E5                  v24in5:		push	hl		; xx Takte
     308/      FA : E1                  		pop	hl		; xx Takte
     309/      FB : 7F                  		ld	a, a		; xx Takte
     310/      FC : 2D                  		dec	l		; 
     311/      FD : DB 08               		in	a, (PIO2DA)	; Pegelabfrage
     312/      FF : 20 F8               		jr	nz, v24in5
     313/     101 : 1F                  		rra			; Bit0=RxD ins Carry schieben
     314/     102 : 10 F2               		djnz	v24in4		; weiter bis alle Bits durch
     315/     104 : 3E 0A               		ld	a, 0Ah		; DTR=1,CTS=0,TxD=1,RxD=0
     316/     106 : D3 08               		out	(PIO2DA), a	; Bereitschaftsbits setzen
     317/     108 : 79                  		ld	a, c		; gelesenes Byte in A umladen
     318/     109 : 18 97               		jr	ENDE8		; Ende von rinch
     319/     10B :                     
     320/     10B :                     ;------------------------------------------------------------------------------
     321/     10B :                     ; anderes Eingabegeraet	(kein V.24)
     322/     10B :                     ;------------------------------------------------------------------------------
     323/     10B :                     
     324/     10B : 21 A2 00            NOV24:		ld	hl, ENDE8	; Return-Adr
     325/     10E : E5                  		push	hl		; auf Stack
     326/     10F : 0F                  		rrca			; b2 gesetzt ?
     327/     110 : DA FF FF            		jp	c, 0FFFFh	; Reserve --> nicht belegt --> Fehlermeldung
     328/     113 : C3 F0 18            		jp	unk_18F0	; sonst (b3) Sprung zum UP User-Eingabe
     329/     116 :                     
     330/     116 :                     ;------------------------------------------------------------------------------
     331/     116 :                     ; Start vom Programmpaket X
     332/     116 :                     ;------------------------------------------------------------------------------
     333/     116 :                     
     334/     116 : 3E 01               PROGX:		ld	a, 1
     335/     118 : D3 14               		out	(modul1), a	; Modul1 ROM "PaketX" aktivieren
     336/     11A : C3 00 E0            		jp	0E000h		; und starten
     337/     11D :                     
     338/     11D :                     ;------------------------------------------------------------------------------
     339/     11D :                     ; ca. 30 ms warten
     340/     11D :                     ;------------------------------------------------------------------------------
     341/     11D :                     
     342/     11D : C5                  MS30:		push	bc
     343/     11E : 01 03 09            		ld	bc, 903h	; Zeitkonstante	fuer 30ms, ; B = 9, C = 3
     344/     121 : 0B                  ms301:		dec	bc
     345/     122 : 78                  		ld	a, b
     346/     123 : B1                  		or	c
     347/     124 : 20 FB               		jr	nz, ms301
     348/     126 : C1                  		pop	bc
     349/     127 : C9                  		ret
     350/     128 :                     		
     351/     128 :                     ;------------------------------------------------------------------------------
     352/     128 :                     ; Zeile	eingeben
     353/     128 :                     ; liest eine Zeile, die mit cr abgeschlossen wird, auf dem Schirm ein und
     354/     128 :                     ; legt den Anfang der Zeile in SOIL ab
     355/     128 :                     ; kein Register wird zerstört
     356/     128 :                     ;------------------------------------------------------------------------------
     357/     128 :                     
     358/     128 : F5                  INLINE:		push	af
     359/     129 : E5                  		push	hl
     360/     12A : DF                  		rst	18h		; PRNST
     361/     12B : 20 23 A0            aA:		db " #",' '+80h		; Prompt
     362/     12E : 00                  		nop
     363/     12F : CF                  inlin1:		rst	8		; INCH
     364/     130 : 2A 00 18            		ld	hl, (cupos)	; Zwischenspeicher Kursor
     365/     133 : D7                  		rst	10h		; OUTCH
     366/     134 : FE 0D               		cp	0Dh		; Enter?
     367/     136 : 20 F7               		jr	nz, inlin1	; nein --> weiter eingeben
     368/     138 :                     ; Zeilenanfang ermitteln
     369/     138 : 3E 23               		ld	a, '#'
     370/     13A : 23                  inlin2:		inc	hl		; ein zeichen zurück
     371/     13B : BE                  		cp	(hl)		; zeilenanfang?
     372/     13C : 20 FC               		jr	nz, inlin2	; nein
     373/     13E : 2B                  		dec	hl		; das '#'
     374/     13F : 2B                  		dec	hl		; Leerzeichen davor
     375/     140 : 22 1A 18            		ld	(soil),	hl	; erstes Zeichen der Zeile
     376/     143 : E1                  		pop	hl
     377/     144 : F1                  		pop	af
     378/     145 : C9                  		ret
     379/     146 :                     
     380/     146 :                     ;------------------------------------------------------------------------------
     381/     146 :                     ; fuehrende Leerzeichen ueberlesen
     382/     146 :                     ; letzen vier Zeichen als Hexzahl konvertieren
     383/     146 :                     ; und in DATA ablegen
     384/     146 :                     ;------------------------------------------------------------------------------
     385/     146 :                     
     386/     146 : 1A                  konvx:		ld	a, (de)		; UP - Routine zu InHex
     387/     147 : FE 20               		cp	' '		; Leerzeichen
     388/     149 : 1B                  		dec	de
     389/     14A : 28 FA               		jr	z, konvx	; überlesen
     390/     14C :                     ;
     391/     14C : 13                  		inc	de		; erstes Zeichen
     392/     14D : AF                  		xor	a
     393/     14E : 21 58 18            		ld	hl, data	; Hilfsregister
     394/     151 : 77                  		ld	(hl), a
     395/     152 : 23                  		inc	hl
     396/     153 : 77                  		ld	(hl), a
     397/     154 : 23                  		inc	hl
     398/     155 : 77                  		ld	(hl), a		; data=0
     399/     156 : 1A                  konvx2:		ld	a, (de)
     400/     157 : 2B                  		dec	hl
     401/     158 : 2B                  		dec	hl
     402/     159 : D6 30               		sub	30h ; '0'	; Zeichen<"0"?
     403/     15B : F8                  		ret	m
     404/     15C : FE 0A               		cp	0Ah		; Zeichen<="9"?
     405/     15E : 38 08               		jr	c, konvx3
     406/     160 : D6 07               		sub	7
     407/     162 : FE 0A               		cp	0Ah		; Zeichen<"A"?
     408/     164 : F8                  		ret	m
     409/     165 : FE 10               		cp	10h		; Zeichen>"F"?
     410/     167 : F0                  		ret	p
     411/     168 : 1B                  konvx3:		dec	de
     412/     169 : 34                  		inc	(hl)
     413/     16A : 23                  		inc	hl
     414/     16B : ED 6F               		rld			; Hexziffer eintragen
     415/     16D : 23                  		inc	hl
     416/     16E : ED 6F               		rld			; nächste Ziffer
     417/     170 : 18 E4               		jr	konvx2
     418/     172 :                     		
     419/     172 :                     ;------------------------------------------------------------------------------
     420/     172 :                     ; wandelt eine maximal vierstellige in ASCII-Zeichen angegebene Zahl
     421/     172 :                     ; ab (DE) abwärts in deren hexadezimalen Wert um, der dann in HL steht.
     422/     172 :                     ; DE wird entsprechend dekrementiert, der Akku wird zerstört
     423/     172 :                     ;------------------------------------------------------------------------------
     424/     172 :                     
     425/     172 : C5                  INHEX:		push	bc
     426/     173 : F5                  		push	af
     427/     174 : CD 46 01            		call	konvx		; Konvertierung
     428/     177 : 23                  		inc	hl
     429/     178 : 44                  		ld	b, h		; BC=HL=DATA+1
     430/     179 : 4D                  		ld	c, l
     431/     17A : 6E                  		ld	l, (hl)		; unteres Byte
     432/     17B : 03                  		inc	bc
     433/     17C : 0A                  		ld	a, (bc)
     434/     17D : 67                  		ld	h, a		; oberes Byte
     435/     17E : C1                  		pop	bc
     436/     17F : B5                  		or	l		; Z-Flag setzen
     437/     180 : 78                  		ld	a, b
     438/     181 : C1                  		pop	bc
     439/     182 : C9                  		ret
     440/     183 :                     		
     441/     183 :                     ;------------------------------------------------------------------------------
     442/     183 :                     ; Ausgabe (A) hexadezimal
     443/     183 :                     ; gibt den Akku als zweistellige Hexzahl auf dem Schirm aus,
     444/     183 :                     ; kein Register wird zerstört
     445/     183 :                     ;------------------------------------------------------------------------------
     446/     183 :                     
     447/     183 : F5                  OUTHEX:		push	af
     448/     184 : 1F                  		rra
     449/     185 : 1F                  		rra
     450/     186 : 1F                  		rra
     451/     187 : 1F                  		rra
     452/     188 : CD 8C 01            		call	OUTHEX1		; obere Tetrade ausgeben
     453/     18B : F1                  		pop	af		; und die unter
     454/     18C : F5                  OUTHEX1:	push	af
     455/     18D : E6 0F               		and	0Fh
     456/     18F : C6 30               		add	a, '0'		; Konvertierung --> ASCII
     457/     191 : FE 3A               		cp	':'		; Ziffer "A" ... "F"?
     458/     193 : 38 02               		jr	c, OUTHEX2	; nein
     459/     195 : C6 07               		add	a, 7		; sonst Korrektur
     460/     197 : D7                  OUTHEX2:	rst	10h		; OUTCH ; und Ausgabe
     461/     198 : F1                  		pop	af
     462/     199 : C9                  		ret
     463/     19A :                     		
     464/     19A :                     ;------------------------------------------------------------------------------
     465/     19A :                     ; Ausgabe HL hexadezimal
     466/     19A :                     ; gibt das HL-Register als vierstellige Hexzahl auf dem Schirm aus,
     467/     19A :                     ; kein Register wird zerstört
     468/     19A :                     ;------------------------------------------------------------------------------
     469/     19A :                     
     470/     19A : F5                  OUTHL:		push	af
     471/     19B : 7C                  		ld	a, h
     472/     19C : CD 83 01            		call	OUTHEX		; Ausgabe A hexadezimal
     473/     19F : 7D                  		ld	a, l
     474/     1A0 : CD 83 01            		call	OUTHEX		; Ausgabe A hexadezimal
     475/     1A3 : F1                  		pop	af
     476/     1A4 : C9                  		ret
     477/     1A5 :                     
     478/     1A5 :                     ;------------------------------------------------------------------------------
     479/     1A5 :                     ; Register im Registerrettebereich ablegen/auslesen
     480/     1A5 :                     ; (RSA = register save area)
     481/     1A5 :                     ;------------------------------------------------------------------------------
     482/     1A5 :                     
     483/     1A5 : ED 73 58 18         REGA:		ld	(data),	sp
     484/     1A9 : 31 75 18            		ld	sp, REGPC
     485/     1AC : FD E5               		push	iy
     486/     1AE : DD E5               		push	ix
     487/     1B0 : E5                  		push	hl
     488/     1B1 : D5                  		push	de
     489/     1B2 : C5                  		push	bc
     490/     1B3 : F5                  		push	af
     491/     1B4 : D9                  		exx
     492/     1B5 : 08                  		ex	af, af'
     493/     1B6 : E5                  		push	hl
     494/     1B7 : D5                  		push	de
     495/     1B8 : C5                  		push	bc
     496/     1B9 : F5                  		push	af
     497/     1BA : 18 15               		jr	regh1
     498/     1BC :                     
     499/     1BC :                     ; Register aus Registerrettebereich holen
     500/     1BC : ED 73 58 18         REGH:		ld	(data),	sp
     501/     1C0 : 31 61 18            		ld	sp, RSA
     502/     1C3 : F1                  		pop	af
     503/     1C4 : C1                  		pop	bc
     504/     1C5 : D1                  		pop	de
     505/     1C6 : E1                  		pop	hl
     506/     1C7 : D9                  		exx
     507/     1C8 : 08                  		ex	af, af'
     508/     1C9 : F1                  		pop	af
     509/     1CA : C1                  		pop	bc
     510/     1CB : D1                  		pop	de
     511/     1CC : E1                  		pop	hl
     512/     1CD : DD E1               		pop	ix
     513/     1CF : FD E1               		pop	iy
     514/     1D1 : ED 7B 58 18         regh1:		ld	sp, (data)
     515/     1D5 : C9                  		ret
     516/     1D6 :                     
     517/     1D6 :                     ;------------------------------------------------------------------------------
     518/     1D6 :                     ; V24 -	Eingabe 
     519/     1D6 :                     ; (für externe Nutzung)
     520/     1D6 :                     ;------------------------------------------------------------------------------
     521/     1D6 :                     
     522/     1D6 : E5                  V24IN:		push	hl
     523/     1D7 : C5                  		push	bc
     524/     1D8 : C3 D9 00            		jp	v24in0
     525/     1DB :                     
     526/     1DB :                     ;------------------------------------------------------------------------------
     527/     1DB :                     ; Kommandoschleife
     528/     1DB :                     ;
     529/     1DB :                     ; Suchen des Kommandos
     530/     1DB :                     ; wenn ':' folgt, dann alte Parameter nehmen
     531/     1DB :                     ; sonst 3 Parameter einlesen und in ARG1..ARG3 ablegen
     532/     1DB :                     ; bei Kdo-Start gilt
     533/     1DB :                     ; 	BC = Return-Adr
     534/     1DB :                     ; 	DE zeigt auf ':' oder auf Leezeichen hinter letzem Parameter
     535/     1DB :                     ; 	HL = Kdo-Adr
     536/     1DB :                     ;------------------------------------------------------------------------------
     537/     1DB :                     
     538/     1DB : CD CC 0E            kdoerr:		call	help
     539/     1DE :                     
     540/     1DE :                     ;Eingang Kommandomodus
     541/     1DE :                     GETCO1:
     542/     1DE : CD 28 01            kdo1:		call	INLINE		; Zeile eingeben
     543/     1E1 : 21 00 04            		ld	hl, KDOANF	; erste Adr, aber der Kdo zu suchen sind
     544/     1E4 : 01 00 BC            		ld	bc, RAMEND-KDOANF+1	; Anzahl (RAM-Ende-Startpos.)
     545/     1E7 : AF                  kdo2:		xor	a		; 00
     546/     1E8 : ED B1               		cpir			; suche 00
     547/     1EA : E2 DB 01            		jp	po, kdoerr
     548/     1ED : 3E 09               		ld	a, 9		; 09
     549/     1EF : BE                  		cp	(hl)		; folgt 09?
     550/     1F0 : 20 F5               		jr	nz, kdo2
     551/     1F2 : 23                  		inc	hl
     552/     1F3 : ED 5B 1A 18         		ld	de, (soil)	; Zwischenspeicher "Inline"
     553/     1F7 : 1A                  		ld	a, (de)		; KDO
     554/     1F8 : BE                  		cp	(hl)		; folgt Kommandbuchstabe?
     555/     1F9 : 20 EC               		jr	nz, kdo2
     556/     1FB : 23                  		inc	hl
     557/     1FC : 3E 0D               		ld	a, 0Dh		; 0d
     558/     1FE : BE                  		cp	(hl)		; folgt 0D?
     559/     1FF : 20 E6               		jr	nz, kdo2	; falsches Kdo
     560/     201 :                     ;
     561/     201 : 01 DE 01            		ld	bc, kdo1	; Returnadr. auf Stack
     562/     204 : C5                  		push	bc
     563/     205 : 23                  		inc	hl
     564/     206 : E5                  		push	hl
     565/     207 :                     ; Parameter
     566/     207 : 1B                  		dec	de
     567/     208 : CD 72 01            		call	INHEX		; 1. Argument
     568/     20B : 1A                  		ld	a, (de)
     569/     20C : FE 3A               		cp	':'		; die alten Werte nehmen ?
     570/     20E : 28 0F               		jr	z, kdo4
     571/     210 : 22 5B 18            		ld	(ARG1),	hl	; Argument 1
     572/     213 : CD 72 01            		call	INHEX
     573/     216 : 22 5D 18            		ld	(ARG2),	hl	; Argument 2
     574/     219 : CD 72 01            		call	INHEX
     575/     21C : 22 5F 18            		ld	(ARG3),	hl	; Argument 3
     576/     21F : C9                  kdo4:		ret
     577/     220 :                     
     578/     220 :                     ;------------------------------------------------------------------------------
     579/     220 :                     ; init. Sprungverteiler für RST-Aufrufe, NMI und Init.
     580/     220 :                     ; RST xx springt in den RAM. von dort geht es normalerweise zu den Monitor-
     581/     220 :                     ; Routinen, aber man kann auch eigene Ein-/Ausgaberoutinen nehmen
     582/     220 :                     ;
     583/     220 :                     ; bei Systemstart werden 32 Bytes nach Adresse 1802H kopiert
     584/     220 :                     ; Tabelle RST, NMI, Hilfsregister, V24, I/O (Voreinstellung)
     585/     220 :                     ;------------------------------------------------------------------------------
     586/     220 :                     
     587/     220 :                     ; damit init6 funktioniert, muss das Adresse 220h sein
     588/     220 :                     ; und lo(sv_rst) = Bereichsgröße sv_rstend-sv_rst
     589/     220 :                     	
     590/     220 :                     		org 220h
     591/     220 :                     
     592/     220 : C3 A5 00            sv_rst:		jp	rinch		; RST 08
     593/     223 : C3 13 00            		jp	routch		; RST 10
     594/     226 : C3 8D 0A            		jp	rprnst		; RST 18
     595/     229 : C3 5A 00            		jp	rWarm		; RST 20 Warmstart
     596/     22C : C3 59 0A            		jp	loa15		; RST 28 Eingabe 1 Byte A Kassette
     597/     22F : C3 57 09            		jp	sav10		; RST 30 Ausgabe 1 Byte A Kassette
     598/     232 : C3 40 02            		jp	rst38		; RST 38 error
     599/     235 : C3 43 02            loc_235:	jp	BREAK		; NMI: Breakpoint
     600/     238 : FF FF               		db 0FFh, 0FFh		; soil
     601/     23A : 53 43 48            aSch:		db "SCH"		; 181C
     602/     23D : AF                  		db 0AFh			; 181F Warmstartcode
     603/     23E : 02                  		db    2			; 1820 Kommandocode V 24 (Adresse 1820H)
     604/     23F : 11                  		db  11h			; Ein/Ausgabebyte (Adresse 1821H)
     605/     240 :                     sv_rstend:
     606/     240 :                     
     607/     240 :                     ;------------------------------------------------------------------------------
     608/     240 :                     ; Standard-Routine rst 38
     609/     240 :                     ; Ausgabe Error, Register sichern, Ausgabe Break
     610/     240 :                     ;------------------------------------------------------------------------------
     611/     240 :                     
     612/     240 : CD 68 02            rst38:		call	error
     613/     243 :                     
     614/     243 :                     ;------------------------------------------------------------------------------
     615/     243 :                     ; Einsprung NMI, Register werden in die RSA gerettet, 
     616/     243 :                     ; I/O und PIO werden auf Standard gesetzt
     617/     243 :                     ;------------------------------------------------------------------------------
     618/     243 :                     
     619/     243 :                     ; Breakpoint
     620/     243 : CD A5 01            BREAK:		call	REGA		; Register sichern
     621/     246 : E1                  		pop	hl		; Returnadr nach Break
     622/     247 : 2B                  		dec	hl		; ein Byte zurück (norm. RST 38)
     623/     248 : 22 75 18            		ld	(REGPC), hl	; merken
     624/     24B : ED 73 77 18         break1:		ld	(REGSP), sp
     625/     24F : 31 56 18            		ld	sp, SYSSK	; Stack
     626/     252 : 3E 11               		ld	a, 11h		; Standard Console
     627/     254 : 32 21 18            		ld	(IOBYT), a	; Ein/Ausgabebyte
     628/     257 : DF                  		rst	18h		; PRNST
     629/     258 : 20 42 52 45 41 CB   aBrea:		db " BREA",'K'+80h
     630/     25E :                     ;
     631/     25E : 3E D2               break2:		ld	a, 0D2h		; auf Standard setzen
     632/     260 : D3 05               		out	(PIODB), a
     633/     262 : 21 DE 01            		ld	hl, GETCO1	; Kommandoschleife
     634/     265 : E5                  		push	hl       	; auf Stack
     635/     266 : ED 45               		retn			; und anspringen
     636/     268 :                     
     637/     268 :                     ;------------------------------------------------------------------------------
     638/     268 :                     ; Ausgabe "Error"
     639/     268 :                     ;------------------------------------------------------------------------------
     640/     268 :                     
     641/     268 : DF                  error:		rst	18h		; PRNST
     642/     269 : 20 20 45 52 52 4F   		db "  ERROR",0A0h
                    52 A0             
     643/     271 : C9                  		ret
     644/     272 :                     
     645/     272 :                     ;------------------------------------------------------------------------------
     646/     272 :                     ; UP "akustisches Signal"
     647/     272 :                     ;------------------------------------------------------------------------------
     648/     272 :                     
     649/     272 : C5                  beep:		push	bc
     650/     273 : 06 03               		ld	b, 3
     651/     275 : C5                  beep1:		push	bc
     652/     276 : 01 40 00            		ld	bc, 0040h	; 
     653/     279 : CD 87 02            		call	UPTON		; UP "Ton", Reg, B = Tonlaenge, C = Tonhoehe
     654/     27C : 01 32 F0            		ld	bc, 0F032h
     655/     27F : CD 87 02            		call	UPTON		; UP "Ton", Reg, B = Tonlaenge, C = Tonhoehe
     656/     282 : C1                  		pop	bc
     657/     283 : 10 F0               		djnz	beep1
     658/     285 : C1                  		pop	bc
     659/     286 : C9                  		ret
     660/     287 :                     
     661/     287 :                     ;------------------------------------------------------------------------------
     662/     287 :                     ; UP "Ton", Reg, B = Tonlaenge, C = Tonhoehe
     663/     287 :                     ;------------------------------------------------------------------------------
     664/     287 :                     
     665/     287 : F5                  UPTON:		push	af
     666/     288 : DB 05               ton1:		in	a, (PIODB)
     667/     28A : 1F                  		rra
     668/     28B : 3F                  		ccf
     669/     28C : 17                  		rla
     670/     28D : D3 05               		out	(PIODB), a
     671/     28F : 79                  		ld	a, c
     672/     290 : 3D                  ton2:		dec	a
     673/     291 : 20 FD               		jr	nz, ton2
     674/     293 : 10 F3               		djnz	ton1
     675/     295 : F1                  		pop	af
     676/     296 : C9                  		ret
     677/     297 :                     		
     678/     297 :                     ;------------------------------------------------------------------------------
     679/     297 :                     ;UP "Taste", testet Tastaturtatus, kehrt bei gedrückter Taste
     680/     297 :                     ;nach 18 ms mit dem Kode zum Akku zurück, keine Taste-Rückkehr mit
     681/     297 :                     ;gesetztem Z-Flag und A=0, Code steht in $1822
     682/     297 :                     ;------------------------------------------------------------------------------
     683/     297 :                     
     684/     297 : C5                  UPTAST:		push	bc
     685/     298 : CD C3 02            		call	tast6		; Taste gedrückt?
     686/     29B : 28 20               tast1:		jr	z, tast5	; nein
     687/     29D : 06 0C               		ld	b, 12		; 12x Kontrollesen, Wartezeit
     688/     29F : 4F                  		ld	c, a		; Tastenwert
     689/     2A0 : CD C3 02            tast2:		call	tast6
     690/     2A3 : B9                  		cp	c		; noch dieselbe Taste?
     691/     2A4 : 20 17               		jr	nz, tast5
     692/     2A6 : 10 F8               		djnz	tast2
     693/     2A8 : FE FF               		cp	0FFh		; in Patches 21h
     694/     2AA : 38 0F               		jr	c, tast4	; sprung wenn a < 0ffh (21h, d.h. Steuerzeichen)
     695/     2AC :                     					; daher patch auf 21h, so dass für
     696/     2AC :                     					; ASCII-zeichen der Grafik-Offs. funktioniert
     697/     2AC : DB 05               		in	a, (PIODB)
     698/     2AE : CB 57               tast3:		bit	2, a		; Grafiktaste ?
     699/     2B0 : 79                  		ld	a, c
     700/     2B1 : 20 08               		jr	nz, tast4	; nein
     701/     2B3 : C6 80               		add	a, 80h		; sonst Grafik-Offset dazu
     702/     2B5 : FE E0               		cp	0E0h
     703/     2B7 : 38 02               		jr	c, tast4
     704/     2B9 : D6 60               		sub	60h
     705/     2BB : 04                  tast4:		inc	b		; ??
     706/     2BC : 06                  		db  06h			; --> ld b,xx; überspringt XOR A
     707/     2BD : AF                  tast5:		xor	a
     708/     2BE : C1                  		pop	bc
     709/     2BF : 32 22 18            		ld	(tacod), a	; Tastencode der zuletzt gedr}ckten Taste
     710/     2C2 : C9                  		ret
     711/     2C3 :                     
     712/     2C3 :                     ; Test Taste gedrückt?
     713/     2C3 : 3E 94               tast6:		ld	a, 94h		; kurz warten (Entprellen)
     714/     2C5 : 3D                  tast7:		dec	a
     715/     2C6 : 20 FD               		jr	nz, tast7
     716/     2C8 : DB 04               		in	a, (PIODA)	; Tastenwert
     717/     2CA : CB 7F               		bit	7, a		; Taste	gedrückt?
     718/     2CC : CB BF               		res	7, a
     719/     2CE : C9                  		ret
     720/     2CF :                     
     721/     2CF : FF                  		db 0FFh
     722/     2D0 : FF                  		db 0FFh
     723/     2D1 : FF                  		db 0FFh
     724/     2D2 : FF                  		db 0FFh
     725/     2D3 : FF                  		db 0FFh
     726/     2D4 : FF                  		db 0FFh
     727/     2D5 : FF                  		db 0FFh
     728/     2D6 : FF                  		db 0FFh
     729/     2D7 : FF                  		db 0FFh
     730/     2D8 : FF                  		db 0FFh
     731/     2D9 : FF                  		db 0FFh
     732/     2DA : FF                  		db 0FFh
     733/     2DB : FF                  		db 0FFh
     734/     2DC : FF                  		db 0FFh
     735/     2DD : FF                  		db 0FFh
     736/     2DE : FF                  		db 0FFh
     737/     2DF : FF                  		db 0FFh
     738/     2E0 :                     
     739/     2E0 :                     ;------------------------------------------------------------------------------
     740/     2E0 :                     ; UP zu U 555-Eprommer
     741/     2E0 :                     ;------------------------------------------------------------------------------
     742/     2E0 :                     
     743/     2E0 : 7A                  sub_2E0:	ld	a, d
     744/     2E1 : D3 09               		out	(PIO2DB), a
     745/     2E3 : DB 05               		in	a, (PIODB)
     746/     2E5 : CB A7               		res	4, a
     747/     2E7 : D3 05               		out	(PIODB), a
     748/     2E9 : CB E7               		set	4, a		
     749/     2EB : D3 05               		out	(PIODB), a
     750/     2ED : 7B                  		ld	a, e
     751/     2EE : D3 09               		out	(PIO2DB), a
     752/     2F0 : E3                  		ex	(sp), hl
     753/     2F1 : E3                  		ex	(sp), hl
     754/     2F2 : DB 08               		in	a, (PIO2DA)
     755/     2F4 : C9                  		ret
     756/     2F5 :                     
     757/     2F5 : FF                  		db 0FFh
     758/     2F6 :                     
     759/     2F6 :                     ;------------------------------------------------------------------------------
     760/     2F6 :                     ; Interrupt Tabelle PIO/CTC
     761/     2F6 :                     ;------------------------------------------------------------------------------
     762/     2F6 :                     
     763/     2F6 :                     		align 2
     764/     2F6 :                     
     765/     2F6 : FF FF               inttab		dw 0FFFFh
     766/     2F8 : 5B 07               inttab1		dw step			; interrupt-Routine CTC0
     767/     2FA : 00 20               		dw 2000h		; interrupt-Routine CTC1
     768/     2FC : FF FF               		dw 0FFFFh		; interrupt-Routine CTC2
     769/     2FE : FF FF               		dw 0FFFFh		; interrupt-Routine CTC3
     770/     300 :                     
     771/     300 :                     ;------------------------------------------------------------------------------
     772/     300 :                     ; Bildschirmtreiber
     773/     300 :                     ; im Sprungverteiler wurde die HI-Adresse eingespart, deshalb müssen alle
     774/     300 :                     ; Steuerzeichenroutinen in derselben Page 03xx liegen! ( hi(cotab),lo(co_fkt) )
     775/     300 :                     ;
     776/     300 :                     ; 017FFH Bildschirmanfang (links oben !!)
     777/     300 :                     ; 01000H Bildschirmende (rechts unten !!)
     778/     300 :                     ; 32 Zeilen a 64 Zeichen
     779/     300 :                     ;
     780/     300 :                     ; Der BWS arbeitet aufgrund der Hardware invers
     781/     300 :                     ; d.h. inc geht ein Zeichen / eine Zeile zurück
     782/     300 :                     ;      dec geht ein Zeichen / eine Zeile vor
     783/     300 :                     ;------------------------------------------------------------------------------
     784/     300 :                     
     785/     300 :                     		; org 300h
     786/     300 : C5                  co0:		push	bc
     787/     301 : ED 5B 00 18         		ld	de, (cupos)	; Zwischenspeicher Kursor
     788/     305 : 21 25 18            		ld	hl, poscnt	; Hilfsregister Kursorpositionierung (CTRL+N)
     789/     308 : FE 10               		cp	10h		; Steuerzeichen?
     790/     30A : 30 0C               		jr	nc, co1		; Sprung, wenn kein Steuerzeichen
     791/     30C : 36 01               		ld	(hl), 1		; poscnt auf 1 setzen
     792/     30E : 01 C7 03            		ld	bc, cotab	; Tabelle f. Steuerzeichen
     793/     311 : 81                  		add	a, c
     794/     312 : 4F                  		ld	c, a
     795/     313 : 0A                  		ld	a, (bc)
     796/     314 : 4F                  		ld	c, a		; bc = hi(cotab),lo(co_fkt)
     797/     315 : C5                  		push	bc		; Adresse Steuerzeichenfkt. auf Stack
     798/     316 : EB                  		ex	de, hl		; hl=cupos, de=poscnt
     799/     317 : C9                  		ret			; und anspringen
     800/     318 :                     
     801/     318 :                     ; einfache Zeichenausgabe
     802/     318 : 35                  co1:		dec	(hl)		; hl=poscnt. ist ctrl-n-Mode aktiv? d.h.
     803/     319 :                     					; sind noch Ziffern zu verarbeiten?
     804/     319 : 20 18               		jr	nz, co5		; poscnt > 1 -> ja, dann dort weiter
     805/     31B : 36 01               co2:		ld	(hl), 1		; sonst wieder poscnt auf 1 setzen
     806/     31D :                     		;
     807/     31D : EB                  		ex	de, hl		; hl=cupos
     808/     31E : FE 7F               		cp	7Fh		; steuerzeichen 7Fh (del)
     809/     320 : 28 3B               		jr	z, co8
     810/     322 : FE 5F               		cp	5Fh		; steuerzeichen 5Fh (del)
     811/     324 : 28 37               		jr	z, co8
     812/     326 : 77                  		ld	(hl), a		; sonst Zeichen in BWS schreiben
     813/     327 :                     
     814/     327 :                     ; Kursor nach rechts
     815/     327 : 2B                  o_cur:		dec	hl		; inc. cupos
     816/     328 : CD DC 03            co3:		call	scroll
     817/     32B : 22 00 18            co4:		ld	(cupos), hl	; Zwischenspeicher Kursor
     818/     32E :                     ; co Ende
     819/     32E : C1                  o_00:		pop	bc
     820/     32F : D1                  		pop	de
     821/     330 : E1                  		pop	hl
     822/     331 : F1                  		pop	af
     823/     332 : C9                  		ret
     824/     333 :                     
     825/     333 :                     ; direkte Cursorpositionierung
     826/     333 :                     ; in hl=poscnt Hilfsregister Kursorpositionierung (CTRL+N)
     827/     333 :                     ; de = bwsanf
     828/     333 :                     ; es folgen 4 Ziffern dezimal Zeile 00.31, Spalte 00..63
     829/     333 : FE 30               co5:		cp	'0'		; wenn keine Ziffer
     830/     335 : 38 E4               		jr	c, co2		; dann Abbruch 
     831/     337 : 28 F5               		jr	z, o_00		; '0' übergehen
     832/     339 : FE 3A               		cp	'9'+1		; wenn keine Ziffer
     833/     33B : 30 DE               		jr	nc, co2		; dann Abbruch 
     834/     33D : D6 30               		sub	'0'
     835/     33F : 46                  		ld	b, (hl)		; hl=poscnt
     836/     340 :                     		; offs. berechnen
     837/     340 :                     		; summand ermitteln
     838/     340 : EB                  		ex	de, hl		; hl = bwsanf
     839/     341 : 11 FF FF            		ld	de, -1
     840/     344 : 05                  		dec	b
     841/     345 : 28 0D               		jr	z, co6		; wenn Einerstelle Spalte
     842/     347 : 1E F6               		ld	e, -10
     843/     349 : 05                  		dec	b
     844/     34A : 28 08               		jr	z, co6		; wenn Zehnerstelle Spalte
     845/     34C : 1E C0               		ld	e, -COLS
     846/     34E : 05                  		dec	b
     847/     34F : 28 03               		jr	z, co6		; wenn Einerstelle Zeile
     848/     351 : 11 80 FD            		ld	de, -COLS*10	; sonst wenn Zehner Zeile
     849/     354 : 47                  co6:		ld	b, a		; a (=ziffer) mal
     850/     355 : 19                  co7:		add	hl, de		; aufaddieren
     851/     356 : CD DC 03            		call	scroll
     852/     359 : 10 FA               		djnz	co7
     853/     35B : 18 CE               		jr	co4		; ende
     854/     35D :                     
     855/     35D :                     ; del 7Fh, 5Fh
     856/     35D : 23                  co8:		inc	hl		; ein Zeichen zurück
     857/     35E : CD DC 03            		call	scroll
     858/     361 : 36 20               		ld	(hl), ' '	; Zeichen löschen
     859/     363 : 18 C6               		jr	co4
     860/     365 :                     
     861/     365 :                     ; Bildschirm löschen
     862/     365 : 21 FF 17            o_cls:		ld	hl, BWSANF
     863/     368 : 22 00 18            		ld	(cupos), hl	; Zwischenspeicher Kursor
     864/     36B :                     
     865/     36B :                     ; Bildschirm ab Kursorposition löschen
     866/     36B : 36 20               o_clsc:		ld	(hl), ' '
     867/     36D : 2B                  		dec	hl
     868/     36E : 7C                  		ld	a, h
     869/     36F : FE 0F               		cp	0Fh
     870/     371 : 20 F8               		jr	nz, o_clsc
     871/     373 : 18 B9               		jr	o_00
     872/     375 :                     
     873/     375 :                     ; Zeile ab Kursorposition löschen
     874/     375 : 36 20               o_clln:		ld	(hl), ' '	; aktuelles Zeichen löschen
     875/     377 : 2B                  co9:		dec	hl		; inc cupos
     876/     378 : 36 20               		ld	(hl), ' '	; nächstes  Zeichen löschen
     877/     37A : 3E 3F               		ld	a, COLS-1
     878/     37C : A5                  		and	l		; Zeilenende erreicht?
     879/     37D : 20 F8               		jr	nz, co9		; nein -> weiter
     880/     37F : 18 AD               co10:		jr	o_00
     881/     381 :                     
     882/     381 :                     ; Kursor an den Anfang der Zeile
     883/     381 : 7D                  o_sol:		ld	a, l
     884/     382 : F6 3F               		or	COLS-1		 ; setze auf Zeilenanfang
     885/     384 : 6F                  		ld	l, a
     886/     385 : 18 A4               		jr	co4
     887/     387 :                     
     888/     387 :                     ; BEL, akustisches Signal
     889/     387 : CD 72 02            o_bell:		call	beep
     890/     38A : 18 A2               		jr	o_00
     891/     38C :                     
     892/     38C :                     ; Kursor nach links
     893/     38C : 23                  o_cul:		inc	hl		; dec cupos
     894/     38D : 18 99               		jr	co3
     895/     38F :                     
     896/     38F :                     ; Kursor nach unten
     897/     38F : 11 C0 FF            o_cud:		ld	de, -COLS
     898/     392 : 19                  co11:		add	hl, de
     899/     393 : 18 93               		jr	co3
     900/     395 :                     
     901/     395 :                     ; Kursor nach oben
     902/     395 : 11 40 00            o_cuu:		ld	de, COLS
     903/     398 : 18 F8               		jr	co11
     904/     39A :                     
     905/     39A :                     ; CR, Kursor an Anfang nächster Zeile; Enter
     906/     39A : 7D                  o_cr:		ld	a, l
     907/     39B : E6 C0               		and	0C0h
     908/     39D : 6F                  		ld	l, a
     909/     39E : 18 87               		jr	o_cur
     910/     3A0 :                     
     911/     3A0 :                     ; Kursor direkt positionieren
     912/     3A0 : 3E 05               o_setc:		ld	a, 5
     913/     3A2 : 12                  		ld	(de), a		; de=poscnt Hilfsregister Kursorpositionierung (CTRL+N)
     914/     3A3 :                     		; jetzt Cursor auf BWSANF setzen (f. Berechnung in co5)
     915/     3A3 :                     
     916/     3A3 :                     ; Home, Kursor oben links
     917/     3A3 : 21 FF 17            o_home:		ld	hl, BWSANF
     918/     3A6 : 18 83               		jr	co4
     919/     3A8 :                     
     920/     3A8 :                     ; Delete;	Zeichen	löschen, Zeile rückt nach links
     921/     3A8 : 54                  o_del:		ld	d, h
     922/     3A9 : 5D                  		ld	e, l
     923/     3AA : 2B                  		dec	hl
     924/     3AB : 7D                  co12:		ld	a, l
     925/     3AC : ED A8               		ldd
     926/     3AE : E6 3F               		and	COLS-1
     927/     3B0 : 20 F9               		jr	nz, co12
     928/     3B2 : 13                  		inc	de
     929/     3B3 : 3E 20               co13:		ld	a, ' '
     930/     3B5 : 12                  		ld	(de), a
     931/     3B6 : 18 C7               		jr	co10
     932/     3B8 :                     
     933/     3B8 :                     ; Insert;	Space einfügen,	Zeile rückt nach rechts
     934/     3B8 : 7D                  o_ins:		ld	a, l
     935/     3B9 : E6 C0               		and	0C0h
     936/     3BB : 5F                  		ld	e, a
     937/     3BC : 7D                  		ld	a, l
     938/     3BD : 6B                  		ld	l, e
     939/     3BE : 54                  		ld	d, h
     940/     3BF : 23                  		inc	hl
     941/     3C0 : BB                  co14:		cp	e
     942/     3C1 : 28 F0               		jr	z, co13
     943/     3C3 : ED A0               		ldi
     944/     3C5 : 18 F9               		jr	co14
     945/     3C7 :                     
     946/     3C7 :                     ; Tabelle Steuercodes, lo-teil, hi-teil ist hi(cotab) also, 03xx !
     947/     3C7 : 2E                  cotab:		db lo(o_00)	; 00 keine Funktion
     948/     3C8 : A3                  		db lo(o_home)	; 01 Home, Kursor oben links
     949/     3C9 : 6B                  		db lo(o_clsc)	; 02 Bildschirm ab Kursorposition löschen
     950/     3CA : 75                  		db lo(o_clln)	; 03 Zeile ab Kursorposition löschen
     951/     3CB : A8                  		db lo(o_del)	; 04 Delete; Zeichen löschen, Zeile rückt nach links
     952/     3CC : B8                  		db lo(o_ins)	; 05 Insert; Space einfügen, Zeile rückt nach rechts
     953/     3CD : 81                  		db lo(o_sol)	; 06 Kursor an den Anfang der Zeile
     954/     3CE : 87                  		db lo(o_bell)	; 07 BEL, akustisches Signal
     955/     3CF : 8C                  		db lo(o_cul)	; 08 Kursor nach links
     956/     3D0 : 27                  		db lo(o_cur)	; 09 Kursor nach rechts
     957/     3D1 : 8F                  		db lo(o_cud)	; 0A Kursor nach unten
     958/     3D2 : 95                  		db lo(o_cuu)	; 0B Kursor nach oben
     959/     3D3 : 65                  		db lo(o_cls)	; 0C Bildschirm löschen
     960/     3D4 : 9A                  		db lo(o_cr)	; 0D CR, Kursor an Anfang nächster Zeile; Enter
     961/     3D5 : A0                  		db lo(o_setc)	; 0E Kursor direkt positionieren
     962/     3D6 : D7                  		db lo(o_tab)	; 0F Tabulator 8 Spalten
     963/     3D7 :                     
     964/     3D7 :                     ; Tabulator 8 Spalten
     965/     3D7 : 11 F8 FF            o_tab:		ld	de, -8
     966/     3DA : 18 B6               		jr	co11
     967/     3DC :                     
     968/     3DC :                     ; eine Zeile hochscrollen
     969/     3DC : 7C                  scroll:	ld	a, h
     970/     3DD : FE 18               		cp	hi(BWSANF)+1	; BWS-Ende?
     971/     3DF : 38 02               		jr	c, scroll1
     972/     3E1 : 26 10               		ld	h, Hi(BWSEND)
     973/     3E3 : FE 10               scroll1:	cp	Hi(BWSEND)
     974/     3E5 : D0                  		ret	nc
     975/     3E6 : 7D                  		ld	a, l
     976/     3E7 : D5                  		push	de
     977/     3E8 : C5                  		push	bc
     978/     3E9 : 21 BF 17            		ld	hl, BWSANF-COLS
     979/     3EC : 11 FF 17            		ld	de, BWSANF
     980/     3EF : 01 C0 07            		ld	bc, COLS*(LINES-1)
     981/     3F2 : ED B8               		lddr			; scrollen
     982/     3F4 : EB                  		ex	de, hl
     983/     3F5 : 23                  		inc	hl
     984/     3F6 : 2D                  scroll2:	dec	l
     985/     3F7 : 36 20               		ld	(hl), ' '
     986/     3F9 : 20 FB               		jr	nz, scroll2
     987/     3FB : E6 3F               		and	COLS-1
     988/     3FD : 6F                  		ld	l, a
     989/     3FE : C1                  		pop	bc
     990/     3FF : D1                  		pop	de
     991/     400 : C9                  		ret
     992/     401 :                     
     993/     401 :                     ;------------------------------------------------------------------------------
     994/     401 :                     ; N aaaa bbbb CRC - Prüfsumme
     995/     401 :                     ;------------------------------------------------------------------------------
     996/     401 :                     
     997/     401 : 00 09 4E 0D         		db 0,9,'N',0Dh
     998/     405 :                     
     999/     405 : =404H               crc:		equ	$-1		; vp: Adresse-1 ist ein Fehler
    1000/     405 :                     					; wird 2x angesprungen! passiert glücklicherweise nix...
    1001/     405 :                     					; da 0Dh == dec c, ohne Wirkung
    1002/     405 :                     
    1003/     405 : 2A 5B 18            n_kdo:		ld	hl, (ARG1)	; Argument 1
    1004/     408 : 11 FF FF            		ld	de, 0FFFFh
    1005/     40B : 06 80               crc1:		ld	b, 80h
    1006/     40D : CB 23               crc2:		sla	e
    1007/     40F : CB 12               		rl	d
    1008/     411 : 9F                  		sbc	a, a
    1009/     412 : AE                  		xor	(hl)
    1010/     413 : A0                  		and	b
    1011/     414 : 28 08               		jr	z, crc4
    1012/     416 : 7B                  		ld	a, e
    1013/     417 : EE 21               crc3:		xor	21h
    1014/     419 : 5F                  		ld	e, a
    1015/     41A : 7A                  		ld	a, d
    1016/     41B : EE 10               		xor	10h
    1017/     41D : 57                  		ld	d, a
    1018/     41E : CB 38               crc4:		srl	b
    1019/     420 : 30 EB               		jr	nc, crc2
    1020/     422 : ED 4B 5D 18         		ld	bc, (ARG2)	; Argument 2
    1021/     426 : AF                  		xor	a
    1022/     427 : ED 42               		sbc	hl, bc
    1023/     429 : 09                  		add	hl, bc
    1024/     42A : 23                  		inc	hl
    1025/     42B : 20 DE               		jr	nz, crc1
    1026/     42D : EB                  		ex	de, hl
    1027/     42E : DF                  		rst	18h		; PRNST
    1028/     42F : 20 43 52 43 A0      		db " CRC",0A0h
    1029/     434 : C3 9A 01            		jp	OUTHL		; Ausgabe HL hexadezimal
    1030/     437 :                     
    1031/     437 :                     ;------------------------------------------------------------------------------
    1032/     437 :                     ; F aaaa bbbb cc dd ... Finding String Hex
    1033/     437 :                     ; F aaaa bbbb 'ABC.... Finding String ASCII
    1034/     437 :                     ;------------------------------------------------------------------------------
    1035/     437 :                     
    1036/     437 : 00 09 46 0D         		db 0,9,'F',0Dh
    1037/     43B :                     
    1038/     43B : DF                  		rst	18h		; PRNST
    1039/     43C : AA                  		db '*'+80h
    1040/     43D : ED 4B 5B 18         		ld	bc, (ARG1)	; Argument 1
    1041/     441 : D5                  fkdo1:		push	de
    1042/     442 : E5                  		push	hl
    1043/     443 : 1A                  		ld	a, (de)
    1044/     444 : FE 27               		cp	27h ; '''
    1045/     446 : F5                  		push	af
    1046/     447 : 0A                  		ld	a, (bc)
    1047/     448 : 28 03               		jr	z, fkdo2	; suche Ascii
    1048/     44A :                     ; vergleiche hex-Byte
    1049/     44A : BD                  		cp	l
    1050/     44B : 18 03               		jr	fkdo3
    1051/     44D :                     ; suche Ascii
    1052/     44D : 1B                  fkdo2:		dec	de
    1053/     44E : EB                  		ex	de, hl
    1054/     44F : BE                  		cp	(hl)
    1055/     450 :                     ;
    1056/     450 : 28 0D               fkdo3:		jr	z, fkdo6
    1057/     452 : F1                  		pop	af
    1058/     453 : 03                  fkdo4:		inc	bc
    1059/     454 : A7                  		and	a
    1060/     455 : 2A 5D 18            fkdo5:		ld	hl, (ARG2)	; Argument 2
    1061/     458 : ED 42               		sbc	hl, bc
    1062/     45A : E1                  		pop	hl
    1063/     45B : D1                  		pop	de
    1064/     45C : D8                  		ret	c
    1065/     45D : 18 E2               		jr	fkdo1
    1066/     45F :                     ;		
    1067/     45F : F1                  fkdo6:		pop	af
    1068/     460 : C5                  		push	bc
    1069/     461 : 28 10               		jr	z, fkdo9
    1070/     463 : CD 72 01            fkdo7:		call	INHEX		; naechstes Suchbyte holen
    1071/     466 : 03                  		inc	bc
    1072/     467 : 0A                  		ld	a, (bc)
    1073/     468 : BD                  		cp	l
    1074/     469 : 28 F8               		jr	z, fkdo7	; solange gleich
    1075/     46B : 1A                  		ld	a, (de)
    1076/     46C : FE 20               		cp	' '		; letztes Suchbyte verglichen?
    1077/     46E : 20 0E               		jr	nz, fkdo10
    1078/     470 : C1                  fkdo8:		pop	bc
    1079/     471 : 18 E0               		jr	fkdo4
    1080/     473 : 2B                  fkdo9:		dec	hl
    1081/     474 : 03                  		inc	bc
    1082/     475 : 0A                  		ld	a, (bc)
    1083/     476 : BE                  		cp	(hl)
    1084/     477 : 28 FA               		jr	z, fkdo9
    1085/     479 : 7E                  		ld	a, (hl)
    1086/     47A : FE 20               		cp	' '
    1087/     47C : 20 F2               		jr	nz, fkdo8
    1088/     47E : E1                  fkdo10:		pop	hl
    1089/     47F : CD 89 05            		call	outhlsp		; Ausgabe HL + 4 Leerzeichen
    1090/     482 : 18 CF               		jr	fkdo4
    1091/     484 :                     
    1092/     484 : FF                  		db 0FFh
    1093/     485 : FF                  		db 0FFh
    1094/     486 :                     
    1095/     486 :                     ;------------------------------------------------------------------------------
    1096/     486 :                     ; M aaaa (bbbb) Memory
    1097/     486 :                     ;------------------------------------------------------------------------------
    1098/     486 :                     
    1099/     486 : 00 09 4D 0D         		db 0,9,'M',0Dh
    1100/     48A :                     
    1101/     48A : CD CA 04            m_kdo:		call	para		; Argumente uebergeben
    1102/     48D : 06 10               mkdo1:		ld	b, 10h
    1103/     48F : C5                  mkdo2:		push	bc
    1104/     490 : 01 00 10            		ld	bc, 1000h
    1105/     493 : DF                  		rst	18h		; PRNST
    1106/     494 : 20 23 20 BE         		db 	" # ",'>'+80h
    1107/     498 : CD 9A 01            		call	OUTHL		; Ausgabe HL hexadezimal
    1108/     49B : DF                  		rst	18h		; PRNST
    1109/     49C : A0                  		db	' '+80h
    1110/     49D : 7E                  mkdo3:		ld	a, (hl)
    1111/     49E : CD 83 01            		call	OUTHEX		; Ausgabe A hexadezimal
    1112/     4A1 : A9                  		xor	c
    1113/     4A2 : DF                  		rst	18h		; PRNST
    1114/     4A3 : A0                  		db	' '+80h
    1115/     4A4 : A7                  		and	a
    1116/     4A5 : ED 52               		sbc	hl, de
    1117/     4A7 : 19                  		add	hl, de
    1118/     4A8 : 23                  		inc	hl
    1119/     4A9 : 4F                  		ld	c, a
    1120/     4AA : 28 02               		jr	z, mkdo4
    1121/     4AC : 10 EF               		djnz	mkdo3
    1122/     4AE : DF                  mkdo4:		rst	18h		; PRNST
    1123/     4AF : 2A A0               		db 	'*',' '+80h
    1124/     4B1 : CD 83 01            		call	OUTHEX		; Ausgabe A hexadezimal
    1125/     4B4 : DF                  		rst	18h		; PRNST
    1126/     4B5 : 20 2A 8D            		db 	" *",0Dh+80h
    1127/     4B8 : C1                  		pop	bc
    1128/     4B9 : 22 5B 18            		ld	(ARG1),	hl	; Argument 1
    1129/     4BC : C8                  		ret	z
    1130/     4BD : 10 D0               		djnz	mkdo2
    1131/     4BF : CF                  		rst	8		; INCH
    1132/     4C0 : FE 0D               		cp	0Dh
    1133/     4C2 : 28 C9               		jr	z, mkdo1
    1134/     4C4 : 04                  		inc	b
    1135/     4C5 : FE 20               		cp	' '
    1136/     4C7 : 28 C6               		jr	z, mkdo2
    1137/     4C9 : C9                  		ret
    1138/     4CA :                     		
    1139/     4CA :                     ;------------------------------------------------------------------------------
    1140/     4CA :                     ; Register mit Argumenten laden, aaaa=HL, bbbb=DE, cccc=BC
    1141/     4CA :                     ;------------------------------------------------------------------------------
    1142/     4CA :                     
    1143/     4CA : 2A 5B 18            para:		ld	hl, (ARG1)	; Argument 1
    1144/     4CD : ED 5B 5D 18         		ld	de, (ARG2)	; Argument 2
    1145/     4D1 : ED 4B 5F 18         		ld	bc, (ARG3)
    1146/     4D5 : C9                  		ret
    1147/     4D6 :                     
    1148/     4D6 : FF                  		db 0FFh
    1149/     4D7 : FF                  		db 0FFh
    1150/     4D8 :                     
    1151/     4D8 :                     ;------------------------------------------------------------------------------
    1152/     4D8 :                     ; P aaaa bbbb cc Pattern
    1153/     4D8 :                     ;------------------------------------------------------------------------------
    1154/     4D8 :                     
    1155/     4D8 : 00 09 50 0D         		db 0,9,'P',0Dh
    1156/     4DC :                     
    1157/     4DC : CD CA 04            		call	para		; Argumente uebergeben
    1158/     4DF : 71                  		ld	(hl), c		; Pattern cc
    1159/     4E0 : E5                  		push	hl
    1160/     4E1 : AF                  		xor	a
    1161/     4E2 : EB                  		ex	de, hl
    1162/     4E3 : ED 52               		sbc	hl, de
    1163/     4E5 : 44                  		ld	b, h
    1164/     4E6 : 4D                  		ld	c, l
    1165/     4E7 : E1                  		pop	hl
    1166/     4E8 : 13                  		inc	de
    1167/     4E9 : ED B0               pko1:		ldir
    1168/     4EB : C9                  		ret
    1169/     4EC :                     
    1170/     4EC :                     ;------------------------------------------------------------------------------
    1171/     4EC :                     ; T aaaa bbbb cccc Transfer
    1172/     4EC :                     ;------------------------------------------------------------------------------
    1173/     4EC :                     
    1174/     4EC : 00 09 54 0D         		db 0,9,'T',0Dh
    1175/     4F0 :                     
    1176/     4F0 : CD CA 04            		call	para		; Argumente uebergeben
    1177/     4F3 : AF                  		xor	a
    1178/     4F4 : E5                  		push	hl
    1179/     4F5 : ED 52               		sbc	hl, de
    1180/     4F7 : E1                  		pop	hl
    1181/     4F8 : 30 EF               		jr	nc, pko1
    1182/     4FA : 09                  		add	hl, bc
    1183/     4FB : EB                  		ex	de, hl
    1184/     4FC : 09                  		add	hl, bc
    1185/     4FD : EB                  		ex	de, hl
    1186/     4FE : 2B                  		dec	hl
    1187/     4FF : 1B                  		dec	de
    1188/     500 : ED B8               		lddr
    1189/     502 : C9                  		ret
    1190/     503 :                     
    1191/     503 :                     ;------------------------------------------------------------------------------
    1192/     503 :                     ; A aaaa bbbb c	Arithmetik Summe, Differenz, Displ., Dezimalwert
    1193/     503 :                     ; c ist	Länge des Sprungbefehls	(für relative Sprungbefehle ist	c gleich zwei)
    1194/     503 :                     ;------------------------------------------------------------------------------
    1195/     503 :                     
    1196/     503 : 00 09 41 0D         		db 0,9,'A',0Dh
    1197/     507 :                     
    1198/     507 : CD CA 04            		call	para		; Argumente uebergeben
    1199/     50A : E5                  		push	hl
    1200/     50B : D5                  		push	de
    1201/     50C : 23                  		inc	hl
    1202/     50D : 23                  		inc	hl
    1203/     50E : EB                  		ex	de, hl
    1204/     50F : AF                  		xor	a
    1205/     510 : ED 52               		sbc	hl, de
    1206/     512 : 38 09               		jr	c, ako1
    1207/     514 : BC                  		cp	h
    1208/     515 : 20 18               		jr	nz, ako3
    1209/     517 : CB 7D               		bit	7, l
    1210/     519 : 20 14               		jr	nz, ako3
    1211/     51B : 18 08               		jr	ako2
    1212/     51D :                     ;
    1213/     51D : 2F                  ako1:		cpl
    1214/     51E : BC                  		cp	h
    1215/     51F : 20 0E               		jr	nz, ako3
    1216/     521 : CB 7D               		bit	7, l
    1217/     523 : 28 0A               		jr	z, ako3
    1218/     525 : DF                  ako2:		rst	18h		; PRNST
    1219/     526 : 44 53 50 4C BA      		db 	"DSPL",':'+80h
    1220/     52B : 7D                  		ld	a, l
    1221/     52C : CD 83 01            		call	OUTHEX		; Ausgabe A hexadezimal
    1222/     52F : D1                  ako3:		pop	de
    1223/     530 : E1                  		pop	hl
    1224/     531 : E5                  		push	hl
    1225/     532 : E5                  		push	hl
    1226/     533 : 19                  		add	hl, de		; Summe
    1227/     534 : DF                  		rst	18h		; PRNST
    1228/     535 : 20 20 20 53 55 4D   		db 	"   SUM",':'+80h
                    BA                
    1229/     53C : CD 9A 01            		call	OUTHL		; Ausgabe HL hexadezimal
    1230/     53F : E1                  		pop	hl
    1231/     540 : ED 52               		sbc	hl, de		; Differenz
    1232/     542 : DF                  		rst	18h		; PRNST
    1233/     543 : 20 20 20 44 49 46   		db 	"   DIF",':'+80h
                    BA                
    1234/     54A : CD 9A 01            		call	OUTHL		; Ausgabe HL hexadezimal
    1235/     54D : C1                  		pop	bc
    1236/     54E :                     ; Hezimalwandlung BC ->	AHL
    1237/     54E : 21 00 00            		ld	hl, 0
    1238/     551 : 5D                  		ld	e, l
    1239/     552 : 78                  ako4:		ld	a, b
    1240/     553 : B1                  		or	c
    1241/     554 : 28 0F               		jr	z, ako5
    1242/     556 : 0B                  		dec	bc
    1243/     557 : 7D                  		ld	a, l
    1244/     558 : 3C                  		inc	a
    1245/     559 : 27                  		daa
    1246/     55A : 6F                  		ld	l, a
    1247/     55B : 7C                  		ld	a, h
    1248/     55C : CE 00               		adc	a, 0
    1249/     55E : 27                  		daa
    1250/     55F : 67                  		ld	h, a
    1251/     560 : 30 F0               		jr	nc, ako4
    1252/     562 : 1C                  		inc	e
    1253/     563 : 18 ED               		jr	ako4
    1254/     565 :                     ;		
    1255/     565 : DF                  ako5:		rst	18h		; PRNST
    1256/     566 : 20 20 20 44 45 43   		db "   DEC",':'+80h
                    BA                
    1257/     56D : 7B                  		ld	a, e
    1258/     56E : E6 0F               		and	0Fh
    1259/     570 : F6 30               		or	30h ; '0'	; 5. Stelle (max 6)
    1260/     572 : D7                  		rst	10h		; OUTCH
    1261/     573 : CD 9A 01            		call	OUTHL		; Ausgabe HL hexadezimal
    1262/     576 : DF                  		rst	18h		; PRNST
    1263/     577 : 8D                  		db	0Dh+80h
    1264/     578 : C9                  		ret
    1265/     579 :                     
    1266/     579 :                     ;------------------------------------------------------------------------------
    1267/     579 :                     ; Registeranzeige und -Modifikation
    1268/     579 :                     ;------------------------------------------------------------------------------
    1269/     579 :                     
    1270/     579 : 4F                  flags:		ld	c, a
    1271/     57A : 21 BE 05            		ld	hl, flagtab	; Liste	der Flag-Kürzel
    1272/     57D : 06 08               		ld	b, 8		; 8 Bit
    1273/     57F : CB 01               flags1:		rlc	c
    1274/     581 : 30 02               		jr	nc, flags2	; wenn Flag gesetzt
    1275/     583 : 7E                  		ld	a, (hl)		; dann dessen Kürzel ausgeben
    1276/     584 : D7                  		rst	10h		; OUTCH
    1277/     585 : 23                  flags2:		inc	hl
    1278/     586 : 10 F7               		djnz	flags1
    1279/     588 : C9                  		ret
    1280/     589 :                     
    1281/     589 :                     ; Ausgabe HL + 4 Leerzeichen
    1282/     589 : CD 9A 01            outhlsp:	call	OUTHL		; Ausgabe HL hexadezimal
    1283/     58C : DF                  out4sp:		rst	18h		; PRNST
    1284/     58D : 20 20 20 A0         		db "   ",' ' +80h
    1285/     591 : C9                  		ret
    1286/     592 :                     
    1287/     592 :                     ; Kürzel f. Register-Edit
    1288/     592 : 41 42 44 48         regtab1:	db  'A','B','D','H'
    1289/     596 : 58 59 43 50         		db  'X','Y','C','P'
    1290/     59A :                     
    1291/     59A :                     ; Registeranzeige. Reihenfolge der Register entspricht der RSA (absteigend)!
    1292/     59A : 20 20 20 20         regtab2:	db "    "
    1293/     59E : 53 50               		db "SP"
    1294/     5A0 : 50 43               		db "PC"
    1295/     5A2 : 49 59               		db "IY"
    1296/     5A4 : 49 58               		db "IX"
    1297/     5A6 :                     		;
    1298/     5A6 : 4D 41 49 4E         		db "MAIN"
    1299/     5AA : 48 4C               regtab3:	db "HL"
    1300/     5AC : 44 45               		db "DE"
    1301/     5AE : 42 43               		db "BC"
    1302/     5B0 : 41 46               		db "AF"
    1303/     5B2 :                     		;
    1304/     5B2 : 45 58 58 52         		db "EXXR"
    1305/     5B6 : 48 4C               		db "HL"
    1306/     5B8 : 44 45               		db "DE"
    1307/     5BA : 42 43               		db "BC"
    1308/     5BC : 41 46               		db "AF"
    1309/     5BE :                     
    1310/     5BE :                     ; Liste	der Flag-Kürzel
    1311/     5BE : 53 5A 00 48 00 50   flagtab:	db  'S', 'Z', 0, 'H', 0, 'P', 'N', 'C'
                    4E 43             
    1312/     5C6 :                     
    1313/     5C6 :                     ;------------------------------------------------------------------------------
    1314/     5C6 :                     ;R XX	Register Registerinhalt verändern
    1315/     5C6 :                     ;R:	Registerinhalte	anzeigen
    1316/     5C6 :                     
    1317/     5C6 :                     ;  BP:FFFF    BS:FFFFFF
    1318/     5C6 :                     ;        SP:FFFF    PC:FFFF    IY:FFFF    IX:FFFF
    1319/     5C6 :                     ;  MAIN  HL:FFFF    DE:FFFF    BC:FFFF    AF:FFFF
    1320/     5C6 :                     ;  EXXR  HL:FFFF    DE:FFFF    BC:FFFF    AF:FFFF
    1321/     5C6 :                     ;  FLAGS:  SZHPNC  (SZHPNC)
    1322/     5C6 :                     ;------------------------------------------------------------------------------
    1323/     5C6 :                     
    1324/     5C6 : 00 09 52 0D         		db 0,9,'R',0Dh
    1325/     5CA :                     
    1326/     5CA : FE 3A               		cp	':'
    1327/     5CC : 20 6F               		jr	nz, rko1
    1328/     5CE :                     ; Register anzeigen
    1329/     5CE :                     rka1:		; BP
    1330/     5CE : DF                  		rst	18h		; PRNST
    1331/     5CF : 20 20 42 50 BA      		db	 "  BP",':'+80h
    1332/     5D4 : 2A 79 18            		ld	hl, (BPADR)
    1333/     5D7 : CD 89 05            		call	outhlsp		; Ausgabe HL + 4 Leerzeichen
    1334/     5DA :                     		; BS
    1335/     5DA : DF                  		rst	18h		; PRNST
    1336/     5DB : 42 53 BA            		db 	"BS",':'+80h
    1337/     5DE : 21 7B 18            		ld	hl, BPOPC	; RSA: Breakpointsequenz
    1338/     5E1 : 06 03               		ld	b, 3		; 3 Byte Code
    1339/     5E3 : 7E                  rka2:		ld	a, (hl)
    1340/     5E4 : CD 83 01            		call	OUTHEX		; Ausgabe A hexadezimal
    1341/     5E7 : 23                  		inc	hl
    1342/     5E8 : 10 F9               		djnz	rka2
    1343/     5EA :                     		; 3 Zeilen a 4 Doppel-Register
    1344/     5EA : 0E 03               		ld	c, 3		; 3 Zeilen
    1345/     5EC : 11 9A 05            		ld	de, regtab2	; "    "
    1346/     5EF : DD 21 78 18         rka3:		ld	ix, REGSP+1	; Werte, lo-Byte von REGSP
    1347/     5F3 : DF                  rka4:		rst	18h		; PRNST
    1348/     5F4 : 0D 20 A0            		db 	0Dh,' ',' '+80h
    1349/     5F7 :                     		; 4 Zeichen Zeilenbezeichnung
    1350/     5F7 : 06 04               		ld	b, 4
    1351/     5F9 : 1A                  rka5:		ld	a, (de)
    1352/     5FA : D7                  		rst	10h		; OUTCH
    1353/     5FB : 13                  		inc	de
    1354/     5FC : 10 FB               		djnz	rka5
    1355/     5FE : DF                  		rst	18h		; PRNST
    1356/     5FF : 20 A0               		db 	' ',' '+80h
    1357/     601 :                     		; 4 Doppelregister
    1358/     601 : 06 04               		ld	b, 4
    1359/     603 : 1A                  rka6:		ld	a, (de)		; 1. Buchstabe
    1360/     604 : D7                  		rst	10h		; OUTCH
    1361/     605 : 13                  		inc	de
    1362/     606 : 1A                  		ld	a, (de)		; 2. Buchstabe	
    1363/     607 : D7                  		rst	10h		; OUTCH
    1364/     608 : 13                  		inc	de
    1365/     609 : DF                  		rst	18h		; PRNST
    1366/     60A : BA                  		db 	':'+80h
    1367/     60B : DD 66 00            rka7:		ld	h, (ix+0)	; Registerinhalte
    1368/     60E : DD 2B               		dec	ix
    1369/     610 : DD 6E 00            		ld	l, (ix+0)
    1370/     613 : DD 2B               		dec	ix
    1371/     615 : CD 89 05            		call	outhlsp		; Ausgabe HL + 4 Leerzeichen
    1372/     618 : 10 E9               		djnz	rka6
    1373/     61A :                     		;
    1374/     61A : 0D                  		dec	c
    1375/     61B : 20 D6               		jr	nz, rka4
    1376/     61D :                     		; und noch die Flags
    1377/     61D : DF                  		rst	18h		; PRNST
    1378/     61E : 0D 20 20 46 4C 41   		db 	0Dh,"  FLAGS: ",' '+80h
                    47 53 3A 20 A0    
    1379/     629 : 3A 69 18            		ld	a, (REGAF)
    1380/     62C : CD 79 05            		call	flags		; Flags auswerten und anzeigen
    1381/     62F : DF                  		rst	18h		; PRNST
    1382/     630 : 20 20 A8            		db 	"  ",'('+80h
    1383/     633 : 3A 61 18            		ld	a, (REGAFX)
    1384/     636 : CD 79 05            		call	flags		; Flags auswerten und anzeigen
    1385/     639 : DF                  		rst	18h		; PRNST
    1386/     63A : 29 8D               		db 	')',0Dh+80h
    1387/     63C : C9                  		ret
    1388/     63D :                     
    1389/     63D :                     ; Register ändern
    1390/     63D : 2A 1A 18            rko1:		ld	hl, (soil)	; HL zeigt auf Zeichen nach 'R'
    1391/     640 : 2B                  		dec	hl		; 2 Zeichen vor ('R')
    1392/     641 : 2B                  		dec	hl		; Leerzeichen
    1393/     642 : 7E                  		ld	a, (hl)		; Registername 1. Buchstabe
    1394/     643 : E5                  		push	hl
    1395/     644 : 21 92 05            		ld	hl, regtab1
    1396/     647 : 06 04               		ld	b, 4
    1397/     649 : 11 69 18            		ld	de, REGAF	; Registerinhalte in RSA
    1398/     64C : BE                  rko2:		cp	(hl)		; suche 'A','B','D','H'
    1399/     64D : 28 16               		jr	z, rko4		; wenn gefunden
    1400/     64F : 13                  		inc	de		; RSA-Pointer erhöhen (2 Byte)
    1401/     650 : 13                  		inc	de
    1402/     651 : 23                  		inc	hl
    1403/     652 : 10 F8               		djnz	rko2		; weiter vergleichen
    1404/     654 :                     		;
    1405/     654 : C1                  		pop	bc		; bc=Registername 1. Buchstabe
    1406/     655 : 0B                  		dec	bc		; 1 Zeichen vor
    1407/     656 : 0A                  		ld	a, (bc)		; Registername 2. Buchstabe
    1408/     657 : 06 04               		ld	b, 4
    1409/     659 : BE                  rko3:		cp	(hl)		; suche 'X','Y','C','P'
    1410/     65A : 28 17               		jr	z, rko6		; wenn gefunden
    1411/     65C : 13                  		inc	de		; RSA-Pointer erhöhen (2 Byte)
    1412/     65D : 13                  		inc	de
    1413/     65E : 23                  		inc	hl
    1414/     65F : 10 F8               		djnz	rko3		; weiter vergleichen
    1415/     661 :                     		;
    1416/     661 : C3 CE 05            		jp	rka1		; Register anzeigen
    1417/     664 :                     
    1418/     664 : FF                  		db 0FFh
    1419/     665 :                     
    1420/     665 :                     ; Registerwert ändern AF..HL [']
    1421/     665 : E1                  rko4:		pop	hl
    1422/     666 : 2B                  		dec	hl
    1423/     667 : 2B                  		dec	hl
    1424/     668 : 7E                  		ld	a, (hl)		; folgt noch ein ' ?
    1425/     669 : EB                  		ex	de, hl		; (Zweitregistersatz)
    1426/     66A : FE 27               		cp	27h ; '''
    1427/     66C : 20 04               		jr	nz, rko5	; nein
    1428/     66E : 11 F8 FF            		ld	de, -8		; ja, dann in RSA auf 
    1429/     671 : 19                  		add	hl, de		; Zweitregistersatz gehen
    1430/     672 : EB                  rko5:		ex	de, hl
    1431/     673 :                     ; Registerwert ändern IX..SP
    1432/     673 : 1A                  rko6:		ld	a, (de)
    1433/     674 : 6F                  		ld	l, a
    1434/     675 : 13                  		inc	de
    1435/     676 : 1A                  		ld	a, (de)
    1436/     677 : 67                  		ld	h, a		; HL=aktueller Registerwert
    1437/     678 : DF                  		rst	18h		; PRNST
    1438/     679 : 20 A0               		db 	' ',' '+80h
    1439/     67B : CD 9A 01            		call	OUTHL		; Ausgabe HL hexadezimal
    1440/     67E :                     ;Eingabe neuer Wert
    1441/     67E : CD 28 01            rko7:		call	INLINE		; Zeile	  eingeben
    1442/     681 : 2A 1A 18            		ld	hl, (soil)	; Zwischenspeicher "Inline"
    1443/     684 : EB                  		ex	de, hl
    1444/     685 : E5                  		push	hl
    1445/     686 : D5                  		push	de
    1446/     687 : CD 72 01            		call	INHEX		; HL=neuer Wert
    1447/     68A : EB                  		ex	de, hl
    1448/     68B : E1                  		pop	hl
    1449/     68C : 7E                  		ld	a, (hl)
    1450/     68D : E1                  		pop	hl
    1451/     68E : FE 20               		cp	' '		; wurde was eingegeben?
    1452/     690 : C8                  		ret	z		; wenn keine Eingabe
    1453/     691 : 72                  		ld	(hl), d		; sonst Wert
    1454/     692 : 2B                  		dec	hl
    1455/     693 : 73                  		ld	(hl), e		; übernehmen
    1456/     694 : C9                  		ret
    1457/     695 :                     
    1458/     695 :                     ;------------------------------------------------------------------------------
    1459/     695 :                     ; C aaaa bbbb cccc Compare
    1460/     695 :                     ;------------------------------------------------------------------------------
    1461/     695 :                     
    1462/     695 : 00 09 43 0D         		db 0,9,'C',0Dh
    1463/     699 :                     
    1464/     699 : CD CA 04            		call	para		; Argumente uebergeben
    1465/     69C : 1A                  cko1:		ld	a, (de)		; bbbb
    1466/     69D : BE                  		cp	(hl)		; vergleich mit aaaa
    1467/     69E : 28 1F               		jr	z, cko2		; weiter wenn gleich
    1468/     6A0 :                     		; Differenz anzeigen
    1469/     6A0 :                     		; "a-Adr. Wert b-Adr. Wert"
    1470/     6A0 : DF                  		rst	18h		; PRNST
    1471/     6A1 : 20 A0               		db 	' ',' '+80h
    1472/     6A3 : CD 89 05            		call	outhlsp		; Ausgabe HL + 4 Leerzeichen aaaa
    1473/     6A6 : 7E                  		ld	a, (hl)
    1474/     6A7 : CD 83 01            		call	OUTHEX		; Ausgabe A hexadezimal Wert
    1475/     6AA : CD 8C 05            		call	out4sp		; Ausgabe Leerzeichen
    1476/     6AD : CD 8C 05            		call	out4sp		; Ausgabe Leerzeichen
    1477/     6B0 : EB                  		ex	de, hl
    1478/     6B1 : CD 89 05            		call	outhlsp		; Ausgabe HL + 4 Leerzeichen bbbb
    1479/     6B4 : EB                  		ex	de, hl
    1480/     6B5 : 1A                  		ld	a, (de)
    1481/     6B6 : CD 83 01            		call	OUTHEX		; Ausgabe A hexadezimal  wert 
    1482/     6B9 : DF                  		rst	18h		; PRNST
    1483/     6BA : 8D                  		db 	0Dh+80h
    1484/     6BB : CF                  		rst	8		; INCH
    1485/     6BC : FE 0D               		cp	0Dh
    1486/     6BE : C0                  		ret	nz
    1487/     6BF : 0B                  cko2:		dec	bc		; Anzahl cccc
    1488/     6C0 : 23                  		inc	hl		; Adressen erhöhen
    1489/     6C1 : 13                  		inc	de
    1490/     6C2 : 78                  		ld	a, b		; Anzahl cccc abgearbeitet?
    1491/     6C3 : B1                  		or	c
    1492/     6C4 : C8                  		ret	z		; dann Ende
    1493/     6C5 : 18 D5               		jr	cko1		; sonst weiter vergleichen
    1494/     6C7 :                     
    1495/     6C7 :                     ;------------------------------------------------------------------------------
    1496/     6C7 :                     ; B aaaa Breakpoint
    1497/     6C7 :                     ; Setzen eines Softwarehaltepunktes auf Adresse aaaa. 
    1498/     6C7 :                     ; Hinweis: Der Breakpoint wird erst bei j_kdo geladen!
    1499/     6C7 :                     ;------------------------------------------------------------------------------
    1500/     6C7 :                     
    1501/     6C7 : 00 09 42 0D         		db 0,9,'B',0Dh
    1502/     6CB :                     
    1503/     6CB : 2A 5B 18            		ld	hl, (ARG1)	; Argument 1
    1504/     6CE : 22 79 18            bko1:		ld	(BPADR), hl
    1505/     6D1 : 11 7B 18            		ld	de, BPOPC	; RSA: Breakpointsequenz
    1506/     6D4 : 01 03 00            		ld	bc, 3		; 3 Byte sichern
    1507/     6D7 : ED B0               		ldir
    1508/     6D9 : 21 43 07            		ld	hl, loc_743	; Breakpoint-Routine
    1509/     6DC : 22 15 18            		ld	(jp_rst38+1), hl	; Eintragen bei RST 38
    1510/     6DF : C9                  		ret
    1511/     6E0 :                     
    1512/     6E0 :                     ;------------------------------------------------------------------------------
    1513/     6E0 :                     ; G Go on
    1514/     6E0 :                     ; Start eines Programms ab Adresse PC, Siehe Befehl 'J'.
    1515/     6E0 :                     ;------------------------------------------------------------------------------
    1516/     6E0 :                     
    1517/     6E0 : 00 09 47 0D         		db 0,9,'G',0Dh
    1518/     6E4 :                     
    1519/     6E4 : 2A 75 18            g_kdo:		ld	hl, (REGPC)
    1520/     6E7 : 22 5B 18            		ld	(ARG1),	hl	; Argument 1
    1521/     6EA :                     
    1522/     6EA :                     ;vp: hier fehlt eigentlich ein jr j_kdo
    1523/     6EA :                     ;die nachfolgende Kommandokennung wird dekodiert als 
    1524/     6EA :                     ;	nop
    1525/     6EA :                     ;	add     hl, bc
    1526/     6EA :                     ;	ld      c, d
    1527/     6EA :                     ;	dec     c
    1528/     6EA :                     ;das bringt zum Glueck das Programm nicht durcheinander
    1529/     6EA :                     
    1530/     6EA :                     ;------------------------------------------------------------------------------
    1531/     6EA :                     ; J aaaa 	Jump
    1532/     6EA :                     ;------------------------------------------------------------------------------
    1533/     6EA :                     
    1534/     6EA : 00 09 4A 0D         		db 0,9,'J',0Dh		
    1535/     6EE :                     
    1536/     6EE : 3A 15 18            j_kdo:		ld	a, (jp_rst38+1)	; Routine bei RST 38
    1537/     6F1 : FE 40               		cp	lo(rst38)
    1538/     6F3 : 28 05               		jr	z, jko1
    1539/     6F5 : 2A 79 18            		ld	hl, (BPADR)
    1540/     6F8 : 36 FF               		ld	(hl), 0FFh	; RST 38-Befehl eintragen
    1541/     6FA :                     		; Test auf genügend freien RAM ab SP
    1542/     6FA : 2A 77 18            jko1:		ld	hl, (REGSP)
    1543/     6FD : 06 0A               		ld	b, 10		; 10 Byte RAM?
    1544/     6FF : 2B                  		dec	hl
    1545/     700 : 7E                  jko2:		ld	a, (hl)
    1546/     701 : 2F                  		cpl
    1547/     702 : 77                  		ld	(hl), a
    1548/     703 : BE                  		cp	(hl)
    1549/     704 : 20 08               		jr	nz, jko3
    1550/     706 : 2F                  		cpl
    1551/     707 : 77                  		ld	(hl), a
    1552/     708 : 10 F6               		djnz	jko2
    1553/     70A : 2A 77 18            		ld	hl, (REGSP)
    1554/     70D : DD                  		db 0DDh			; nachfolgenden	Befehl übergehen, deuten als ld	ix, xxx
    1555/     70E : 21 00 19            jko3:		ld	hl, 1900h	; wenn kein RAM, dann Adr. 18FFh..18F0h nutzen
    1556/     711 : F9                  		ld	sp, hl
    1557/     712 : 2A 5B 18            		ld	hl, (ARG1)	; Argument 1
    1558/     715 : 22 75 18            		ld	(REGPC), hl
    1559/     718 : E5                  		push	hl
    1560/     719 : C3 BC 01            		jp	REGH		; Register aus Registerrettebereich holen
    1561/     71C :                     
    1562/     71C :                     ;------------------------------------------------------------------------------
    1563/     71C :                     ; E aaaa ; E Einzelschritt
    1564/     71C :                     ;------------------------------------------------------------------------------
    1565/     71C :                     
    1566/     71C : 00 09 45 0D         		db 0,9,'E',0Dh
    1567/     720 :                     
    1568/     720 : 1A                  		ld	a, (de)
    1569/     721 : FE 3A               		cp	':'
    1570/     723 : 28 06               		jr	z, eko2
    1571/     725 :                     ;		
    1572/     725 : 2A 5B 18            		ld	hl, (ARG1)	; Argument 1, aaaa
    1573/     728 : 22 75 18            eko1:		ld	(REGPC), hl
    1574/     72B : ED 7B 77 18         eko2:		ld	sp, (REGSP)
    1575/     72F : 2A 75 18            		ld	hl, (REGPC)
    1576/     732 : E5                  		push	hl		; Adr. auf Stack
    1577/     733 : CD BC 01            		call	REGH		; Register aus Registerrettebereich holen
    1578/     736 : F5                  		push	af
    1579/     737 : 3E 87               		ld	a, 87h
    1580/     739 : D3 00               		out	(CTC0), a	; EI,Zeitgeber,Vorteiler 16,ZK folgt
    1581/     73B : 3E 02               		ld	a, 2
    1582/     73D : D3 00               		out	(CTC0), a	; ZK
    1583/     73F : FB                  		ei
    1584/     740 : 0A                  		ld	a, (bc)
    1585/     741 : F1                  		pop	af
    1586/     742 : C9                  		ret			; aaaa anspringen
    1587/     743 :                     
    1588/     743 :                     ;------------------------------------------------------------------------------
    1589/     743 :                     ; wird bei Breakpoint aufgerufen (via RST 38)
    1590/     743 :                     ;------------------------------------------------------------------------------
    1591/     743 :                     
    1592/     743 : CD A5 01            loc_743:	call	REGA		; CPU-Register ausräumen nach RSA
    1593/     746 : 2A 35 02            		ld	hl, (loc_235)	; wieder BREAK eintragen, Std. Routine RST 38
    1594/     749 :                     					; vp: müsste daher eigentlich loc_235+1 sein !!!
    1595/     749 : 22 15 18            		ld	(jp_rst38+1), hl	; Eintragen bei RST 38
    1596/     74C : E1                  		pop	hl
    1597/     74D : 2B                  		dec	hl
    1598/     74E : 3A 7B 18            		ld	a, (BPOPC)	; RSA: Breakpointsequenz
    1599/     751 : 77                  		ld	(hl), a		; Code-Byte restaurieren
    1600/     752 : ED 73 77 18         		ld	(REGSP), sp
    1601/     756 : 18 D0               		jr	eko1		; Code weiter ausführen
    1602/     758 :                     
    1603/     758 : FF                  		db 0FFh
    1604/     759 : FF                  		db 0FFh
    1605/     75A : FF                  		db 0FFh
    1606/     75B :                     
    1607/     75B :                     ;------------------------------------------------------------------------------
    1608/     75B :                     ; Interrupt-Routine CTC Kanal CTC0
    1609/     75B :                     ; wird bei Einzelschrittbetrieb 'E' aufgerufen, wenn der nächste Befehl erreicht ist
    1610/     75B :                     ;------------------------------------------------------------------------------
    1611/     75B :                     ; z.B.
    1612/     75B :                     ; 0637 79             HL:0000 DE:0000 BC:0000 AF:0078 F:ZH
    1613/     75B :                     ; 0638 05             HL:0000 DE:0000 BC:FF00 AF:00BA F:SHN      
    1614/     75B :                     ;------------------------------------------------------------------------------
    1615/     75B :                     
    1616/     75B :                     
    1617/     75B : CD A5 01            step:		call	REGA		; Register sichern
    1618/     75E : D1                  		pop	de		; Adr. nach "RST 38"
    1619/     75F : ED 73 77 18         		ld	(REGSP), sp
    1620/     763 : 2A 75 18            		ld	hl, (REGPC)	; voherige Adr. merken
    1621/     766 : ED 53 75 18         		ld	(REGPC), de
    1622/     76A : 31 56 18            		ld	sp, SYSSK	; Stack
    1623/     76D : DF                  		rst	18h		; PRNST
    1624/     76E : 06 A0               		db 	6,' '+80h	; and zeilenanfang, überschreibt damit 
    1625/     770 :                     					; aktuelle Anzeige
    1626/     770 : CD 9A 01            		call	OUTHL		; Ausgabe HL hexadezimal PC aktuelle Adr.
    1627/     773 :                     		; max 5 Code-Bytes anzeigen
    1628/     773 : 06 05               		ld	b, 5		
    1629/     775 : DF                  step1:		rst	18h		; PRNST
    1630/     776 : A0                  		db	' '+80h		; Leerzeichen
    1631/     777 : E5                  		push	hl
    1632/     778 : AF                  		xor	a
    1633/     779 : ED 52               		sbc	hl, de
    1634/     77B : E1                  		pop	hl
    1635/     77C : 28 07               		jr	z, step3	; wenn aktuelle Adresse erreicht
    1636/     77E :                     					; nichts mehr anzeigen
    1637/     77E : 7E                  step2:		ld	a, (hl)		; sonst Codebyte
    1638/     77F : 23                  		inc	hl
    1639/     780 : CD 83 01            		call	OUTHEX		; Ausgabe
    1640/     783 : 18 08               		jr	step4		; weiter
    1641/     785 : 3E 05               step3:		ld	a, 5		; Spezialfall 5 Bytes
    1642/     787 : B8                  		cp	b
    1643/     788 : 28 F4               		jr	z, step2	; ja -> trotzdem 5 Bytes anzeigen
    1644/     78A : DF                  		rst	18h		; PRNST
    1645/     78B : 20 A0               		db ' ',' '+80h		; sonst 2 Leerzeichen statt Byte
    1646/     78D : 10 E6               step4:		djnz	step1
    1647/     78F :                     		; die 4 Doppelregister HL .. AF ausgeben
    1648/     78F : 06 04               		ld	b, 4		
    1649/     791 : 11 AA 05            		ld	de, regtab3	; ab "HL"
    1650/     794 : 21 70 18            		ld	hl, REGHL+1	; Registerinhalte, lo-Byte
    1651/     797 : DF                  step5:		rst	18h		; PRNST
    1652/     798 : A0                  		db	' '+80h
    1653/     799 : 1A                  		ld	a, (de)		; Registername 1. Zeichen
    1654/     79A : D7                  		rst	10h		; OUTCH
    1655/     79B : 13                  		inc	de
    1656/     79C : 1A                  		ld	a, (de)		; Registername 2. Zeichen
    1657/     79D : D7                  		rst	10h		; OUTCH
    1658/     79E : 13                  		inc	de
    1659/     79F : DF                  		rst	18h		; PRNST
    1660/     7A0 : BA                  		db 	':' + 80h
    1661/     7A1 : 7E                  		ld	a, (hl)
    1662/     7A2 : 2B                  		dec	hl
    1663/     7A3 : E5                  		push	hl
    1664/     7A4 : 6E                  		ld	l, (hl)
    1665/     7A5 : 67                  		ld	h, a		; Registerwert
    1666/     7A6 : CD 9A 01            		call	OUTHL		; Ausgabe HL hexadezimal
    1667/     7A9 : E1                  		pop	hl
    1668/     7AA : 2B                  		dec	hl
    1669/     7AB : 10 EA               		djnz	step5		; weiter
    1670/     7AD :                     		; Flags anzeigen
    1671/     7AD : DF                  		rst	18h		; PRNST
    1672/     7AE : 20 46 BA            		db " F",':'+80h
    1673/     7B1 : 3A 69 18            		ld	a, (REGAF)
    1674/     7B4 : CD 79 05            		call	flags		; Flags anzeigen
    1675/     7B7 :                     		; Zeilenende
    1676/     7B7 : DF                  		rst	18h		; PRNST
    1677/     7B8 : 0D A0               		db 0Dh,' '+80h
    1678/     7BA :                     		; aktuelle Ad. in neuer Zeile anzeigen
    1679/     7BA : 2A 75 18            		ld	hl, (REGPC)
    1680/     7BD : CD 9A 01            		call	OUTHL		; Ausgabe HL hexadezimal
    1681/     7C0 :                     		; 5 Codebytes anzeigen
    1682/     7C0 : 06 05               		ld	b, 5
    1683/     7C2 : DF                  step6:		rst	18h		; PRNST
    1684/     7C3 : A0                  		db	' '+80h
    1685/     7C4 : 7E                  		ld	a, (hl)
    1686/     7C5 : 23                  		inc	hl
    1687/     7C6 : CD 83 01            		call	OUTHEX		; Ausgabe A hexadezimal
    1688/     7C9 : 10 F7               		djnz	step6
    1689/     7CB : 3E 03               		ld	a, 3		; DI, Reset
    1690/     7CD : D3 00               		out	(CTC0), a
    1691/     7CF :                     ; interaktiv
    1692/     7CF : D7                  step7:		rst	10h		; OUTCH
    1693/     7D0 : CF                  step8:		rst	8		; INCH
    1694/     7D1 : 21 E4 06            		ld	hl, g_kdo
    1695/     7D4 : FE 47               		cp	'G'		; 'G' Go?
    1696/     7D6 : 28 2C               		jr	z, stepend	; -> G
    1697/     7D8 : 21 2B 07            		ld	hl, eko2
    1698/     7DB : FE 0D               		cp	0Dh		; CR?
    1699/     7DD : 28 25               		jr	z, stepend	; -> E, nächster Step
    1700/     7DF : FE 20               		cp	' '
    1701/     7E1 : 38 EC               		jr	c, step7	; sonstige Steuerzeichen ignorieren
    1702/     7E3 :                     		;
    1703/     7E3 : 21 DE 01            		ld	hl, kdo1	; Kommandoschleife
    1704/     7E6 : 18 18               		jr	step9		; Sprungverteiler übergehen
    1705/     7E8 :                     
    1706/     7E8 :                     ; Einschub
    1707/     7E8 :                     ;------------------------------------------------------------------------------
    1708/     7E8 :                     ; Sprungverteiler
    1709/     7E8 :                     ; an dieser festen Adr. zur Kompatibilität mit Ur-AC1
    1710/     7E8 :                     ; (Ende 2K-EPROM)
    1711/     7E8 :                     ;------------------------------------------------------------------------------
    1712/     7E8 :                     
    1713/     7E8 :                     		org	07E8h
    1714/     7E8 :                     
    1715/     7E8 : C3 FF FF            		jp	0FFFFh		; Reserve
    1716/     7EB : C3 1D 01            		jp	MS30		; ca. 30 ms warten
    1717/     7EE : C3 83 01            		jp	OUTHEX		; Ausgabe A hexadezimal
    1718/     7F1 : C3 9A 01            		jp	OUTHL		; Ausgabe HL hexadezimal
    1719/     7F4 : C3 28 01            		jp	INLINE		; Zeile	  eingeben
    1720/     7F7 : C3 72 01            		jp	INHEX
    1721/     7FA : C3 4D 0D            		jp	TASTE
    1722/     7FD : C3 DE 01            		jp	GETCO1		; Kommandoschleife
    1723/     800 :                     
    1724/     800 :                     ;------------------------------------------------------------------------------
    1725/     800 :                     ; weiter mit CTC-ISR
    1726/     800 :                     ;------------------------------------------------------------------------------
    1727/     800 :                     
    1728/     800 : FE 51               step9:		cp	'Q'		; 'Q' Quit?
    1729/     802 : 20 03               		jr	nz, step10	; ja, Ende Schrittbetrieb
    1730/     804 : E5                  stepend:	push	hl
    1731/     805 : ED 4D               		reti
    1732/     807 :                     ; 
    1733/     807 : FE 42               step10:		cp	'B'		; 'B' Breakpoint?
    1734/     809 : 20 18               		jr	nz, step11
    1735/     80B :                     		; Breakpoint
    1736/     80B : DF                  		rst	18h		; PRNST
    1737/     80C : 20 42 D0            		db " B",'P'+80h
    1738/     80F : CD 28 01            		call	INLINE		; Zeile	  eingeben
    1739/     812 : 2A 1A 18            		ld	hl, (soil)	; Zwischenspeicher "Inline"
    1740/     815 : 7E                  		ld	a, (hl)
    1741/     816 : FE 20               		cp	' '
    1742/     818 : 28 B6               		jr	z, step8
    1743/     81A : EB                  		ex	de, hl
    1744/     81B : CD 72 01            		call	INHEX		; Eingabe Breakpointadr.
    1745/     81E : CD CE 06            		call	bko1		; Breakpoint setzen
    1746/     821 : 18 AD               		jr	step8
    1747/     823 :                     ;		
    1748/     823 : FE 52               step11:		cp	'R'		; 'R' Register show/edit
    1749/     825 : CC 28 01            		call	z, INLINE	; Zeile	  eingeben
    1750/     828 : CC 3D 06            		call	z, rko1
    1751/     82B : 18 A3               		jr	step8		; weiter in Bearbeitungsschleife
    1752/     82D :                     
    1753/     82D :                     ;------------------------------------------------------------------------------
    1754/     82D :                     ; > ändert beliebige Anzahl von Byte ab Adresse
    1755/     82D :                     ;------------------------------------------------------------------------------
    1756/     82D :                     
    1757/     82D : 00 09 3E 0D         		db 0,9,'>',0Dh
    1758/     831 :                     
    1759/     831 : ED 5B 1A 18         gt_kdo:		ld	de, (soil)	; Zwischenspeicher "Inline"
    1760/     835 : 1B                  		dec	de
    1761/     836 : CD 72 01            		call	INHEX
    1762/     839 : 20 04               		jr	nz, gtko1
    1763/     83B : 1A                  		ld	a, (de)
    1764/     83C : FE 20               		cp	' '
    1765/     83E : C0                  		ret	nz
    1766/     83F : E5                  gtko1:		push	hl
    1767/     840 : CD 72 01            		call	INHEX
    1768/     843 : 20 05               		jr	nz, gtko2
    1769/     845 : 1A                  		ld	a, (de)
    1770/     846 : FE 20               		cp	' '
    1771/     848 : 20 0B               		jr	nz, gtko3
    1772/     84A : 7D                  gtko2:		ld	a, l
    1773/     84B : E1                  		pop	hl
    1774/     84C : 77                  		ld	(hl), a
    1775/     84D : BE                  		cp	(hl)
    1776/     84E : 23                  		inc	hl
    1777/     84F : 28 EE               		jr	z, gtko1
    1778/     851 : 0E 00               		ld	c, 0
    1779/     853 : 18 EA               		jr	gtko1
    1780/     855 :                     ;
    1781/     855 : DF                  gtko3:		rst	18h		; PRNST
    1782/     856 : 8B                  		db 8Bh
    1783/     857 : FE 2A               		cp	'*'
    1784/     859 : 79                  		ld	a, c
    1785/     85A : 11 10 00            		ld	de, 10h
    1786/     85D : 28 02               		jr	z, gtko4
    1787/     85F : 1E 08               		ld	e, 8
    1788/     861 : 2A 5B 18            gtko4:		ld	hl, (ARG1)	; Argument 1
    1789/     864 : C1                  		pop	bc
    1790/     865 : 19                  gtko5:		add	hl, de
    1791/     866 : A7                  		and	a
    1792/     867 : ED 42               		sbc	hl, bc
    1793/     869 : 09                  		add	hl, bc
    1794/     86A : 38 F9               		jr	c, gtko5
    1795/     86C : 2B                  		dec	hl
    1796/     86D : 22 5D 18            		ld	(ARG2),	hl	; Argument 2
    1797/     870 : 21 68 02            		ld	hl, error	; Ausgabe "Error"
    1798/     873 : A7                  		and	a
    1799/     874 : 20 01               		jr	nz, gtko6
    1800/     876 : E5                  		push	hl
    1801/     877 : CB 5B               gtko6:		bit	3, e
    1802/     879 : CA 8A 04            		jp	z, m_kdo
    1803/     87C : 00                  		nop
    1804/     87D : 09                  		add	hl, bc
    1805/     87E : 44                  		ld	b, h
    1806/     87F : 0D                  		dec	c
    1807/     880 : CD CA 04            		call	para		; Argumente uebergeben
    1808/     883 : 06 19               gtko7:		ld	b, 25
    1809/     885 : C5                  gtko8:		push	bc
    1810/     886 : 01 01 08            		ld	bc, 801h
    1811/     889 : DF                  		rst	18h		; PRNST
    1812/     88A : 20 23 20 BE         		db " # ",0BEh
    1813/     88E : CD 9A 01            		call	OUTHL		; Ausgabe HL hexadezimal
    1814/     891 : DF                  		rst	18h		; PRNST
    1815/     892 : 20 A0               		db ' ',0A0h
    1816/     894 : E5                  		push	hl
    1817/     895 : 7E                  gtko9:		ld	a, (hl)
    1818/     896 : CD 83 01            		call	OUTHEX		; Ausgabe A hexadezimal
    1819/     899 : DF                  		rst	18h		; PRNST
    1820/     89A : A0                  		db	' '+80h
    1821/     89B : A7                  		and	a
    1822/     89C : ED 52               		sbc	hl, de
    1823/     89E : 19                  		add	hl, de
    1824/     89F : 23                  		inc	hl
    1825/     8A0 : 20 01               		jr	nz, gtko10
    1826/     8A2 : 0D                  		dec	c
    1827/     8A3 : 10 F0               gtko10:		djnz	gtko9
    1828/     8A5 : DF                  		rst	18h		; PRNST
    1829/     8A6 : BA                  		db 0BAh
    1830/     8A7 : E1                  		pop	hl
    1831/     8A8 : 06 08               		ld	b, 8
    1832/     8AA : 7E                  gtko11:		ld	a, (hl)
    1833/     8AB : FE 20               		cp	' '
    1834/     8AD : 38 08               		jr	c, gtko12
    1835/     8AF : FE 5F               		cp	5Fh ; '_'
    1836/     8B1 : 28 04               		jr	z, gtko12
    1837/     8B3 : FE 7F               		cp	7Fh ; ''
    1838/     8B5 : 38 02               		jr	c, gtko13
    1839/     8B7 : 3E 2E               gtko12:		ld	a, '.'
    1840/     8B9 : D7                  gtko13:		rst	10h		; OUTCH
    1841/     8BA : 23                  		inc	hl
    1842/     8BB : 10 ED               		djnz	gtko11
    1843/     8BD : DF                  		rst	18h		; PRNST
    1844/     8BE : 3A 8D               		db ':',8Dh
    1845/     8C0 : 79                  		ld	a, c
    1846/     8C1 : C1                  		pop	bc
    1847/     8C2 : 3D                  		dec	a
    1848/     8C3 : C0                  		ret	nz
    1849/     8C4 : 10 BF               		djnz	gtko8
    1850/     8C6 : CF                  		rst	8		; INCH
    1851/     8C7 : FE 0D               		cp	0Dh
    1852/     8C9 : 28 B8               		jr	z, gtko7
    1853/     8CB : 04                  		inc	b
    1854/     8CC : FE 20               		cp	' '
    1855/     8CE : 28 B5               		jr	z, gtko8
    1856/     8D0 : C9                  		ret
    1857/     8D1 :                     
    1858/     8D1 :                     ;------------------------------------------------------------------------------
    1859/     8D1 :                     ; H I/O - Byte
    1860/     8D1 :                     ;------------------------------------------------------------------------------
    1861/     8D1 :                     
    1862/     8D1 : 00 09 48 0D         		db 0,9,'H',0Dh
    1863/     8D5 :                     
    1864/     8D5 : DF                  		rst	18h		; PRNST
    1865/     8D6 : 20 49 2F 4F 20 42   		db " I/O Byte",0A0h
                    79 74 65 A0       
    1866/     8E0 : 11 21 18            		ld	de, IOBYT	; Ein/Ausgabebyte
    1867/     8E3 : 1A                  		ld	a, (de)
    1868/     8E4 : CD 83 01            		call	OUTHEX		; Ausgabe A hexadezimal
    1869/     8E7 : 13                  		inc	de
    1870/     8E8 : C3 7E 06            		jp	rko7
    1871/     8EB :                     
    1872/     8EB :                     ;------------------------------------------------------------------------------
    1873/     8EB :                     ; Save AC1-Kodierung
    1874/     8EB :                     ; S aadr eadr sadr name	Save	Datei auf Kassette ausgeben
    1875/     8EB :                     ; s. ac1_berlin/kassettenformate_ac1_mode.htm
    1876/     8EB :                     ;------------------------------------------------------------------------------
    1877/     8EB :                     ; File-Format: AC1-Mode, Monitor V 3.1
    1878/     8EB :                     ; 
    1879/     8EB :                     ; 512 Nullbytes zum Einschwingen
    1880/     8EB :                     ; E6h, Polarisationsbyte
    1881/     8EB :                     ; 'U', Kennbyte für Namen
    1882/     8EB :                     ; Namen, max. 16 Zeichen, wenn kürzer wird mit Leerzeichen aufgefüllt
    1883/     8EB :                     ; 216 Nullbytes, Zeit für Namensdarstellung beim Einlesen
    1884/     8EB :                     ; es folgen Blöcke:
    1885/     8EB :                     ; 	'<', Kennbyte für Datenblock
    1886/     8EB :                     ; 	XX, Blocklänge, normal 256, Restblock entsprechend weniger
    1887/     8EB :                     ; 	XXXX, Blockstartadresse
    1888/     8EB :                     ; 	256 Datenbyte, Restblock entsprechend weniger
    1889/     8EB :                     ; 	0XX, Prüfsumme
    1890/     8EB :                     ; 'x' Kennbyte für Endeblock
    1891/     8EB :                     ;  XXXX Startadresse
    1892/     8EB :                     ;------------------------------------------------------------------------------
    1893/     8EB :                     
    1894/     8EB : 00 09 53 0D         		db 0,9,'S',0Dh
    1895/     8EF :                     
    1896/     8EF : CD 37 0A            		call	q_ko21		; Start/Stop-Schaltung start
    1897/     8F2 : 1B                  csave:		dec	de		; de = bws-pos. nach 3. Parameter
    1898/     8F3 : 1A                  		ld	a, (de)
    1899/     8F4 : FE 20               		cp	' '		; Leerzeichen vor Filename
    1900/     8F6 : 28 FA               		jr	z, csave	; übergehen
    1901/     8F8 :                     ;Vorton 2x256 00-Bytes ausgeben
    1902/     8F8 : 06 00               		ld	b, 0
    1903/     8FA : AF                  sav1:		xor	a
    1904/     8FB : F7                  		rst	30h		; 1 Byte speichern, AC1-Format
    1905/     8FC : AF                  		xor	a
    1906/     8FD : F7                  		rst	30h		; 1 Byte speichern, AC1-Format
    1907/     8FE : 10 FA               		djnz	sav1
    1908/     900 :                     ;Synchronisationsmuster E6h
    1909/     900 : 3E E6               		ld	a, 0E6h		; Synchronisationsmuster
    1910/     902 : F7                  		rst	30h		; 1 Byte speichern, AC1-Format
    1911/     903 :                     ;name ausgeben 'U' + NAMELEN Zeichen
    1912/     903 : 3E 55               		ld	a, 'U'		; Kennbyte fuer Namen
    1913/     905 : F7                  		rst	30h		; 1 Byte speichern, AC1-Format
    1914/     906 : 06 28               		ld	b, NAMELEN
    1915/     908 : 1A                  sav2:		ld	a, (de)
    1916/     909 : F7                  		rst	30h		; 1 Byte speichern, AC1-Format
    1917/     90A : 1B                  		dec	de
    1918/     90B : 10 FB               		djnz	sav2
    1919/     90D :                     ;216 Nullbytes,	Zeit für Namensdarstellung beim	Einlesen
    1920/     90D : 06 D8               		ld	b, 216
    1921/     90F : AF                  sav3:		xor	a
    1922/     910 : F7                  		rst	30h		; 1 Byte speichern, AC1-Format
    1923/     911 : 10 FC               		djnz	sav3
    1924/     913 :                     ;		
    1925/     913 : 2A 5B 18            		ld	hl, (ARG1)	; Argument 1
    1926/     916 : ED 5B 5D 18         		ld	de, (ARG2)	; Argument 2
    1927/     91A : D5                  sav4:		push	de
    1928/     91B : EB                  		ex	de, hl
    1929/     91C : A7                  		and	a
    1930/     91D : ED 52               		sbc	hl, de
    1931/     91F : 38 23               		jr	c, sav8		; wenn Ende erreicht
    1932/     921 :                     ;
    1933/     921 :                     ; Block ausgeben: '<' + Blocklänge + max. 256 Byte Daten + Prüfsumme
    1934/     921 : 3E 3C               		ld	a, '<'		; Kennung Datenblock
    1935/     923 : 23                  		inc	hl		; HL=restl. Programmlänge
    1936/     924 : F7                  		rst	30h		; 1 Byte speichern, AC1-Format
    1937/     925 : 7C                  		ld	a, h
    1938/     926 : A7                  		and	a		; H = 0?
    1939/     927 : 28 04               		jr	z, sav5		; wenn HL < 256
    1940/     929 : 06 00               		ld	b, 0		; sonst 256 Zeichen
    1941/     92B : 18 01               		jr	sav6
    1942/     92D : 45                  sav5:		ld	b, l
    1943/     92E : EB                  sav6:		ex	de, hl
    1944/     92F : D1                  		pop	de
    1945/     930 : 78                  		ld	a, b		; Blocklänge
    1946/     931 : F7                  		rst	30h		; 1 Byte speichern, AC1-Format
    1947/     932 : 7D                  		ld	a, l		; Prüfsumme = 0, Blockadr.
    1948/     933 : 84                  		add	a, h		; zur Prüfsumme addieren
    1949/     934 : 4F                  		ld	c, a		; Prüfsumme merken
    1950/     935 :                     ;Blockstartadr
    1951/     935 : CD 54 09            		call	sav9		; Ausgabe 2 Byte L,H
    1952/     938 : 79                  sav7:		ld	a, c		; Prüfsumme erhöhen
    1953/     939 : 86                  		add	a, (hl)
    1954/     93A : 4F                  		ld	c, a
    1955/     93B : 7E                  		ld	a, (hl)
    1956/     93C : F7                  		rst	30h		; 1 Byte speichern, AC1-Format
    1957/     93D : 23                  		inc	hl
    1958/     93E : 10 F8               		djnz	sav7		; Prüfsumme erhöhen
    1959/     940 : 79                  		ld	a, c		; Prüfsumme ausgeben
    1960/     941 : F7                  		rst	30h		; 1 Byte speichern, AC1-Format
    1961/     942 : 18 D6               		jr	sav4
    1962/     944 :                     ; Programmende 'x' + sadr
    1963/     944 : D1                  sav8:		pop	de
    1964/     945 : 3E 78               		ld	a, 'x'		; Kennung Ende
    1965/     947 : F7                  		rst	30h		; 1 Byte speichern, AC1-Format
    1966/     948 : 2A 5F 18            		ld	hl, (ARG3)	; SADR
    1967/     94B : CD 54 09            		call	sav9		; Ausgabe 2 Byte L,H
    1968/     94E :                     ;		
    1969/     94E : CD 04 04            loc_94E:	call	crc		; CRC
    1970/     951 : C3 31 0A            		jp	q_ko20		; PIO Reset, EI
    1971/     954 :                     
    1972/     954 :                     ; Ausgabe 2 Byte L,H
    1973/     954 : 7D                  sav9:		ld	a, l
    1974/     955 : F7                  		rst	30h		; 1 Byte speichern, AC1-Format
    1975/     956 : 7C                  		ld	a, h
    1976/     957 :                     ;
    1977/     957 :                     ; Ausgabe 1 Byte A
    1978/     957 : C5                  sav10:		push	bc
    1979/     958 : 4F                  		ld	c, a		; Datenbyte nach C
    1980/     959 :                     		; C enthaelt die Daten und ist gleichzeitig Bitzaehler
    1981/     959 : CB 31               		sls	c		; undoc opcode sll c
    1982/     95B : DB 05               sav11:		in	a, (PIODB)	; PIO-Daten lesen
    1983/     95D : CB F7               		set	6, a		; TB-Interface-Ausgang auf high
    1984/     95F : 30 02               		jr	nc, sav12	; war Datenbit 1?
    1985/     961 : CB B7               		res	6, a		; nein, TB-Interface-Ausgang low
    1986/     963 : D3 05               sav12:		out	(PIODB), a	; Ausgabe 1.Halbw.
    1987/     965 : 06 31               		ld	b, ZK1		; Zeitkontante 1
    1988/     967 : 10 FE               sav13:		djnz	sav13
    1989/     969 : EE 40               		xor	40h		; Flankenwechsel
    1990/     96B : D3 05               		out	(PIODB), a	; Ausgabe 2.Halbw.
    1991/     96D : 06 2E               		ld	b, ZK2		; Zeitkonstante 2
    1992/     96F : 10 FE               sav14:		djnz	sav14
    1993/     971 : CB 21               		sla	c		; weitere Datenbit ausgeben
    1994/     973 : 20 E6               		jr	nz, sav11
    1995/     975 : C1                  		pop	bc
    1996/     976 : C9                  		ret
    1997/     977 :                     
    1998/     977 :                     ;------------------------------------------------------------------------------
    1999/     977 :                     ; V = (name) Verify AC1-Kodierung
    2000/     977 :                     ;------------------------------------------------------------------------------
    2001/     977 :                     
    2002/     977 : 00 09 56 0D         		db 0,9,'V',0Dh
    2003/     97B :                     
    2004/     97B : 97                  		sub	a		; a=0
    2005/     97C : 18 17               		jr	q_ko1
    2006/     97E :                     
    2007/     97E :                     ;------------------------------------------------------------------------------
    2008/     97E :                     ; Q (aaaaa) +; -; = (name) Laden Programm AC1-Kode
    2009/     97E :                     ;------------------------------------------------------------------------------
    2010/     97E :                     
    2011/     97E : 00 09 51 0D         		db 0,9,'Q',0Dh
    2012/     982 :                     
    2013/     982 : 1A                  		ld	a, (de)
    2014/     983 : ED 4B 5B 18         		ld	bc, (ARG1)	; Argument 1, offs
    2015/     987 : FE 2D               		cp	'-'
    2016/     989 : 3E FF               		ld	a, 0FFh
    2017/     98B : 20 08               		jr	nz, q_ko1
    2018/     98D : 21 00 00            		ld	hl, 0
    2019/     990 : ED 42               		sbc	hl, bc
    2020/     992 : 22 5B 18            		ld	(ARG1),	hl	; Argument 1
    2021/     995 : 08                  q_ko1:		ex	af, af'	; '
    2022/     996 : CD 37 0A            		call	q_ko21		; Start/Stop-Schaltung start
    2023/     999 : EB                  		ex	de, hl
    2024/     99A : 2B                  		dec	hl
    2025/     99B : 2B                  		dec	hl
    2026/     99C : ED 5B 00 18         q_ko2:		ld	de, (cupos)	; Zwischenspeicher Kursor
    2027/     9A0 : DF                  		rst	18h		; PRNST
    2028/     9A1 : 8D                  		db  8Dh	; 
    2029/     9A2 : 4F                  q_ko3:		ld	c, a
    2030/     9A3 : 06 00               		ld	b, 0
    2031/     9A5 : CD 40 0A            q_ko4:		call	loa17
    2032/     9A8 : B9                  		cp	c
    2033/     9A9 : 20 F7               		jr	nz, q_ko3
    2034/     9AB : 10 F8               		djnz	q_ko4
    2035/     9AD :                     
    2036/     9AD :                     ;Phasenkorrektur ermitteln
    2037/     9AD : CD 40 0A            loa3:		call	loa17		; Bitweise lesen
    2038/     9B0 : FE 19               		cp	19h		; Synchronisationsmuster negiert
    2039/     9B2 : 06 FF               		ld	b, 0FFh		; dann Phasenkorrektur FF
    2040/     9B4 : 28 06               		jr	z, loa4
    2041/     9B6 : FE E6               		cp	0E6h		; Synchronisationsmuster
    2042/     9B8 : 20 F3               		jr	nz, loa3
    2043/     9BA : 06 00               		ld	b, 0		; dann Phasenkorrektur FF
    2044/     9BC : 78                  loa4:		ld	a, b
    2045/     9BD : 32 23 18            		ld	(phako), a	; Hilfsregister	Phasenkorrektur
    2046/     9C0 : EF                  		rst	28h		; 1 Byte laden
    2047/     9C1 : FE 55               		cp	'U'		; Kennbyte fuer Namen
    2048/     9C3 : 20 DD               		jr	nz, q_ko3
    2049/     9C5 :                     ;Name laden und	anzeigen
    2050/     9C5 : 01 01 28            		ld	bc, NAMELEN*100h+01h
    2051/     9C8 : E5                  		push	hl
    2052/     9C9 : EF                  q_ko7:		rst	28h		; 1 Byte laden
    2053/     9CA : 28 11               		jr	z, q_ko9
    2054/     9CC : 12                  		ld	(de), a
    2055/     9CD : 1B                  		dec	de
    2056/     9CE : BE                  		cp	(hl)
    2057/     9CF : 28 0B               		jr	z, q_ko8
    2058/     9D1 : 3E 20               		ld	a, ' '
    2059/     9D3 : BE                  		cp	(hl)
    2060/     9D4 : 28 06               		jr	z, q_ko8
    2061/     9D6 : 3E 22               		ld	a, '"'
    2062/     9D8 : B8                  		cp	b
    2063/     9D9 : 30 01               		jr	nc, q_ko8
    2064/     9DB : 0C                  		inc	c
    2065/     9DC : 2B                  q_ko8:		dec	hl
    2066/     9DD : 10 EA               q_ko9:		djnz	q_ko7
    2067/     9DF : E1                  		pop	hl
    2068/     9E0 : 0D                  		dec	c
    2069/     9E1 : 20 B9               		jr	nz, q_ko2
    2070/     9E3 : 06 00               q_ko10:		ld	b, 0
    2071/     9E5 :                     ;
    2072/     9E5 : EF                  loa6:		rst	28h		; 1 Byte laden
    2073/     9E6 : FE 78               		cp	'x'		; Kennung Ende
    2074/     9E8 : 28 37               		jr	z, loa10	; Programmende
    2075/     9EA : FE 3C               		cp	'<'		; Kennung Datenblock
    2076/     9EC : 28 04               		jr	z, q_ko12
    2077/     9EE : 10 F5               		djnz	loa6
    2078/     9F0 : 18 2A               		jr	q_ko16
    2079/     9F2 :                     ; Datenblock		
    2080/     9F2 : EF                  q_ko12:		rst	28h		; 1 Byte laden
    2081/     9F3 : 47                  		ld	b, a		; Anzahl der Bytes im Block
    2082/     9F4 : CD 68 0A            		call	q_ko27		; Cursor toggeln, lesen	HL
    2083/     9F7 : 85                  		add	a, l		; Prüfsumme
    2084/     9F8 : ED 5B 5B 18         		ld	de, (ARG1)	; Ladeadr
    2085/     9FC : 19                  		add	hl, de
    2086/     9FD :                     ;		
    2087/     9FD : 57                  		ld	d, a
    2088/     9FE : EF                  q_ko13:		rst	28h		; 1 Byte laden
    2089/     9FF : 4F                  		ld	c, a
    2090/     A00 : 08                  		ex	af, af'
    2091/     A01 : 0F                  		rrca
    2092/     A02 : 30 01               		jr	nc, q_ko14
    2093/     A04 : 71                  		ld	(hl), c
    2094/     A05 : 08                  q_ko14:		ex	af, af'
    2095/     A06 : BE                  		cp	(hl)
    2096/     A07 : 20 0F               		jr	nz, q_ko15
    2097/     A09 : 23                  		inc	hl
    2098/     A0A : 82                  		add	a, d
    2099/     A0B : 57                  		ld	d, a
    2100/     A0C : 10 F0               		djnz	q_ko13
    2101/     A0E : EF                  		rst	28h		; 1 Byte laden
    2102/     A0F : BA                  		cp	d
    2103/     A10 : 28 D1               		jr	z, q_ko10
    2104/     A12 : DF                  		rst	18h		; PRNST
    2105/     A13 : 43 52 C3            		db "CR",'C'+80h
    2106/     A16 : 18 04               		jr	q_ko16
    2107/     A18 :                     ;		
    2108/     A18 : DF                  q_ko15:		rst	18h		; PRNST
    2109/     A19 : 52 41 CD            		db "RA",'M'+80h
    2110/     A1C : CD 68 02            q_ko16:		call	error		; Ausgabe "Error"
    2111/     A1F : 18 07               		jr	loa11
    2112/     A21 :                     ; Programmende	
    2113/     A21 : CD 68 0A            loa10:		call	q_ko27		; Cursor toggeln, lesen	HL (Startadresse)
    2114/     A24 : 22 5B 18            		ld	(ARG1),	hl	; als Parameter ablegen
    2115/     A27 : AF                  		xor	a
    2116/     A28 : CD 9A 01            loa11:		call	OUTHL		; und Anzeige
    2117/     A2B :                     ;
    2118/     A2B : 2A 5B 18            q_ko19:		ld	hl, (ARG1)	; Argument 1
    2119/     A2E : CA F0 0D            		jp	z, loc_DF0
    2120/     A31 :                     
    2121/     A31 :                     ;
    2122/     A31 : DB 05               q_ko20:		in	a, (PIODB)
    2123/     A33 : FB                  		ei
    2124/     A34 : C3 98 0A            		jp	loc_A98		; Start/Stop-Schaltung stop
    2125/     A37 :                     
    2126/     A37 :                     ; Start/Stop-Schaltung start
    2127/     A37 : DB 05               q_ko21:		in	a, (PIODB)
    2128/     A39 : CB EF               		set	5, a		; Start/Stop-Schaltung start
    2129/     A3B : F3                  		di
    2130/     A3C : C3 9A 0A            		jp	loc_A9A		; Beep, PIOB ausgeben
    2131/     A3F :                     
    2132/     A3F : FF                  		db 0FFh
    2133/     A40 :                     		
    2134/     A40 :                     ; Lesen ein Bit
    2135/     A40 : C5                  loa17:		push	bc
    2136/     A41 : F5                  		push	af
    2137/     A42 : DB 05               		in	a, (PIODB)	; TB-Interface-Eingang lesen
    2138/     A44 : E6 80               		and	80h		; Bit 7 (TB-Interface-Eingang)
    2139/     A46 : 4F                  		ld	c, a
    2140/     A47 : DB 05               loa18:		in	a, (PIODB)
    2141/     A49 : E6 80               		and	80h
    2142/     A4B : B9                  		cp	c		; Flankenwechsel?
    2143/     A4C : 28 F9               		jr	z, loa18	; nein
    2144/     A4E : 4F                  		ld	c, a		; Bit sichern
    2145/     A4F : 06 3F               		ld	b, ZKR		; Zeitkonstante, ca 2/3 Vollwelle
    2146/     A51 : 10 FE               loa19:		djnz	loa19		; Warten
    2147/     A53 : F1                  		pop	af
    2148/     A54 : CB 11               		rl	c		; Carry <- Bit 7
    2149/     A56 : 17                  		rla			; A <- Carry
    2150/     A57 : C1                  		pop	bc
    2151/     A58 : C9                  		ret
    2152/     A59 :                     
    2153/     A59 :                     ;
    2154/     A59 :                     ; Lesen	ein Byte A
    2155/     A59 : C5                  loa15:		push	bc		; Laden	1 Byte
    2156/     A5A : 06 08               		ld	b, 8		; 8 bit
    2157/     A5C : CD 40 0A            loa16:		call	loa17		; Lesen
    2158/     A5F : 10 FB               		djnz	loa16
    2159/     A61 : 4F                  		ld	c, a
    2160/     A62 : 3A 23 18            		ld	a, (phako)	; Phasenkorrektur
    2161/     A65 : A9                  		xor	c		; ggf. Bits negieren
    2162/     A66 : C1                  		pop	bc
    2163/     A67 : C9                  		ret
    2164/     A68 :                     
    2165/     A68 :                     ; Cursor toggeln, Lesen 2 Byte L,H
    2166/     A68 : 2A 00 18            q_ko27:		ld	hl, (cupos)	; Zwischenspeicher Kursor
    2167/     A6B : CB 4E               		bit	1, (hl)
    2168/     A6D : 36 20               		ld	(hl), ' '
    2169/     A6F : 20 02               		jr	nz, loa12	; Lesen	  2 Byte L,H
    2170/     A71 : 36 2A               		ld	(hl), '*'
    2171/     A73 :                     ; Lesen 2 Byte L,H
    2172/     A73 : EF                  loa12:		rst	28h		; Lesen	  2 Byte L,H
    2173/     A74 : 6F                  		ld	l, a
    2174/     A75 : EF                  		rst	28h		; 1 Byte laden
    2175/     A76 : 67                  		ld	h, a
    2176/     A77 : C9                  		ret
    2177/     A78 :                     
    2178/     A78 :                     ;------------------------------------------------------------------------------
    2179/     A78 :                     ; Test Autostartmodul
    2180/     A78 :                     ; und Test auf Warmstart, beides in einer Routine vermauschelt
    2181/     A78 :                     ;------------------------------------------------------------------------------
    2182/     A78 :                     
    2183/     A78 :                     ; suche "SCH" auf 2000h
    2184/     A78 : 11 00 20            tstsch2:	ld	de, 2000h
    2185/     A7B :                     
    2186/     A7B :                     ; Test auf Warmstart; hier wird Autostartadr ignoriert
    2187/     A7B :                     ; Einsprung bei Reset mit DE = warmcod
    2188/     A7B : 21 3A 02            tstsch:		ld	hl, aSch	; "SCH"
    2189/     A7E : 06 03               		ld	b, 3
    2190/     A80 : 1A                  tstsch1:	ld	a, (de)
    2191/     A81 : BE                  		cp	(hl)
    2192/     A82 : C0                  		ret	nz		; nicht gefunden
    2193/     A83 : 23                  		inc	hl
    2194/     A84 : 13                  		inc	de
    2195/     A85 : 10 F9               		djnz	tstsch1
    2196/     A87 :                     		; Adresse hinter "SCH" in HL
    2197/     A87 : 1A                  		ld	a, (de)
    2198/     A88 : 6F                  		ld	l, a
    2199/     A89 : 13                  		inc	de
    2200/     A8A : 1A                  		ld	a, (de)
    2201/     A8B : 67                  		ld	h, a		; HL=Autostartadr.
    2202/     A8C : C9                  		ret
    2203/     A8D :                     
    2204/     A8D :                     ;------------------------------------------------------------------------------
    2205/     A8D :                     ; Standard-Routine Ausgabe Zeichenkette, RST 18
    2206/     A8D :                     ;------------------------------------------------------------------------------
    2207/     A8D :                     
    2208/     A8D : E3                  rprnst:		ex	(sp), hl
    2209/     A8E : F5                  		push	af
    2210/     A8F : 7E                  rprnst1:	ld	a, (hl)		; Zeichen holen
    2211/     A90 : 23                  		inc	hl		; nächste Adr.
    2212/     A91 : D7                  		rst	10h		; OUTCH
    2213/     A92 : 07                  		rlca			; Ende (Bit7 gesetzt)?
    2214/     A93 : 30 FA               		jr	nc, rprnst1	; nein -> nächstes Zeichen
    2215/     A95 : F1                  		pop	af
    2216/     A96 : E3                  		ex	(sp), hl	; neue Return-Adr.
    2217/     A97 : C9                  		ret
    2218/     A98 :                     
    2219/     A98 :                     ;------------------------------------------------------------------------------
    2220/     A98 :                     ; UP's zu q_ko20 und q_ko21
    2221/     A98 :                     ;------------------------------------------------------------------------------
    2222/     A98 :                     
    2223/     A98 :                     ; Start/Stop-Schaltung stop
    2224/     A98 : CB AF               loc_A98:	res	5, a		; Start/Stop-Schaltung stop
    2225/     A9A : DF                  loc_A9A:	rst	18h		; PRNST
    2226/     A9B : 87                  		db 	07+80h		; beep
    2227/     A9C : D3 05               		out	(PIODB), a
    2228/     A9E : C9                  		ret
    2229/     A9F :                     
    2230/     A9F :                     ;------------------------------------------------------------------------------
    2231/     A9F :                     ; I	lnitialize	RSA löschen, SP	initialisieren
    2232/     A9F :                     ;------------------------------------------------------------------------------
    2233/     A9F :                     
    2234/     A9F : 00 09 49 0D         		db 0,9,'I',0Dh
    2235/     AA3 :                     
    2236/     AA3 : 21 58 18            		ld	hl, data	; Hilfsregister	UP "INLINE"
    2237/     AA6 : 06 26               		ld	b, tbb_eadr-data	; Bereich data..BPOPC+3
    2238/     AA8 : 36 00               iko1:		ld	(hl), 0		;  mit 0 füllen
    2239/     AAA : 23                  		inc	hl
    2240/     AAB : 10 FB               		djnz	iko1
    2241/     AAD : DF                  		rst	18h		; PRNST
    2242/     AAE : 20 53 50 A0         		db " SP", ' '+80h
    2243/     AB2 : CD CE 0A            		call	ramtst		; Ramtest
    2244/     AB5 : 22 77 18            		ld	(REGSP), hl	; letzte RAM-Adr+1
    2245/     AB8 : 18 10               		jr	oko1		; auch auf Bildschirm ausgeben
    2246/     ABA :                     
    2247/     ABA :                     ;------------------------------------------------------------------------------
    2248/     ABA :                     ; O aaaa RAM - Test
    2249/     ABA :                     ;------------------------------------------------------------------------------
    2250/     ABA :                     
    2251/     ABA : 00 09 4F 0D         		db 0,9,'O',0Dh
    2252/     ABE :                     
    2253/     ABE : 2A 5B 18            		ld	hl, (ARG1)	; Argument 1
    2254/     AC1 : DF                  		rst	18h		; PRNST
    2255/     AC2 : 20 4D 45 A0         		db " ME", ' '+80h	; 'memory end'
    2256/     AC6 : CD CE 0A            		call	ramtst		; Ramtest
    2257/     AC9 : 2B                  		dec	hl
    2258/     ACA : C3 9A 01            oko1:		jp	OUTHL		; Ausgabe HL hexadezimal
    2259/     ACD :                     
    2260/     ACD : FF                  		db 0FFh
    2261/     ACE :                     
    2262/     ACE :                     ;------------------------------------------------------------------------------
    2263/     ACE :                     ; Test auf RAM, bis RAM Ende
    2264/     ACE :                     ; in HL = startadr
    2265/     ACE :                     ;------------------------------------------------------------------------------
    2266/     ACE :                     
    2267/     ACE : 7E                  ramtst:		ld	a, (hl)
    2268/     ACF : 2F                  		cpl
    2269/     AD0 : 77                  		ld	(hl), a
    2270/     AD1 : BE                  		cp	(hl)
    2271/     AD2 : C0                  		ret	nz		;  Ende	wenn kein RAM mehr
    2272/     AD3 : 2F                  		cpl
    2273/     AD4 : 77                  		ld	(hl), a
    2274/     AD5 : 23                  		inc	hl
    2275/     AD6 : 18 F6               		jr	ramtst		; Ramtest
    2276/     AD8 :                     
    2277/     AD8 :                     ;------------------------------------------------------------------------------
    2278/     AD8 :                     ; Tabelle Peripherie Initialisierung
    2279/     AD8 :                     ;------------------------------------------------------------------------------
    2280/     AD8 :                     
    2281/     AD8 :                     ; jeweils port, wert, s. init3
    2282/     AD8 : 00                  TABIO:		db CTC0
    2283/     AD9 : F8                  		db lo(inttab1)		; Interrupt-Vektor CTC
    2284/     ADA : 01                  		db CTC1
    2285/     ADB : 37                  		db  37h			; DI,Zeitgeber,Vorteiler 256,ZK folgt
    2286/     ADC : 01                  		db CTC1
    2287/     ADD : 4E                  		db  4Eh			; Zeitkonstante
    2288/     ADE : 02                  		db CTC2
    2289/     ADF : 47                  		db  47h			; DI,Zähler,Vorteiler 16,ZK folgt
    2290/     AE0 : 02                  		db CTC2
    2291/     AE1 : 32                  		db  32h			; Zeitkonstante
    2292/     AE2 :                     ;
    2293/     AE2 : 0B                  		db PIO2CB
    2294/     AE3 : CF                  		db 0CFh			; Mode 3 (Bit E/A)
    2295/     AE4 : 0B                  		db PIO2CB
    2296/     AE5 : 00                  		db    0			; alle Bits Ausgabe
    2297/     AE6 : 0A                  		db PIO2CA
    2298/     AE7 : CF                  		db 0CFh			; Mode 3 (Bit E/A)
    2299/     AE8 : 0A                  		db PIO2CA
    2300/     AE9 : 05                  		db    5			; B3 und b0 Eingabe
    2301/     AEA : 08                  		db PIO2DA
    2302/     AEB : 0A                  		db  0Ah			; Bits setzen
    2303/     AEC :                     ;
    2304/     AEC : 06                  		db PIOCA		; PIOCA Tastatur
    2305/     AED : CF                  		db 0CFh			; Mode 3 (Bit E/A)
    2306/     AEE : 06                  		db PIOCA		; PIOCA Tastatur
    2307/     AEF : FF                  		db 0FFh			; alle Bits Eingabe
    2308/     AF0 : 06                  		db PIOCA		; PIOCA Tastatur
    2309/     AF1 : 07                  		db    7			; DI
    2310/     AF2 : 07                  		db PIOCB
    2311/     AF3 : CF                  		db 0CFh			; Mode 3 (Bit E/A)
    2312/     AF4 : 07                  		db PIOCB
    2313/     AF5 : 84                  		db  84h			; b7 und b2 Eingabe
    2314/     AF6 : 07                  		db PIOCB
    2315/     AF7 : 07                  		db    7			; DI
    2316/     AF8 :                     ;
    2317/     AF8 : 14                  		db modul1
    2318/     AF9 : 02                  		db    2			; BASIC-ROM an
    2319/     AFA :                     
    2320/     AFA : FF                  		db 0FFh
    2321/     AFB :                     
    2322/     AFB :                     ;------------------------------------------------------------------------------
    2323/     AFB :                     ; Funktion "K" --> Kassette save Turbo
    2324/     AFB :                     ; K aaaa bbbb ("name") Kassette bespielen Programm Turbo-Tape
    2325/     AFB :                     ; K aaaa bbbb * ("name") Kassette bespielen Datei Turbo-Tape
    2326/     AFB :                     ;------------------------------------------------------------------------------
    2327/     AFB :                     ; 
    2328/     AFB :                     ; Allgemeines:
    2329/     AFB :                     ; Daten in Blöcken zu 32 Byte plus 2 Byte Prüfsumme analog Z1013
    2330/     AFB :                     ; Übertragungsrate: 4000 Bit/s
    2331/     AFB :                     ; Block:
    2332/     AFB :                     ;	1000Hz Vorton, 2x 1-Bit, 16x0-Bit
    2333/     AFB :                     ; 	32 Byte Daten
    2334/     AFB :                     ; 	2 Byte Prüfsumme
    2335/     AFB :                     ;
    2336/     AFB :                     ; Namensblock + 1. Datenblock: langer Vorton, sonst kurzer Vorton
    2337/     AFB :                     ; Namensblock: 
    2338/     AFB :                     ; 	32 Byte Namen: 'NNNNNNNN' + 16stelliger Name + ': X' + eadr + aadr. + 'L'
    2339/     AFB :                     ; 	"X" = Filekennung: "P" = Programm, "D" = Speicherabzug
    2340/     AFB :                     ; 	"B" = BASIC-Programm, "F" = BASIC-Feld
    2341/     AFB :                     ;------------------------------------------------------------------------------
    2342/     AFB :                     
    2343/     AFB : 00 09 4B 0D         		db 0,9,'K',0Dh
    2344/     AFF :                     
    2345/     AFF : CD 97 0B            		call	tbheader	; Kdo-Parameter aufbereiten
    2346/     B02 :                     					; ret HL = tb_blkbuf
    2347/     B02 : CD 37 0A            		call	q_ko21		; Start/Stop-Schaltung start
    2348/     B05 : 2B                  		dec	hl		; HL = tbh_special ('L')
    2349/     B06 : 22 7E 18            		ld	(tbb_eadr), hl	; Speicher Save/Load Turbo - Tape
    2350/     B09 : 21 96 18            		ld	hl, tb_kopfbuf
    2351/     B0C : 22 80 18            		ld	(tbb_aadr), hl
    2352/     B0F : CD E1 0B            loc_B0F:	call	sub_BE1		; Ausgabe "Warten"
    2353/     B12 : CD F7 0B            		call	tbsave
    2354/     B15 : 11 7E 18            		ld	de, tbb_eadr	; Speicher Save/Load Turbo - Tape
    2355/     B18 : 21 B1 18            		ld	hl, tbh_eadr
    2356/     B1B : 01 04 00            		ld	bc, 4
    2357/     B1E : ED B0               		ldir
    2358/     B20 : CD F7 0B            		call	tbsave
    2359/     B23 : C3 4E 09            		jp	loc_94E		; Ausgabe CRC, PIO Reset, EI
    2360/     B26 :                     
    2361/     B26 :                     ;------------------------------------------------------------------------------
    2362/     B26 :                     ; Funktion "Z" --> Kassette verify
    2363/     B26 :                     ; Z ("name") Verify Turbo-Tape
    2364/     B26 :                     ;------------------------------------------------------------------------------
    2365/     B26 :                     
    2366/     B26 : 00 09 5A 0D         		db 0,9,'Z',0Dh
    2367/     B2A :                     
    2368/     B2A : AF                  		xor	a
    2369/     B2B : 3D                  		dec	a		; A=0FFh
    2370/     B2C : 18 05               		jr	loc_B33
    2371/     B2E :                     
    2372/     B2E :                     ;------------------------------------------------------------------------------
    2373/     B2E :                     ; Funktion "L" --> Kassette load
    2374/     B2E :                     ; L ("name" Laden Programm Turbo-Tape
    2375/     B2E :                     ; L #("name") Laden Datei Turbo-Tape
    2376/     B2E :                     ;------------------------------------------------------------------------------
    2377/     B2E :                     
    2378/     B2E : 00 09 4C 0D         		db 0,9,'L',0Dh
    2379/     B32 :                     
    2380/     B32 : 82                  		add	a, d
    2381/     B33 : 08                  loc_B33:	ex	af, af'	; '
    2382/     B34 : CD 97 0B            		call	tbheader	; Kdo-Parameter aufbereiten
    2383/     B37 : CD 37 0A            		call	q_ko21		; Start/Stop-Schaltung start
    2384/     B3A : 22 80 18            		ld	(tbb_aadr), hl	; HL = tb_blkbuf
    2385/     B3D : 21 D5 18            		ld	hl, tb_blkbuf+31
    2386/     B40 : 22 7E 18            		ld	(tbb_eadr), hl	; eadr => 1 Block
    2387/     B43 : CD E1 0B            loc_B43:	call	sub_BE1		; Ausgabe "Warten"
    2388/     B46 :                     ; Kopfblock lesen
    2389/     B46 : CD 81 0C            loc_B46:	call	tbload		; Block lesen nach HL
    2390/     B49 :                     		; Vergleich Kopfkennung 8x'N'
    2391/     B49 : 21 B6 18            		ld	hl, tb_blkbuf
    2392/     B4C : 11 96 18            		ld	de, tb_kopfbuf
    2393/     B4F : 06 08               		ld	b, 8
    2394/     B51 : 1A                  loc_B51:	ld	a, (de)
    2395/     B52 : BE                  		cp	(hl)
    2396/     B53 : 20 F1               		jr	nz, loc_B46	; kein Kopfblock -> neu einlesen
    2397/     B55 : 23                  		inc	hl
    2398/     B56 : 13                  		inc	de
    2399/     B57 : 10 F8               		djnz	loc_B51
    2400/     B59 :                     		; Vergleich Dateiname + ': ' + Dateityp
    2401/     B59 : 06 13               		ld	b, 13h
    2402/     B5B : 1A                  loc_B5B:	ld	a, (de)
    2403/     B5C : BE                  		cp	(hl)
    2404/     B5D : 28 04               		jr	z, loc_B63	; wenn gleich
    2405/     B5F : FE 20               		cp	' '		; oder wenn ohne Vorgabe Dateiname
    2406/     B61 : 20 22               		jr	nz, loc_B85	; sonst Fehler
    2407/     B63 : 23                  loc_B63:	inc	hl
    2408/     B64 : 13                  		inc	de
    2409/     B65 : 10 F4               		djnz	loc_B5B
    2410/     B67 :                     		;
    2411/     B67 : 1E 7E               		ld	e, lo(tbb_eadr)	; hl=tbl_eadr de=tbb_eadr
    2412/     B69 : 0E 04               		ld	c, 4		; bc=4
    2413/     B6B : ED B0               		ldir			; eadr+aadr nach tbb_eadr+tbb_aadr
    2414/     B6D : 21 B7 0D            		ld	hl, aVerify	; Text "VERIFY"
    2415/     B70 : 08                  		ex	af, af'
    2416/     B71 : 3C                  		inc	a		; A=FF bei Verify
    2417/     B72 : 28 02               		jr	z, loc_B76	; Sprung, wenn Verify
    2418/     B74 : 2E BD               		ld	l, lo(aLaden)	; sonst Text "LADEN"
    2419/     B76 : 08                  loc_B76:	ex	af, af'
    2420/     B77 : CD 86 0D            		call	sub_D86		; Ausgabe Text
    2421/     B7A : CD 81 0C            		call	tbload		; Block lesen nach HL
    2422/     B7D : CD C9 0D            		call	loc_DC9
    2423/     B80 : DF                  		rst	18h		; PRNST
    2424/     B81 : 8D                  		db  8Dh	; 
    2425/     B82 : C3 2B 0A            		jp	q_ko19
    2426/     B85 :                     ; Dateiname stimmt nicht		
    2427/     B85 : CD C9 0D            loc_B85:	call	loc_DC9
    2428/     B88 : 20 B9               		jr	nz, loc_B43
    2429/     B8A : CD 83 0D            		call	sub_D83
    2430/     B8D : 18 B4               		jr	loc_B43
    2431/     B8F :                     
    2432/     B8F : FF                  		db 0FFh
    2433/     B90 :                     
    2434/     B90 :                     ;------------------------------------------------------------------------------
    2435/     B90 :                     ; UP "Zeitschleife 18 ms" zur Tastaturentprellung
    2436/     B90 :                     ; ungenutzt
    2437/     B90 :                     ;------------------------------------------------------------------------------
    2438/     B90 :                     
    2439/     B90 : C5                  		push	bc
    2440/     B91 : 01 81 04            		ld	bc, 0481h
    2441/     B94 : C3 21 01            		jp	ms301
    2442/     B97 :                     
    2443/     B97 :                     ;------------------------------------------------------------------------------
    2444/     B97 :                     ; UP zu Turbo Save und Load
    2445/     B97 :                     ; Kdo-Parameter aufbereiten, tb-Kopfblock füllen
    2446/     B97 :                     ;------------------------------------------------------------------------------
    2447/     B97 :                     
    2448/     B97 : 2A 5D 18            tbheader:	ld	hl, (ARG2)	; Argument 2
    2449/     B9A : 22 B1 18            		ld	(tbh_eadr), hl	; eadr
    2450/     B9D : 2A 5B 18            		ld	hl, (ARG1)	; Argument 1
    2451/     BA0 : 22 B3 18            		ld	(tbh_aadr), hl	; aadr
    2452/     BA3 : 0E 50               		ld	c, 'P'		; Typ Programm
    2453/     BA5 : 1A                  tbh1:		ld	a, (de)
    2454/     BA6 : FE 3A               		cp	':'		; dieselben Parameter?
    2455/     BA8 : 1B                  		dec	de		; Doppelpunkt
    2456/     BA9 : 28 FA               		jr	z, tbh1	; überlesen
    2457/     BAB : FE 2A               		cp	'*'		; Datei ?
    2458/     BAD : 20 04               		jr	nz, tbh2
    2459/     BAF :                     ; Datei		
    2460/     BAF : 1A                  		ld	a, (de)
    2461/     BB0 : 1B                  		dec	de
    2462/     BB1 : 0E 44               		ld	c, 'D'		; Typ Datei
    2463/     BB3 :                     ; Programm		
    2464/     BB3 : FE 22               tbh2:		cp	'"'		; folgt Name?
    2465/     BB5 : 21 96 18            		ld	hl, tb_kopfbuf
    2466/     BB8 : 06 08               		ld	b, 8		; 8x'N' eintragen
    2467/     BBA : 36 4E               tbh3:		ld	(hl), 'N'
    2468/     BBC : 23                  		inc	hl
    2469/     BBD : 10 FB               		djnz	tbh3
    2470/     BBF : 06 10               		ld	b, 10h		; 16 Zeichen Namen
    2471/     BC1 : 20 0C               		jr	nz, tbh5	; ?? nach djnz ist z immer 1
    2472/     BC3 : 1A                  tbh4:		ld	a, (de)
    2473/     BC4 : FE 22               		cp	'"'		; folgt Name?
    2474/     BC6 : 28 07               		jr	z, tbh5	; nein
    2475/     BC8 : 77                  		ld	(hl), a		; sonst Name kopieren
    2476/     BC9 : 1B                  		dec	de
    2477/     BCA : 23                  		inc	hl
    2478/     BCB : 10 F6               		djnz	tbh4		; max. 16 Zeichen
    2479/     BCD : 18 05               		jr	tbh6
    2480/     BCF : 36 20               tbh5:		ld	(hl), ' '	; kein Name oder Rest: Leerzeichen
    2481/     BD1 : 23                  		inc	hl
    2482/     BD2 : 10 FB               		djnz	tbh5
    2483/     BD4 : 36 3A               tbh6:		ld	(hl), ':'	; ': '+Typ
    2484/     BD6 : 23                  		inc	hl
    2485/     BD7 : 36 20               		ld	(hl), ' '
    2486/     BD9 : 23                  		inc	hl
    2487/     BDA : 71                  		ld	(hl), c
    2488/     BDB : 2E B5               		ld	l, lo(tbh_special)	; hl=tbh_special
    2489/     BDD : 36 4C               		ld	(hl), 'L'
    2490/     BDF : 23                  		inc	hl
    2491/     BE0 : C9                  		ret
    2492/     BE1 :                     
    2493/     BE1 :                     ;------------------------------------------------------------------------------
    2494/     BE1 :                     ; UP zu Kassette Load und Save Turbo
    2495/     BE1 :                     ;------------------------------------------------------------------------------
    2496/     BE1 :                     
    2497/     BE1 :                     ; Ausgabe Warten
    2498/     BE1 : DF                  sub_BE1:	rst	18h		; PRNST
    2499/     BE2 : 8D                  		db 8Dh
    2500/     BE3 : 21 B1 0D            		ld	hl, aWarten	; "WARTEN"
    2501/     BE6 :                     ; Ausgabe Status-Text HL, invers
    2502/     BE6 : DF                  loc_BE6:	rst	18h		; PRNST
    2503/     BE7 : 0E 33 31 91         		db 0Eh,"31",91h		; goto 31[,0]; 11h (invers)
    2504/     BEB : 06 06               		ld	b, 6		; 6 Zeichen
    2505/     BED : 7E                  loc_BED:	ld	a, (hl)
    2506/     BEE : D7                  		rst	10h		; OUTCH
    2507/     BEF : 23                  		inc	hl
    2508/     BF0 : 10 FB               		djnz	loc_BED
    2509/     BF2 : DF                  		rst	18h		; PRNST
    2510/     BF3 : 20 10 A0            		db ' ',10h,0A0h		; 10h invers Ende
    2511/     BF6 : C9                  		ret
    2512/     BF7 :                     
    2513/     BF7 :                     ;------------------------------------------------------------------------------
    2514/     BF7 :                     ; Kassette Save Turbo
    2515/     BF7 :                     ;------------------------------------------------------------------------------
    2516/     BF7 :                     
    2517/     BF7 : 2A 80 18            tbsave:		ld	hl, (tbb_aadr)	; Anfangsadsresse Block
    2518/     BFA : CD 0B 0C            		call	tbsav2		; Ausgabe Block langer Vorton
    2519/     BFD : EB                  tbsav1:		ex	de, hl
    2520/     BFE : 2A 7E 18            		ld	hl, (tbb_eadr)	; Endadresse Save-Bereich
    2521/     C01 : A7                  		and	a
    2522/     C02 : ED 52               		sbc	hl, de
    2523/     C04 : EB                  		ex	de, hl
    2524/     C05 : D8                  		ret	c		; wenn File zu Ende
    2525/     C06 : CD 10 0C            		call	tbsav3		; Ausgabe ein Block
    2526/     C09 : 18 F2               		jr	tbsav1		; weiter ausgeben
    2527/     C0B :                     
    2528/     C0B :                     ;------------------------------------------------------------------------------
    2529/     C0B :                     ; UPs zu tbsave
    2530/     C0B :                     ; siehe Routinen Monitor Z1013 / POLY-880
    2531/     C0B :                     ;------------------------------------------------------------------------------
    2532/     C0B :                     
    2533/     C0B :                     ; Ausgabe Block langer Vorton
    2534/     C0B : 11 D0 07            tbsav2:		ld	de, 2000	; langer Vorton
    2535/     C0E : 18 03               		jr	tbsav4
    2536/     C10 :                     
    2537/     C10 :                     ; Ausgabe ein Block = 20H Bytes
    2538/     C10 : 11 0E 00            tbsav3:		ld	de, 14		; kurzer Vorton
    2539/     C13 :                     ; Vorton: DE Halbschwingungen a 1000h
    2540/     C13 : 06 48               tbsav4:		ld	b, 48h
    2541/     C15 : 10 FE               tbsav5:		djnz	tbsav5
    2542/     C17 : CD 7A 0C            		call	tbsav21		; Flanke wechseln
    2543/     C1A : 1B                  		dec	de
    2544/     C1B : 7B                  		ld	a, e
    2545/     C1C : B2                  		or	d
    2546/     C1D : 20 F4               		jr	nz, tbsav4
    2547/     C1F :                     ;Trennschwingung: 1 Vollschwingung
    2548/     C1F : 0E 02               		ld	c, 2		; Ausgabe Synchron-
    2549/     C21 : 06 21               tbsav6:		ld	b, 21h		; impulse
    2550/     C23 : 10 FE               tbsav7:		djnz	tbsav7
    2551/     C25 : CD 7A 0C            		call	tbsav21		; Flanke wechseln
    2552/     C28 : 0D                  		dec	c
    2553/     C29 : 5D                  		ld	e, l
    2554/     C2A : 54                  		ld	d, h
    2555/     C2B : 20 F4               		jr	nz, tbsav6
    2556/     C2D : 00                  		nop
    2557/     C2E :                     ;		
    2558/     C2E : D5                  		push	de		; DE=IX=0000
    2559/     C2F : DD E1               		pop	ix
    2560/     C31 :                     ; Kopfinhalt ausgeben
    2561/     C31 : 06 08               		ld	b, 8		; kurze Pause
    2562/     C33 : 10 FE               tbsav8:		djnz	tbsav8
    2563/     C35 : CD 59 0C            		call	tbsav14		; Ausgabe DE
    2564/     C38 : 06 05               		ld	b, 5		; kurze Pause
    2565/     C3A : 10 FE               tbsav9:		djnz	tbsav9
    2566/     C3C :                     ; 20H Bytes ausgeben
    2567/     C3C : 0E 10               		ld	c, 10h		;10H*2 Bytes
    2568/     C3E : 5E                  tbsav10:		ld	e, (hl)
    2569/     C3F : 23                  		inc	hl
    2570/     C40 : 56                  		ld	d, (hl)
    2571/     C41 : DD 19               		add	ix, de
    2572/     C43 : 23                  		inc	hl
    2573/     C44 : C5                  		push	bc
    2574/     C45 : CD 59 0C            		call	tbsav14		; Ausgabe DE
    2575/     C48 : C1                  		pop	bc
    2576/     C49 : 0D                  		dec	c
    2577/     C4A : 28 06               		jr	z, tbsav12
    2578/     C4C : 06 03               		ld	b, 3
    2579/     C4E : 10 FE               tbsav11:		djnz	tbsav11
    2580/     C50 : 18 EC               		jr	tbsav10
    2581/     C52 :                     ; Pruefsumme ausgeben		
    2582/     C52 : DD E5               tbsav12:		push	ix
    2583/     C54 : D1                  		pop	de		; DE = Pruefsumme
    2584/     C55 : 06 07               		ld	b, 7		; kurze Pause
    2585/     C57 : 10 FE               tbsav13:		djnz	tbsav13
    2586/     C59 :                     ; Ausgabe 16 Bit DE
    2587/     C59 : 0E 10               tbsav14:		ld	c, 16		; 16 Bit
    2588/     C5B : CB 3A               tbsav15:		srl	d		; Hi-Bit in Cy schieben
    2589/     C5D : CB 1B               		rr	e
    2590/     C5F : 30 07               		jr	nc, tbsav17	; Cy=1, wenn Bit=1
    2591/     C61 :                     ; 1-Bit 1 Halbschwingung
    2592/     C61 : 06 03               		ld	b, 3
    2593/     C63 : 10 FE               tbsav16:		djnz	tbsav16
    2594/     C65 : 00                  		nop
    2595/     C66 : 18 03               		jr	tbsav18
    2596/     C68 :                     ; 0-Bit 1 Vollschwingung		
    2597/     C68 : CD 7A 0C            tbsav17:		call	tbsav21		; Flanke wechseln
    2598/     C6B : 06 0F               tbsav18:		ld	b, 0Fh
    2599/     C6D : 10 FE               tbsav19:		djnz	tbsav19
    2600/     C6F : CD 7A 0C            		call	tbsav21		; Flanke wechseln
    2601/     C72 : 0D                  		dec	c
    2602/     C73 : C8                  		ret	z
    2603/     C74 : 06 0B               		ld	b, 0Bh
    2604/     C76 : 10 FE               tbsav20:		djnz	tbsav20
    2605/     C78 : 18 E1               		jr	tbsav15
    2606/     C7A :                     ; Flanke wechseln
    2607/     C7A : DB 05               tbsav21:		in	a, (PIODB)
    2608/     C7C : EE 40               		xor	40h		; TB-Interface-Ausgang
    2609/     C7E : D3 05               		out	(PIODB), a
    2610/     C80 : C9                  		ret
    2611/     C81 :                     
    2612/     C81 :                     ;------------------------------------------------------------------------------
    2613/     C81 :                     ; Kassette Load Turbo
    2614/     C81 :                     ;------------------------------------------------------------------------------
    2615/     C81 :                     
    2616/     C81 : FD 21 82 18         tbload:		ld	iy, tb_errarr	; Fehler-Array
    2617/     C85 : 2A 80 18            		ld	hl, (tbb_aadr)	; Ziel-Adresse Block
    2618/     C88 : D9                  		exx
    2619/     C89 : 21 00 01            		ld	hl, 100h	; H=1, L=0
    2620/     C8C :                     					; H=RAM-Fehler-Counter
    2621/     C8C : D9                  		exx
    2622/     C8D : CD BD 0C            tbload1:	call	tb_loa3		; Block lesen (32 Byte) nach (HL)
    2623/     C90 : D9                  		exx
    2624/     C91 : 20 06               		jr	nz, tbload2	; Lesefehler (Prüfsumme)
    2625/     C93 : 25                  		dec	h		; Fehler-Counter > 1 ?
    2626/     C94 : 26 01               		ld	h, 1		; Fehler-Counter reset
    2627/     C96 : 28 14               		jr	z, tbload3	; nein, keine Fehler
    2628/     C98 : 2C                  		inc	l		; sonst Block-Fehler-Counter ++
    2629/     C99 : 26 01               tbload2:	ld	h, 1		; Fehler-Counter reset
    2630/     C9B : D9                  		exx
    2631/     C9C : FD 75 00            		ld	(iy+0),	l	; Blockendeadresse in
    2632/     C9F : FD 74 01            		ld	(iy+1),	h	; Fehler-Array ablegen
    2633/     CA2 : FD 23               		inc	iy		; Zeiger erhöhen
    2634/     CA4 : FD 23               		inc	iy
    2635/     CA6 : FD 7D               		ld	a, iyl		; undoc	code!
    2636/     CA8 : D6 94               		sub	lo(tb_errarr)+12h	; Array-Ende?
    2637/     CAA : C8                  		ret	z		; Array-Ende erreicht
    2638/     CAB : D9                  		exx
    2639/     CAC : D9                  tbload3:	exx
    2640/     CAD : EB                  		ex	de, hl
    2641/     CAE : 2A 7E 18            		ld	hl, (tbb_eadr)	; zu lesende Endeadresse 
    2642/     CB1 : A7                  		and	a		; erreicht?
    2643/     CB2 : ED 52               		sbc	hl, de
    2644/     CB4 : EB                  		ex	de, hl
    2645/     CB5 : D8                  		ret	c		; ja
    2646/     CB6 : 18 D5               		jr	tbload1		; sonst weiterlesen
    2647/     CB8 :                     
    2648/     CB8 :                     ;------------------------------------------------------------------------------
    2649/     CB8 :                     ;' ' aaaa       bbbb cccc       Eingabe von Argumenten
    2650/     CB8 :                     ;------------------------------------------------------------------------------
    2651/     CB8 :                     
    2652/     CB8 : 00 09 20 0D         		db 0,9,' ',0Dh
    2653/     CBC :                     
    2654/     CBC : C9                  		ret
    2655/     CBD :                     
    2656/     CBD :                     ;------------------------------------------------------------------------------
    2657/     CBD :                     ; UP zu tbload zu Kassette Load Turbo
    2658/     CBD :                     ; siehe Monitorprogramm Z1013 / POLY-880
    2659/     CBD :                     ;------------------------------------------------------------------------------
    2660/     CBD :                     
    2661/     CBD :                     ; 20H Bytes laden nach (HL)
    2662/     CBD :                     ; ret Z=0 Ladefehler, Cy=1 Endeadresse erreicht
    2663/     CBD :                     
    2664/     CBD : CD 5A 0D            tb_loa3:	call	tb_loa24	; synchronisieren
    2665/     CC0 : CD 52 0D            		call	tb_loa25
    2666/     CC3 : 0E 07               		ld	c, 7
    2667/     CC5 : 11 0B 06            tb_loa5:	ld	de, 060Bh	; D=6, E=0Bh
    2668/     CC8 : 3E 02               		ld	a, 2
    2669/     CCA : 3D                  tb_loa6:	dec	a
    2670/     CCB : 20 FD               		jr	nz, tb_loa6
    2671/     CCD : CD 5A 0D            		call	tb_loa24	; synchronisieren
    2672/     CD0 : CD 5A 0D            tb_loa7:	call	tb_loa24	; Flanke ?
    2673/     CD3 : 20 E8               		jr	nz, tb_loa3	; wenn nicht Vorton
    2674/     CD5 : 15                  		dec	d
    2675/     CD6 : 20 F8               		jr	nz, tb_loa7
    2676/     CD8 : 0D                  		dec	c
    2677/     CD9 : 28 0C               		jr	z, tb_loa9
    2678/     CDB : DB 05               tb_loa8:	in	a, (PIODB)
    2679/     CDD : A8                  		xor	b
    2680/     CDE : CB 7F               		bit	7, a		; TB-Interface-Eingang
    2681/     CE0 : 20 E3               		jr	nz, tb_loa5
    2682/     CE2 : 1D                  		dec	e
    2683/     CE3 : 20 F6               		jr	nz, tb_loa8
    2684/     CE5 : 18 D6               		jr	tb_loa3
    2685/     CE7 :                     ; Synchronisierimpulse lesen		
    2686/     CE7 : CD 52 0D            tb_loa9:	call	tb_loa25	; Flanke abwarten
    2687/     CEA : 3E 2C               		ld	a, 2Ch
    2688/     CEC : 3D                  tb_loa10:	dec	a
    2689/     CED : 20 FD               		jr	nz, tb_loa10
    2690/     CEF : CD 5A 0D            		call	tb_loa24	; Flanke ?
    2691/     CF2 : 20 F3               		jr	nz, tb_loa9	; wenn nicht
    2692/     CF4 : CD 52 0D            		call	tb_loa25	; Flanke abwarten
    2693/     CF7 : 3E 12               		ld	a, 12h
    2694/     CF9 : 3D                  tb_loa11:	dec	a
    2695/     CFA : 20 FD               		jr	nz, tb_loa11
    2696/     CFC :                     ; 2 Bytes Kopf lesen		
    2697/     CFC : CD 64 0D            		call	tb_loa19	; lesen DE
    2698/     CFF :                     ; 20H Byte Daten lesen		
    2699/     CFF : 0E 10               		ld	c, 10h		; 10H x 2 Bytes
    2700/     D01 : D5                  		push	de
    2701/     D02 : DD E1               		pop	ix		; IX-Pruefsummenzaehler
    2702/     D04 : 3E 0D               		ld	a, 0Dh
    2703/     D06 : 3D                  tb_loa12:	dec	a
    2704/     D07 : 20 FD               		jr	nz, tb_loa12
    2705/     D09 : CD 64 0D            tb_loa13:	call	tb_loa19	; laden DE
    2706/     D0C : DD 19               		add	ix, de		; Pruefsumme bilden
    2707/     D0E : C5                  		push	bc
    2708/     D0F : 4D                  		ld	c, l
    2709/     D10 : 44                  		ld	b, h
    2710/     D11 : 2A 7E 18            		ld	hl, (tbb_eadr)	; Endadresse
    2711/     D14 : AF                  		xor	a
    2712/     D15 : ED 42               		sbc	hl, bc		; Endadresse erreicht?
    2713/     D17 : 69                  		ld	l, c
    2714/     D18 : 60                  		ld	h, b
    2715/     D19 : C1                  		pop	bc
    2716/     D1A : 38 16               		jr	c, tb_loa14	; ja --> Leseende
    2717/     D1C :                     		;
    2718/     D1C : 08                  		ex	af, af'
    2719/     D1D : 28 04               		jr	z, loc_D23	; bei Verify nicht speichern
    2720/     D1F :                     		;
    2721/     D1F : 73                  		ld	(hl), e		; DE auf (HL) ablegen
    2722/     D20 : 23                  		inc	hl
    2723/     D21 : 72                  		ld	(hl), d
    2724/     D22 :                     		;
    2725/     D22 : 2B                  		dec	hl
    2726/     D23 : 08                  loc_D23:	ex	af, af'
    2727/     D24 :                     		; Verify bzw. Test auf RAM
    2728/     D24 : 7B                  		ld	a, e
    2729/     D25 : BE                  		cp	(hl)
    2730/     D26 : 23                  		inc	hl
    2731/     D27 : 7A                  		ld	a, d
    2732/     D28 : 20 03               		jr	nz, loc_D2D	; E ungleich o. kein RAM
    2733/     D2A : BE                  		cp	(hl)
    2734/     D2B : 28 0B               		jr	z, tb_loa16	; D gleich, weiter, sonst
    2735/     D2D : D9                  loc_D2D:	exx
    2736/     D2E : 24                  		inc	h		; Fehler-Counter
    2737/     D2F : D9                  		exx
    2738/     D30 : 18 06               		jr	tb_loa16
    2739/     D32 :                     		;
    2740/     D32 : 3E 04               tb_loa14:	ld	a, 4
    2741/     D34 : 3D                  tb_loa15:	dec	a
    2742/     D35 : 20 FD               		jr	nz, tb_loa15
    2743/     D37 : 2B                  		dec	hl
    2744/     D38 : 23                  tb_loa16:	inc	hl
    2745/     D39 : 3E 02               		ld	a, 2
    2746/     D3B : 3D                  tb_loa17:	dec	a
    2747/     D3C : 20 FD               		jr	nz, tb_loa17
    2748/     D3E : 0D                  		dec	c
    2749/     D3F : 20 C8               		jr	nz, tb_loa13	; naechste 2 Byte
    2750/     D41 :                     ;Pruefsumme lesen		
    2751/     D41 : CD 64 0D            		call	tb_loa19	; lesen DE
    2752/     D44 : EB                  		ex	de, hl
    2753/     D45 : DD E5               		push	ix
    2754/     D47 : C1                  		pop	bc
    2755/     D48 : AF                  		xor	a
    2756/     D49 : ED 42               		sbc	hl, bc		; Prüfsumme gleich?
    2757/     D4B : EB                  		ex	de, hl		; Z=0 Ladefehler
    2758/     D4C : C9                  		ret
    2759/     D4D :                     
    2760/     D4D :                     ;------------------------------------------------------------------------------
    2761/     D4D :                     ; Funktion für Sprungverteiler 7E8h
    2762/     D4D :                     ;------------------------------------------------------------------------------
    2763/     D4D :                     
    2764/     D4D : CD 97 02            TASTE:		call	UPTAST
    2765/     D50 : 18 5B               		jr	loc_DAD		; zusätzlich Bit 7 setzen
    2766/     D52 :                     
    2767/     D52 :                     ;------------------------------------------------------------------------------
    2768/     D52 :                     ; UP zu Kassette Load Turbo
    2769/     D52 :                     ;------------------------------------------------------------------------------
    2770/     D52 :                     
    2771/     D52 :                     ; Warten auf Flankenwechsel
    2772/     D52 : DB 05               tb_loa25:	in	a, (PIODB)
    2773/     D54 : A8                  		xor	b
    2774/     D55 : CB 7F               		bit	7, a		; TB-Interface-Eingang
    2775/     D57 : 28 F9               		jr	z, tb_loa25
    2776/     D59 : C9                  		ret
    2777/     D5A :                     		
    2778/     D5A :                     ;------------------------------------------------------------------------------
    2779/     D5A :                     ; UP zu Kassette Load Turbo
    2780/     D5A :                     ;------------------------------------------------------------------------------
    2781/     D5A :                     
    2782/     D5A :                     ; Portabfrage
    2783/     D5A : DB 05               tb_loa24:	in	a, (PIODB)
    2784/     D5C : A8                  		xor	b
    2785/     D5D : CB 7F               		bit	7, a		; TB-Interface-Eingang
    2786/     D5F : F5                  		push	af
    2787/     D60 : A8                  		xor	b
    2788/     D61 : 47                  		ld	b, a
    2789/     D62 : F1                  		pop	af		; Z=0 --> Flanke
    2790/     D63 : C9                  		ret
    2791/     D64 :                     
    2792/     D64 :                     ;------------------------------------------------------------------------------
    2793/     D64 :                     ;  UP zu Kassette Load Turbo
    2794/     D64 :                     ;------------------------------------------------------------------------------
    2795/     D64 :                     
    2796/     D64 :                     ; Laden 2 Byte nach DE
    2797/     D64 : E5                  tb_loa19:	push	hl
    2798/     D65 : 2E 10               		ld	l, 10h		; 16 Datenbits
    2799/     D67 : CD 5A 0D            tb_loa20:	call	tb_loa24
    2800/     D6A : 20 03               		jr	nz, tb_loa21
    2801/     D6C : AF                  		xor	a		; Cy=0
    2802/     D6D : 18 01               		jr	tb_loa22
    2803/     D6F : 37                  tb_loa21:	scf
    2804/     D70 : CB 1A               tb_loa22:	rr	d
    2805/     D72 : CB 1B               		rr	e
    2806/     D74 : CD 52 0D            		call	tb_loa25	; Flanke abwarten
    2807/     D77 : 2D                  		dec	l
    2808/     D78 : 28 07               		jr	z, tb_loa23	; wenn fertig
    2809/     D7A : 3E 12               		ld	a, 12h
    2810/     D7C : 3D                  tb_loa26:	dec	a
    2811/     D7D : 20 FD               		jr	nz, tb_loa26
    2812/     D7F : 18 E6               		jr	tb_loa20
    2813/     D81 : E1                  tb_loa23:	pop	hl
    2814/     D82 : C9                  		ret
    2815/     D83 :                     		
    2816/     D83 :                     ;------------------------------------------------------------------------------
    2817/     D83 :                     ;  UP zu Kassette Load Turbo
    2818/     D83 :                     ;------------------------------------------------------------------------------
    2819/     D83 :                     
    2820/     D83 : 21 C3 0D            sub_D83:	ld	hl, aFound	; "FOUND "
    2821/     D86 : CD E6 0B            sub_D86:	call	loc_BE6		; Ausgabe Status
    2822/     D89 :                     ; sub_D89 wird extern in Turbo genutzt
    2823/     D89 :                     ; Anzeige Dateiname, aadr, eadr
    2824/     D89 : 21 BE 18            sub_D89:	ld	hl, tbl_filename	; Dateiname
    2825/     D8C : 06 13               		ld	b, 13h
    2826/     D8E : 7E                  loc_D8E:	ld	a, (hl)
    2827/     D8F : D7                  		rst	10h		; OUTCH
    2828/     D90 : 23                  		inc	hl
    2829/     D91 : 10 FB               		djnz	loc_D8E
    2830/     D93 : DF                  		rst	18h		; PRNST
    2831/     D94 : 20 20 20 A0         		db "   ",0A0h
    2832/     D98 : 2A D3 18            		ld	hl, (tbl_aadr)	; gelesene aadr
    2833/     D9B : 22 5B 18            		ld	(ARG1),	hl	; in Argument 1 sichern
    2834/     D9E : CD 9A 01            		call	OUTHL		; Ausgabe HL hexadezimal
    2835/     DA1 : DF                  		rst	18h		; PRNST
    2836/     DA2 : 20 A0               		db ' ',0A0h
    2837/     DA4 : 2A D1 18            		ld	hl, (tbl_eadr)	; gelesene eadr
    2838/     DA7 : 22 5D 18            		ld	(ARG2),	hl	; in Argument 2 sichern
    2839/     DAA : C3 9A 01            		jp	OUTHL		; Ausgabe HL hexadezimal
    2840/     DAD : C8                  loc_DAD:	ret	z
    2841/     DAE : CB FF               		set	7, a
    2842/     DB0 : C9                  		ret
    2843/     DB1 :                     
    2844/     DB1 :                     ;------------------------------------------------------------------------------
    2845/     DB1 :                     ; Turbo Meldungen
    2846/     DB1 :                     ;------------------------------------------------------------------------------
    2847/     DB1 :                     
    2848/     DB1 : 57 41 52 54 45 4E   aWarten:	db "WARTEN"
    2849/     DB7 : 56 45 52 49 46 59   aVerify:	db "VERIFY"
    2850/     DBD : 4C 41 44 45 4E 20   aLaden:		db "LADEN "
    2851/     DC3 : 46 4F 55 4E 44 20   aFound:		db "FOUND "
    2852/     DC9 :                     
    2853/     DC9 :                     ;------------------------------------------------------------------------------
    2854/     DC9 :                     ; UP zu Kassette Load Turbo
    2855/     DC9 :                     ;------------------------------------------------------------------------------
    2856/     DC9 :                     
    2857/     DC9 :                     ; Fehler
    2858/     DC9 : 11 82 18            loc_DC9:	ld	de, tb_errarr	; Blockfehler-Array
    2859/     DCC : FD 7D               		ld	a, iyl
    2860/     DCE : 93                  		sub	e
    2861/     DCF : C8                  		ret	z		; ret, wenn keine Einträge
    2862/     DD0 :                     		; sonst Ausgabe Fehlerliste
    2863/     DD0 : DF                  		rst	18h		; PRNST
    2864/     DD1 : 8D                  		db 8Dh
    2865/     DD2 : CD 68 02            		call	error		; Ausgabe "Error"
    2866/     DD5 : 0F                  		rrca
    2867/     DD6 : 47                  		ld	b, a
    2868/     DD7 : D9                  		exx
    2869/     DD8 : 95                  		sub	l
    2870/     DD9 : D9                  		exx
    2871/     DDA : 20 05               		jr	nz, loc_DE1
    2872/     DDC : DF                  		rst	18h		; PRNST
    2873/     DDD : 52 41 4D BA         		db "RAM",':'+80h
    2874/     DE1 : 1A                  loc_DE1:	ld	a, (de)
    2875/     DE2 : 13                  		inc	de
    2876/     DE3 : 6F                  		ld	l, a
    2877/     DE4 : 1A                  		ld	a, (de)
    2878/     DE5 : 13                  		inc	de
    2879/     DE6 : 67                  		ld	h, a
    2880/     DE7 : DF                  		rst	18h		; PRNST
    2881/     DE8 : A0                  		db	' '+80h
    2882/     DE9 : CD 9A 01            		call	OUTHL		; Ausgabe HL hexadezimal
    2883/     DEC : 10 F3               		djnz	loc_DE1
    2884/     DEE : 05                  		dec	b
    2885/     DEF : C9                  		ret
    2886/     DF0 :                     
    2887/     DF0 :                     ;------------------------------------------------------------------------------
    2888/     DF0 :                     ; Autostart-Test
    2889/     DF0 :                     ;------------------------------------------------------------------------------
    2890/     DF0 :                     
    2891/     DF0 : CD 31 0A            loc_DF0:	call	q_ko20		; Start/Stop-Schaltung stopp
    2892/     DF3 : EB                  		ex	de, hl
    2893/     DF4 : CD 7B 0A            		call	tstsch		; Test auf 'SCH' auf Programmanfang (DE)
    2894/     DF7 : C0                  		ret	nz		; kein Autostart
    2895/     DF8 : E9                  		jp	(hl)		; sonst starten
    2896/     DF9 :                     ;
    2897/     DF9 :                     
    2898/     DF9 :                     ;------------------------------------------------------------------------------
    2899/     DF9 :                     ; routch
    2900/     DF9 :                     ; Ausgabe V24
    2901/     DF9 :                     ; in hl=kdov24 Kontrollregister
    2902/     DF9 :                     ;------------------------------------------------------------------------------
    2903/     DF9 :                     ; PIO2 A1 Ausgang Daten TxD 
    2904/     DF9 :                     ;      A2 Eingang empfangsbereit CTS 
    2905/     DF9 :                     ; Taktraten gelten bei 2.4 MHz Systemtakt
    2906/     DF9 :                     ;------------------------------------------------------------------------------
    2907/     DF9 :                     
    2908/     DF9 : C5                  v24out:		push	bc
    2909/     DFA : F5                  		push	af
    2910/     DFB : 2B                  		dec	hl		; hl=kdov24o
    2911/     DFC : 01 FF 7F            		ld	bc, 7FFFh	; Datenmaske 7F= 7 Bit, FF= 8 Bit
    2912/     DFF : CB 66               		bit	4, (hl)		; 1=7 Datenbit, + P.ungerade
    2913/     E01 : 20 05               		jr	nz, v24out2	; ja
    2914/     E03 : CB 6E               		bit	5, (hl)		; 1=7 Datenbit, + P.gerade
    2915/     E05 : 28 07               		jr	z, v24out3	; nein -> 8 Datenbit
    2916/     E07 : 48                  		ld	c, b		; ja: c=7F, sonst c=FF
    2917/     E08 :                     v24out2:	; parity bestimmen
    2918/     E08 : A0                  		and	b		; ggf. 7. Bit löschen
    2919/     E09 : EA 0E 0E            		jp	pe, v24out3
    2920/     E0C : CB FF               		set	7, a		; Parity setzen
    2921/     E0E : A9                  v24out3:	xor	c		; Maske anwenden, bits negieren
    2922/     E0F : 4F                  		ld	c, a		; c=auszugebendes Zeichen
    2923/     E10 :                     		;
    2924/     E10 : 7E                  		ld	a, (hl)		; kdov24
    2925/     E11 : E6 07               		and	7		; Baudrate
    2926/     E13 : 47                  		ld	b, a
    2927/     E14 : 3E 01               		ld	a, 1
    2928/     E16 : 87                  v24out4:	add	a, a
    2929/     E17 : 10 FD               		djnz	v24out4
    2930/     E19 : 57                  		ld	d, a		; Baudratenzähler d=2^b
    2931/     E1A :                     					; b=1,d=2 19200 Baud, 
    2932/     E1A :                     					; b=2, d=4 9600 Baud
    2933/     E1A :                     					; .. b=7, d=128 300 Baud 
    2934/     E1A :                     		;
    2935/     E1A : CB 76               		bit	6, (hl)		; 1=3-Draht-Handshake
    2936/     E1C : 20 06               		jr	nz, v24out6	; dann nicht auf CTS warten
    2937/     E1E : DB 08               v24out5:	in	a, (PIO2DA)	; sonst X-Draht
    2938/     E20 : CB 57               		bit	2, a		; empfangsbereit CTS ?
    2939/     E22 : 20 FA               		jr	nz, v24out5	; warten auf Freigabe
    2940/     E24 :                     		;
    2941/     E24 : 06 0A               v24out6:	ld	b, 10		; 10 Bits senden (Start - 8Bit/7Bit+P - Stop)
    2942/     E26 : CB 5E               		bit	3, (hl)		; Stop-bit
    2943/     E28 : 28 01               		jr	z, v24out7	; 0=1 Stop-bit	
    2944/     E2A : 04                  		inc	b		; sonst ein Stop-Bit mehr
    2945/     E2B : 37                  v24out7:	scf			; Start mit 1-Bits
    2946/     E2C :                     		;
    2947/     E2C : 5A                  v24out8:	ld	e, d		; Baudratenzähler		4   Takte
    2948/     E2D : CB CF               		set	1, a		; b1=1				8
    2949/     E2F : 30 02               		jr	nc, v24out9	;				12/7
    2950/     E31 : CB 8F               		res	1, a		; b1=0				8 
    2951/     E33 : D3 08               v24out9:	out	(PIO2DA), a	; A1 Ausgang Daten TxD		(11
    2952/     E35 : E5                  		push	hl		; Zeitverzögerung		11
    2953/     E36 : E1                  		pop	hl		; Zeitverzögerung		10
    2954/     E37 : 7F                  		ld	a, a		; Zeitverzögerung		4
    2955/     E38 : 1D                  		dec	e		;				4
    2956/     E39 : 20 F8               		jr	nz, v24out9	;				12) * E - 5
    2957/     E3B : CB 39               		srl	c		; c=auszugebendes Zeichen	8
    2958/     E3D :                     					; nächstes Bit nach Cy
    2959/     E3D : 10 ED               		djnz	v24out8		;				13
    2960/     E3F :                     					; insg. 251 bzw.248 Takte bei E=4 (9600 Baud)
    2961/     E3F : 23                  		inc	hl
    2962/     E40 : F1                  		pop	af
    2963/     E41 : C1                  		pop	bc
    2964/     E42 : C9                  		ret
    2965/     E43 :                     		
    2966/     E43 :                     
    2967/     E43 :                     ; iobyt
    2968/     E43 :                     ; Ausgabe: b4 Bildschirm, b5 V24 (RS 232c), b6 Reserve, b7 User
    2969/     E43 :                     		
    2970/     E43 : 21 20 18            routch0:	ld	hl, kdov24	; hl=Kommandocode V 24
    2971/     E46 : C3 F3 0E            		jp	routch1		; dann test auf Eingabegerät
    2972/     E49 :                     
    2973/     E49 :                     ;------------------------------------------------------------------------------
    2974/     E49 :                     ; c Copyrightmeldung
    2975/     E49 :                     ;------------------------------------------------------------------------------
    2976/     E49 :                     
    2977/     E49 : 00 09 63 0D         		db 0,9,'c',0Dh
    2978/     E4D :                     
    2979/     E4D : DF                  		rst	18h		; PRNST
    2980/     E4E : 0F 41 43 31 20 4D   		db 0Fh,"AC1 MONITOR V8.0",0Dh
                    4F 4E 49 54 4F 52 
                    20 56 38 2E 30 0D 
    2981/     E60 : 0F 43 6F 70 79 72   		db 0Fh,"Copyright (C) 11/1987 by E.Ludwig ",0Dh
                    69 67 68 74 20 28 
                    43 29 20 31 31 2F 
                    31 39 38 37 20 62 
                    79 20 45 2E 4C 75 
                    64 77 69 67 20 0D 
    2982/     E84 : 0F 53 74 72 2E 64   		db 0Fh,"Str.d.Befreiung 8 ",0Dh
                    2E 42 65 66 72 65 
                    69 75 6E 67 20 38 
                    20 0D             
    2983/     E98 : 0F 48 61 6C 6C 65   		db 0Fh,"Halle ",0Dh
                    20 0D             
    2984/     EA0 : 0F 34 30 37 30 0D   		db 0Fh,"4070",0Dh
    2985/     EA6 : 0F 11 54 65 6C 2E   		db 0Fh,11h,"Tel.41082",10h,8Dh
                    34 31 30 38 32 10 
                    8D                
    2986/     EB3 : C9                  		ret
    2987/     EB4 :                     
    2988/     EB4 :                     ;------------------------------------------------------------------------------
    2989/     EB4 :                     ;UP "Joy".Abfrage Joystick 1,keine Taste Z - Flag
    2990/     EB4 :                     ;	    gesetzt und	A = 0,oben bit 0, unten	bit 1,links
    2991/     EB4 :                     ;	    bit	2, rechts bit 3, Feuerknopf bit	4 vom Akku
    2992/     EB4 :                     ;	    gesetzt.
    2993/     EB4 :                     ;------------------------------------------------------------------------------
    2994/     EB4 :                     
    2995/     EB4 : C5                  JOYST:		push	bc
    2996/     EB5 : DB 05               		in	a, (PIODB)
    2997/     EB7 : 4F                  		ld	c, a
    2998/     EB8 : CB 8F               		res	1, a
    2999/     EBA : D3 05               		out	(PIODB), a
    3000/     EBC : DB 04               		in	a, (PIODA)	; Tastatur
    3001/     EBE : 47                  		ld	b, a
    3002/     EBF : 79                  		ld	a, c
    3003/     EC0 : D3 05               		out	(PIODB), a
    3004/     EC2 : 78                  		ld	a, b
    3005/     EC3 : 00                  		nop
    3006/     EC4 : E6 1F               		and	1Fh
    3007/     EC6 : C1                  		pop	bc
    3008/     EC7 : C9                  		ret
    3009/     EC8 :                     
    3010/     EC8 :                     ;------------------------------------------------------------------------------
    3011/     EC8 :                     ;? Help
    3012/     EC8 :                     ;------------------------------------------------------------------------------
    3013/     EC8 :                     
    3014/     EC8 : 00 09 3F 0D         		db 0,9,'?',0Dh
    3015/     ECC :                     
    3016/     ECC : DF                  help:		rst	18h		; PRNST
    3017/     ECD : 48 65 6C 70 3A 8D   		db "Help:",8Dh
    3018/     ED3 : 21 00 04            		ld	hl, KDOANF	; Suchbereich Anfang
    3019/     ED6 : 01 00 BC            		ld	bc, RAMEND-KDOANF+1	; Länge
    3020/     ED9 : AF                  help1:		xor	a		; suche 00
    3021/     EDA : ED B1               		cpir
    3022/     EDC : E0                  		ret	po
    3023/     EDD : 3E 09               		ld	a, 9		; folgt 09?
    3024/     EDF : BE                  		cp	(hl)
    3025/     EE0 : 20 F7               		jr	nz, help1
    3026/     EE2 : 23                  		inc	hl
    3027/     EE3 : 56                  		ld	d, (hl)		; kdo merken
    3028/     EE4 : 23                  		inc	hl
    3029/     EE5 : 3E 0D               		ld	a, 0Dh		; folgt 0D?
    3030/     EE7 : BE                  		cp	(hl)
    3031/     EE8 : 20 EF               		jr	nz, help1	; wenn Rahmen nicht gefunden
    3032/     EEA : 7A                  		ld	a, d		; sonst kdo anzeigen
    3033/     EEB : D7                  		rst	10h		; OUTCH
    3034/     EEC : DF                  		rst	18h		; PRNST
    3035/     EED : 20 20 A0            		db "  ",0A0h
    3036/     EF0 : 18 E7               		jr	help1
    3037/     EF2 :                     
    3038/     EF2 : FF                  		db 0FFh
    3039/     EF3 :                     
    3040/     EF3 :                     ;------------------------------------------------------------------------------
    3041/     EF3 :                     ; routch
    3042/     EF3 :                     ; iobyt
    3043/     EF3 :                     ; Ausgabe: b4 Bildschirm, b5 V24 (RS 232c), b6 Reserve, b7 User
    3044/     EF3 :                     ;------------------------------------------------------------------------------
    3045/     EF3 :                     
    3046/     EF3 :                     ; zu routch
    3047/     EF3 : F5                  routch1:	push	af
    3048/     EF4 : CB 7E               		bit	7, (hl)		; hl=kdov24
    3049/     EF6 : 20 02               		jr	nz, routch2
    3050/     EF8 : E6 7F               		and	7Fh
    3051/     EFA : 23                  routch2:	inc	hl
    3052/     EFB :                     ; zusätzliche Steuercodes auswerten
    3053/     EFB : FE 18               		cp	18h		; Drucker ein (V24)
    3054/     EFD : 28 07               		jr	z, routch3
    3055/     EFF : FE 19               		cp	19h		; Drucker aus (V24)
    3056/     F01 : 20 07               		jr	nz, routch4
    3057/     F03 : 36 11               		ld	(hl), 11h
    3058/     F05 : 21                  		db	21h		; ld hl, xxx; nächsten Befehl überspringen
    3059/     F06 : CB EE               routch3:	set	5, (hl)	
    3060/     F08 : 18 14               		jr	routch5
    3061/     F0A :                     ;		
    3062/     F0A : CB 66               routch4:	bit	4, (hl)		; b4 ?
    3063/     F0C : C4 33 00            		call	nz, co		; Ausgabe über Bildschirm
    3064/     F0F : CB 6E               		bit	5, (hl)		; b5 ?
    3065/     F11 : C4 F9 0D            		call	nz, v24out	; V24 (RS 232c)
    3066/     F14 : CB 76               		bit	6, (hl)		; b6 ? Reserve
    3067/     F16 : C4 FF FF            		call	nz, 0FFFFh	; dort steht normalerweise FF -> break
    3068/     F19 : CB 7E               		bit	7, (hl)		; b7 ?
    3069/     F1B : C4 F3 18            		call	nz, unk_18F3	; User-Ausgaberoutine
    3070/     F1E : F1                  routch5:	pop	af
    3071/     F1F : D1                  		pop	de
    3072/     F20 : E1                  		pop	hl
    3073/     F21 : C9                  		ret
    3074/     F22 :                     
    3075/     F22 :                     ;------------------------------------------------------------------------------
    3076/     F22 :                     ;
    3077/     F22 :                     ;------------------------------------------------------------------------------
    3078/     F22 :                     
    3079/     F22 :                     ; Tabelle	Tastenkode (nur	Monitorversion 8*8 und 8*12-Tastatur)
    3080/     F22 :                     
    3081/     F22 : FF                  		db 0FFh
    3082/     F23 : FF                  		db 0FFh
    3083/     F24 : FF                  		db 0FFh
    3084/     F25 : FF                  		db 0FFh
    3085/     F26 : FF                  		db 0FFh
    3086/     F27 : FF                  		db 0FFh
    3087/     F28 : FF                  		db 0FFh
    3088/     F29 : FF                  		db 0FFh
    3089/     F2A : FF                  		db 0FFh
    3090/     F2B : FF                  		db 0FFh
    3091/     F2C : FF                  		db 0FFh
    3092/     F2D : FF                  		db 0FFh
    3093/     F2E : FF                  		db 0FFh
    3094/     F2F : FF                  		db 0FFh
    3095/     F30 : FF                  		db 0FFh
    3096/     F31 : FF                  		db 0FFh
    3097/     F32 : FF                  		db 0FFh
    3098/     F33 : FF                  		db 0FFh
    3099/     F34 : FF                  		db 0FFh
    3100/     F35 : FF                  		db 0FFh
    3101/     F36 : FF                  		db 0FFh
    3102/     F37 : FF                  		db 0FFh
    3103/     F38 : FF                  		db 0FFh
    3104/     F39 : FF                  		db 0FFh
    3105/     F3A : FF                  		db 0FFh
    3106/     F3B : FF                  		db 0FFh
    3107/     F3C : FF                  		db 0FFh
    3108/     F3D : FF                  		db 0FFh
    3109/     F3E : FF                  		db 0FFh
    3110/     F3F : FF                  		db 0FFh
    3111/     F40 : FF                  		db 0FFh
    3112/     F41 : FF                  		db 0FFh
    3113/     F42 :                     
    3114/     F42 :                     ;------------------------------------------------------------------------------
    3115/     F42 :                     ; UP zu u_kdo Programmieren U555
    3116/     F42 :                     ;------------------------------------------------------------------------------
    3117/     F42 :                     
    3118/     F42 : DF                  loc_F42:	rst	18h		; PRNST
    3119/     F43 : 20 43 4C D2         		db " CL",0D2h
    3120/     F47 : C3 68 02            		jp	error		; Ausgabe "Error"
    3121/     F4A :                     
    3122/     F4A :                     ;------------------------------------------------------------------------------
    3123/     F4A :                     ; U U555	Programmieren U555 / 2708
    3124/     F4A :                     ;------------------------------------------------------------------------------
    3125/     F4A :                     
    3126/     F4A : 00 09 55 0D         		db 0,9,'U',0Dh
    3127/     F4E :                     
    3128/     F4E : 2A 5B 18            u_kdo:		ld	hl, (ARG1)	; Argument 1
    3129/     F51 : 3E 8F               		ld	a, 8Fh
    3130/     F53 : D3 0A               		out	(PIO2CA), a
    3131/     F55 : 11 00 00            		ld	de, 0
    3132/     F58 : CD E0 02            uko1:		call	sub_2E0
    3133/     F5B : A6                  		and	(hl)
    3134/     F5C : BE                  		cp	(hl)
    3135/     F5D : 20 E3               		jr	nz, loc_F42
    3136/     F5F : CD E3 0F            		call	wko5
    3137/     F62 : 28 F4               		jr	z, uko1
    3138/     F64 : 06 88               		ld	b, 88h
    3139/     F66 : DB 05               		in	a, (PIODB)
    3140/     F68 : CB A7               		res	4, a
    3141/     F6A : D3 05               		out	(PIODB), a
    3142/     F6C : 4F                  		ld	c, a
    3143/     F6D : 16 00               uko2:		ld	d, 0
    3144/     F6F : 2A 5B 18            		ld	hl, (ARG1)	; Argument 1
    3145/     F72 : 7E                  uko3:		ld	a, (hl)
    3146/     F73 : D3 08               		out	(PIO2DA), a
    3147/     F75 : 7A                  		ld	a, d
    3148/     F76 : D3 09               		out	(PIO2DB), a
    3149/     F78 : 79                  		ld	a, c
    3150/     F79 : CB E7               		set	4, a
    3151/     F7B : D3 05               		out	(PIODB), a
    3152/     F7D : 79                  		ld	a, c
    3153/     F7E : D3 05               		out	(PIODB), a
    3154/     F80 : 7B                  		ld	a, e
    3155/     F81 : D3 09               		out	(PIO2DB), a
    3156/     F83 : 79                  		ld	a, c
    3157/     F84 : CB EF               		set	5, a
    3158/     F86 : D3 05               		out	(PIODB), a
    3159/     F88 : 3E 2E               		ld	a, 2Eh ; '.'
    3160/     F8A : 3D                  uko4:		dec	a
    3161/     F8B : 20 FD               		jr	nz, uko4
    3162/     F8D : 79                  		ld	a, c
    3163/     F8E : D3 05               		out	(PIODB), a
    3164/     F90 : CD E3 0F            		call	wko5
    3165/     F93 : 28 DD               		jr	z, uko3
    3166/     F95 : 10 D6               		djnz	uko2
    3167/     F97 : 79                  		ld	a, c
    3168/     F98 : CB E7               		set	4, a
    3169/     F9A : D3 05               		out	(PIODB), a
    3170/     F9C : DF                  		rst	18h		; PRNST
    3171/     F9D : 87                  		db 87h
    3172/     F9E : 0E FF               		ld	c, 0FFh
    3173/     FA0 : 18 0A               		jr	wko1
    3174/     FA2 :                     
    3175/     FA2 :                     ;------------------------------------------------------------------------------
    3176/     FA2 :                     ; W Lesen	Eprom Auslesen von U 555/2708 in den Speicher
    3177/     FA2 :                     ;------------------------------------------------------------------------------
    3178/     FA2 :                     
    3179/     FA2 : 00 09 57 0D         		db 0,9,'W',0Dh
    3180/     FA6 :                     
    3181/     FA6 : 0E 00               w_kdo:		ld	c, 0
    3182/     FA8 : 3E 8F               		ld	a, 8Fh
    3183/     FAA : D3 0A               		out	(PIO2CA), a
    3184/     FAC : 2A 5B 18            wko1:		ld	hl, (ARG1)	; Argument 1
    3185/     FAF : 11 00 00            		ld	de, 0
    3186/     FB2 : CD E0 02            wko2:		call	sub_2E0
    3187/     FB5 : CB 41               		bit	0, c
    3188/     FB7 : 20 01               		jr	nz, wko3
    3189/     FB9 : 77                  		ld	(hl), a
    3190/     FBA : BE                  wko3:		cp	(hl)
    3191/     FBB : 28 14               		jr	z, wko4
    3192/     FBD : CD 68 02            		call	error		; Ausgabe "Error"
    3193/     FC0 : CD 89 05            		call	outhlsp		; Ausgabe HL + 4 Leerzeichen
    3194/     FC3 : CD 83 01            		call	OUTHEX		; Ausgabe A hexadezimal
    3195/     FC6 : DF                  		rst	18h		; PRNST
    3196/     FC7 : A0                  		db 0A0h
    3197/     FC8 : 7E                  		ld	a, (hl)
    3198/     FC9 : CD 83 01            		call	OUTHEX		; Ausgabe A hexadezimal
    3199/     FCC : CF                  		rst	8		; INCH
    3200/     FCD : FE 0D               		cp	0Dh
    3201/     FCF : C0                  		ret	nz
    3202/     FD0 : D7                  		rst	10h		; OUTCH
    3203/     FD1 : CD E3 0F            wko4:		call	wko5
    3204/     FD4 : 28 DC               		jr	z, wko2
    3205/     FD6 : 2A 5B 18            		ld	hl, (ARG1)	; Argument 1
    3206/     FD9 : 11 FF 03            		ld	de, 3FFh
    3207/     FDC : 19                  		add	hl, de
    3208/     FDD : 22 5D 18            		ld	(ARG2),	hl	; Argument 2
    3209/     FE0 : C3 04 04            		jp	crc		; CRC
    3210/     FE3 :                     
    3211/     FE3 :                     ;
    3212/     FE3 : 23                  wko5:		inc	hl
    3213/     FE4 : 1C                  		inc	e
    3214/     FE5 : CB 73               		bit	6, e
    3215/     FE7 : 28 03               		jr	z, wko6
    3216/     FE9 : 14                  		inc	d
    3217/     FEA : 1E 00               		ld	e, 0
    3218/     FEC : CB 62               wko6:		bit	4, d
    3219/     FEE : C9                  		ret
    3220/     FEF :                     
    3221/     FEF :                     ;------------------------------------------------------------------------------
    3222/     FEF :                     ; X Exit Sprung in das Betriebssystem Programmpaket X
    3223/     FEF :                     ;------------------------------------------------------------------------------
    3224/     FEF :                     
    3225/     FEF : 00 09 58 0D         		db 0,9,'X',0Dh
    3226/     FF3 :                     
    3227/     FF3 : C3 6B 00            		jp	rWarm2
    3228/     FF6 :                     
    3229/     FF6 :                     ;------------------------------------------------------------------------------
    3230/     FF6 :                     ; b Basic	Start des Basic-Interpreters V.	3.2
    3231/     FF6 :                     ;------------------------------------------------------------------------------
    3232/     FF6 :                     
    3233/     FF6 :                     		; db 0 fehlt, aber Befehle davor endet auf 00
    3234/     FF6 :                     		; da lo(rWarm2) == 0
    3235/     FF6 :                     		
    3236/     FF6 : 09 62 0D            		db 9,'b',0Dh
    3237/     FF9 : 3E 02               		ld	a, 2
    3238/     FFB : D3 14               		out	(modul1), a	; Modul1 ROM "Basic" aktivieren
    3239/     FFD : C3 CC 5F            		jp	5FCCh		; und starten
    3240/    1000 :                     
    3241/    1000 :                     ;------------------------------------------------------------------------------
    3242/    1000 :                     ; Arbeitszellen Monitor
    3243/    1000 :                     ;------------------------------------------------------------------------------
    3244/    1000 :                     
    3245/    1800 :                     		org RAM
    3246/    1800 :                     
    3247/    1800 :                     cupos:		ds 2			; Cursorposition
    3248/    1802 :                     ; Sprungverteiler f. RST-Aufrufe und NMI
    3249/    1802 :                     ; wird initialisiert mit Werten von sv_rst
    3250/    1802 :                     jp_rst08:	ds 3			; jp	rinch
    3251/    1805 :                     jp_rst10:	ds 3			; jp	routch
    3252/    1808 :                     jp_rst18:	ds 3			; jp	rprnst
    3253/    180B :                     jp_rst20:	ds 3			; jp	rWarm	Warmstart
    3254/    180E :                     jp_rst28:	ds 3			; jp	loa15	Eingabe 1 Byte A Kassette
    3255/    1811 :                     jp_rst30:	ds 3			; jp	sav10	Ausgabe 1 Byte A Kassette
    3256/    1814 :                     jp_rst38:	ds 3			; jp	rst38	Einsprung bei Einzelschritt
    3257/    1817 :                     nmi:		ds 3			; jp	BREAK	NMI: Breakpoint
    3258/    181A :                     ;Hilfsregister, V24, I/O
    3259/    181A :                     soil:		ds 2			; Beginn Eingabezeile	, 0FFFFh
    3260/    181C :                     warmcod:	ds 3			; Warmstartcode		, "SCH"
    3261/    181F :                     kdov24o:	ds 1			; Kommandocode V 24 out	, A2h
    3262/    1820 :                     kdov24:		ds 1			; Kommandocode V 24 in	, 2
    3263/    1821 :                     IOBYT:		ds 1			; Ein/Ausgabebyte	; 11h
    3264/    1822 :                     			; Eingabe: b0 Tastatur, b1 V24 (Rs 232c), b2 Reserve, b3 User
    3265/    1822 :                     			; Ausgabe: b4 Bildschirm, b5 V24 (RS 232c), b6 Reserve, b7 User
    3266/    1822 :                     ;
    3267/    1822 :                     tacod:		ds 1			; Tastencode der zuletzt gedrückten Taste
    3268/    1823 :                     phako:		ds 1			; Hilfsregister	Einlesen, Phasenkorrektur
    3269/    1824 :                     repeat:		ds 1			; Hilfsregister	Repetierfunktion Tastatur
    3270/    1825 :                     poscnt:		ds 1			; Hilfsregister Kursorpositionierung (CTRL+N)
    3271/    1826 :                     					; std. 1, nach ctrln 5 (dh 5-1 Ziffern werden erwartet)
    3272/    1826 :                     ;Stack
    3273/    1826 :                     		ds 30h			; Stackbereich
    3274/    1856 :                     SYSSK:		ds 2			; Stack
    3275/    1858 :                     data:		ds 2			; Hilfsregister	UP "INLINE"
    3276/    185A :                     		ds 1
    3277/    185B :                     ;Kdo-Argumente
    3278/    185B :                     ARG1:		ds 2			; Argument 1
    3279/    185D :                     ARG2:		ds 2			; Argument 2
    3280/    185F :                     ARG3:		ds 2			; Argument 3
    3281/    1861 :                     ;Registerrettebereich (register save area)
    3282/    1861 :                     ;Reihenfolge REGAFX..REGSP ist wichtig! Nicht verändern!
    3283/    1861 : =1861H              RSA		equ	$
    3284/    1861 :                     REGAFX:		ds 2
    3285/    1863 :                     REGBCX:		ds 2
    3286/    1865 :                     REGDEX:		ds 2
    3287/    1867 :                     REGHLX:		ds 2
    3288/    1869 :                     REGAF:		ds 2
    3289/    186B :                     REGBC:		ds 2
    3290/    186D :                     REGDE:		ds 2
    3291/    186F :                     REGHL:		ds 2
    3292/    1871 :                     REGIX:		ds 2
    3293/    1873 :                     REGIY:		ds 2
    3294/    1875 :                     REGPC:		ds 2
    3295/    1877 :                     REGSP:		ds 2
    3296/    1879 :                     ;
    3297/    1879 :                     BPADR:		ds 2			; RSA: BP
    3298/    187B :                     BPOPC:		ds 3			; RSA: Breakpointsequenz
    3299/    187E :                     
    3300/    187E :                     ;Speicher Save/Load Turbo-Tape
    3301/    187E :                     tbb_eadr:	ds 2			; Endadr. zum Speichern
    3302/    1880 :                     tbb_aadr:	ds 2			; AAdr. zu speichender Block
    3303/    1882 :                     tb_errarr:	ds 20			; Speicher für 10 Adressen Blockfehler
    3304/    1896 :                     					; getestet wird auf 12h ! Das über-
    3305/    1896 :                     					; schreibt dann die nachfolgenden 6x'N'
    3306/    1896 :                     ;32 Byte Buffer für Turbo Namenskopf
    3307/    1896 :                     tb_kopfbuf:	ds 8			; 8x'N'
    3308/    189E :                     tbh_filename:	ds 16			; Dateiname
    3309/    18AE :                     tbh_trenner:	ds 2			; Trenner ': '
    3310/    18B0 :                     tbh_filetyp:	ds 1			; Dateityp, 'D'-Datei, 'P'-Programm
    3311/    18B1 :                     tbh_eadr:	ds 2			; eadr
    3312/    18B3 :                     tbh_aadr:	ds 2			; aadr
    3313/    18B5 :                     tbh_special:	ds 1			; 'L'	; L für Ludwig ?
    3314/    18B6 :                     ;32 Byte Kopfblockbuffer beim Lesen
    3315/    18B6 :                     tb_blkbuf:	ds 8
    3316/    18BE :                     tbl_filename:	ds 16			; Dateiname
    3317/    18CE :                     tbl_trenner:	ds 2			; Trenner ': '
    3318/    18D0 :                     tbl_filetyp:	ds 1			; Dateityp
    3319/    18D1 :                     tbl_eadr:	ds 2			; eadr
    3320/    18D3 :                     tbl_aadr:	ds 2			; aadr 
    3321/    18D5 :                     tbl_special:	ds 1			; Kennung
    3322/    18D6 :                     
    3323/    18D6 :                     ; es sind noch ein paar Bytes frei 18D6..18DF
    3324/    18D6 :                     
    3325/    18F0 :                     		org	RAM+0F0h
    3326/    18F0 :                     
    3327/    18F0 :                     unk_18F0:	ds 3		; User Eingaberoutine
    3328/    18F3 :                     unk_18F3:	ds 3		; User Ausgaberoutine
    3329/    18F6 :                     
    3330/    18F6 : =18F6H              sysramend:	equ $
    3331/    18F6 :                     
    3332/    18F6 :                     		end
 AS V1.42 Beta [Bld 157] - Source File mon_v8.asm - Page 2 - 1/25/2023 11:3:40


  Symbol Table (* = unused):
  --------------------------

*AA :                           12B C | *ABREA :                        258 C |
 AFOUND :                      0DC3 C |  AKO1 :                         51D C |
 AKO2 :                         525 C |  AKO3 :                         52F C |
 AKO4 :                         552 C |  AKO5 :                         565 C |
 ALADEN :                      0DBD C | *ARCHITECTURE :  i386-unknown-win32 - |
 ARG1 :                        185B C |  ARG2 :                        185D C |
 ARG3 :                        185F C |  ASCH :                         23A C |
 AVERIFY :                     0DB7 C |  AWARTEN :                     0DB1 C |
 BEEP :                         272 C |  BEEP1 :                        275 C |
*BIGENDIAN :                      0 - |  BKO1 :                         6CE C |
 BPADR :                       1879 C |  BPOPC :                       187B C |
*BRANCHEXT :                      0 - |  BREAK :                        243 C |
*BREAK1 :                       24B C |  BREAK2 :                       25E C |
 BWS :                         1000 - |  BWSANF :                      17FF - |
 BWSEND :                      1000 - | *CASESENSITIVE :                  0 - |
 CKO1 :                         69C C |  CKO2 :                         6BF C |
 CO :                            33 C |  CO0 :                          300 C |
 CO00 :                          2B C |  CO1 :                          318 C |
 CO10 :                         37F C |  CO11 :                         392 C |
 CO12 :                         3AB C |  CO13 :                         3B3 C |
 CO14 :                         3C0 C |  CO2 :                          31B C |
 CO3 :                          328 C |  CO4 :                          32B C |
 CO5 :                          333 C |  CO6 :                          354 C |
 CO7 :                          355 C |  CO8 :                          35D C |
 CO9 :                          377 C |  COLS :                          40 - |
*CONSTPI :        3.141592653589793 - |  COTAB :                        3C7 C |
 CRC :                          404 - |  CRC1 :                         40B C |
 CRC2 :                         40D C | *CRC3 :                         417 C |
 CRC4 :                         41E C |  CSAVE :                        8F2 C |
 CTC0 :                           0 - |  CTC1 :                           1 - |
 CTC2 :                           2 - | *CTC3 :                           3 - |
 CUPOS :                       1800 C |  DATA :                        1858 C |
*DATE :                   1/25/2023 - |  EKO1 :                         728 C |
 EKO2 :                         72B C |  ENDE8 :                        0A2 C |
 ERROR :                        268 C | *FALSE :                          0 - |
 FKDO1 :                        441 C |  FKDO10 :                       47E C |
 FKDO2 :                        44D C |  FKDO3 :                        450 C |
 FKDO4 :                        453 C | *FKDO5 :                        455 C |
 FKDO6 :                        45F C |  FKDO7 :                        463 C |
 FKDO8 :                        470 C |  FKDO9 :                        473 C |
 FLAGS :                        579 C |  FLAGS1 :                       57F C |
 FLAGS2 :                       585 C |  FLAGTAB :                      5BE C |
*FULLPMMU :                       1 - |  GETCO1 :                       1DE C |
 GTKO1 :                        83F C |  GTKO10 :                       8A3 C |
 GTKO11 :                       8AA C |  GTKO12 :                       8B7 C |
 GTKO13 :                       8B9 C |  GTKO2 :                        84A C |
 GTKO3 :                        855 C |  GTKO4 :                        861 C |
 GTKO5 :                        865 C |  GTKO6 :                        877 C |
 GTKO7 :                        883 C |  GTKO8 :                        885 C |
 GTKO9 :                        895 C | *GT_KDO :                       831 C |
 G_KDO :                        6E4 C | *HAS64 :                          1 - |
*HASDSP :                         0 - | *HASFPU :                         0 - |
*HASPMMU :                        0 - |  HELP :                        0ECC C |
 HELP1 :                       0ED9 C |  IKO1 :                        0AA8 C |
*INCH :                           8 C | *INEXTMODE :                      0 - |
 INHEX :                        172 C | *INIT :                           0 C |
 INIT1 :                         0B C |  INIT2 :                         23 C |
 INIT3 :                         3B C |  INIT4 :                         44 C |
 INIT5 :                         1B C |  INIT6 :                         4C C |
 INIT7 :                         55 C |  INIT8 :                         6E C |
 INLIN1 :                       12F C |  INLIN2 :                       13A C |
 INLINE :                       128 C | *INLWORDMODE :                    0 - |
*INMAXMODE :                      0 - | *INSRCMODE :                      0 - |
*INSUPMODE :                      0 - |  INTTAB :                       2F6 C |
 INTTAB1 :                      2F8 C |  IOBYT :                       1821 C |
 JKO1 :                         6FA C |  JKO2 :                         700 C |
 JKO3 :                         70E C | *JOYST :                       0EB4 C |
 JP_RST08 :                    1802 C |  JP_RST10 :                    1805 C |
 JP_RST18 :                    1808 C |  JP_RST20 :                    180B C |
 JP_RST28 :                    180E C |  JP_RST30 :                    1811 C |
 JP_RST38 :                    1814 C | *J_KDO :                        6EE C |
 KDO1 :                         1DE C |  KDO2 :                         1E7 C |
 KDO4 :                         21F C |  KDOANF :                       400 - |
 KDOERR :                       1DB C |  KDOV24 :                      1820 C |
*KDOV24O :                     181F C |  KONVX :                        146 C |
 KONVX2 :                       156 C |  KONVX3 :                       168 C |
 LINES :                         20 - | *LISTON :                         1 - |
 LOA10 :                       0A21 C |  LOA11 :                       0A28 C |
 LOA12 :                       0A73 C |  LOA15 :                       0A59 C |
 LOA16 :                       0A5C C |  LOA17 :                       0A40 C |
 LOA18 :                       0A47 C |  LOA19 :                       0A51 C |
 LOA3 :                         9AD C |  LOA4 :                         9BC C |
 LOA6 :                         9E5 C | *LOADB :                         28 C |
 LOC_235 :                      235 C |  LOC_743 :                      743 C |
 LOC_94E :                      94E C |  LOC_A98 :                     0A98 C |
 LOC_A9A :                     0A9A C | *LOC_B0F :                     0B0F C |
 LOC_B33 :                     0B33 C |  LOC_B43 :                     0B43 C |
 LOC_B46 :                     0B46 C |  LOC_B51 :                     0B51 C |
 LOC_B5B :                     0B5B C |  LOC_B63 :                     0B63 C |
 LOC_B76 :                     0B76 C |  LOC_B85 :                     0B85 C |
 LOC_BE6 :                     0BE6 C |  LOC_BED :                     0BED C |
 LOC_D23 :                     0D23 C |  LOC_D2D :                     0D2D C |
 LOC_D8E :                     0D8E C |  LOC_DAD :                     0DAD C |
 LOC_DC9 :                     0DC9 C |  LOC_DE1 :                     0DE1 C |
 LOC_DF0 :                     0DF0 C |  LOC_F42 :                     0F42 C |
*MACEXP :                         7 - |  MKDO1 :                        48D C |
 MKDO2 :                        48F C |  MKDO3 :                        49D C |
 MKDO4 :                        4AE C |  MODUL1 :                        14 - |
*MOMCPU :                      80DC - | *MOMCPUNAME :              Z80UNDOC - |
 MS30 :                         11D C |  MS301 :                        121 C |
 M_KDO :                        48A C |  NAMELEN :                       28 - |
*NESTMAX :                      100 - |  NMI :                         1817 C |
 NOTAST :                       0D6 C |  NOV24 :                        10B C |
*N_KDO :                        405 C |  OKO1 :                        0ACA C |
 OUT4SP :                       58C C | *OUTCH :                         10 C |
 OUTHEX :                       183 C |  OUTHEX1 :                      18C C |
 OUTHEX2 :                      197 C |  OUTHL :                        19A C |
 OUTHLSP :                      589 C |  O_00 :                         32E C |
 O_BELL :                       387 C |  O_CLLN :                       375 C |
 O_CLS :                        365 C |  O_CLSC :                       36B C |
 O_CR :                         39A C |  O_CUD :                        38F C |
 O_CUL :                        38C C |  O_CUR :                        327 C |
 O_CUU :                        395 C |  O_DEL :                        3A8 C |
 O_HOME :                       3A3 C |  O_INS :                        3B8 C |
 O_SETC :                       3A0 C |  O_SOL :                        381 C |
 O_TAB :                        3D7 C | *PACKING :                        0 - |
*PADDING :                        1 - |  PARA :                         4CA C |
 PHAKO :                       1823 C |  PIEP :                          9B C |
 PIO2CA :                        0A - |  PIO2CB :                        0B - |
 PIO2DA :                         8 - |  PIO2DB :                         9 - |
 PIOCA :                          6 - |  PIOCB :                          7 - |
 PIODA :                          4 - |  PIODB :                          5 - |
 PKO1 :                         4E9 C |  POSCNT :                      1825 C |
*PRNST :                         18 C |  PROGX :                        116 C |
 Q_KO1 :                        995 C |  Q_KO10 :                       9E3 C |
 Q_KO12 :                       9F2 C |  Q_KO13 :                       9FE C |
 Q_KO14 :                      0A05 C |  Q_KO15 :                      0A18 C |
 Q_KO16 :                      0A1C C |  Q_KO19 :                      0A2B C |
 Q_KO2 :                        99C C |  Q_KO20 :                      0A31 C |
 Q_KO21 :                      0A37 C |  Q_KO27 :                      0A68 C |
 Q_KO3 :                        9A2 C |  Q_KO4 :                        9A5 C |
 Q_KO7 :                        9C9 C |  Q_KO8 :                        9DC C |
 Q_KO9 :                        9DD C |  RAM :                         1800 - |
 RAMEND :                     0BFFF - |  RAMTST :                      0ACE C |
 REGA :                         1A5 C |  REGAF :                       1869 C |
 REGAFX :                      1861 C | *REGBC :                       186B C |
*REGBCX :                      1863 C | *REGDE :                       186D C |
*REGDEX :                      1865 C |  REGH :                         1BC C |
 REGH1 :                        1D1 C |  REGHL :                       186F C |
*REGHLX :                      1867 C | *REGIX :                       1871 C |
*REGIY :                       1873 C |  REGPC :                       1875 C |
 REGSP :                       1877 C |  REGTAB1 :                      592 C |
 REGTAB2 :                      59A C |  REGTAB3 :                      5AA C |
*RELAXED :                        0 - |  REPEAT :                      1824 C |
 RINCH :                        0A5 C |  RINCH1 :                       0B3 C |
 RINCH2 :                       0BD C |  RINCH3 :                       0C1 C |
 RINCH4 :                       0C3 C |  RINCH5 :                       0CA C |
 RKA1 :                         5CE C |  RKA2 :                         5E3 C |
*RKA3 :                         5EF C |  RKA4 :                         5F3 C |
 RKA5 :                         5F9 C |  RKA6 :                         603 C |
*RKA7 :                         60B C |  RKO1 :                         63D C |
 RKO2 :                         64C C |  RKO3 :                         659 C |
 RKO4 :                         665 C |  RKO5 :                         672 C |
 RKO6 :                         673 C |  RKO7 :                         67E C |
 ROM :                            0 - |  ROUTCH :                        13 C |
 ROUTCH0 :                     0E43 C |  ROUTCH1 :                     0EF3 C |
 ROUTCH2 :                     0EFA C |  ROUTCH3 :                     0F06 C |
 ROUTCH4 :                     0F0A C |  ROUTCH5 :                     0F1E C |
 RPRNST :                      0A8D C |  RPRNST1 :                     0A8F C |
 RSA :                         1861 - |  RST38 :                        240 C |
 RWARM :                         5A C |  RWARM1 :                        69 C |
 RWARM2 :                        6B C |  SAV1 :                         8FA C |
 SAV10 :                        957 C |  SAV11 :                        95B C |
 SAV12 :                        963 C |  SAV13 :                        967 C |
 SAV14 :                        96F C |  SAV2 :                         908 C |
 SAV3 :                         90F C |  SAV4 :                         91A C |
 SAV5 :                         92D C |  SAV6 :                         92E C |
 SAV7 :                         938 C |  SAV8 :                         944 C |
 SAV9 :                         954 C | *SAVB :                          30 C |
 SCROLL :                       3DC C |  SCROLL1 :                      3E3 C |
 SCROLL2 :                      3F6 C |  SOIL :                        181A C |
 STEP :                         75B C |  STEP1 :                        775 C |
 STEP10 :                       807 C |  STEP11 :                       823 C |
 STEP2 :                        77E C |  STEP3 :                        785 C |
 STEP4 :                        78D C |  STEP5 :                        797 C |
 STEP6 :                        7C2 C |  STEP7 :                        7CF C |
 STEP8 :                        7D0 C |  STEP9 :                        800 C |
 STEPEND :                      804 C |  SUB_2E0 :                      2E0 C |
*SUB_38 :                        38 C |  SUB_BE1 :                     0BE1 C |
 SUB_D83 :                     0D83 C |  SUB_D86 :                     0D86 C |
*SUB_D89 :                     0D89 C |  SV_RST :                       220 C |
*SV_RSTEND :                    240 C | *SYSRAMEND :                   18F6 - |
 SYSSK :                       1856 C |  TABIO :                       0AD8 C |
 TACOD :                       1822 C | *TAST1 :                        29B C |
 TAST2 :                        2A0 C | *TAST3 :                        2AE C |
 TAST4 :                        2BB C |  TAST5 :                        2BD C |
 TAST6 :                        2C3 C |  TAST7 :                        2C5 C |
 TASTE :                       0D4D C |  TBB_AADR :                    1880 C |
 TBB_EADR :                    187E C |  TBH1 :                        0BA5 C |
 TBH2 :                        0BB3 C |  TBH3 :                        0BBA C |
 TBH4 :                        0BC3 C |  TBH5 :                        0BCF C |
 TBH6 :                        0BD4 C |  TBHEADER :                    0B97 C |
 TBH_AADR :                    18B3 C |  TBH_EADR :                    18B1 C |
*TBH_FILENAME :                189E C | *TBH_FILETYP :                 18B0 C |
 TBH_SPECIAL :                 18B5 C | *TBH_TRENNER :                 18AE C |
 TBLOAD :                      0C81 C |  TBLOAD1 :                     0C8D C |
 TBLOAD2 :                     0C99 C |  TBLOAD3 :                     0CAC C |
 TBL_AADR :                    18D3 C |  TBL_EADR :                    18D1 C |
 TBL_FILENAME :                18BE C | *TBL_FILETYP :                 18D0 C |
*TBL_SPECIAL :                 18D5 C | *TBL_TRENNER :                 18CE C |
 TBSAV1 :                      0BFD C |  TBSAV10 :                     0C3E C |
 TBSAV11 :                     0C4E C |  TBSAV12 :                     0C52 C |
 TBSAV13 :                     0C57 C |  TBSAV14 :                     0C59 C |
 TBSAV15 :                     0C5B C |  TBSAV16 :                     0C63 C |
 TBSAV17 :                     0C68 C |  TBSAV18 :                     0C6B C |
 TBSAV19 :                     0C6D C |  TBSAV2 :                      0C0B C |
 TBSAV20 :                     0C76 C |  TBSAV21 :                     0C7A C |
 TBSAV3 :                      0C10 C |  TBSAV4 :                      0C13 C |
 TBSAV5 :                      0C15 C |  TBSAV6 :                      0C21 C |
 TBSAV7 :                      0C23 C |  TBSAV8 :                      0C33 C |
 TBSAV9 :                      0C3A C |  TBSAVE :                      0BF7 C |
 TB_BLKBUF :                   18B6 C |  TB_ERRARR :                   1882 C |
 TB_KOPFBUF :                  1896 C |  TB_LOA10 :                    0CEC C |
 TB_LOA11 :                    0CF9 C |  TB_LOA12 :                    0D06 C |
 TB_LOA13 :                    0D09 C |  TB_LOA14 :                    0D32 C |
 TB_LOA15 :                    0D34 C |  TB_LOA16 :                    0D38 C |
 TB_LOA17 :                    0D3B C |  TB_LOA19 :                    0D64 C |
 TB_LOA20 :                    0D67 C |  TB_LOA21 :                    0D6F C |
 TB_LOA22 :                    0D70 C |  TB_LOA23 :                    0D81 C |
 TB_LOA24 :                    0D5A C |  TB_LOA25 :                    0D52 C |
 TB_LOA26 :                    0D7C C |  TB_LOA3 :                     0CBD C |
 TB_LOA5 :                     0CC5 C |  TB_LOA6 :                     0CCA C |
 TB_LOA7 :                     0CD0 C |  TB_LOA8 :                     0CDB C |
 TB_LOA9 :                     0CE7 C | *TIME :                     11:3:40 - |
 TON1 :                         288 C |  TON2 :                         290 C |
*TRUE :                           1 - |  TSTSCH :                      0A7B C |
 TSTSCH1 :                     0A80 C |  TSTSCH2 :                     0A78 C |
 UKO1 :                        0F58 C |  UKO2 :                        0F6D C |
 UKO3 :                        0F72 C |  UKO4 :                        0F8A C |
 UNK_18F0 :                    18F0 C |  UNK_18F3 :                    18F3 C |
 UPTAST :                       297 C |  UPTON :                        287 C |
*U_KDO :                       0F4E C | *V24IN :                        1D6 C |
 V24IN0 :                       0D9 C |  V24IN1 :                       0E1 C |
 V24IN2 :                       0E8 C |  V24IN3 :                       0EF C |
 V24IN4 :                       0F6 C |  V24IN5 :                       0F9 C |
 V24OUT :                      0DF9 C |  V24OUT2 :                     0E08 C |
 V24OUT3 :                     0E0E C |  V24OUT4 :                     0E16 C |
 V24OUT5 :                     0E1E C |  V24OUT6 :                     0E24 C |
 V24OUT7 :                     0E2B C |  V24OUT8 :                     0E2C C |
 V24OUT9 :                     0E33 C | *VERSION :                     142F - |
*WARM :                          20 C |  WARMCOD :                     181C C |
 WKO1 :                        0FAC C |  WKO2 :                        0FB2 C |
 WKO3 :                        0FBA C |  WKO4 :                        0FD1 C |
 WKO5 :                        0FE3 C |  WKO6 :                        0FEC C |
*W_KDO :                       0FA6 C |  ZK1 :                           31 - |
 ZK2 :                           2E - |  ZKR :                           3F - |

    492 symbols
     71 unused symbols

 AS V1.42 Beta [Bld 157] - Source File mon_v8.asm - Page 3 - 1/25/2023 11:3:40


  Defined Functions:
  ------------------

LO                                    | HI                                   

 AS V1.42 Beta [Bld 157] - Source File mon_v8.asm - Page 4 - 1/25/2023 11:3:40


  Code Pages:
  ----------

STANDARD (0 changed characters)

1 code page

0.05 seconds assembly time

   3333 lines source file
      2 passes
      0 errors
      0 warnings
