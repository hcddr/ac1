 AS V1.42 Beta [Bld 157] - Source File mon_v8-fdc-rfl.asm - Page 1 - 1/25/2023 11:3:40


       1/       0 :                     ; File Name   :	mon2010c.bin
       2/       0 :                     ; Base Address:	0000h Range: 0000h - 1000h Loaded length: 1000h
       3/       0 :                     
       4/       0 :                     		page	0
       5/       0 :                     		cpu	z80undoc
       6/       0 :                     
       7/       0 :                     ;AC1-MONITOR V8 E. Ludwig SCCH, Monitor Version Nov. 1987
       8/       0 :                     ; Version AC1-2010 * FARBMONITOR * FDC/RFL
       9/       0 :                     ;reass. Volker Pohlers, Neustadt i.H., 10.01.2023
      10/       0 :                     ;letzte Änderung 23.01.2023 v24
      11/       0 :                     
      12/       0 :                     ;------------------------------------------------------------------------------
      13/       0 :                     ;
      14/       0 :                     ;------------------------------------------------------------------------------
      15/       0 :                     
      16/       0 :                     ; Makros
      17/       0 :                     hi              function x, (x>>8) & 0ffh	; High-Byte
      18/       0 :                     lo              function x, x & 0ffh		; Low-Byte
      19/       0 :                     
      20/       0 :                     ; Speicheraufteilung
      21/       0 : =0H                 ROM		equ	0000h
      22/       0 : =1000H              BWS		equ	1000h		; 2K
      23/       0 : =1800H              RAM		equ	1800h
      24/       0 :                     ; BWS
      25/       0 : =40H                COLS		equ	64		; muss 2er-Potenz sein!
      26/       0 : =20H                LINES		equ	32		; muss 2er-Potenz sein!
      27/       0 :                     
      28/       0 : =17FFH              BWSANF		equ	BWS+LINES*COLS-1	; Adresse Home (links oben)
      29/       0 : =1000H              BWSEND		equ	BWS			; letzte Adresse (rechts unten)
      30/       0 :                     
      31/       0 :                     ; I/O
      32/       0 : =0H                 CTC0		equ	0
      33/       0 : =1H                 CTC1		equ	1
      34/       0 : =2H                 CTC2		equ	2
      35/       0 : =3H                 CTC3		equ	3
      36/       0 : =4H                 PIODA		equ	4		; Tastatur
      37/       0 : =5H                 PIODB		equ	5		; Grafik/Ton
      38/       0 : =6H                 PIOCA		equ	6
      39/       0 : =7H                 PIOCB		equ	7
      40/       0 :                     
      41/       0 :                     ;Belegung PIOA
      42/       0 :                     ;B0..B6 ASCII-Code Zeichen
      43/       0 :                     ;B7 Taste gedrückt
      44/       0 :                     
      45/       0 :                     ;Belegung PIOB
      46/       0 :                     ;B0 Ton-Ausgang
      47/       0 :                     ;B1 Joystick ges. A
      48/       0 :                     ;B2 Grafiktaste
      49/       0 :                     ;B3 Bildschim-Mode
      50/       0 :                     ;B4 frei
      51/       0 :                     ;B5 Start/Stop-Schaltung
      52/       0 :                     ;B6 TB-Interface-Ausgang
      53/       0 :                     ;B7 TB-Interface-Eingang
      54/       0 :                     
      55/       0 : =8H                 PIO2DA		equ	8		; b0..b3 V24, b4..b7 IEC
      56/       0 : =9H                 PIO2DB		equ	9
      57/       0 : =0AH                PIO2CA		equ	0ah
      58/       0 : =0BH                PIO2CB		equ	0bh
      59/       0 :                     
      60/       0 :                     ; PIO 2 / IOSEL2
      61/       0 :                     ; A0 Eingang Daten RxD 			serielle Schnittstelle	
      62/       0 :                     ; A1 Ausgang Daten TxD 			serielle Schnittstelle
      63/       0 :                     ; A2 Eingang empfangsbereit CTS		serielle Schnittstelle
      64/       0 :                     ; A3 Ausgang sendebereit DTR		serielle Schnittstelle
      65/       0 :                     ; A4 SRQ		IEC - Schnittstelle (in CPM + BASIC)
      66/       0 :                     ; A5 ATN		IEC - Schnittstelle (in CPM + BASIC)
      67/       0 :                     ; A6 CLK		IEC - Schnittstelle (in CPM + BASIC)
      68/       0 :                     ; A7 DATA		IEC - Schnittstelle (in CPM + BASIC)
      69/       0 :                     
      70/       0 :                     ;EPROM auf PIO2-Karte
      71/       0 : =0FH                PIO2EPROM	equ	0Fh
      72/       0 :                     ; 00 RAM
      73/       0 :                     ; 10 Bank 1 auf 2000h einblenden (ROM 0000-07FF)
      74/       0 :                     ; 20 Bank 2 auf 2000h einblenden (ROM 0800-0FFF)
      75/       0 :                     ; 40 Bank 3 auf 2000h einblenden (ROM 1000-17FF)
      76/       0 :                     ; 60 Bank 4 auf 2000h einblenden (ROM 0800-1FFF)
      77/       0 :                     
      78/       0 : =14H                modul1		equ	14h		; Konfigurationsbyte für SCCH-Modul 1
      79/       0 :                     ; Port 14h, OUT-Port
      80/       0 :                     ; 	00 - Modul nicht aktiv
      81/       0 :                     ; 	01 - 8K-ROM "PaketX" E000-FFFF
      82/       0 :                     ; 	02 - 16K-ROM "Basic" 2000-5FFF
      83/       0 :                     ; 	x8 - 512K ROM1 aktiv, jeweils 32K-Bänke, x = 0..F Bank0..Bank15, 8000-FFFF
      84/       0 :                     ; 	x9 - 512K ROM2 aktiv, jeweils 32K-Bänke, x = 0..F Bank0..Bank15, 8000-FFFF
      85/       0 :                     
      86/       0 : =0F0H               BWSPORT:	EQU	0F0H		; rücklesbares BWS Steuerregister
      87/       0 :                     ;Bit 0 Taktumschaltung, 0=2Mhz, 1=4Mhz Takt
      88/       0 :                     ;Bit 1 BWS INVERS, 0=Hintergrund	dunkel,	1=Hintergrund hell
      89/       0 :                     ;Bit 2 Umschaltung FarbRAM <> BWS RAM, 0=BWS RAM, 1=FarbRAM
      90/       0 :                     ;Bit 3 ZG Programmierung	0=Normal BWS, 1=ZG lesen/schreiben
      91/       0 :                     ;Bit 4 ZG Programmierung	A0 Zeilennummer	Zeichen
      92/       0 :                     ;Bit 5 ZG Programmierung	A1 Zeilennummer	Zeichen
      93/       0 :                     ;Bit 6 ZG Programmierung	A2 Zeilennummer	Zeichen
      94/       0 :                     ;Bit 7 frei
      95/       0 :                     ; Aufbau FarbRAM
      96/       0 :                     ; untere 4 Bit VordergrundFarbe	Bit 0 =	Rot
      97/       0 :                     ;				Bit 1 =	Grün
      98/       0 :                     ;				Bit 2 =	Blau
      99/       0 :                     ;				Bit 3 =	Intensiv
     100/       0 :                     ; obere 4Bits Hintergrundfarbe	Bit 4 =	Rot
     101/       0 :                     ;				Bit 5 =	Grün
     102/       0 :                     ;				Bit 6 =	Blau
     103/       0 :                     ;				Bit 7 =	Intensiv
     104/       0 :                     
     105/       0 :                     ;
     106/       0 : =28H                NAMELEN		equ	40		; max. Länge des Dateinamens bei LOAD/SAVE
     107/       0 :                     ;KDOANF		equ	0400h		; Beginn f. Kdo-Suche
     108/       0 :                     ;RAMEND		equ	0BFFFh		; Ende f. Kdo-Suche, auf RAM beschränkt
     109/       0 : =200H               KDOANF		equ	0200h		; Beginn f. Kdo-Suche
     110/       0 : =0FFFFH             RAMEND		equ	0FFFFh		; Ende f. Kdo-Suche, auf RAM beschränkt
     111/       0 :                     
     112/       0 :                     
     113/       0 :                     ; Zeitkonstanten (bei 2 MHz-Takt)
     114/       0 : =31H                ZK1    EQU  49        ;Laenge 1.Halbwelle
     115/       0 : =2EH                ZK2    EQU  46        ;Laenge 2.Halbwelle
     116/       0 : =3FH                ZKR    EQU  (ZK1+ZK2)*2/3
     117/       0 :                     
     118/       0 :                     ;------------------------------------------------------------------------------
     119/       0 :                     ; Reset
     120/       0 :                     ;------------------------------------------------------------------------------
     121/       0 :                     
     122/       0 :                     		org	ROM
     123/       0 : F3                  init:		di
     124/       1 : 31 56 18            		ld	sp, SYSSK	; Stack
     125/       4 : ED 5E               		im	2
     126/       6 : 18 03               		jr	init1
     127/       8 :                     
     128/       8 :                     		org	8
     129/       8 :                     ; RST 8: Eingabekanal, normal Tastatur
     130/       8 : C3 02 18            inch:		jp	jp_rst08	; -> rinch
     131/       B :                     
     132/       B :                     
     133/       B : 11 1C 18            init1:		ld	de, warmcod	; Warmstartcode
     134/       E : 18 13               		jr	init2
     135/      10 :                     
     136/      10 :                     		org	10h
     137/      10 :                     ; RST 10: Ausgabekanal,	normal Bildschirm
     138/      10 : C3 05 18            outch:		jp	jp_rst10	; -> routch
     139/      13 :                     
     140/      13 : E5                  routch:		push	hl
     141/      14 : D5                  		push	de
     142/      15 : C3 43 0E            		jp	routch0
     143/      18 :                     
     144/      18 :                     		org	18h
     145/      18 :                     ; RST 18: PRNST
     146/      18 : C3 08 18            prnst:		jp	jp_rst18	; -> rprnst
     147/      1B :                     
     148/      1B : CD 7B 0A            init5:		call	tstsch		; test auf warmstart, de = warmcod
     149/      1E : 20 2C               		jr	nz, init6	; wenn nicht init, d.h. Kaltstart
     150/      20 :                     
     151/      20 :                     		org	20h
     152/      20 :                     ; RST 20: Warmstart Betriebssystem
     153/      20 : C3 0B 18            warm:		jp	jp_rst20
     154/      23 :                     
     155/      23 : CD 1D 01            init2:		call	MS30		; ca. 30 ms warten
     156/      26 : 18 13               		jr	init3
     157/      28 :                     
     158/      28 :                     		org	28h
     159/      28 :                     ; RST 28: 1 byte von Kassette laden, AC1-Format
     160/      28 : C3 0E 18            loadb:		jp	jp_rst28	; -> loa15
     161/      2B :                     
     162/      2B : E5                  co00:		push	hl
     163/      2C : D5                  		push	de
     164/      2D : C3 00 03            		jp	co0
     165/      30 :                     
     166/      30 :                     		org	30h
     167/      30 :                     ; RST 30: 1 Byte auf Kassette speichern, AC1-Format
     168/      30 : C3 11 18            savb:		jp	jp_rst30	; -> sav10
     169/      33 :                     
     170/      33 :                     ; Ausgabe über Bildschirm
     171/      33 : F5                  co:		push	af
     172/      34 : 18 F5               		jr	co00
     173/      36 : FF                  		db 0FFh
     174/      37 : FF                  		db 0FFh
     175/      38 :                     
     176/      38 :                     		org	38h
     177/      38 :                     ; RST 38: Breakpoint, Einsprung bei Einzelschritt
     178/      38 : C3 14 18            sub_38:		jp	jp_rst38	; -> rst38
     179/      3B :                     
     180/      3B :                     
     181/      3B :                     ;------------------------------------------------------------------------------
     182/      3B :                     ; Kaltstart
     183/      3B :                     ; Sprungverteiler initialisieren, RAM löschen
     184/      3B :                     ;------------------------------------------------------------------------------
     185/      3B :                     
     186/      3B : 3E 02               init3:		ld	a, hi(inttab)
     187/      3D : ED 47               		ld	i, a
     188/      3F : 21 D8 0A            		ld	hl, TABIO	; Tabelle Peripherie
     189/      42 : 06 11               		ld	b, 11h
     190/      44 : 4E                  init4:		ld	c, (hl)		; Port
     191/      45 : 23                  		inc	hl
     192/      46 : ED A3               		outi			; Wert ausgeben
     193/      48 : 20 FA               		jr	nz, init4
     194/      4A : 18 CF               		jr	init5		; test auf warmstart
     195/      4C :                     
     196/      4C :                     ;------------------------------------------------------------------------------
     197/      4C :                     ; Kaltstart
     198/      4C :                     ; Sprungverteiler initialisieren, RAM löschen
     199/      4C :                     ;------------------------------------------------------------------------------
     200/      4C :                     ; Einsprung von init5,
     201/      4C :                     ; damit init6 funktioniert, muss das Adresse 220h sein
     202/      4C :                     ; und lo(sv_rst) = Bereichsgröße sv_rstend-sv_rst
     203/      4C :                     ; in: hl = 23A, de = 181c
     204/      4C :                     init6:		; Sprungverteiler initialisieren
     205/      4C : 01 20 00            		ld	bc, lo(sv_rst)	; == Länge sv_rst-Bereich
     206/      4F : 69                  		ld	l, c		; hl=220 = sv_rst
     207/      50 : 5C                  		ld	e, h		; de=1802
     208/      51 : ED B0               		ldir
     209/      53 :                     		; RAM löschen
     210/      53 : EB                  		ex	de, hl		; hl=1822
     211/      54 : 03                  		inc	bc		; bc=1
     212/      55 : 36 FF               init7:		ld	(hl), 0FFh
     213/      57 : 09                  		add	hl, bc
     214/      58 : 30 FB               		jr	nc, init7	; bis FFFF
     215/      5A :                     
     216/      5A :                     ;------------------------------------------------------------------------------
     217/      5A :                     ; Test auf Autostartmodul auf 2000h
     218/      5A :                     ; Befindet sich dort die Bitfolge 53 43 48, erkennt der Computer ein Autostart-
     219/      5A :                     ; Modul und springt an die Adresse, die in 2003/2004 steht. Der Autostart kann
     220/      5A :                     ; verhindert werden, indem beim Einschalten bzw. RESET die Taste "CR" gedrückt
     221/      5A :                     ; wird: Sprung in den Monitor, oder Taste "X" gedrückt: Sprung in Programmpaket X.
     222/      5A :                     ;------------------------------------------------------------------------------
     223/      5A :                     
     224/      5A : CD 97 02            rWarm:		call	UPTAST		; Taste bei Einschalten gedrückt?
     225/      5D : 20 0A               		jr	nz, rWarm1
     226/      5F :                     		; ist Autostartmodul aktiv?
     227/      5F : CD 78 0A            		call	tstsch2		; Test auf SCH auf 2000h
     228/      62 : 20 0A               		jr	nz, init8	; wenn kein Autostartmodul
     229/      64 : E9                  		jp	(hl)		; sonst dieses starten
     230/      65 : FF                  		db 0FFh
     231/      66 :                     
     232/      66 :                     ;------------------------------------------------------------------------------
     233/      66 :                     ; MNI-Befehl, Programmunterbrechnung, Breakpoint
     234/      66 :                     ;------------------------------------------------------------------------------
     235/      66 :                     
     236/      66 :                     		org	66h
     237/      66 : C3 17 18            		jp	nmi		; -> BREAK
     238/      69 :                     
     239/      69 :                     ;------------------------------------------------------------------------------
     240/      69 :                     ; Taste "X" gedrückt: Sprung in Programmpaket X.
     241/      69 :                     ; sonst Systemmeldung ausgeben
     242/      69 :                     ;------------------------------------------------------------------------------
     243/      69 :                     
     244/      69 : FE 58               rWarm1:		cp	'X'		; 'X' bei Einschalten gedrückt?
     245/      6B : CA 16 01            rWarm2:		jp	z, PROGX	; dann zu "Paket X"
     246/      6E :                     ;
     247/      6E :                     init8:		;xor	a
     248/      6E :                     		;out	(modul1), a	; Modul1 disablen
     249/      6E : CD CF 02            		call    sub_2CF
     250/      71 :                     ;
     251/      71 : DF                  		rst	18h		; PRNST
     252/      72 :                     		;db 0Ch,0Dh,0Fh,0Fh,"AC 1 * MONITOR * V.8.0 (C) SCCH ",0Dh,8Dh
     253/      72 : 0C 0D 0F 0F 41 43   		db 0Ch,0Dh,0Fh,0Fh,"AC1-2010 * FARBMONITOR * FDC/RFL",0Dh,8Dh
                    31 2D 32 30 31 30 
                    20 2A 20 46 41 52 
                    42 4D 4F 4E 49 54 
                    4F 52 20 2A 20 46 
                    44 43 2F 52 46 4C 
                    0D 8D             
     254/      98 : C3 5E 02            		jp	break2
     255/      9B :                     
     256/      9B :                     ;------------------------------------------------------------------------------
     257/      9B :                     ; Tasten-Piep
     258/      9B :                     ;------------------------------------------------------------------------------
     259/      9B :                     
     260/      9B : 71                  PIEP:		ld	(hl), c		; Tasten-Piep
     261/      9C : 01 34 A0            		ld	bc, 0A034h
     262/      9F : CD 87 02            		call	UPTON		; UP "Ton", Reg, B = Tonlaenge, C = Tonhoehe
     263/      A2 :                     ; Ende von rinch
     264/      A2 : C1                  ENDE8:		pop	bc
     265/      A3 : E1                  		pop	hl
     266/      A4 : C9                  		ret
     267/      A5 :                     
     268/      A5 :                     ;------------------------------------------------------------------------------
     269/      A5 :                     ; Einsprungpunkt fuer RST 08H
     270/      A5 :                     ; Eingabekanal auswerten
     271/      A5 :                     ; iobyt
     272/      A5 :                     ; Eingabe: b0 Tastatur, b1 V24 (Rs 232c), b2 Reserve, b3 User
     273/      A5 :                     ;------------------------------------------------------------------------------
     274/      A5 :                     
     275/      A5 : E5                  rinch:		push	hl		; UP "Eingabekanal"
     276/      A6 : C5                  		push	bc
     277/      A7 : 3A 21 18            		ld	a, (IOBYT)	; Ein/Ausgabebyte
     278/      AA : 0F                  		rrca			; b0 gesetzt?
     279/      AB : 30 29               		jr	nc, NOTAST	; nein, anderes Eingabegeraet (keine Tastatur)
     280/      AD :                     
     281/      AD :                     ; Eingabe von Tastatur		
     282/      AD : 21 24 18            		ld	hl, repeat	; Hilfsregister	Repetierfunktion Tastatur
     283/      B0 : 46                  		ld	b, (hl)
     284/      B1 : 36 0E               		ld	(hl), 0Eh
     285/      B3 : CD 97 02            rinch1:		call	UPTAST
     286/      B6 : 28 05               		jr	z, rinch2	; keine Taste gedrückt
     287/      B8 : 05                  		dec	b
     288/      B9 : 20 F8               		jr	nz, rinch1
     289/      BB : 36 01               		ld	(hl), 1
     290/      BD : 2A 00 18            rinch2:		ld	hl, (cupos)	; Zwischenspeicher Kursor
     291/      C0 : 4E                  		ld	c, (hl)		; Zeichen merken
     292/      C1 : 36 7F               rinch3:		ld	(hl), 7Fh	; Cursorsymbol anzeigen
     293/      C3 : CD 97 02            rinch4:		call	UPTAST
     294/      C6 :                     ; Taste gedrückt? dann Piep und ENDE8
     295/      C6 : 20 D3               		jr	nz, PIEP	; Tasten-Piep
     296/      C8 :                     ; sonst kurz warten
     297/      C8 : 3E 78               		ld	a, 78h
     298/      CA : 3D                  rinch5:		dec	a
     299/      CB : 20 FD               		jr	nz, rinch5
     300/      CD : 10 F4               		djnz	rinch4
     301/      CF :                     ; und Cursor toggeln
     302/      CF : 79                  		ld	a, c
     303/      D0 : BE                  		cp	(hl)		; ist Zeichen zu sehen?
     304/      D1 : 28 EE               		jr	z, rinch3	; dann Cursorsymbol anzeigen
     305/      D3 : 71                  		ld	(hl), c		; sonst Zeichen wieder anzeigen
     306/      D4 : 18 ED               		jr	rinch4
     307/      D6 :                     
     308/      D6 :                     ;------------------------------------------------------------------------------
     309/      D6 :                     ; Eingabe von V24 (RS232)
     310/      D6 :                     ;------------------------------------------------------------------------------
     311/      D6 :                     
     312/      D6 : 0F                  NOTAST:		rrca			; IOBYT b1 gesetzt?
     313/      D7 : 30 32               		jr	nc, NOV24	; nein, anderes Eingabegeraet (kein V.24)
     314/      D9 :                     
     315/      D9 :                     ; Eingabe von V24 (RS232)
     316/      D9 : 3A 20 18            v24in0:		ld	a, (kdov24)	; Kommandocode V 24
     317/      DC : E6 07               		and	7		; Baudrate
     318/      DE : 47                  		ld	b, a
     319/      DF : 3E 01               		ld	a, 1
     320/      E1 : 87                  v24in1:		add	a, a
     321/      E2 : 10 FD               		djnz	v24in1
     322/      E4 : 67                  		ld	h, a		; Baudratenzähler h=2^b
     323/      E5 :                     					; b=1,h=2 19200 Baud, 
     324/      E5 :                     					; b=2, h=4 9600 Baud
     325/      E5 :                     					; .. b=7, h=128 300 Baud 
     326/      E5 : AF                  		xor	a		; alles 0
     327/      E6 : D3 08               		out	(PIO2DA), a	; DTR=0,CTS=0,TxD=0,RxD=0
     328/      E8 : DB 08               v24in2:		in	a, (PIO2DA)	; Pegel am Datenport abfragen
     329/      EA : E6 01               		and	1		; nur RxD zulassen (Bits 7-1 ausblenden)
     330/      EC : 20 FA               		jr	nz, v24in2	; Dateneingang war L warten auf H-Pegel
     331/      EE : 44                  		ld	b, h		; Zeitkonstante nach B
     332/      EF : ED 5F               v24in3:		ld	a, r		; xx Takte
     333/      F1 : 7F                  		ld	a, a		; xx Takte
     334/      F2 : 10 FB               		djnz	v24in3		; warten
     335/      F4 : 06 0A               		ld	b, 10		; 10 Bits empfangen (Start - 8Bit - Stop)
     336/      F6 : 6C                  v24in4:		ld	l, h		; Baudrate
     337/      F7 : CB 19               		rr	c		; gelesenes CarryBit ins Bit 7 schieben
     338/      F9 : E5                  v24in5:		push	hl		; xx Takte
     339/      FA : E1                  		pop	hl		; xx Takte
     340/      FB : 7F                  		ld	a, a		; xx Takte
     341/      FC : 2D                  		dec	l		; 
     342/      FD : DB 08               		in	a, (PIO2DA)	; Pegelabfrage
     343/      FF : 20 F8               		jr	nz, v24in5
     344/     101 : 1F                  		rra			; Bit0=RxD ins Carry schieben
     345/     102 : 10 F2               		djnz	v24in4		; weiter bis alle Bits durch
     346/     104 : 3E 0A               		ld	a, 0Ah		; DTR=1,CTS=0,TxD=1,RxD=0
     347/     106 : D3 08               		out	(PIO2DA), a	; Bereitschaftsbits setzen
     348/     108 : 79                  		ld	a, c		; gelesenes Byte in A umladen
     349/     109 : 18 97               		jr	ENDE8		; Ende von rinch
     350/     10B :                     
     351/     10B :                     ;------------------------------------------------------------------------------
     352/     10B :                     ; anderes Eingabegeraet	(kein V.24)
     353/     10B :                     ;------------------------------------------------------------------------------
     354/     10B :                     
     355/     10B : 21 A2 00            NOV24:		ld	hl, ENDE8	; Return-Adr
     356/     10E : E5                  		push	hl		; auf Stack
     357/     10F : 0F                  		rrca			; b2 gesetzt ?
     358/     110 : DA FF FF            		jp	c, 0FFFFh	; Reserve --> nicht belegt --> Fehlermeldung
     359/     113 : C3 F0 18            		jp	unk_18F0	; sonst (b3) Sprung zum UP User-Eingabe
     360/     116 :                     
     361/     116 :                     ;------------------------------------------------------------------------------
     362/     116 :                     ; Start vom Programmpaket X
     363/     116 :                     ;------------------------------------------------------------------------------
     364/     116 :                     
     365/     116 : 3E 01               PROGX:		ld	a, 1
     366/     118 : D3 14               		out	(modul1), a	; Modul1 ROM "PaketX" aktivieren
     367/     11A : C3 00 E0            		jp	0E000h		; und starten
     368/     11D :                     
     369/     11D :                     ;------------------------------------------------------------------------------
     370/     11D :                     ; ca. 30 ms warten
     371/     11D :                     ;------------------------------------------------------------------------------
     372/     11D :                     
     373/     11D : C5                  MS30:		push	bc
     374/     11E : 01 03 09            		ld	bc, 903h	; Zeitkonstante	fuer 30ms, ; B = 9, C = 3
     375/     121 : 0B                  ms301:		dec	bc
     376/     122 : 78                  		ld	a, b
     377/     123 : B1                  		or	c
     378/     124 : 20 FB               		jr	nz, ms301
     379/     126 : C1                  		pop	bc
     380/     127 : C9                  		ret
     381/     128 :                     		
     382/     128 :                     ;------------------------------------------------------------------------------
     383/     128 :                     ; Zeile	eingeben
     384/     128 :                     ; liest eine Zeile, die mit cr abgeschlossen wird, auf dem Schirm ein und
     385/     128 :                     ; legt den Anfang der Zeile in SOIL ab
     386/     128 :                     ; kein Register wird zerstört
     387/     128 :                     ;------------------------------------------------------------------------------
     388/     128 :                     
     389/     128 : F5                  INLINE:		push	af
     390/     129 : E5                  		push	hl
     391/     12A : DF                  		rst	18h		; PRNST
     392/     12B : 20 23 A0            aA:		db " #",' '+80h		; Prompt
     393/     12E : 00                  		nop
     394/     12F : CF                  inlin1:		rst	8		; INCH
     395/     130 : 2A 00 18            		ld	hl, (cupos)	; Zwischenspeicher Kursor
     396/     133 : D7                  		rst	10h		; OUTCH
     397/     134 : FE 0D               		cp	0Dh		; Enter?
     398/     136 : 20 F7               		jr	nz, inlin1	; nein --> weiter eingeben
     399/     138 :                     ; Zeilenanfang ermitteln
     400/     138 : 3E 23               		ld	a, '#'
     401/     13A : 23                  inlin2:		inc	hl		; ein zeichen zurück
     402/     13B : BE                  		cp	(hl)		; zeilenanfang?
     403/     13C : 20 FC               		jr	nz, inlin2	; nein
     404/     13E : 2B                  		dec	hl		; das '#'
     405/     13F : 2B                  		dec	hl		; Leerzeichen davor
     406/     140 : 22 1A 18            		ld	(soil),	hl	; erstes Zeichen der Zeile
     407/     143 : E1                  		pop	hl
     408/     144 : F1                  		pop	af
     409/     145 : C9                  		ret
     410/     146 :                     
     411/     146 :                     ;------------------------------------------------------------------------------
     412/     146 :                     ; fuehrende Leerzeichen ueberlesen
     413/     146 :                     ; letzen vier Zeichen als Hexzahl konvertieren
     414/     146 :                     ; und in DATA ablegen
     415/     146 :                     ;------------------------------------------------------------------------------
     416/     146 :                     
     417/     146 : 1A                  konvx:		ld	a, (de)		; UP - Routine zu InHex
     418/     147 : FE 20               		cp	' '		; Leerzeichen
     419/     149 : 1B                  		dec	de
     420/     14A : 28 FA               		jr	z, konvx	; überlesen
     421/     14C :                     ;
     422/     14C : 13                  		inc	de		; erstes Zeichen
     423/     14D : AF                  		xor	a
     424/     14E : 21 58 18            		ld	hl, data	; Hilfsregister
     425/     151 : 77                  		ld	(hl), a
     426/     152 : 23                  		inc	hl
     427/     153 : 77                  		ld	(hl), a
     428/     154 : 23                  		inc	hl
     429/     155 : 77                  		ld	(hl), a		; data=0
     430/     156 : 1A                  konvx2:		ld	a, (de)
     431/     157 : 2B                  		dec	hl
     432/     158 : 2B                  		dec	hl
     433/     159 : D6 30               		sub	30h ; '0'	; Zeichen<"0"?
     434/     15B : F8                  		ret	m
     435/     15C : FE 0A               		cp	0Ah		; Zeichen<="9"?
     436/     15E : 38 08               		jr	c, konvx3
     437/     160 : D6 07               		sub	7
     438/     162 : FE 0A               		cp	0Ah		; Zeichen<"A"?
     439/     164 : F8                  		ret	m
     440/     165 : FE 10               		cp	10h		; Zeichen>"F"?
     441/     167 : F0                  		ret	p
     442/     168 : 1B                  konvx3:		dec	de
     443/     169 : 34                  		inc	(hl)
     444/     16A : 23                  		inc	hl
     445/     16B : ED 6F               		rld			; Hexziffer eintragen
     446/     16D : 23                  		inc	hl
     447/     16E : ED 6F               		rld			; nächste Ziffer
     448/     170 : 18 E4               		jr	konvx2
     449/     172 :                     		
     450/     172 :                     ;------------------------------------------------------------------------------
     451/     172 :                     ; wandelt eine maximal vierstellige in ASCII-Zeichen angegebene Zahl
     452/     172 :                     ; ab (DE) abwärts in deren hexadezimalen Wert um, der dann in HL steht.
     453/     172 :                     ; DE wird entsprechend dekrementiert, der Akku wird zerstört
     454/     172 :                     ;------------------------------------------------------------------------------
     455/     172 :                     
     456/     172 : C5                  INHEX:		push	bc
     457/     173 : F5                  		push	af
     458/     174 : CD 46 01            		call	konvx		; Konvertierung
     459/     177 : 23                  		inc	hl
     460/     178 : 44                  		ld	b, h		; BC=HL=DATA+1
     461/     179 : 4D                  		ld	c, l
     462/     17A : 6E                  		ld	l, (hl)		; unteres Byte
     463/     17B : 03                  		inc	bc
     464/     17C : 0A                  		ld	a, (bc)
     465/     17D : 67                  		ld	h, a		; oberes Byte
     466/     17E : C1                  		pop	bc
     467/     17F : B5                  		or	l		; Z-Flag setzen
     468/     180 : 78                  		ld	a, b
     469/     181 : C1                  		pop	bc
     470/     182 : C9                  		ret
     471/     183 :                     		
     472/     183 :                     ;------------------------------------------------------------------------------
     473/     183 :                     ; Ausgabe (A) hexadezimal
     474/     183 :                     ; gibt den Akku als zweistellige Hexzahl auf dem Schirm aus,
     475/     183 :                     ; kein Register wird zerstört
     476/     183 :                     ;------------------------------------------------------------------------------
     477/     183 :                     
     478/     183 : F5                  OUTHEX:		push	af
     479/     184 : 1F                  		rra
     480/     185 : 1F                  		rra
     481/     186 : 1F                  		rra
     482/     187 : 1F                  		rra
     483/     188 : CD 8C 01            		call	OUTHEX1		; obere Tetrade ausgeben
     484/     18B : F1                  		pop	af		; und die unter
     485/     18C : F5                  OUTHEX1:	push	af
     486/     18D : E6 0F               		and	0Fh
     487/     18F : C6 30               		add	a, '0'		; Konvertierung --> ASCII
     488/     191 : FE 3A               		cp	':'		; Ziffer "A" ... "F"?
     489/     193 : 38 02               		jr	c, OUTHEX2	; nein
     490/     195 : C6 07               		add	a, 7		; sonst Korrektur
     491/     197 : D7                  OUTHEX2:	rst	10h		; OUTCH ; und Ausgabe
     492/     198 : F1                  		pop	af
     493/     199 : C9                  		ret
     494/     19A :                     		
     495/     19A :                     ;------------------------------------------------------------------------------
     496/     19A :                     ; Ausgabe HL hexadezimal
     497/     19A :                     ; gibt das HL-Register als vierstellige Hexzahl auf dem Schirm aus,
     498/     19A :                     ; kein Register wird zerstört
     499/     19A :                     ;------------------------------------------------------------------------------
     500/     19A :                     
     501/     19A : F5                  OUTHL:		push	af
     502/     19B : 7C                  		ld	a, h
     503/     19C : CD 83 01            		call	OUTHEX		; Ausgabe A hexadezimal
     504/     19F : 7D                  		ld	a, l
     505/     1A0 : CD 83 01            		call	OUTHEX		; Ausgabe A hexadezimal
     506/     1A3 : F1                  		pop	af
     507/     1A4 : C9                  		ret
     508/     1A5 :                     
     509/     1A5 :                     ;------------------------------------------------------------------------------
     510/     1A5 :                     ; Register im Registerrettebereich ablegen/auslesen
     511/     1A5 :                     ; (RSA = register save area)
     512/     1A5 :                     ;------------------------------------------------------------------------------
     513/     1A5 :                     
     514/     1A5 : ED 73 58 18         REGA:		ld	(data),	sp
     515/     1A9 : 31 75 18            		ld	sp, REGPC
     516/     1AC : FD E5               		push	iy
     517/     1AE : DD E5               		push	ix
     518/     1B0 : E5                  		push	hl
     519/     1B1 : D5                  		push	de
     520/     1B2 : C5                  		push	bc
     521/     1B3 : F5                  		push	af
     522/     1B4 : D9                  		exx
     523/     1B5 : 08                  		ex	af, af'
     524/     1B6 : E5                  		push	hl
     525/     1B7 : D5                  		push	de
     526/     1B8 : C5                  		push	bc
     527/     1B9 : F5                  		push	af
     528/     1BA : 18 15               		jr	regh1
     529/     1BC :                     
     530/     1BC :                     ; Register aus Registerrettebereich holen
     531/     1BC : ED 73 58 18         REGH:		ld	(data),	sp
     532/     1C0 : 31 61 18            		ld	sp, RSA
     533/     1C3 : F1                  		pop	af
     534/     1C4 : C1                  		pop	bc
     535/     1C5 : D1                  		pop	de
     536/     1C6 : E1                  		pop	hl
     537/     1C7 : D9                  		exx
     538/     1C8 : 08                  		ex	af, af'
     539/     1C9 : F1                  		pop	af
     540/     1CA : C1                  		pop	bc
     541/     1CB : D1                  		pop	de
     542/     1CC : E1                  		pop	hl
     543/     1CD : DD E1               		pop	ix
     544/     1CF : FD E1               		pop	iy
     545/     1D1 : ED 7B 58 18         regh1:		ld	sp, (data)
     546/     1D5 : C9                  		ret
     547/     1D6 :                     
     548/     1D6 :                     ;------------------------------------------------------------------------------
     549/     1D6 :                     ; V24 -	Eingabe 
     550/     1D6 :                     ; (für externe Nutzung)
     551/     1D6 :                     ;------------------------------------------------------------------------------
     552/     1D6 :                     
     553/     1D6 : E5                  V24IN:		push	hl
     554/     1D7 : C5                  		push	bc
     555/     1D8 : C3 D9 00            		jp	v24in0
     556/     1DB :                     
     557/     1DB :                     ;------------------------------------------------------------------------------
     558/     1DB :                     ; Kommandoschleife
     559/     1DB :                     ;
     560/     1DB :                     ; Suchen des Kommandos
     561/     1DB :                     ; wenn ':' folgt, dann alte Parameter nehmen
     562/     1DB :                     ; sonst 3 Parameter einlesen und in ARG1..ARG3 ablegen
     563/     1DB :                     ; bei Kdo-Start gilt
     564/     1DB :                     ; 	BC = Return-Adr
     565/     1DB :                     ; 	DE zeigt auf ':' oder auf Leezeichen hinter letzem Parameter
     566/     1DB :                     ; 	HL = Kdo-Adr
     567/     1DB :                     ;------------------------------------------------------------------------------
     568/     1DB :                     
     569/     1DB : CD CC 0E            kdoerr:		call	help
     570/     1DE :                     
     571/     1DE :                     ;Eingang Kommandomodus
     572/     1DE :                     GETCO1:
     573/     1DE : CD 28 01            kdo1:		call	INLINE		; Zeile eingeben
     574/     1E1 : 21 00 02            		ld	hl, KDOANF	; erste Adr, aber der Kdo zu suchen sind
     575/     1E4 : 01 00 FE            		ld	bc, RAMEND-KDOANF+1	; Anzahl (RAM-Ende-Startpos.)
     576/     1E7 : AF                  kdo2:		xor	a		; 00
     577/     1E8 : ED B1               		cpir			; suche 00
     578/     1EA : E2 DB 01            		jp	po, kdoerr
     579/     1ED : 3E 09               		ld	a, 9		; 09
     580/     1EF : BE                  		cp	(hl)		; folgt 09?
     581/     1F0 : 20 F5               		jr	nz, kdo2
     582/     1F2 : 23                  		inc	hl
     583/     1F3 : ED 5B 1A 18         		ld	de, (soil)	; Zwischenspeicher "Inline"
     584/     1F7 : 1A                  		ld	a, (de)		; KDO
     585/     1F8 : BE                  		cp	(hl)		; folgt Kommandbuchstabe?
     586/     1F9 : 20 EC               		jr	nz, kdo2
     587/     1FB : 23                  		inc	hl
     588/     1FC : 3E 0D               		ld	a, 0Dh		; 0d
     589/     1FE : BE                  		cp	(hl)		; folgt 0D?
     590/     1FF : 20 E6               		jr	nz, kdo2	; falsches Kdo
     591/     201 :                     ;
     592/     201 : 01 DE 01            		ld	bc, kdo1	; Returnadr. auf Stack
     593/     204 : C5                  		push	bc
     594/     205 : 23                  		inc	hl
     595/     206 : E5                  		push	hl
     596/     207 :                     ; Parameter
     597/     207 : 1B                  		dec	de
     598/     208 : CD 72 01            		call	INHEX		; 1. Argument
     599/     20B : 1A                  		ld	a, (de)
     600/     20C : FE 3A               		cp	':'		; die alten Werte nehmen ?
     601/     20E : 28 0F               		jr	z, kdo4
     602/     210 : 22 5B 18            		ld	(ARG1),	hl	; Argument 1
     603/     213 : CD 72 01            		call	INHEX
     604/     216 : 22 5D 18            		ld	(ARG2),	hl	; Argument 2
     605/     219 : CD 72 01            		call	INHEX
     606/     21C : 22 5F 18            		ld	(ARG3),	hl	; Argument 3
     607/     21F : C9                  kdo4:		ret
     608/     220 :                     
     609/     220 :                     ;------------------------------------------------------------------------------
     610/     220 :                     ; init. Sprungverteiler für RST-Aufrufe, NMI und Init.
     611/     220 :                     ; RST xx springt in den RAM. von dort geht es normalerweise zu den Monitor-
     612/     220 :                     ; Routinen, aber man kann auch eigene Ein-/Ausgaberoutinen nehmen
     613/     220 :                     ;
     614/     220 :                     ; bei Systemstart werden 32 Bytes nach Adresse 1802H kopiert
     615/     220 :                     ; Tabelle RST, NMI, Hilfsregister, V24, I/O (Voreinstellung)
     616/     220 :                     ;------------------------------------------------------------------------------
     617/     220 :                     
     618/     220 :                     ; damit init6 funktioniert, muss das Adresse 220h sein
     619/     220 :                     ; und lo(sv_rst) = Bereichsgröße sv_rstend-sv_rst
     620/     220 :                     	
     621/     220 :                     		org 220h
     622/     220 :                     
     623/     220 : C3 A5 00            sv_rst:		jp	rinch		; RST 08
     624/     223 : C3 13 00            		jp	routch		; RST 10
     625/     226 : C3 8D 0A            		jp	rprnst		; RST 18
     626/     229 : C3 5A 00            		jp	rWarm		; RST 20 Warmstart
     627/     22C : C3 59 0A            		jp	loa15		; RST 28 Eingabe 1 Byte A Kassette
     628/     22F : C3 57 09            		jp	sav10		; RST 30 Ausgabe 1 Byte A Kassette
     629/     232 : C3 40 02            		jp	rst38		; RST 38 error
     630/     235 : C3 43 02            loc_235:	jp	BREAK		; NMI: Breakpoint
     631/     238 : FF FF               		db 0FFh, 0FFh		; soil
     632/     23A : 53 43 48            aSch:		db "SCH"		; 181C
     633/     23D : 00                  		db    0			; 181F FarbCode=KEIN BWS voreingestellt
     634/     23E : 02                  		db    2			; 1820 Kommandocode V 24 (Adresse 1820H)
     635/     23F : 11                  		db  11h			; Ein/Ausgabebyte (Adresse 1821H)
     636/     240 :                     sv_rstend:
     637/     240 :                     
     638/     240 :                     ;------------------------------------------------------------------------------
     639/     240 :                     ; Standard-Routine rst 38
     640/     240 :                     ; Ausgabe Error, Register sichern, Ausgabe Break
     641/     240 :                     ;------------------------------------------------------------------------------
     642/     240 :                     
     643/     240 : CD 68 02            rst38:		call	error
     644/     243 :                     
     645/     243 :                     ;------------------------------------------------------------------------------
     646/     243 :                     ; Einsprung NMI, Register werden in die RSA gerettet, 
     647/     243 :                     ; I/O und PIO werden auf Standard gesetzt
     648/     243 :                     ;------------------------------------------------------------------------------
     649/     243 :                     
     650/     243 :                     ; Breakpoint
     651/     243 : CD A5 01            BREAK:		call	REGA		; Register sichern
     652/     246 : E1                  		pop	hl		; Returnadr nach Break
     653/     247 : 2B                  		dec	hl		; ein Byte zurück (norm. RST 38)
     654/     248 : 22 75 18            		ld	(REGPC), hl	; merken
     655/     24B : ED 73 77 18         break1:		ld	(REGSP), sp
     656/     24F : 31 56 18            		ld	sp, SYSSK	; Stack
     657/     252 : 3E 11               		ld	a, 11h		; Standard Console
     658/     254 : 32 21 18            		ld	(IOBYT), a	; Ein/Ausgabebyte
     659/     257 : DF                  		rst	18h		; PRNST
     660/     258 : 20 42 52 45 41 CB   aBrea:		db " BREA",'K'+80h
     661/     25E :                     ;
     662/     25E : 3E D2               break2:		ld	a, 0D2h		; auf Standard setzen
     663/     260 : D3 05               		out	(PIODB), a
     664/     262 : 21 DE 01            		ld	hl, GETCO1	; Kommandoschleife
     665/     265 : E5                  		push	hl       	; auf Stack
     666/     266 : ED 45               		retn			; und anspringen
     667/     268 :                     
     668/     268 :                     ;------------------------------------------------------------------------------
     669/     268 :                     ; Ausgabe "Error"
     670/     268 :                     ;------------------------------------------------------------------------------
     671/     268 :                     
     672/     268 : DF                  error:		rst	18h		; PRNST
     673/     269 : 20 20 45 52 52 4F   		db "  ERROR",0A0h
                    52 A0             
     674/     271 : C9                  		ret
     675/     272 :                     
     676/     272 :                     ;------------------------------------------------------------------------------
     677/     272 :                     ; UP "akustisches Signal"
     678/     272 :                     ;------------------------------------------------------------------------------
     679/     272 :                     
     680/     272 : C5                  beep:		push	bc
     681/     273 : 06 03               		ld	b, 3
     682/     275 : C5                  beep1:		push	bc
     683/     276 : 01 40 00            		ld	bc, 0040h	; 
     684/     279 : CD 87 02            		call	UPTON		; UP "Ton", Reg, B = Tonlaenge, C = Tonhoehe
     685/     27C : 01 32 F0            		ld	bc, 0F032h
     686/     27F : CD 87 02            		call	UPTON		; UP "Ton", Reg, B = Tonlaenge, C = Tonhoehe
     687/     282 : C1                  		pop	bc
     688/     283 : 10 F0               		djnz	beep1
     689/     285 : C1                  		pop	bc
     690/     286 : C9                  		ret
     691/     287 :                     
     692/     287 :                     ;------------------------------------------------------------------------------
     693/     287 :                     ; UP "Ton", Reg, B = Tonlaenge, C = Tonhoehe
     694/     287 :                     ;------------------------------------------------------------------------------
     695/     287 :                     
     696/     287 : F5                  UPTON:		push	af
     697/     288 : DB 05               ton1:		in	a, (PIODB)
     698/     28A : 1F                  		rra
     699/     28B : 3F                  		ccf
     700/     28C : 17                  		rla
     701/     28D : D3 05               		out	(PIODB), a
     702/     28F : 79                  		ld	a, c
     703/     290 : 3D                  ton2:		dec	a
     704/     291 : 20 FD               		jr	nz, ton2
     705/     293 : 10 F3               		djnz	ton1
     706/     295 : F1                  		pop	af
     707/     296 : C9                  		ret
     708/     297 :                     		
     709/     297 :                     ;------------------------------------------------------------------------------
     710/     297 :                     ;UP "Taste", testet Tastaturtatus, kehrt bei gedrückter Taste
     711/     297 :                     ;nach 18 ms mit dem Kode zum Akku zurück, keine Taste-Rückkehr mit
     712/     297 :                     ;gesetztem Z-Flag und A=0, Code steht in $1822
     713/     297 :                     ;------------------------------------------------------------------------------
     714/     297 :                     
     715/     297 : C5                  UPTAST:		push	bc
     716/     298 : CD C3 02            		call	tast6		; Taste gedrückt?
     717/     29B : 28 20               tast1:		jr	z, tast5	; nein
     718/     29D : 06 0C               		ld	b, 12		; 12x Kontrollesen, Wartezeit
     719/     29F : 4F                  		ld	c, a		; Tastenwert
     720/     2A0 : CD C3 02            tast2:		call	tast6
     721/     2A3 : B9                  		cp	c		; noch dieselbe Taste?
     722/     2A4 : 20 17               		jr	nz, tast5
     723/     2A6 : 10 F8               		djnz	tast2
     724/     2A8 :                     ;		cp	0FFh		; in Patches 21h
     725/     2A8 : FE 21               		cp	21h
     726/     2AA : 38 0F               		jr	c, tast4	; sprung wenn a < 0ffh (21h, d.h. Steuerzeichen)
     727/     2AC :                     					; daher patch auf 21h, so dass für
     728/     2AC :                     					; ASCII-zeichen der Grafik-Offs. funktioniert
     729/     2AC : DB 05               		in	a, (PIODB)
     730/     2AE : CB 57               tast3:		bit	2, a		; Grafiktaste ?
     731/     2B0 : 79                  		ld	a, c
     732/     2B1 : 20 08               		jr	nz, tast4	; nein
     733/     2B3 : C6 80               		add	a, 80h		; sonst Grafik-Offset dazu
     734/     2B5 : FE E0               		cp	0E0h
     735/     2B7 : 38 02               		jr	c, tast4
     736/     2B9 : D6 60               		sub	60h
     737/     2BB : 04                  tast4:		inc	b		; ??
     738/     2BC : 06                  		db  06h			; --> ld b,xx; überspringt XOR A
     739/     2BD : AF                  tast5:		xor	a
     740/     2BE : C1                  		pop	bc
     741/     2BF : 32 22 18            		ld	(tacod), a	; Tastencode der zuletzt gedr}ckten Taste
     742/     2C2 : C9                  		ret
     743/     2C3 :                     
     744/     2C3 :                     ; Test Taste gedrückt?
     745/     2C3 : 3E 94               tast6:		ld	a, 94h		; kurz warten (Entprellen)
     746/     2C5 : 3D                  tast7:		dec	a
     747/     2C6 : 20 FD               		jr	nz, tast7
     748/     2C8 : DB 04               		in	a, (PIODA)	; Tastenwert
     749/     2CA : CB 7F               		bit	7, a		; Taste	gedrückt?
     750/     2CC : CB BF               		res	7, a
     751/     2CE : C9                  		ret
     752/     2CF :                     
     753/     2CF :                     ;		db 0FFh
     754/     2CF :                     ;		db 0FFh
     755/     2CF :                     ;		db 0FFh
     756/     2CF :                     ;		db 0FFh
     757/     2CF :                     ;		db 0FFh
     758/     2CF :                     ;		db 0FFh
     759/     2CF :                     ;		db 0FFh
     760/     2CF :                     ;		db 0FFh
     761/     2CF :                     ;		db 0FFh
     762/     2CF :                     ;		db 0FFh
     763/     2CF :                     ;		db 0FFh
     764/     2CF :                     ;		db 0FFh
     765/     2CF :                     ;		db 0FFh
     766/     2CF :                     ;		db 0FFh
     767/     2CF :                     ;		db 0FFh
     768/     2CF :                     ;		db 0FFh
     769/     2CF :                     ;		db 0FFh
     770/     2CF :                     
     771/     2CF :                     ;------------------------------------------------------------------------------
     772/     2CF : AF                  sub_2CF:	xor	a
     773/     2D0 : D3 14               		out	(modul1), a	; Modul1 disablen
     774/     2D2 : C3 81 0E            		jp	loc_E81
     775/     2D5 :                     
     776/     2D5 :                     ;------------------------------------------------------------------------------
     777/     2D5 :                     ; BASIC-Start		
     778/     2D5 : 00 09 72 0D         		db 0,9,'r',0Dh
     779/     2D9 : 00                  		nop
     780/     2DA : 00                  		nop
     781/     2DB : 00                  		nop
     782/     2DC : 00                  		nop
     783/     2DD : C3 D5 5F            		jp	5FD5h
     784/     2E0 :                     ;
     785/     2E0 :                     ;------------------------------------------------------------------------------
     786/     2E0 :                     ; UP zu U 555-Eprommer
     787/     2E0 :                     ;------------------------------------------------------------------------------
     788/     2E0 :                     
     789/     2E0 : 7A                  sub_2E0:	ld	a, d
     790/     2E1 : D3 09               		out	(PIO2DB), a
     791/     2E3 : DB 05               		in	a, (PIODB)
     792/     2E5 : CB A7               		res	4, a
     793/     2E7 : D3 05               		out	(PIODB), a
     794/     2E9 : CB E7               		set	4, a		
     795/     2EB : D3 05               		out	(PIODB), a
     796/     2ED : 7B                  		ld	a, e
     797/     2EE : D3 09               		out	(PIO2DB), a
     798/     2F0 : E3                  		ex	(sp), hl
     799/     2F1 : E3                  		ex	(sp), hl
     800/     2F2 : DB 08               		in	a, (PIO2DA)
     801/     2F4 : C9                  		ret
     802/     2F5 :                     
     803/     2F5 : FF                  		db 0FFh
     804/     2F6 :                     
     805/     2F6 :                     ;------------------------------------------------------------------------------
     806/     2F6 :                     ; Interrupt Tabelle PIO/CTC
     807/     2F6 :                     ;------------------------------------------------------------------------------
     808/     2F6 :                     
     809/     2F6 :                     		align 2
     810/     2F6 :                     
     811/     2F6 : FF FF               inttab		dw 0FFFFh
     812/     2F8 : 5B 07               inttab1		dw step			; interrupt-Routine CTC0
     813/     2FA : 00 20               		dw 2000h		; interrupt-Routine CTC1
     814/     2FC : FF FF               		dw 0FFFFh		; interrupt-Routine CTC2
     815/     2FE : FF FF               		dw 0FFFFh		; interrupt-Routine CTC3
     816/     300 :                     
     817/     300 :                     ;------------------------------------------------------------------------------
     818/     300 :                     ; Bildschirmtreiber
     819/     300 :                     ; im Sprungverteiler wurde die HI-Adresse eingespart, deshalb müssen alle
     820/     300 :                     ; Steuerzeichenroutinen in derselben Page 03xx liegen! ( hi(cotab),lo(co_fkt) )
     821/     300 :                     ;
     822/     300 :                     ; 017FFH Bildschirmanfang (links oben !!)
     823/     300 :                     ; 01000H Bildschirmende (rechts unten !!)
     824/     300 :                     ; 32 Zeilen a 64 Zeichen
     825/     300 :                     ;
     826/     300 :                     ; Der BWS arbeitet aufgrund der Hardware invers
     827/     300 :                     ; d.h. inc geht ein Zeichen / eine Zeile zurück
     828/     300 :                     ;      dec geht ein Zeichen / eine Zeile vor
     829/     300 :                     ;------------------------------------------------------------------------------
     830/     300 :                     
     831/     300 :                     		; org 300h
     832/     300 : C5                  co0:		push	bc
     833/     301 : ED 5B 00 18         		ld	de, (cupos)	; Zwischenspeicher Kursor
     834/     305 : 21 25 18            		ld	hl, poscnt	; Hilfsregister Kursorpositionierung (CTRL+N)
     835/     308 : FE 10               		cp	10h		; Steuerzeichen?
     836/     30A : 30 0C               		jr	nc, co1		; Sprung, wenn kein Steuerzeichen
     837/     30C : 36 01               		ld	(hl), 1		; poscnt auf 1 setzen
     838/     30E : 01 C7 03            		ld	bc, cotab	; Tabelle f. Steuerzeichen
     839/     311 : 81                  		add	a, c
     840/     312 : 4F                  		ld	c, a
     841/     313 : 0A                  		ld	a, (bc)
     842/     314 : 4F                  		ld	c, a		; bc = hi(cotab),lo(co_fkt)
     843/     315 : C5                  		push	bc		; Adresse Steuerzeichenfkt. auf Stack
     844/     316 : EB                  		ex	de, hl		; hl=cupos, de=poscnt
     845/     317 : C9                  		ret			; und anspringen
     846/     318 :                     
     847/     318 :                     ; einfache Zeichenausgabe
     848/     318 : 35                  co1:		dec	(hl)		; hl=poscnt. ist ctrl-n-Mode aktiv? d.h.
     849/     319 :                     					; sind noch Ziffern zu verarbeiten?
     850/     319 : 20 18               		jr	nz, co5		; poscnt > 1 -> ja, dann dort weiter
     851/     31B : 36 01               co2:		ld	(hl), 1		; sonst wieder poscnt auf 1 setzen
     852/     31D :                     		;
     853/     31D : EB                  		ex	de, hl		; hl=cupos
     854/     31E : FE 7F               		cp	7Fh		; steuerzeichen 7Fh (del)
     855/     320 : 28 3B               		jr	z, co8
     856/     322 :                     ;		cp	5Fh		; steuerzeichen 5Fh (del)
     857/     322 :                     ;		jr	z, co8
     858/     322 : 00                  		nop
     859/     323 : 00                  		nop
     860/     324 : 00                  		nop
     861/     325 : 00                  		nop
     862/     326 : 77                  		ld	(hl), a		; sonst Zeichen in BWS schreiben
     863/     327 :                     
     864/     327 :                     ; Kursor nach rechts
     865/     327 : 2B                  o_cur:		dec	hl		; inc. cupos
     866/     328 : CD DC 03            co3:		call	scroll
     867/     32B : 22 00 18            co4:		ld	(cupos), hl	; Zwischenspeicher Kursor
     868/     32E :                     ; co Ende
     869/     32E : C1                  o_00:		pop	bc
     870/     32F : D1                  		pop	de
     871/     330 : E1                  		pop	hl
     872/     331 : F1                  		pop	af
     873/     332 : C9                  		ret
     874/     333 :                     
     875/     333 :                     ; direkte Cursorpositionierung
     876/     333 :                     ; in hl=poscnt Hilfsregister Kursorpositionierung (CTRL+N)
     877/     333 :                     ; de = bwsanf
     878/     333 :                     ; es folgen 4 Ziffern dezimal Zeile 00.31, Spalte 00..63
     879/     333 : FE 30               co5:		cp	'0'		; wenn keine Ziffer
     880/     335 : 38 E4               		jr	c, co2		; dann Abbruch 
     881/     337 : 28 F5               		jr	z, o_00		; '0' übergehen
     882/     339 : FE 3A               		cp	'9'+1		; wenn keine Ziffer
     883/     33B : 30 DE               		jr	nc, co2		; dann Abbruch 
     884/     33D : D6 30               		sub	'0'
     885/     33F : 46                  		ld	b, (hl)		; hl=poscnt
     886/     340 :                     		; offs. berechnen
     887/     340 :                     		; summand ermitteln
     888/     340 : EB                  		ex	de, hl		; hl = bwsanf
     889/     341 : 11 FF FF            		ld	de, -1
     890/     344 : 05                  		dec	b
     891/     345 : 28 0D               		jr	z, co6		; wenn Einerstelle Spalte
     892/     347 : 1E F6               		ld	e, -10
     893/     349 : 05                  		dec	b
     894/     34A : 28 08               		jr	z, co6		; wenn Zehnerstelle Spalte
     895/     34C : 1E C0               		ld	e, -COLS
     896/     34E : 05                  		dec	b
     897/     34F : 28 03               		jr	z, co6		; wenn Einerstelle Zeile
     898/     351 : 11 80 FD            		ld	de, -COLS*10	; sonst wenn Zehner Zeile
     899/     354 : 47                  co6:		ld	b, a		; a (=ziffer) mal
     900/     355 : 19                  co7:		add	hl, de		; aufaddieren
     901/     356 : CD DC 03            		call	scroll
     902/     359 : 10 FA               		djnz	co7
     903/     35B : 18 CE               		jr	co4		; ende
     904/     35D :                     
     905/     35D :                     ; del 7Fh, 5Fh
     906/     35D : 23                  co8:		inc	hl		; ein Zeichen zurück
     907/     35E : CD DC 03            		call	scroll
     908/     361 : 36 20               		ld	(hl), ' '	; Zeichen löschen
     909/     363 : 18 C6               		jr	co4
     910/     365 :                     
     911/     365 :                     ; Bildschirm löschen
     912/     365 : 21 FF 17            o_cls:		ld	hl, BWSANF
     913/     368 : 22 00 18            		ld	(cupos), hl	; Zwischenspeicher Kursor
     914/     36B :                     
     915/     36B :                     ; Bildschirm ab Kursorposition löschen
     916/     36B : 36 20               o_clsc:		ld	(hl), ' '
     917/     36D : 2B                  		dec	hl
     918/     36E : 7C                  		ld	a, h
     919/     36F : FE 0F               		cp	0Fh
     920/     371 : 20 F8               		jr	nz, o_clsc
     921/     373 : 18 B9               		jr	o_00
     922/     375 :                     
     923/     375 :                     ; Zeile ab Kursorposition löschen
     924/     375 : 36 20               o_clln:		ld	(hl), ' '	; aktuelles Zeichen löschen
     925/     377 : 2B                  co9:		dec	hl		; inc cupos
     926/     378 : 36 20               		ld	(hl), ' '	; nächstes  Zeichen löschen
     927/     37A : 3E 3F               		ld	a, COLS-1
     928/     37C : A5                  		and	l		; Zeilenende erreicht?
     929/     37D : 20 F8               		jr	nz, co9		; nein -> weiter
     930/     37F : 18 AD               co10:		jr	o_00
     931/     381 :                     
     932/     381 :                     ; Kursor an den Anfang der Zeile
     933/     381 : 7D                  o_sol:		ld	a, l
     934/     382 : F6 3F               		or	COLS-1		 ; setze auf Zeilenanfang
     935/     384 : 6F                  		ld	l, a
     936/     385 : 18 A4               		jr	co4
     937/     387 :                     
     938/     387 :                     ; BEL, akustisches Signal
     939/     387 : CD 72 02            o_bell:		call	beep
     940/     38A : 18 A2               		jr	o_00
     941/     38C :                     
     942/     38C :                     ; Kursor nach links
     943/     38C : 23                  o_cul:		inc	hl		; dec cupos
     944/     38D : 18 99               		jr	co3
     945/     38F :                     
     946/     38F :                     ; Kursor nach unten
     947/     38F : 11 C0 FF            o_cud:		ld	de, -COLS
     948/     392 : 19                  co11:		add	hl, de
     949/     393 : 18 93               		jr	co3
     950/     395 :                     
     951/     395 :                     ; Kursor nach oben
     952/     395 : 11 40 00            o_cuu:		ld	de, COLS
     953/     398 : 18 F8               		jr	co11
     954/     39A :                     
     955/     39A :                     ; CR, Kursor an Anfang nächster Zeile; Enter
     956/     39A : 7D                  o_cr:		ld	a, l
     957/     39B : E6 C0               		and	0C0h
     958/     39D : 6F                  		ld	l, a
     959/     39E : 18 87               		jr	o_cur
     960/     3A0 :                     
     961/     3A0 :                     ; Kursor direkt positionieren
     962/     3A0 : 3E 05               o_setc:		ld	a, 5
     963/     3A2 : 12                  		ld	(de), a		; de=poscnt Hilfsregister Kursorpositionierung (CTRL+N)
     964/     3A3 :                     		; jetzt Cursor auf BWSANF setzen (f. Berechnung in co5)
     965/     3A3 :                     
     966/     3A3 :                     ; Home, Kursor oben links
     967/     3A3 : 21 FF 17            o_home:		ld	hl, BWSANF
     968/     3A6 : 18 83               		jr	co4
     969/     3A8 :                     
     970/     3A8 :                     ; Delete;	Zeichen	löschen, Zeile rückt nach links
     971/     3A8 : 54                  o_del:		ld	d, h
     972/     3A9 : 5D                  		ld	e, l
     973/     3AA : 2B                  		dec	hl
     974/     3AB : 7D                  co12:		ld	a, l
     975/     3AC : ED A8               		ldd
     976/     3AE : E6 3F               		and	COLS-1
     977/     3B0 : 20 F9               		jr	nz, co12
     978/     3B2 : 13                  		inc	de
     979/     3B3 : 3E 20               co13:		ld	a, ' '
     980/     3B5 : 12                  		ld	(de), a
     981/     3B6 : 18 C7               		jr	co10
     982/     3B8 :                     
     983/     3B8 :                     ; Insert;	Space einfügen,	Zeile rückt nach rechts
     984/     3B8 : 7D                  o_ins:		ld	a, l
     985/     3B9 : E6 C0               		and	0C0h
     986/     3BB : 5F                  		ld	e, a
     987/     3BC : 7D                  		ld	a, l
     988/     3BD : 6B                  		ld	l, e
     989/     3BE : 54                  		ld	d, h
     990/     3BF : 23                  		inc	hl
     991/     3C0 : BB                  co14:		cp	e
     992/     3C1 : 28 F0               		jr	z, co13
     993/     3C3 : ED A0               		ldi
     994/     3C5 : 18 F9               		jr	co14
     995/     3C7 :                     
     996/     3C7 :                     ; Tabelle Steuercodes, lo-teil, hi-teil ist hi(cotab) also, 03xx !
     997/     3C7 : 2E                  cotab:		db lo(o_00)	; 00 keine Funktion
     998/     3C8 : A3                  		db lo(o_home)	; 01 Home, Kursor oben links
     999/     3C9 : 6B                  		db lo(o_clsc)	; 02 Bildschirm ab Kursorposition löschen
    1000/     3CA : 75                  		db lo(o_clln)	; 03 Zeile ab Kursorposition löschen
    1001/     3CB : A8                  		db lo(o_del)	; 04 Delete; Zeichen löschen, Zeile rückt nach links
    1002/     3CC : B8                  		db lo(o_ins)	; 05 Insert; Space einfügen, Zeile rückt nach rechts
    1003/     3CD : 81                  		db lo(o_sol)	; 06 Kursor an den Anfang der Zeile
    1004/     3CE : 87                  		db lo(o_bell)	; 07 BEL, akustisches Signal
    1005/     3CF : 8C                  		db lo(o_cul)	; 08 Kursor nach links
    1006/     3D0 : 27                  		db lo(o_cur)	; 09 Kursor nach rechts
    1007/     3D1 : 8F                  		db lo(o_cud)	; 0A Kursor nach unten
    1008/     3D2 : 95                  		db lo(o_cuu)	; 0B Kursor nach oben
    1009/     3D3 : 65                  		db lo(o_cls)	; 0C Bildschirm löschen
    1010/     3D4 : 9A                  		db lo(o_cr)	; 0D CR, Kursor an Anfang nächster Zeile; Enter
    1011/     3D5 : A0                  		db lo(o_setc)	; 0E Kursor direkt positionieren
    1012/     3D6 : D7                  		db lo(o_tab)	; 0F Tabulator 8 Spalten
    1013/     3D7 :                     
    1014/     3D7 :                     ; Tabulator 8 Spalten
    1015/     3D7 : 11 F8 FF            o_tab:		ld	de, -8
    1016/     3DA : 18 B6               		jr	co11
    1017/     3DC :                     
    1018/     3DC :                     ; eine Zeile hochscrollen
    1019/     3DC : 7C                  scroll:	ld	a, h
    1020/     3DD : FE 18               		cp	hi(BWSANF)+1	; BWS-Ende?
    1021/     3DF : 38 02               		jr	c, scroll1
    1022/     3E1 : 26 10               		ld	h, Hi(BWSEND)
    1023/     3E3 : FE 10               scroll1:	cp	Hi(BWSEND)
    1024/     3E5 : D0                  		ret	nc
    1025/     3E6 : 7D                  		ld	a, l
    1026/     3E7 : D5                  		push	de
    1027/     3E8 : C5                  		push	bc
    1028/     3E9 : 21 BF 17            		ld	hl, BWSANF-COLS
    1029/     3EC : 11 FF 17            		ld	de, BWSANF
    1030/     3EF : 01 C0 07            		ld	bc, COLS*(LINES-1)
    1031/     3F2 : ED B8               		lddr			; scrollen
    1032/     3F4 : EB                  		ex	de, hl
    1033/     3F5 : 23                  		inc	hl
    1034/     3F6 : 2D                  scroll2:	dec	l
    1035/     3F7 : 36 20               		ld	(hl), ' '
    1036/     3F9 : 20 FB               		jr	nz, scroll2
    1037/     3FB : E6 3F               		and	COLS-1
    1038/     3FD : 6F                  		ld	l, a
    1039/     3FE : C1                  		pop	bc
    1040/     3FF : D1                  		pop	de
    1041/     400 : C9                  		ret
    1042/     401 :                     
    1043/     401 :                     ;------------------------------------------------------------------------------
    1044/     401 :                     ; N aaaa bbbb CRC - Prüfsumme
    1045/     401 :                     ;------------------------------------------------------------------------------
    1046/     401 :                     
    1047/     401 : 00 09 4E 0D         		db 0,9,'N',0Dh
    1048/     405 :                     
    1049/     405 : =404H               crc:		equ	$-1		; vp: Adresse-1 ist ein Fehler
    1050/     405 :                     					; wird 2x angesprungen! passiert glücklicherweise nix...
    1051/     405 :                     					; da 0Dh == dec c, ohne Wirkung
    1052/     405 :                     
    1053/     405 : 2A 5B 18            n_kdo:		ld	hl, (ARG1)	; Argument 1
    1054/     408 : 11 FF FF            		ld	de, 0FFFFh
    1055/     40B : 06 80               crc1:		ld	b, 80h
    1056/     40D : CB 23               crc2:		sla	e
    1057/     40F : CB 12               		rl	d
    1058/     411 : 9F                  		sbc	a, a
    1059/     412 : AE                  		xor	(hl)
    1060/     413 : A0                  		and	b
    1061/     414 : 28 08               		jr	z, crc4
    1062/     416 : 7B                  		ld	a, e
    1063/     417 : EE 21               crc3:		xor	21h
    1064/     419 : 5F                  		ld	e, a
    1065/     41A : 7A                  		ld	a, d
    1066/     41B : EE 10               		xor	10h
    1067/     41D : 57                  		ld	d, a
    1068/     41E : CB 38               crc4:		srl	b
    1069/     420 : 30 EB               		jr	nc, crc2
    1070/     422 : ED 4B 5D 18         		ld	bc, (ARG2)	; Argument 2
    1071/     426 : AF                  		xor	a
    1072/     427 : ED 42               		sbc	hl, bc
    1073/     429 : 09                  		add	hl, bc
    1074/     42A : 23                  		inc	hl
    1075/     42B : 20 DE               		jr	nz, crc1
    1076/     42D : EB                  		ex	de, hl
    1077/     42E : DF                  		rst	18h		; PRNST
    1078/     42F : 20 43 52 43 A0      		db " CRC",0A0h
    1079/     434 : C3 9A 01            		jp	OUTHL		; Ausgabe HL hexadezimal
    1080/     437 :                     
    1081/     437 :                     ;------------------------------------------------------------------------------
    1082/     437 :                     ; F aaaa bbbb cc dd ... Finding String Hex
    1083/     437 :                     ; F aaaa bbbb 'ABC.... Finding String ASCII
    1084/     437 :                     ;------------------------------------------------------------------------------
    1085/     437 :                     
    1086/     437 : 00 09 46 0D         		db 0,9,'F',0Dh
    1087/     43B :                     
    1088/     43B : DF                  		rst	18h		; PRNST
    1089/     43C : AA                  		db '*'+80h
    1090/     43D : ED 4B 5B 18         		ld	bc, (ARG1)	; Argument 1
    1091/     441 : D5                  fkdo1:		push	de
    1092/     442 : E5                  		push	hl
    1093/     443 : 1A                  		ld	a, (de)
    1094/     444 : FE 27               		cp	27h ; '''
    1095/     446 : F5                  		push	af
    1096/     447 : 0A                  		ld	a, (bc)
    1097/     448 : 28 03               		jr	z, fkdo2	; suche Ascii
    1098/     44A :                     ; vergleiche hex-Byte
    1099/     44A : BD                  		cp	l
    1100/     44B : 18 03               		jr	fkdo3
    1101/     44D :                     ; suche Ascii
    1102/     44D : 1B                  fkdo2:		dec	de
    1103/     44E : EB                  		ex	de, hl
    1104/     44F : BE                  		cp	(hl)
    1105/     450 :                     ;
    1106/     450 : 28 0D               fkdo3:		jr	z, fkdo6
    1107/     452 : F1                  		pop	af
    1108/     453 : 03                  fkdo4:		inc	bc
    1109/     454 : A7                  		and	a
    1110/     455 : 2A 5D 18            fkdo5:		ld	hl, (ARG2)	; Argument 2
    1111/     458 : ED 42               		sbc	hl, bc
    1112/     45A : E1                  		pop	hl
    1113/     45B : D1                  		pop	de
    1114/     45C : D8                  		ret	c
    1115/     45D : 18 E2               		jr	fkdo1
    1116/     45F :                     ;		
    1117/     45F : F1                  fkdo6:		pop	af
    1118/     460 : C5                  		push	bc
    1119/     461 : 28 10               		jr	z, fkdo9
    1120/     463 : CD 72 01            fkdo7:		call	INHEX		; naechstes Suchbyte holen
    1121/     466 : 03                  		inc	bc
    1122/     467 : 0A                  		ld	a, (bc)
    1123/     468 : BD                  		cp	l
    1124/     469 : 28 F8               		jr	z, fkdo7	; solange gleich
    1125/     46B : 1A                  		ld	a, (de)
    1126/     46C : FE 20               		cp	' '		; letztes Suchbyte verglichen?
    1127/     46E : 20 0E               		jr	nz, fkdo10
    1128/     470 : C1                  fkdo8:		pop	bc
    1129/     471 : 18 E0               		jr	fkdo4
    1130/     473 : 2B                  fkdo9:		dec	hl
    1131/     474 : 03                  		inc	bc
    1132/     475 : 0A                  		ld	a, (bc)
    1133/     476 : BE                  		cp	(hl)
    1134/     477 : 28 FA               		jr	z, fkdo9
    1135/     479 : 7E                  		ld	a, (hl)
    1136/     47A : FE 20               		cp	' '
    1137/     47C : 20 F2               		jr	nz, fkdo8
    1138/     47E : E1                  fkdo10:		pop	hl
    1139/     47F : CD 89 05            		call	outhlsp		; Ausgabe HL + 4 Leerzeichen
    1140/     482 : 18 CF               		jr	fkdo4
    1141/     484 :                     
    1142/     484 : FF                  		db 0FFh
    1143/     485 : FF                  		db 0FFh
    1144/     486 :                     
    1145/     486 :                     ;------------------------------------------------------------------------------
    1146/     486 :                     ; M aaaa (bbbb) Memory
    1147/     486 :                     ;------------------------------------------------------------------------------
    1148/     486 :                     
    1149/     486 : 00 09 4D 0D         		db 0,9,'M',0Dh
    1150/     48A :                     
    1151/     48A : CD CA 04            m_kdo:		call	para		; Argumente uebergeben
    1152/     48D : 06 10               mkdo1:		ld	b, 10h
    1153/     48F : C5                  mkdo2:		push	bc
    1154/     490 : 01 00 10            		ld	bc, 1000h
    1155/     493 : DF                  		rst	18h		; PRNST
    1156/     494 : 20 23 20 BE         		db 	" # ",'>'+80h
    1157/     498 : CD 9A 01            		call	OUTHL		; Ausgabe HL hexadezimal
    1158/     49B : DF                  		rst	18h		; PRNST
    1159/     49C : A0                  		db	' '+80h
    1160/     49D : 7E                  mkdo3:		ld	a, (hl)
    1161/     49E : CD 83 01            		call	OUTHEX		; Ausgabe A hexadezimal
    1162/     4A1 : A9                  		xor	c
    1163/     4A2 : DF                  		rst	18h		; PRNST
    1164/     4A3 : A0                  		db	' '+80h
    1165/     4A4 : A7                  		and	a
    1166/     4A5 : ED 52               		sbc	hl, de
    1167/     4A7 : 19                  		add	hl, de
    1168/     4A8 : 23                  		inc	hl
    1169/     4A9 : 4F                  		ld	c, a
    1170/     4AA : 28 02               		jr	z, mkdo4
    1171/     4AC : 10 EF               		djnz	mkdo3
    1172/     4AE : DF                  mkdo4:		rst	18h		; PRNST
    1173/     4AF : 2A A0               		db 	'*',' '+80h
    1174/     4B1 : CD 83 01            		call	OUTHEX		; Ausgabe A hexadezimal
    1175/     4B4 : DF                  		rst	18h		; PRNST
    1176/     4B5 : 20 2A 8D            		db 	" *",0Dh+80h
    1177/     4B8 : C1                  		pop	bc
    1178/     4B9 : 22 5B 18            		ld	(ARG1),	hl	; Argument 1
    1179/     4BC : C8                  		ret	z
    1180/     4BD : 10 D0               		djnz	mkdo2
    1181/     4BF : CF                  		rst	8		; INCH
    1182/     4C0 : FE 0D               		cp	0Dh
    1183/     4C2 : 28 C9               		jr	z, mkdo1
    1184/     4C4 : 04                  		inc	b
    1185/     4C5 : FE 20               		cp	' '
    1186/     4C7 : 28 C6               		jr	z, mkdo2
    1187/     4C9 : C9                  		ret
    1188/     4CA :                     		
    1189/     4CA :                     ;------------------------------------------------------------------------------
    1190/     4CA :                     ; Register mit Argumenten laden, aaaa=HL, bbbb=DE, cccc=BC
    1191/     4CA :                     ;------------------------------------------------------------------------------
    1192/     4CA :                     
    1193/     4CA : 2A 5B 18            para:		ld	hl, (ARG1)	; Argument 1
    1194/     4CD : ED 5B 5D 18         		ld	de, (ARG2)	; Argument 2
    1195/     4D1 : ED 4B 5F 18         		ld	bc, (ARG3)
    1196/     4D5 : C9                  		ret
    1197/     4D6 :                     
    1198/     4D6 : FF                  		db 0FFh
    1199/     4D7 : FF                  		db 0FFh
    1200/     4D8 :                     
    1201/     4D8 :                     ;------------------------------------------------------------------------------
    1202/     4D8 :                     ; P aaaa bbbb cc Pattern
    1203/     4D8 :                     ;------------------------------------------------------------------------------
    1204/     4D8 :                     
    1205/     4D8 : 00 09 50 0D         		db 0,9,'P',0Dh
    1206/     4DC :                     
    1207/     4DC : CD CA 04            		call	para		; Argumente uebergeben
    1208/     4DF : 71                  		ld	(hl), c		; Pattern cc
    1209/     4E0 : E5                  		push	hl
    1210/     4E1 : AF                  		xor	a
    1211/     4E2 : EB                  		ex	de, hl
    1212/     4E3 : ED 52               		sbc	hl, de
    1213/     4E5 : 44                  		ld	b, h
    1214/     4E6 : 4D                  		ld	c, l
    1215/     4E7 : E1                  		pop	hl
    1216/     4E8 : 13                  		inc	de
    1217/     4E9 : ED B0               pko1:		ldir
    1218/     4EB : C9                  		ret
    1219/     4EC :                     
    1220/     4EC :                     ;------------------------------------------------------------------------------
    1221/     4EC :                     ; T aaaa bbbb cccc Transfer
    1222/     4EC :                     ;------------------------------------------------------------------------------
    1223/     4EC :                     
    1224/     4EC : 00 09 54 0D         		db 0,9,'T',0Dh
    1225/     4F0 :                     
    1226/     4F0 : CD CA 04            		call	para		; Argumente uebergeben
    1227/     4F3 : AF                  		xor	a
    1228/     4F4 : E5                  		push	hl
    1229/     4F5 : ED 52               		sbc	hl, de
    1230/     4F7 : E1                  		pop	hl
    1231/     4F8 : 30 EF               		jr	nc, pko1
    1232/     4FA : 09                  		add	hl, bc
    1233/     4FB : EB                  		ex	de, hl
    1234/     4FC : 09                  		add	hl, bc
    1235/     4FD : EB                  		ex	de, hl
    1236/     4FE : 2B                  		dec	hl
    1237/     4FF : 1B                  		dec	de
    1238/     500 : ED B8               		lddr
    1239/     502 : C9                  		ret
    1240/     503 :                     
    1241/     503 :                     ;------------------------------------------------------------------------------
    1242/     503 :                     ; A aaaa bbbb c	Arithmetik Summe, Differenz, Displ., Dezimalwert
    1243/     503 :                     ; c ist	Länge des Sprungbefehls	(für relative Sprungbefehle ist	c gleich zwei)
    1244/     503 :                     ;------------------------------------------------------------------------------
    1245/     503 :                     
    1246/     503 : 00 09 41 0D         		db 0,9,'A',0Dh
    1247/     507 :                     
    1248/     507 : CD CA 04            		call	para		; Argumente uebergeben
    1249/     50A : E5                  		push	hl
    1250/     50B : D5                  		push	de
    1251/     50C : 23                  		inc	hl
    1252/     50D : 23                  		inc	hl
    1253/     50E : EB                  		ex	de, hl
    1254/     50F : AF                  		xor	a
    1255/     510 : ED 52               		sbc	hl, de
    1256/     512 : 38 09               		jr	c, ako1
    1257/     514 : BC                  		cp	h
    1258/     515 : 20 18               		jr	nz, ako3
    1259/     517 : CB 7D               		bit	7, l
    1260/     519 : 20 14               		jr	nz, ako3
    1261/     51B : 18 08               		jr	ako2
    1262/     51D :                     ;
    1263/     51D : 2F                  ako1:		cpl
    1264/     51E : BC                  		cp	h
    1265/     51F : 20 0E               		jr	nz, ako3
    1266/     521 : CB 7D               		bit	7, l
    1267/     523 : 28 0A               		jr	z, ako3
    1268/     525 : DF                  ako2:		rst	18h		; PRNST
    1269/     526 : 44 53 50 4C BA      		db 	"DSPL",':'+80h
    1270/     52B : 7D                  		ld	a, l
    1271/     52C : CD 83 01            		call	OUTHEX		; Ausgabe A hexadezimal
    1272/     52F : D1                  ako3:		pop	de
    1273/     530 : E1                  		pop	hl
    1274/     531 : E5                  		push	hl
    1275/     532 : E5                  		push	hl
    1276/     533 : 19                  		add	hl, de		; Summe
    1277/     534 : DF                  		rst	18h		; PRNST
    1278/     535 : 20 20 20 53 55 4D   		db 	"   SUM",':'+80h
                    BA                
    1279/     53C : CD 9A 01            		call	OUTHL		; Ausgabe HL hexadezimal
    1280/     53F : E1                  		pop	hl
    1281/     540 : ED 52               		sbc	hl, de		; Differenz
    1282/     542 : DF                  		rst	18h		; PRNST
    1283/     543 : 20 20 20 44 49 46   		db 	"   DIF",':'+80h
                    BA                
    1284/     54A : CD 9A 01            		call	OUTHL		; Ausgabe HL hexadezimal
    1285/     54D : C1                  		pop	bc
    1286/     54E :                     ; Hezimalwandlung BC ->	AHL
    1287/     54E : 21 00 00            		ld	hl, 0
    1288/     551 : 5D                  		ld	e, l
    1289/     552 : 78                  ako4:		ld	a, b
    1290/     553 : B1                  		or	c
    1291/     554 : 28 0F               		jr	z, ako5
    1292/     556 : 0B                  		dec	bc
    1293/     557 : 7D                  		ld	a, l
    1294/     558 : 3C                  		inc	a
    1295/     559 : 27                  		daa
    1296/     55A : 6F                  		ld	l, a
    1297/     55B : 7C                  		ld	a, h
    1298/     55C : CE 00               		adc	a, 0
    1299/     55E : 27                  		daa
    1300/     55F : 67                  		ld	h, a
    1301/     560 : 30 F0               		jr	nc, ako4
    1302/     562 : 1C                  		inc	e
    1303/     563 : 18 ED               		jr	ako4
    1304/     565 :                     ;		
    1305/     565 : DF                  ako5:		rst	18h		; PRNST
    1306/     566 : 20 20 20 44 45 43   		db "   DEC",':'+80h
                    BA                
    1307/     56D : 7B                  		ld	a, e
    1308/     56E : E6 0F               		and	0Fh
    1309/     570 : F6 30               		or	30h ; '0'	; 5. Stelle (max 6)
    1310/     572 : D7                  		rst	10h		; OUTCH
    1311/     573 : CD 9A 01            		call	OUTHL		; Ausgabe HL hexadezimal
    1312/     576 : DF                  		rst	18h		; PRNST
    1313/     577 : 8D                  		db	0Dh+80h
    1314/     578 : C9                  		ret
    1315/     579 :                     
    1316/     579 :                     ;------------------------------------------------------------------------------
    1317/     579 :                     ; Registeranzeige und -Modifikation
    1318/     579 :                     ;------------------------------------------------------------------------------
    1319/     579 :                     
    1320/     579 : 4F                  flags:		ld	c, a
    1321/     57A : 21 BE 05            		ld	hl, flagtab	; Liste	der Flag-Kürzel
    1322/     57D : 06 08               		ld	b, 8		; 8 Bit
    1323/     57F : CB 01               flags1:		rlc	c
    1324/     581 : 30 02               		jr	nc, flags2	; wenn Flag gesetzt
    1325/     583 : 7E                  		ld	a, (hl)		; dann dessen Kürzel ausgeben
    1326/     584 : D7                  		rst	10h		; OUTCH
    1327/     585 : 23                  flags2:		inc	hl
    1328/     586 : 10 F7               		djnz	flags1
    1329/     588 : C9                  		ret
    1330/     589 :                     
    1331/     589 :                     ; Ausgabe HL + 4 Leerzeichen
    1332/     589 : CD 9A 01            outhlsp:	call	OUTHL		; Ausgabe HL hexadezimal
    1333/     58C : DF                  out4sp:		rst	18h		; PRNST
    1334/     58D : 20 20 20 A0         		db "   ",' ' +80h
    1335/     591 : C9                  		ret
    1336/     592 :                     
    1337/     592 :                     ; Kürzel f. Register-Edit
    1338/     592 : 41 42 44 48         regtab1:	db  'A','B','D','H'
    1339/     596 : 58 59 43 50         		db  'X','Y','C','P'
    1340/     59A :                     
    1341/     59A :                     ; Registeranzeige. Reihenfolge der Register entspricht der RSA (absteigend)!
    1342/     59A : 20 20 20 20         regtab2:	db "    "
    1343/     59E : 53 50               		db "SP"
    1344/     5A0 : 50 43               		db "PC"
    1345/     5A2 : 49 59               		db "IY"
    1346/     5A4 : 49 58               		db "IX"
    1347/     5A6 :                     		;
    1348/     5A6 : 4D 41 49 4E         		db "MAIN"
    1349/     5AA : 48 4C               regtab3:	db "HL"
    1350/     5AC : 44 45               		db "DE"
    1351/     5AE : 42 43               		db "BC"
    1352/     5B0 : 41 46               		db "AF"
    1353/     5B2 :                     		;
    1354/     5B2 : 45 58 58 52         		db "EXXR"
    1355/     5B6 : 48 4C               		db "HL"
    1356/     5B8 : 44 45               		db "DE"
    1357/     5BA : 42 43               		db "BC"
    1358/     5BC : 41 46               		db "AF"
    1359/     5BE :                     
    1360/     5BE :                     ; Liste	der Flag-Kürzel
    1361/     5BE : 53 5A 00 48 00 50   flagtab:	db  'S', 'Z', 0, 'H', 0, 'P', 'N', 'C'
                    4E 43             
    1362/     5C6 :                     
    1363/     5C6 :                     ;------------------------------------------------------------------------------
    1364/     5C6 :                     ;R XX	Register Registerinhalt verändern
    1365/     5C6 :                     ;R:	Registerinhalte	anzeigen
    1366/     5C6 :                     
    1367/     5C6 :                     ;  BP:FFFF    BS:FFFFFF
    1368/     5C6 :                     ;        SP:FFFF    PC:FFFF    IY:FFFF    IX:FFFF
    1369/     5C6 :                     ;  MAIN  HL:FFFF    DE:FFFF    BC:FFFF    AF:FFFF
    1370/     5C6 :                     ;  EXXR  HL:FFFF    DE:FFFF    BC:FFFF    AF:FFFF
    1371/     5C6 :                     ;  FLAGS:  SZHPNC  (SZHPNC)
    1372/     5C6 :                     ;------------------------------------------------------------------------------
    1373/     5C6 :                     
    1374/     5C6 : 00 09 52 0D         		db 0,9,'R',0Dh
    1375/     5CA :                     
    1376/     5CA : FE 3A               		cp	':'
    1377/     5CC : 20 6F               		jr	nz, rko1
    1378/     5CE :                     ; Register anzeigen
    1379/     5CE :                     rka1:		; BP
    1380/     5CE : DF                  		rst	18h		; PRNST
    1381/     5CF : 20 20 42 50 BA      		db	 "  BP",':'+80h
    1382/     5D4 : 2A 79 18            		ld	hl, (BPADR)
    1383/     5D7 : CD 89 05            		call	outhlsp		; Ausgabe HL + 4 Leerzeichen
    1384/     5DA :                     		; BS
    1385/     5DA : DF                  		rst	18h		; PRNST
    1386/     5DB : 42 53 BA            		db 	"BS",':'+80h
    1387/     5DE : 21 7B 18            		ld	hl, BPOPC	; RSA: Breakpointsequenz
    1388/     5E1 : 06 03               		ld	b, 3		; 3 Byte Code
    1389/     5E3 : 7E                  rka2:		ld	a, (hl)
    1390/     5E4 : CD 83 01            		call	OUTHEX		; Ausgabe A hexadezimal
    1391/     5E7 : 23                  		inc	hl
    1392/     5E8 : 10 F9               		djnz	rka2
    1393/     5EA :                     		; 3 Zeilen a 4 Doppel-Register
    1394/     5EA : 0E 03               		ld	c, 3		; 3 Zeilen
    1395/     5EC : 11 9A 05            		ld	de, regtab2	; "    "
    1396/     5EF : DD 21 78 18         rka3:		ld	ix, REGSP+1	; Werte, lo-Byte von REGSP
    1397/     5F3 : DF                  rka4:		rst	18h		; PRNST
    1398/     5F4 : 0D 20 A0            		db 	0Dh,' ',' '+80h
    1399/     5F7 :                     		; 4 Zeichen Zeilenbezeichnung
    1400/     5F7 : 06 04               		ld	b, 4
    1401/     5F9 : 1A                  rka5:		ld	a, (de)
    1402/     5FA : D7                  		rst	10h		; OUTCH
    1403/     5FB : 13                  		inc	de
    1404/     5FC : 10 FB               		djnz	rka5
    1405/     5FE : DF                  		rst	18h		; PRNST
    1406/     5FF : 20 A0               		db 	' ',' '+80h
    1407/     601 :                     		; 4 Doppelregister
    1408/     601 : 06 04               		ld	b, 4
    1409/     603 : 1A                  rka6:		ld	a, (de)		; 1. Buchstabe
    1410/     604 : D7                  		rst	10h		; OUTCH
    1411/     605 : 13                  		inc	de
    1412/     606 : 1A                  		ld	a, (de)		; 2. Buchstabe	
    1413/     607 : D7                  		rst	10h		; OUTCH
    1414/     608 : 13                  		inc	de
    1415/     609 : DF                  		rst	18h		; PRNST
    1416/     60A : BA                  		db 	':'+80h
    1417/     60B : DD 66 00            rka7:		ld	h, (ix+0)	; Registerinhalte
    1418/     60E : DD 2B               		dec	ix
    1419/     610 : DD 6E 00            		ld	l, (ix+0)
    1420/     613 : DD 2B               		dec	ix
    1421/     615 : CD 89 05            		call	outhlsp		; Ausgabe HL + 4 Leerzeichen
    1422/     618 : 10 E9               		djnz	rka6
    1423/     61A :                     		;
    1424/     61A : 0D                  		dec	c
    1425/     61B : 20 D6               		jr	nz, rka4
    1426/     61D :                     		; und noch die Flags
    1427/     61D : DF                  		rst	18h		; PRNST
    1428/     61E : 0D 20 20 46 4C 41   		db 	0Dh,"  FLAGS: ",' '+80h
                    47 53 3A 20 A0    
    1429/     629 : 3A 69 18            		ld	a, (REGAF)
    1430/     62C : CD 79 05            		call	flags		; Flags auswerten und anzeigen
    1431/     62F : DF                  		rst	18h		; PRNST
    1432/     630 : 20 20 A8            		db 	"  ",'('+80h
    1433/     633 : 3A 61 18            		ld	a, (REGAFX)
    1434/     636 : CD 79 05            		call	flags		; Flags auswerten und anzeigen
    1435/     639 : DF                  		rst	18h		; PRNST
    1436/     63A : 29 8D               		db 	')',0Dh+80h
    1437/     63C : C9                  		ret
    1438/     63D :                     
    1439/     63D :                     ; Register ändern
    1440/     63D : 2A 1A 18            rko1:		ld	hl, (soil)	; HL zeigt auf Zeichen nach 'R'
    1441/     640 : 2B                  		dec	hl		; 2 Zeichen vor ('R')
    1442/     641 : 2B                  		dec	hl		; Leerzeichen
    1443/     642 : 7E                  		ld	a, (hl)		; Registername 1. Buchstabe
    1444/     643 : E5                  		push	hl
    1445/     644 : 21 92 05            		ld	hl, regtab1
    1446/     647 : 06 04               		ld	b, 4
    1447/     649 : 11 69 18            		ld	de, REGAF	; Registerinhalte in RSA
    1448/     64C : BE                  rko2:		cp	(hl)		; suche 'A','B','D','H'
    1449/     64D : 28 16               		jr	z, rko4		; wenn gefunden
    1450/     64F : 13                  		inc	de		; RSA-Pointer erhöhen (2 Byte)
    1451/     650 : 13                  		inc	de
    1452/     651 : 23                  		inc	hl
    1453/     652 : 10 F8               		djnz	rko2		; weiter vergleichen
    1454/     654 :                     		;
    1455/     654 : C1                  		pop	bc		; bc=Registername 1. Buchstabe
    1456/     655 : 0B                  		dec	bc		; 1 Zeichen vor
    1457/     656 : 0A                  		ld	a, (bc)		; Registername 2. Buchstabe
    1458/     657 : 06 04               		ld	b, 4
    1459/     659 : BE                  rko3:		cp	(hl)		; suche 'X','Y','C','P'
    1460/     65A : 28 17               		jr	z, rko6		; wenn gefunden
    1461/     65C : 13                  		inc	de		; RSA-Pointer erhöhen (2 Byte)
    1462/     65D : 13                  		inc	de
    1463/     65E : 23                  		inc	hl
    1464/     65F : 10 F8               		djnz	rko3		; weiter vergleichen
    1465/     661 :                     		;
    1466/     661 : C3 CE 05            		jp	rka1		; Register anzeigen
    1467/     664 :                     
    1468/     664 : FF                  		db 0FFh
    1469/     665 :                     
    1470/     665 :                     ; Registerwert ändern AF..HL [']
    1471/     665 : E1                  rko4:		pop	hl
    1472/     666 : 2B                  		dec	hl
    1473/     667 : 2B                  		dec	hl
    1474/     668 : 7E                  		ld	a, (hl)		; folgt noch ein ' ?
    1475/     669 : EB                  		ex	de, hl		; (Zweitregistersatz)
    1476/     66A : FE 27               		cp	27h ; '''
    1477/     66C : 20 04               		jr	nz, rko5	; nein
    1478/     66E : 11 F8 FF            		ld	de, -8		; ja, dann in RSA auf 
    1479/     671 : 19                  		add	hl, de		; Zweitregistersatz gehen
    1480/     672 : EB                  rko5:		ex	de, hl
    1481/     673 :                     ; Registerwert ändern IX..SP
    1482/     673 : 1A                  rko6:		ld	a, (de)
    1483/     674 : 6F                  		ld	l, a
    1484/     675 : 13                  		inc	de
    1485/     676 : 1A                  		ld	a, (de)
    1486/     677 : 67                  		ld	h, a		; HL=aktueller Registerwert
    1487/     678 : DF                  		rst	18h		; PRNST
    1488/     679 : 20 A0               		db 	' ',' '+80h
    1489/     67B : CD 9A 01            		call	OUTHL		; Ausgabe HL hexadezimal
    1490/     67E :                     ;Eingabe neuer Wert
    1491/     67E : CD 28 01            rko7:		call	INLINE		; Zeile	  eingeben
    1492/     681 : 2A 1A 18            		ld	hl, (soil)	; Zwischenspeicher "Inline"
    1493/     684 : EB                  		ex	de, hl
    1494/     685 : E5                  		push	hl
    1495/     686 : D5                  		push	de
    1496/     687 : CD 72 01            		call	INHEX		; HL=neuer Wert
    1497/     68A : EB                  		ex	de, hl
    1498/     68B : E1                  		pop	hl
    1499/     68C : 7E                  		ld	a, (hl)
    1500/     68D : E1                  		pop	hl
    1501/     68E : FE 20               		cp	' '		; wurde was eingegeben?
    1502/     690 : C8                  		ret	z		; wenn keine Eingabe
    1503/     691 : 72                  		ld	(hl), d		; sonst Wert
    1504/     692 : 2B                  		dec	hl
    1505/     693 : 73                  		ld	(hl), e		; übernehmen
    1506/     694 : C9                  		ret
    1507/     695 :                     
    1508/     695 :                     ;------------------------------------------------------------------------------
    1509/     695 :                     ; C aaaa bbbb cccc Compare
    1510/     695 :                     ;------------------------------------------------------------------------------
    1511/     695 :                     
    1512/     695 : 00 09 43 0D         		db 0,9,'C',0Dh
    1513/     699 :                     
    1514/     699 : CD CA 04            		call	para		; Argumente uebergeben
    1515/     69C : 1A                  cko1:		ld	a, (de)		; bbbb
    1516/     69D : BE                  		cp	(hl)		; vergleich mit aaaa
    1517/     69E : 28 1F               		jr	z, cko2		; weiter wenn gleich
    1518/     6A0 :                     		; Differenz anzeigen
    1519/     6A0 :                     		; "a-Adr. Wert b-Adr. Wert"
    1520/     6A0 : DF                  		rst	18h		; PRNST
    1521/     6A1 : 20 A0               		db 	' ',' '+80h
    1522/     6A3 : CD 89 05            		call	outhlsp		; Ausgabe HL + 4 Leerzeichen aaaa
    1523/     6A6 : 7E                  		ld	a, (hl)
    1524/     6A7 : CD 83 01            		call	OUTHEX		; Ausgabe A hexadezimal Wert
    1525/     6AA : CD 8C 05            		call	out4sp		; Ausgabe Leerzeichen
    1526/     6AD : CD 8C 05            		call	out4sp		; Ausgabe Leerzeichen
    1527/     6B0 : EB                  		ex	de, hl
    1528/     6B1 : CD 89 05            		call	outhlsp		; Ausgabe HL + 4 Leerzeichen bbbb
    1529/     6B4 : EB                  		ex	de, hl
    1530/     6B5 : 1A                  		ld	a, (de)
    1531/     6B6 : CD 83 01            		call	OUTHEX		; Ausgabe A hexadezimal  wert 
    1532/     6B9 : DF                  		rst	18h		; PRNST
    1533/     6BA : 8D                  		db 	0Dh+80h
    1534/     6BB : CF                  		rst	8		; INCH
    1535/     6BC : FE 0D               		cp	0Dh
    1536/     6BE : C0                  		ret	nz
    1537/     6BF : 0B                  cko2:		dec	bc		; Anzahl cccc
    1538/     6C0 : 23                  		inc	hl		; Adressen erhöhen
    1539/     6C1 : 13                  		inc	de
    1540/     6C2 : 78                  		ld	a, b		; Anzahl cccc abgearbeitet?
    1541/     6C3 : B1                  		or	c
    1542/     6C4 : C8                  		ret	z		; dann Ende
    1543/     6C5 : 18 D5               		jr	cko1		; sonst weiter vergleichen
    1544/     6C7 :                     
    1545/     6C7 :                     ;------------------------------------------------------------------------------
    1546/     6C7 :                     ; B aaaa Breakpoint
    1547/     6C7 :                     ; Setzen eines Softwarehaltepunktes auf Adresse aaaa. 
    1548/     6C7 :                     ; Hinweis: Der Breakpoint wird erst bei j_kdo geladen!
    1549/     6C7 :                     ;------------------------------------------------------------------------------
    1550/     6C7 :                     
    1551/     6C7 : 00 09 42 0D         		db 0,9,'B',0Dh
    1552/     6CB :                     
    1553/     6CB : 2A 5B 18            		ld	hl, (ARG1)	; Argument 1
    1554/     6CE : 22 79 18            bko1:		ld	(BPADR), hl
    1555/     6D1 : 11 7B 18            		ld	de, BPOPC	; RSA: Breakpointsequenz
    1556/     6D4 : 01 03 00            		ld	bc, 3		; 3 Byte sichern
    1557/     6D7 : ED B0               		ldir
    1558/     6D9 : 21 43 07            		ld	hl, loc_743	; Breakpoint-Routine
    1559/     6DC : 22 15 18            		ld	(jp_rst38+1), hl	; Eintragen bei RST 38
    1560/     6DF : C9                  		ret
    1561/     6E0 :                     
    1562/     6E0 :                     ;------------------------------------------------------------------------------
    1563/     6E0 :                     ; G Go on
    1564/     6E0 :                     ; Start eines Programms ab Adresse PC, Siehe Befehl 'J'.
    1565/     6E0 :                     ;------------------------------------------------------------------------------
    1566/     6E0 :                     
    1567/     6E0 : 00 09 47 0D         		db 0,9,'G',0Dh
    1568/     6E4 :                     
    1569/     6E4 : 2A 75 18            g_kdo:		ld	hl, (REGPC)
    1570/     6E7 : 22 5B 18            		ld	(ARG1),	hl	; Argument 1
    1571/     6EA :                     
    1572/     6EA :                     ;vp: hier fehlt eigentlich ein jr j_kdo
    1573/     6EA :                     ;die nachfolgende Kommandokennung wird dekodiert als 
    1574/     6EA :                     ;	nop
    1575/     6EA :                     ;	add     hl, bc
    1576/     6EA :                     ;	ld      c, d
    1577/     6EA :                     ;	dec     c
    1578/     6EA :                     ;das bringt zum Glueck das Programm nicht durcheinander
    1579/     6EA :                     
    1580/     6EA :                     ;------------------------------------------------------------------------------
    1581/     6EA :                     ; J aaaa 	Jump
    1582/     6EA :                     ;------------------------------------------------------------------------------
    1583/     6EA :                     
    1584/     6EA : 00 09 4A 0D         		db 0,9,'J',0Dh		
    1585/     6EE :                     
    1586/     6EE : 3A 15 18            j_kdo:		ld	a, (jp_rst38+1)	; Routine bei RST 38
    1587/     6F1 : FE 40               		cp	lo(rst38)
    1588/     6F3 : 28 05               		jr	z, jko1
    1589/     6F5 : 2A 79 18            		ld	hl, (BPADR)
    1590/     6F8 : 36 FF               		ld	(hl), 0FFh	; RST 38-Befehl eintragen
    1591/     6FA :                     		; Test auf genügend freien RAM ab SP
    1592/     6FA : 2A 77 18            jko1:		ld	hl, (REGSP)
    1593/     6FD : 06 0A               		ld	b, 10		; 10 Byte RAM?
    1594/     6FF : 2B                  		dec	hl
    1595/     700 : 7E                  jko2:		ld	a, (hl)
    1596/     701 : 2F                  		cpl
    1597/     702 : 77                  		ld	(hl), a
    1598/     703 : BE                  		cp	(hl)
    1599/     704 : 20 08               		jr	nz, jko3
    1600/     706 : 2F                  		cpl
    1601/     707 : 77                  		ld	(hl), a
    1602/     708 : 10 F6               		djnz	jko2
    1603/     70A : 2A 77 18            		ld	hl, (REGSP)
    1604/     70D : DD                  		db 0DDh			; nachfolgenden	Befehl übergehen, deuten als ld	ix, xxx
    1605/     70E : 21 00 19            jko3:		ld	hl, 1900h	; wenn kein RAM, dann Adr. 18FFh..18F0h nutzen
    1606/     711 : F9                  		ld	sp, hl
    1607/     712 : 2A 5B 18            		ld	hl, (ARG1)	; Argument 1
    1608/     715 : 22 75 18            		ld	(REGPC), hl
    1609/     718 : E5                  		push	hl
    1610/     719 : C3 BC 01            		jp	REGH		; Register aus Registerrettebereich holen
    1611/     71C :                     
    1612/     71C :                     ;------------------------------------------------------------------------------
    1613/     71C :                     ; E aaaa ; E Einzelschritt
    1614/     71C :                     ;------------------------------------------------------------------------------
    1615/     71C :                     
    1616/     71C : 00 09 45 0D         		db 0,9,'E',0Dh
    1617/     720 :                     
    1618/     720 : 1A                  		ld	a, (de)
    1619/     721 : FE 3A               		cp	':'
    1620/     723 : 28 06               		jr	z, eko2
    1621/     725 :                     ;		
    1622/     725 : 2A 5B 18            		ld	hl, (ARG1)	; Argument 1, aaaa
    1623/     728 : 22 75 18            eko1:		ld	(REGPC), hl
    1624/     72B : ED 7B 77 18         eko2:		ld	sp, (REGSP)
    1625/     72F : 2A 75 18            		ld	hl, (REGPC)
    1626/     732 : E5                  		push	hl		; Adr. auf Stack
    1627/     733 : CD BC 01            		call	REGH		; Register aus Registerrettebereich holen
    1628/     736 : F5                  		push	af
    1629/     737 : 3E 87               		ld	a, 87h
    1630/     739 : D3 00               		out	(CTC0), a	; EI,Zeitgeber,Vorteiler 16,ZK folgt
    1631/     73B : 3E 02               		ld	a, 2
    1632/     73D : D3 00               		out	(CTC0), a	; ZK
    1633/     73F : FB                  		ei
    1634/     740 : 0A                  		ld	a, (bc)
    1635/     741 : F1                  		pop	af
    1636/     742 : C9                  		ret			; aaaa anspringen
    1637/     743 :                     
    1638/     743 :                     ;------------------------------------------------------------------------------
    1639/     743 :                     ; wird bei Breakpoint aufgerufen (via RST 38)
    1640/     743 :                     ;------------------------------------------------------------------------------
    1641/     743 :                     
    1642/     743 : CD A5 01            loc_743:	call	REGA		; CPU-Register ausräumen nach RSA
    1643/     746 : 2A 35 02            		ld	hl, (loc_235)	; wieder BREAK eintragen, Std. Routine RST 38
    1644/     749 :                     					; vp: müsste daher eigentlich loc_235+1 sein !!!
    1645/     749 : 22 15 18            		ld	(jp_rst38+1), hl	; Eintragen bei RST 38
    1646/     74C : E1                  		pop	hl
    1647/     74D : 2B                  		dec	hl
    1648/     74E : 3A 7B 18            		ld	a, (BPOPC)	; RSA: Breakpointsequenz
    1649/     751 : 77                  		ld	(hl), a		; Code-Byte restaurieren
    1650/     752 : ED 73 77 18         		ld	(REGSP), sp
    1651/     756 : 18 D0               		jr	eko1		; Code weiter ausführen
    1652/     758 :                     
    1653/     758 : FF                  		db 0FFh
    1654/     759 : FF                  		db 0FFh
    1655/     75A : FF                  		db 0FFh
    1656/     75B :                     
    1657/     75B :                     ;------------------------------------------------------------------------------
    1658/     75B :                     ; Interrupt-Routine CTC Kanal CTC0
    1659/     75B :                     ; wird bei Einzelschrittbetrieb 'E' aufgerufen, wenn der nächste Befehl erreicht ist
    1660/     75B :                     ;------------------------------------------------------------------------------
    1661/     75B :                     ; z.B.
    1662/     75B :                     ; 0637 79             HL:0000 DE:0000 BC:0000 AF:0078 F:ZH
    1663/     75B :                     ; 0638 05             HL:0000 DE:0000 BC:FF00 AF:00BA F:SHN      
    1664/     75B :                     ;------------------------------------------------------------------------------
    1665/     75B :                     
    1666/     75B :                     
    1667/     75B : CD A5 01            step:		call	REGA		; Register sichern
    1668/     75E : D1                  		pop	de		; Adr. nach "RST 38"
    1669/     75F : ED 73 77 18         		ld	(REGSP), sp
    1670/     763 : 2A 75 18            		ld	hl, (REGPC)	; voherige Adr. merken
    1671/     766 : ED 53 75 18         		ld	(REGPC), de
    1672/     76A : 31 56 18            		ld	sp, SYSSK	; Stack
    1673/     76D : DF                  		rst	18h		; PRNST
    1674/     76E : 06 A0               		db 	6,' '+80h	; and zeilenanfang, überschreibt damit 
    1675/     770 :                     					; aktuelle Anzeige
    1676/     770 : CD 9A 01            		call	OUTHL		; Ausgabe HL hexadezimal PC aktuelle Adr.
    1677/     773 :                     		; max 5 Code-Bytes anzeigen
    1678/     773 : 06 05               		ld	b, 5		
    1679/     775 : DF                  step1:		rst	18h		; PRNST
    1680/     776 : A0                  		db	' '+80h		; Leerzeichen
    1681/     777 : E5                  		push	hl
    1682/     778 : AF                  		xor	a
    1683/     779 : ED 52               		sbc	hl, de
    1684/     77B : E1                  		pop	hl
    1685/     77C : 28 07               		jr	z, step3	; wenn aktuelle Adresse erreicht
    1686/     77E :                     					; nichts mehr anzeigen
    1687/     77E : 7E                  step2:		ld	a, (hl)		; sonst Codebyte
    1688/     77F : 23                  		inc	hl
    1689/     780 : CD 83 01            		call	OUTHEX		; Ausgabe
    1690/     783 : 18 08               		jr	step4		; weiter
    1691/     785 : 3E 05               step3:		ld	a, 5		; Spezialfall 5 Bytes
    1692/     787 : B8                  		cp	b
    1693/     788 : 28 F4               		jr	z, step2	; ja -> trotzdem 5 Bytes anzeigen
    1694/     78A : DF                  		rst	18h		; PRNST
    1695/     78B : 20 A0               		db ' ',' '+80h		; sonst 2 Leerzeichen statt Byte
    1696/     78D : 10 E6               step4:		djnz	step1
    1697/     78F :                     		; die 4 Doppelregister HL .. AF ausgeben
    1698/     78F : 06 04               		ld	b, 4		
    1699/     791 : 11 AA 05            		ld	de, regtab3	; ab "HL"
    1700/     794 : 21 70 18            		ld	hl, REGHL+1	; Registerinhalte, lo-Byte
    1701/     797 : DF                  step5:		rst	18h		; PRNST
    1702/     798 : A0                  		db	' '+80h
    1703/     799 : 1A                  		ld	a, (de)		; Registername 1. Zeichen
    1704/     79A : D7                  		rst	10h		; OUTCH
    1705/     79B : 13                  		inc	de
    1706/     79C : 1A                  		ld	a, (de)		; Registername 2. Zeichen
    1707/     79D : D7                  		rst	10h		; OUTCH
    1708/     79E : 13                  		inc	de
    1709/     79F : DF                  		rst	18h		; PRNST
    1710/     7A0 : BA                  		db 	':' + 80h
    1711/     7A1 : 7E                  		ld	a, (hl)
    1712/     7A2 : 2B                  		dec	hl
    1713/     7A3 : E5                  		push	hl
    1714/     7A4 : 6E                  		ld	l, (hl)
    1715/     7A5 : 67                  		ld	h, a		; Registerwert
    1716/     7A6 : CD 9A 01            		call	OUTHL		; Ausgabe HL hexadezimal
    1717/     7A9 : E1                  		pop	hl
    1718/     7AA : 2B                  		dec	hl
    1719/     7AB : 10 EA               		djnz	step5		; weiter
    1720/     7AD :                     		; Flags anzeigen
    1721/     7AD : DF                  		rst	18h		; PRNST
    1722/     7AE : 20 46 BA            		db " F",':'+80h
    1723/     7B1 : 3A 69 18            		ld	a, (REGAF)
    1724/     7B4 : CD 79 05            		call	flags		; Flags anzeigen
    1725/     7B7 :                     		; Zeilenende
    1726/     7B7 : DF                  		rst	18h		; PRNST
    1727/     7B8 : 0D A0               		db 0Dh,' '+80h
    1728/     7BA :                     		; aktuelle Ad. in neuer Zeile anzeigen
    1729/     7BA : 2A 75 18            		ld	hl, (REGPC)
    1730/     7BD : CD 9A 01            		call	OUTHL		; Ausgabe HL hexadezimal
    1731/     7C0 :                     		; 5 Codebytes anzeigen
    1732/     7C0 : 06 05               		ld	b, 5
    1733/     7C2 : DF                  step6:		rst	18h		; PRNST
    1734/     7C3 : A0                  		db	' '+80h
    1735/     7C4 : 7E                  		ld	a, (hl)
    1736/     7C5 : 23                  		inc	hl
    1737/     7C6 : CD 83 01            		call	OUTHEX		; Ausgabe A hexadezimal
    1738/     7C9 : 10 F7               		djnz	step6
    1739/     7CB : 3E 03               		ld	a, 3		; DI, Reset
    1740/     7CD : D3 00               		out	(CTC0), a
    1741/     7CF :                     ; interaktiv
    1742/     7CF : D7                  step7:		rst	10h		; OUTCH
    1743/     7D0 : CF                  step8:		rst	8		; INCH
    1744/     7D1 : 21 E4 06            		ld	hl, g_kdo
    1745/     7D4 : FE 47               		cp	'G'		; 'G' Go?
    1746/     7D6 : 28 2C               		jr	z, stepend	; -> G
    1747/     7D8 : 21 2B 07            		ld	hl, eko2
    1748/     7DB : FE 0D               		cp	0Dh		; CR?
    1749/     7DD : 28 25               		jr	z, stepend	; -> E, nächster Step
    1750/     7DF : FE 20               		cp	' '
    1751/     7E1 : 38 EC               		jr	c, step7	; sonstige Steuerzeichen ignorieren
    1752/     7E3 :                     		;
    1753/     7E3 : 21 DE 01            		ld	hl, kdo1	; Kommandoschleife
    1754/     7E6 : 18 18               		jr	step9		; Sprungverteiler übergehen
    1755/     7E8 :                     
    1756/     7E8 :                     ; Einschub
    1757/     7E8 :                     ;------------------------------------------------------------------------------
    1758/     7E8 :                     ; Sprungverteiler
    1759/     7E8 :                     ; an dieser festen Adr. zur Kompatibilität mit Ur-AC1
    1760/     7E8 :                     ; (Ende 2K-EPROM)
    1761/     7E8 :                     ;------------------------------------------------------------------------------
    1762/     7E8 :                     
    1763/     7E8 :                     		org	07E8h
    1764/     7E8 :                     
    1765/     7E8 : C3 FF FF            		jp	0FFFFh		; Reserve
    1766/     7EB : C3 1D 01            		jp	MS30		; ca. 30 ms warten
    1767/     7EE : C3 83 01            j_OUTHEX	jp	OUTHEX		; Ausgabe A hexadezimal
    1768/     7F1 : C3 9A 01            j_OUTHL		jp	OUTHL		; Ausgabe HL hexadezimal
    1769/     7F4 : C3 28 01            		jp	INLINE		; Zeile	  eingeben
    1770/     7F7 : C3 72 01            		jp	INHEX
    1771/     7FA : C3 4D 0D            		jp	TASTE
    1772/     7FD : C3 DE 01            j_GETCO1	jp	GETCO1		; Kommandoschleife
    1773/     800 :                     
    1774/     800 :                     ;------------------------------------------------------------------------------
    1775/     800 :                     ; weiter mit CTC-ISR
    1776/     800 :                     ;------------------------------------------------------------------------------
    1777/     800 :                     
    1778/     800 : FE 51               step9:		cp	'Q'		; 'Q' Quit?
    1779/     802 : 20 03               		jr	nz, step10	; ja, Ende Schrittbetrieb
    1780/     804 : E5                  stepend:	push	hl
    1781/     805 : ED 4D               		reti
    1782/     807 :                     ; 
    1783/     807 : FE 42               step10:		cp	'B'		; 'B' Breakpoint?
    1784/     809 : 20 18               		jr	nz, step11
    1785/     80B :                     		; Breakpoint
    1786/     80B : DF                  		rst	18h		; PRNST
    1787/     80C : 20 42 D0            		db " B",'P'+80h
    1788/     80F : CD 28 01            		call	INLINE		; Zeile	  eingeben
    1789/     812 : 2A 1A 18            		ld	hl, (soil)	; Zwischenspeicher "Inline"
    1790/     815 : 7E                  		ld	a, (hl)
    1791/     816 : FE 20               		cp	' '
    1792/     818 : 28 B6               		jr	z, step8
    1793/     81A : EB                  		ex	de, hl
    1794/     81B : CD 72 01            		call	INHEX		; Eingabe Breakpointadr.
    1795/     81E : CD CE 06            		call	bko1		; Breakpoint setzen
    1796/     821 : 18 AD               		jr	step8
    1797/     823 :                     ;		
    1798/     823 : FE 52               step11:		cp	'R'		; 'R' Register show/edit
    1799/     825 : CC 28 01            		call	z, INLINE	; Zeile	  eingeben
    1800/     828 : CC 3D 06            		call	z, rko1
    1801/     82B : 18 A3               		jr	step8		; weiter in Bearbeitungsschleife
    1802/     82D :                     
    1803/     82D :                     ;------------------------------------------------------------------------------
    1804/     82D :                     ; > ändert beliebige Anzahl von Byte ab Adresse
    1805/     82D :                     ;------------------------------------------------------------------------------
    1806/     82D :                     
    1807/     82D : 00 09 3E 0D         		db 0,9,'>',0Dh
    1808/     831 :                     
    1809/     831 : ED 5B 1A 18         gt_kdo:		ld	de, (soil)	; Zwischenspeicher "Inline"
    1810/     835 : 1B                  		dec	de
    1811/     836 : CD 72 01            		call	INHEX
    1812/     839 : 20 04               		jr	nz, gtko1
    1813/     83B : 1A                  		ld	a, (de)
    1814/     83C : FE 20               		cp	' '
    1815/     83E : C0                  		ret	nz
    1816/     83F : E5                  gtko1:		push	hl
    1817/     840 : CD 72 01            		call	INHEX
    1818/     843 : 20 05               		jr	nz, gtko2
    1819/     845 : 1A                  		ld	a, (de)
    1820/     846 : FE 20               		cp	' '
    1821/     848 : 20 0B               		jr	nz, gtko3
    1822/     84A : 7D                  gtko2:		ld	a, l
    1823/     84B : E1                  		pop	hl
    1824/     84C : 77                  		ld	(hl), a
    1825/     84D : BE                  		cp	(hl)
    1826/     84E : 23                  		inc	hl
    1827/     84F : 28 EE               		jr	z, gtko1
    1828/     851 : 0E 00               		ld	c, 0
    1829/     853 : 18 EA               		jr	gtko1
    1830/     855 :                     ;
    1831/     855 : DF                  gtko3:		rst	18h		; PRNST
    1832/     856 : 8B                  		db 8Bh
    1833/     857 : FE 2A               		cp	'*'
    1834/     859 : 79                  		ld	a, c
    1835/     85A : 11 10 00            		ld	de, 10h
    1836/     85D : 28 02               		jr	z, gtko4
    1837/     85F : 1E 08               		ld	e, 8
    1838/     861 : 2A 5B 18            gtko4:		ld	hl, (ARG1)	; Argument 1
    1839/     864 : C1                  		pop	bc
    1840/     865 : 19                  gtko5:		add	hl, de
    1841/     866 : A7                  		and	a
    1842/     867 : ED 42               		sbc	hl, bc
    1843/     869 : 09                  		add	hl, bc
    1844/     86A : 38 F9               		jr	c, gtko5
    1845/     86C : 2B                  		dec	hl
    1846/     86D : 22 5D 18            		ld	(ARG2),	hl	; Argument 2
    1847/     870 : 21 68 02            		ld	hl, error	; Ausgabe "Error"
    1848/     873 : A7                  		and	a
    1849/     874 : 20 01               		jr	nz, gtko6
    1850/     876 : E5                  		push	hl
    1851/     877 : CB 5B               gtko6:		bit	3, e
    1852/     879 : CA 8A 04            		jp	z, m_kdo
    1853/     87C : 00                  		nop
    1854/     87D : 09                  		add	hl, bc
    1855/     87E : 44                  		ld	b, h
    1856/     87F : 0D                  		dec	c
    1857/     880 : CD CA 04            		call	para		; Argumente uebergeben
    1858/     883 : 06 19               gtko7:		ld	b, 25
    1859/     885 : C5                  gtko8:		push	bc
    1860/     886 : 01 01 08            		ld	bc, 801h
    1861/     889 : DF                  		rst	18h		; PRNST
    1862/     88A : 20 23 20 BE         		db " # ",0BEh
    1863/     88E : CD 9A 01            		call	OUTHL		; Ausgabe HL hexadezimal
    1864/     891 : DF                  		rst	18h		; PRNST
    1865/     892 : 20 A0               		db ' ',0A0h
    1866/     894 : E5                  		push	hl
    1867/     895 : 7E                  gtko9:		ld	a, (hl)
    1868/     896 : CD 83 01            		call	OUTHEX		; Ausgabe A hexadezimal
    1869/     899 : DF                  		rst	18h		; PRNST
    1870/     89A : A0                  		db	' '+80h
    1871/     89B : A7                  		and	a
    1872/     89C : ED 52               		sbc	hl, de
    1873/     89E : 19                  		add	hl, de
    1874/     89F : 23                  		inc	hl
    1875/     8A0 : 20 01               		jr	nz, gtko10
    1876/     8A2 : 0D                  		dec	c
    1877/     8A3 : 10 F0               gtko10:		djnz	gtko9
    1878/     8A5 : DF                  		rst	18h		; PRNST
    1879/     8A6 : BA                  		db 0BAh
    1880/     8A7 : E1                  		pop	hl
    1881/     8A8 : 06 08               		ld	b, 8
    1882/     8AA : 7E                  gtko11:		ld	a, (hl)
    1883/     8AB : FE 20               		cp	' '
    1884/     8AD : 38 08               		jr	c, gtko12
    1885/     8AF : FE 5F               		cp	5Fh ; '_'
    1886/     8B1 : 28 04               		jr	z, gtko12
    1887/     8B3 : FE 7F               		cp	7Fh ; ''
    1888/     8B5 : 38 02               		jr	c, gtko13
    1889/     8B7 : 3E 2E               gtko12:		ld	a, '.'
    1890/     8B9 : D7                  gtko13:		rst	10h		; OUTCH
    1891/     8BA : 23                  		inc	hl
    1892/     8BB : 10 ED               		djnz	gtko11
    1893/     8BD : DF                  		rst	18h		; PRNST
    1894/     8BE : 3A 8D               		db ':',8Dh
    1895/     8C0 : 79                  		ld	a, c
    1896/     8C1 : C1                  		pop	bc
    1897/     8C2 : 3D                  		dec	a
    1898/     8C3 : C0                  		ret	nz
    1899/     8C4 : 10 BF               		djnz	gtko8
    1900/     8C6 : CF                  		rst	8		; INCH
    1901/     8C7 : FE 0D               		cp	0Dh
    1902/     8C9 : 28 B8               		jr	z, gtko7
    1903/     8CB : 04                  		inc	b
    1904/     8CC : FE 20               		cp	' '
    1905/     8CE : 28 B5               		jr	z, gtko8
    1906/     8D0 : C9                  		ret
    1907/     8D1 :                     
    1908/     8D1 :                     ;------------------------------------------------------------------------------
    1909/     8D1 :                     ; H I/O - Byte
    1910/     8D1 :                     ;------------------------------------------------------------------------------
    1911/     8D1 :                     
    1912/     8D1 : 00 09 48 0D         		db 0,9,'H',0Dh
    1913/     8D5 :                     
    1914/     8D5 : DF                  		rst	18h		; PRNST
    1915/     8D6 : 20 49 2F 4F 20 42   		db " I/O Byte",0A0h
                    79 74 65 A0       
    1916/     8E0 : 11 21 18            		ld	de, IOBYT	; Ein/Ausgabebyte
    1917/     8E3 : 1A                  		ld	a, (de)
    1918/     8E4 : CD 83 01            		call	OUTHEX		; Ausgabe A hexadezimal
    1919/     8E7 : 13                  		inc	de
    1920/     8E8 : C3 7E 06            		jp	rko7
    1921/     8EB :                     
    1922/     8EB :                     ;------------------------------------------------------------------------------
    1923/     8EB :                     ; Save AC1-Kodierung
    1924/     8EB :                     ; S aadr eadr sadr name	Save	Datei auf Kassette ausgeben
    1925/     8EB :                     ; s. ac1_berlin/kassettenformate_ac1_mode.htm
    1926/     8EB :                     ;------------------------------------------------------------------------------
    1927/     8EB :                     ; File-Format: AC1-Mode, Monitor V 3.1
    1928/     8EB :                     ; 
    1929/     8EB :                     ; 512 Nullbytes zum Einschwingen
    1930/     8EB :                     ; E6h, Polarisationsbyte
    1931/     8EB :                     ; 'U', Kennbyte für Namen
    1932/     8EB :                     ; Namen, max. 16 Zeichen, wenn kürzer wird mit Leerzeichen aufgefüllt
    1933/     8EB :                     ; 216 Nullbytes, Zeit für Namensdarstellung beim Einlesen
    1934/     8EB :                     ; es folgen Blöcke:
    1935/     8EB :                     ; 	'<', Kennbyte für Datenblock
    1936/     8EB :                     ; 	XX, Blocklänge, normal 256, Restblock entsprechend weniger
    1937/     8EB :                     ; 	XXXX, Blockstartadresse
    1938/     8EB :                     ; 	256 Datenbyte, Restblock entsprechend weniger
    1939/     8EB :                     ; 	0XX, Prüfsumme
    1940/     8EB :                     ; 'x' Kennbyte für Endeblock
    1941/     8EB :                     ;  XXXX Startadresse
    1942/     8EB :                     ;------------------------------------------------------------------------------
    1943/     8EB :                     
    1944/     8EB : 00 09 53 0D         		db 0,9,'S',0Dh
    1945/     8EF :                     
    1946/     8EF : CD 37 0A            		call	q_ko21		; Start/Stop-Schaltung start
    1947/     8F2 : 1B                  csave:		dec	de		; de = bws-pos. nach 3. Parameter
    1948/     8F3 : 1A                  		ld	a, (de)
    1949/     8F4 : FE 20               		cp	' '		; Leerzeichen vor Filename
    1950/     8F6 : 28 FA               		jr	z, csave	; übergehen
    1951/     8F8 :                     ;Vorton 2x256 00-Bytes ausgeben
    1952/     8F8 : 06 00               		ld	b, 0
    1953/     8FA : AF                  sav1:		xor	a
    1954/     8FB : F7                  		rst	30h		; 1 Byte speichern, AC1-Format
    1955/     8FC : AF                  		xor	a
    1956/     8FD : F7                  		rst	30h		; 1 Byte speichern, AC1-Format
    1957/     8FE : 10 FA               		djnz	sav1
    1958/     900 :                     ;Synchronisationsmuster E6h
    1959/     900 : 3E E6               		ld	a, 0E6h		; Synchronisationsmuster
    1960/     902 : F7                  		rst	30h		; 1 Byte speichern, AC1-Format
    1961/     903 :                     ;name ausgeben 'U' + NAMELEN Zeichen
    1962/     903 : 3E 55               		ld	a, 'U'		; Kennbyte fuer Namen
    1963/     905 : F7                  		rst	30h		; 1 Byte speichern, AC1-Format
    1964/     906 : 06 28               		ld	b, NAMELEN
    1965/     908 : 1A                  sav2:		ld	a, (de)
    1966/     909 : F7                  		rst	30h		; 1 Byte speichern, AC1-Format
    1967/     90A : 1B                  		dec	de
    1968/     90B : 10 FB               		djnz	sav2
    1969/     90D :                     ;216 Nullbytes,	Zeit für Namensdarstellung beim	Einlesen
    1970/     90D : 06 D8               		ld	b, 216
    1971/     90F : AF                  sav3:		xor	a
    1972/     910 : F7                  		rst	30h		; 1 Byte speichern, AC1-Format
    1973/     911 : 10 FC               		djnz	sav3
    1974/     913 :                     ;		
    1975/     913 : 2A 5B 18            		ld	hl, (ARG1)	; Argument 1
    1976/     916 : ED 5B 5D 18         		ld	de, (ARG2)	; Argument 2
    1977/     91A : D5                  sav4:		push	de
    1978/     91B : EB                  		ex	de, hl
    1979/     91C : A7                  		and	a
    1980/     91D : ED 52               		sbc	hl, de
    1981/     91F : 38 23               		jr	c, sav8		; wenn Ende erreicht
    1982/     921 :                     ;
    1983/     921 :                     ; Block ausgeben: '<' + Blocklänge + max. 256 Byte Daten + Prüfsumme
    1984/     921 : 3E 3C               		ld	a, '<'		; Kennung Datenblock
    1985/     923 : 23                  		inc	hl		; HL=restl. Programmlänge
    1986/     924 : F7                  		rst	30h		; 1 Byte speichern, AC1-Format
    1987/     925 : 7C                  		ld	a, h
    1988/     926 : A7                  		and	a		; H = 0?
    1989/     927 : 28 04               		jr	z, sav5		; wenn HL < 256
    1990/     929 : 06 00               		ld	b, 0		; sonst 256 Zeichen
    1991/     92B : 18 01               		jr	sav6
    1992/     92D : 45                  sav5:		ld	b, l
    1993/     92E : EB                  sav6:		ex	de, hl
    1994/     92F : D1                  		pop	de
    1995/     930 : 78                  		ld	a, b		; Blocklänge
    1996/     931 : F7                  		rst	30h		; 1 Byte speichern, AC1-Format
    1997/     932 : 7D                  		ld	a, l		; Prüfsumme = 0, Blockadr.
    1998/     933 : 84                  		add	a, h		; zur Prüfsumme addieren
    1999/     934 : 4F                  		ld	c, a		; Prüfsumme merken
    2000/     935 :                     ;Blockstartadr
    2001/     935 : CD 54 09            		call	sav9		; Ausgabe 2 Byte L,H
    2002/     938 : 79                  sav7:		ld	a, c		; Prüfsumme erhöhen
    2003/     939 : 86                  		add	a, (hl)
    2004/     93A : 4F                  		ld	c, a
    2005/     93B : 7E                  		ld	a, (hl)
    2006/     93C : F7                  		rst	30h		; 1 Byte speichern, AC1-Format
    2007/     93D : 23                  		inc	hl
    2008/     93E : 10 F8               		djnz	sav7		; Prüfsumme erhöhen
    2009/     940 : 79                  		ld	a, c		; Prüfsumme ausgeben
    2010/     941 : F7                  		rst	30h		; 1 Byte speichern, AC1-Format
    2011/     942 : 18 D6               		jr	sav4
    2012/     944 :                     ; Programmende 'x' + sadr
    2013/     944 : D1                  sav8:		pop	de
    2014/     945 : 3E 78               		ld	a, 'x'		; Kennung Ende
    2015/     947 : F7                  		rst	30h		; 1 Byte speichern, AC1-Format
    2016/     948 : 2A 5F 18            		ld	hl, (ARG3)	; SADR
    2017/     94B : CD 54 09            		call	sav9		; Ausgabe 2 Byte L,H
    2018/     94E :                     ;		
    2019/     94E : CD 04 04            loc_94E:	call	crc		; CRC
    2020/     951 : C3 31 0A            		jp	q_ko20		; PIO Reset, EI
    2021/     954 :                     
    2022/     954 :                     ; Ausgabe 2 Byte L,H
    2023/     954 : 7D                  sav9:		ld	a, l
    2024/     955 : F7                  		rst	30h		; 1 Byte speichern, AC1-Format
    2025/     956 : 7C                  		ld	a, h
    2026/     957 :                     ;
    2027/     957 :                     ; Ausgabe 1 Byte A
    2028/     957 : C5                  sav10:		push	bc
    2029/     958 : 4F                  		ld	c, a		; Datenbyte nach C
    2030/     959 :                     		; C enthaelt die Daten und ist gleichzeitig Bitzaehler
    2031/     959 : CB 31               		sls	c		; undoc opcode sll c
    2032/     95B : DB 05               sav11:		in	a, (PIODB)	; PIO-Daten lesen
    2033/     95D : CB F7               		set	6, a		; TB-Interface-Ausgang auf high
    2034/     95F : 30 02               		jr	nc, sav12	; war Datenbit 1?
    2035/     961 : CB B7               		res	6, a		; nein, TB-Interface-Ausgang low
    2036/     963 : D3 05               sav12:		out	(PIODB), a	; Ausgabe 1.Halbw.
    2037/     965 : 06 31               		ld	b, ZK1		; Zeitkontante 1
    2038/     967 : 10 FE               sav13:		djnz	sav13
    2039/     969 : EE 40               		xor	40h		; Flankenwechsel
    2040/     96B : D3 05               		out	(PIODB), a	; Ausgabe 2.Halbw.
    2041/     96D : 06 2E               		ld	b, ZK2		; Zeitkonstante 2
    2042/     96F : 10 FE               sav14:		djnz	sav14
    2043/     971 : CB 21               		sla	c		; weitere Datenbit ausgeben
    2044/     973 : 20 E6               		jr	nz, sav11
    2045/     975 : C1                  		pop	bc
    2046/     976 : C9                  		ret
    2047/     977 :                     
    2048/     977 :                     ;------------------------------------------------------------------------------
    2049/     977 :                     ; V = (name) Verify AC1-Kodierung
    2050/     977 :                     ;------------------------------------------------------------------------------
    2051/     977 :                     
    2052/     977 : 00 09 56 0D         		db 0,9,'V',0Dh
    2053/     97B :                     
    2054/     97B : 97                  		sub	a		; a=0
    2055/     97C : 18 17               		jr	q_ko1
    2056/     97E :                     
    2057/     97E :                     ;------------------------------------------------------------------------------
    2058/     97E :                     ; Q (aaaaa) +; -; = (name) Laden Programm AC1-Kode
    2059/     97E :                     ;------------------------------------------------------------------------------
    2060/     97E :                     
    2061/     97E : 00 09 51 0D         		db 0,9,'Q',0Dh
    2062/     982 :                     
    2063/     982 : 1A                  		ld	a, (de)
    2064/     983 : ED 4B 5B 18         		ld	bc, (ARG1)	; Argument 1, offs
    2065/     987 : FE 2D               		cp	'-'
    2066/     989 : 3E FF               		ld	a, 0FFh
    2067/     98B : 20 08               		jr	nz, q_ko1
    2068/     98D : 21 00 00            		ld	hl, 0
    2069/     990 : ED 42               		sbc	hl, bc
    2070/     992 : 22 5B 18            		ld	(ARG1),	hl	; Argument 1
    2071/     995 : 08                  q_ko1:		ex	af, af'	; '
    2072/     996 : CD 37 0A            		call	q_ko21		; Start/Stop-Schaltung start
    2073/     999 : EB                  		ex	de, hl
    2074/     99A : 2B                  		dec	hl
    2075/     99B : 2B                  		dec	hl
    2076/     99C : ED 5B 00 18         q_ko2:		ld	de, (cupos)	; Zwischenspeicher Kursor
    2077/     9A0 : DF                  		rst	18h		; PRNST
    2078/     9A1 : 8D                  		db  8Dh	; 
    2079/     9A2 : 4F                  q_ko3:		ld	c, a
    2080/     9A3 : 06 00               		ld	b, 0
    2081/     9A5 : CD 40 0A            q_ko4:		call	loa17
    2082/     9A8 : B9                  		cp	c
    2083/     9A9 : 20 F7               		jr	nz, q_ko3
    2084/     9AB : 10 F8               		djnz	q_ko4
    2085/     9AD :                     
    2086/     9AD :                     ;Phasenkorrektur ermitteln
    2087/     9AD : CD 40 0A            loa3:		call	loa17		; Bitweise lesen
    2088/     9B0 : FE 19               		cp	19h		; Synchronisationsmuster negiert
    2089/     9B2 : 06 FF               		ld	b, 0FFh		; dann Phasenkorrektur FF
    2090/     9B4 : 28 06               		jr	z, loa4
    2091/     9B6 : FE E6               		cp	0E6h		; Synchronisationsmuster
    2092/     9B8 : 20 F3               		jr	nz, loa3
    2093/     9BA : 06 00               		ld	b, 0		; dann Phasenkorrektur FF
    2094/     9BC : 78                  loa4:		ld	a, b
    2095/     9BD : 32 23 18            		ld	(phako), a	; Hilfsregister	Phasenkorrektur
    2096/     9C0 : EF                  		rst	28h		; 1 Byte laden
    2097/     9C1 : FE 55               		cp	'U'		; Kennbyte fuer Namen
    2098/     9C3 : 20 DD               		jr	nz, q_ko3
    2099/     9C5 :                     ;Name laden und	anzeigen
    2100/     9C5 : 01 01 28            		ld	bc, NAMELEN*100h+01h
    2101/     9C8 : E5                  		push	hl
    2102/     9C9 : EF                  q_ko7:		rst	28h		; 1 Byte laden
    2103/     9CA : 28 11               		jr	z, q_ko9
    2104/     9CC : 12                  		ld	(de), a
    2105/     9CD : 1B                  		dec	de
    2106/     9CE : BE                  		cp	(hl)
    2107/     9CF : 28 0B               		jr	z, q_ko8
    2108/     9D1 : 3E 20               		ld	a, ' '
    2109/     9D3 : BE                  		cp	(hl)
    2110/     9D4 : 28 06               		jr	z, q_ko8
    2111/     9D6 : 3E 22               		ld	a, '"'
    2112/     9D8 : B8                  		cp	b
    2113/     9D9 : 30 01               		jr	nc, q_ko8
    2114/     9DB : 0C                  		inc	c
    2115/     9DC : 2B                  q_ko8:		dec	hl
    2116/     9DD : 10 EA               q_ko9:		djnz	q_ko7
    2117/     9DF : E1                  		pop	hl
    2118/     9E0 : 0D                  		dec	c
    2119/     9E1 : 20 B9               		jr	nz, q_ko2
    2120/     9E3 : 06 00               q_ko10:		ld	b, 0
    2121/     9E5 :                     ;
    2122/     9E5 : EF                  loa6:		rst	28h		; 1 Byte laden
    2123/     9E6 : FE 78               		cp	'x'		; Kennung Ende
    2124/     9E8 : 28 37               		jr	z, loa10	; Programmende
    2125/     9EA : FE 3C               		cp	'<'		; Kennung Datenblock
    2126/     9EC : 28 04               		jr	z, q_ko12
    2127/     9EE : 10 F5               		djnz	loa6
    2128/     9F0 : 18 2A               		jr	q_ko16
    2129/     9F2 :                     ; Datenblock		
    2130/     9F2 : EF                  q_ko12:		rst	28h		; 1 Byte laden
    2131/     9F3 : 47                  		ld	b, a		; Anzahl der Bytes im Block
    2132/     9F4 : CD 68 0A            		call	q_ko27		; Cursor toggeln, lesen	HL
    2133/     9F7 : 85                  		add	a, l		; Prüfsumme
    2134/     9F8 : ED 5B 5B 18         		ld	de, (ARG1)	; Ladeadr
    2135/     9FC : 19                  		add	hl, de
    2136/     9FD :                     ;		
    2137/     9FD : 57                  		ld	d, a
    2138/     9FE : EF                  q_ko13:		rst	28h		; 1 Byte laden
    2139/     9FF : 4F                  		ld	c, a
    2140/     A00 : 08                  		ex	af, af'
    2141/     A01 : 0F                  		rrca
    2142/     A02 : 30 01               		jr	nc, q_ko14
    2143/     A04 : 71                  		ld	(hl), c
    2144/     A05 : 08                  q_ko14:		ex	af, af'
    2145/     A06 : BE                  		cp	(hl)
    2146/     A07 : 20 0F               		jr	nz, q_ko15
    2147/     A09 : 23                  		inc	hl
    2148/     A0A : 82                  		add	a, d
    2149/     A0B : 57                  		ld	d, a
    2150/     A0C : 10 F0               		djnz	q_ko13
    2151/     A0E : EF                  		rst	28h		; 1 Byte laden
    2152/     A0F : BA                  		cp	d
    2153/     A10 : 28 D1               		jr	z, q_ko10
    2154/     A12 : DF                  		rst	18h		; PRNST
    2155/     A13 : 43 52 C3            		db "CR",'C'+80h
    2156/     A16 : 18 04               		jr	q_ko16
    2157/     A18 :                     ;		
    2158/     A18 : DF                  q_ko15:		rst	18h		; PRNST
    2159/     A19 : 52 41 CD            		db "RA",'M'+80h
    2160/     A1C : CD 68 02            q_ko16:		call	error		; Ausgabe "Error"
    2161/     A1F : 18 07               		jr	loa11
    2162/     A21 :                     ; Programmende	
    2163/     A21 : CD 68 0A            loa10:		call	q_ko27		; Cursor toggeln, lesen	HL (Startadresse)
    2164/     A24 : 22 5B 18            		ld	(ARG1),	hl	; als Parameter ablegen
    2165/     A27 : AF                  		xor	a
    2166/     A28 : CD 9A 01            loa11:		call	OUTHL		; und Anzeige
    2167/     A2B :                     ;
    2168/     A2B : 2A 5B 18            q_ko19:		ld	hl, (ARG1)	; Argument 1
    2169/     A2E : CA F0 0D            		jp	z, loc_DF0
    2170/     A31 :                     
    2171/     A31 :                     ;
    2172/     A31 : DB 05               q_ko20:		in	a, (PIODB)
    2173/     A33 : FB                  		ei
    2174/     A34 : C3 98 0A            		jp	loc_A98		; Start/Stop-Schaltung stop
    2175/     A37 :                     
    2176/     A37 :                     ; Start/Stop-Schaltung start
    2177/     A37 : DB 05               q_ko21:		in	a, (PIODB)
    2178/     A39 : CB EF               		set	5, a		; Start/Stop-Schaltung start
    2179/     A3B : F3                  		di
    2180/     A3C : C3 9A 0A            		jp	loc_A9A		; Beep, PIOB ausgeben
    2181/     A3F :                     
    2182/     A3F : FF                  		db 0FFh
    2183/     A40 :                     		
    2184/     A40 :                     ; Lesen ein Bit
    2185/     A40 : C5                  loa17:		push	bc
    2186/     A41 : F5                  		push	af
    2187/     A42 : DB 05               		in	a, (PIODB)	; TB-Interface-Eingang lesen
    2188/     A44 : E6 80               		and	80h		; Bit 7 (TB-Interface-Eingang)
    2189/     A46 : 4F                  		ld	c, a
    2190/     A47 : DB 05               loa18:		in	a, (PIODB)
    2191/     A49 : E6 80               		and	80h
    2192/     A4B : B9                  		cp	c		; Flankenwechsel?
    2193/     A4C : 28 F9               		jr	z, loa18	; nein
    2194/     A4E : 4F                  		ld	c, a		; Bit sichern
    2195/     A4F : 06 3F               		ld	b, ZKR		; Zeitkonstante, ca 2/3 Vollwelle
    2196/     A51 : 10 FE               loa19:		djnz	loa19		; Warten
    2197/     A53 : F1                  		pop	af
    2198/     A54 : CB 11               		rl	c		; Carry <- Bit 7
    2199/     A56 : 17                  		rla			; A <- Carry
    2200/     A57 : C1                  		pop	bc
    2201/     A58 : C9                  		ret
    2202/     A59 :                     
    2203/     A59 :                     ;
    2204/     A59 :                     ; Lesen	ein Byte A
    2205/     A59 : C5                  loa15:		push	bc		; Laden	1 Byte
    2206/     A5A : 06 08               		ld	b, 8		; 8 bit
    2207/     A5C : CD 40 0A            loa16:		call	loa17		; Lesen
    2208/     A5F : 10 FB               		djnz	loa16
    2209/     A61 : 4F                  		ld	c, a
    2210/     A62 : 3A 23 18            		ld	a, (phako)	; Phasenkorrektur
    2211/     A65 : A9                  		xor	c		; ggf. Bits negieren
    2212/     A66 : C1                  		pop	bc
    2213/     A67 : C9                  		ret
    2214/     A68 :                     
    2215/     A68 :                     ; Cursor toggeln, Lesen 2 Byte L,H
    2216/     A68 : 2A 00 18            q_ko27:		ld	hl, (cupos)	; Zwischenspeicher Kursor
    2217/     A6B : CB 4E               		bit	1, (hl)
    2218/     A6D : 36 20               		ld	(hl), ' '
    2219/     A6F : 20 02               		jr	nz, loa12	; Lesen	  2 Byte L,H
    2220/     A71 : 36 2A               		ld	(hl), '*'
    2221/     A73 :                     ; Lesen 2 Byte L,H
    2222/     A73 : EF                  loa12:		rst	28h		; Lesen	  2 Byte L,H
    2223/     A74 : 6F                  		ld	l, a
    2224/     A75 : EF                  		rst	28h		; 1 Byte laden
    2225/     A76 : 67                  		ld	h, a
    2226/     A77 : C9                  		ret
    2227/     A78 :                     
    2228/     A78 :                     ;------------------------------------------------------------------------------
    2229/     A78 :                     ; Test Autostartmodul
    2230/     A78 :                     ; und Test auf Warmstart, beides in einer Routine vermauschelt
    2231/     A78 :                     ;------------------------------------------------------------------------------
    2232/     A78 :                     
    2233/     A78 :                     ; suche "SCH" auf 2000h
    2234/     A78 : 11 00 20            tstsch2:	ld	de, 2000h
    2235/     A7B :                     
    2236/     A7B :                     ; Test auf Warmstart; hier wird Autostartadr ignoriert
    2237/     A7B :                     ; Einsprung bei Reset mit DE = warmcod
    2238/     A7B : 21 3A 02            tstsch:		ld	hl, aSch	; "SCH"
    2239/     A7E : 06 03               		ld	b, 3
    2240/     A80 : 1A                  tstsch1:	ld	a, (de)
    2241/     A81 : BE                  		cp	(hl)
    2242/     A82 : C0                  		ret	nz		; nicht gefunden
    2243/     A83 : 23                  		inc	hl
    2244/     A84 : 13                  		inc	de
    2245/     A85 : 10 F9               		djnz	tstsch1
    2246/     A87 :                     		; Adresse hinter "SCH" in HL
    2247/     A87 : 1A                  		ld	a, (de)
    2248/     A88 : 6F                  		ld	l, a
    2249/     A89 : 13                  		inc	de
    2250/     A8A : 1A                  		ld	a, (de)
    2251/     A8B : 67                  		ld	h, a		; HL=Autostartadr.
    2252/     A8C : C9                  		ret
    2253/     A8D :                     
    2254/     A8D :                     ;------------------------------------------------------------------------------
    2255/     A8D :                     ; Standard-Routine Ausgabe Zeichenkette, RST 18
    2256/     A8D :                     ;------------------------------------------------------------------------------
    2257/     A8D :                     
    2258/     A8D : E3                  rprnst:		ex	(sp), hl
    2259/     A8E : F5                  		push	af
    2260/     A8F : 7E                  rprnst1:	ld	a, (hl)		; Zeichen holen
    2261/     A90 : 23                  		inc	hl		; nächste Adr.
    2262/     A91 : D7                  		rst	10h		; OUTCH
    2263/     A92 : 07                  		rlca			; Ende (Bit7 gesetzt)?
    2264/     A93 : 30 FA               		jr	nc, rprnst1	; nein -> nächstes Zeichen
    2265/     A95 : F1                  		pop	af
    2266/     A96 : E3                  		ex	(sp), hl	; neue Return-Adr.
    2267/     A97 : C9                  		ret
    2268/     A98 :                     
    2269/     A98 :                     ;------------------------------------------------------------------------------
    2270/     A98 :                     ; UP's zu q_ko20 und q_ko21
    2271/     A98 :                     ;------------------------------------------------------------------------------
    2272/     A98 :                     
    2273/     A98 :                     ; Start/Stop-Schaltung stop
    2274/     A98 : CB AF               loc_A98:	res	5, a		; Start/Stop-Schaltung stop
    2275/     A9A : DF                  loc_A9A:	rst	18h		; PRNST
    2276/     A9B : 87                  		db 	07+80h		; beep
    2277/     A9C : D3 05               		out	(PIODB), a
    2278/     A9E : C9                  		ret
    2279/     A9F :                     
    2280/     A9F :                     ;------------------------------------------------------------------------------
    2281/     A9F :                     ; I	lnitialize	RSA löschen, SP	initialisieren
    2282/     A9F :                     ;------------------------------------------------------------------------------
    2283/     A9F :                     
    2284/     A9F : 00 09 49 0D         		db 0,9,'I',0Dh
    2285/     AA3 :                     
    2286/     AA3 : 21 58 18            		ld	hl, data	; Hilfsregister	UP "INLINE"
    2287/     AA6 : 06 26               		ld	b, tbb_eadr-data	; Bereich data..BPOPC+3
    2288/     AA8 : 36 00               iko1:		ld	(hl), 0		;  mit 0 füllen
    2289/     AAA : 23                  		inc	hl
    2290/     AAB : 10 FB               		djnz	iko1
    2291/     AAD : DF                  		rst	18h		; PRNST
    2292/     AAE : 20 53 50 A0         		db " SP", ' '+80h
    2293/     AB2 : CD CE 0A            		call	ramtst		; Ramtest
    2294/     AB5 : 22 77 18            		ld	(REGSP), hl	; letzte RAM-Adr+1
    2295/     AB8 : 18 10               		jr	oko1		; auch auf Bildschirm ausgeben
    2296/     ABA :                     
    2297/     ABA :                     ;------------------------------------------------------------------------------
    2298/     ABA :                     ; O aaaa RAM - Test
    2299/     ABA :                     ;------------------------------------------------------------------------------
    2300/     ABA :                     
    2301/     ABA : 00 09 4F 0D         		db 0,9,'O',0Dh
    2302/     ABE :                     
    2303/     ABE : 2A 5B 18            		ld	hl, (ARG1)	; Argument 1
    2304/     AC1 : DF                  		rst	18h		; PRNST
    2305/     AC2 : 20 4D 45 A0         		db " ME", ' '+80h	; 'memory end'
    2306/     AC6 : CD CE 0A            		call	ramtst		; Ramtest
    2307/     AC9 : 2B                  		dec	hl
    2308/     ACA : C3 9A 01            oko1:		jp	OUTHL		; Ausgabe HL hexadezimal
    2309/     ACD :                     
    2310/     ACD : FF                  		db 0FFh
    2311/     ACE :                     
    2312/     ACE :                     ;------------------------------------------------------------------------------
    2313/     ACE :                     ; Test auf RAM, bis RAM Ende
    2314/     ACE :                     ; in HL = startadr
    2315/     ACE :                     ;------------------------------------------------------------------------------
    2316/     ACE :                     
    2317/     ACE : 7E                  ramtst:		ld	a, (hl)
    2318/     ACF : 2F                  		cpl
    2319/     AD0 : 77                  		ld	(hl), a
    2320/     AD1 : BE                  		cp	(hl)
    2321/     AD2 : C0                  		ret	nz		;  Ende	wenn kein RAM mehr
    2322/     AD3 : 2F                  		cpl
    2323/     AD4 : 77                  		ld	(hl), a
    2324/     AD5 : 23                  		inc	hl
    2325/     AD6 : 18 F6               		jr	ramtst		; Ramtest
    2326/     AD8 :                     
    2327/     AD8 :                     ;------------------------------------------------------------------------------
    2328/     AD8 :                     ; Tabelle Peripherie Initialisierung
    2329/     AD8 :                     ;------------------------------------------------------------------------------
    2330/     AD8 :                     
    2331/     AD8 :                     ; jeweils port, wert, s. init3
    2332/     AD8 : 00                  TABIO:		db CTC0
    2333/     AD9 : F8                  		db lo(inttab1)		; Interrupt-Vektor CTC
    2334/     ADA : 01                  		db CTC1
    2335/     ADB : 37                  		db  37h			; DI,Zeitgeber,Vorteiler 256,ZK folgt
    2336/     ADC : 01                  		db CTC1
    2337/     ADD : 4E                  		db  4Eh			; Zeitkonstante
    2338/     ADE : 02                  		db CTC2
    2339/     ADF : 47                  		db  47h			; DI,Zähler,Vorteiler 16,ZK folgt
    2340/     AE0 : 02                  		db CTC2
    2341/     AE1 : 32                  		db  32h			; Zeitkonstante
    2342/     AE2 :                     ;
    2343/     AE2 :                     ;		db PIO2CB
    2344/     AE2 :                     ;		db 0CFh			; Mode 3 (Bit E/A)
    2345/     AE2 :                     ;		db PIO2CB
    2346/     AE2 :                     ;		db    0			; alle Bits Ausgabe
    2347/     AE2 :                     ;		db PIO2CA
    2348/     AE2 :                     ;		db 0CFh			; Mode 3 (Bit E/A)
    2349/     AE2 :                     ;		db PIO2CA
    2350/     AE2 :                     ;		db    5			; B3 und b0 Eingabe
    2351/     AE2 :                     ;		db PIO2DA
    2352/     AE2 :                     ;		db  0Ah			; Bits setzen
    2353/     AE2 :                     
    2354/     AE2 : 16                  		db  16h
    2355/     AE3 : 0F                  		db  0Fh
    2356/     AE4 : 17                  		db  17h
    2357/     AE5 : 0F                  		db  0Fh
    2358/     AE6 : 15                  		db  15h
    2359/     AE7 : 00                  		db    0
    2360/     AE8 : 13                  		db  13h
    2361/     AE9 : 4F                  		db  4Fh
    2362/     AEA : 12                  		db  12h
    2363/     AEB : 0F                  		db  0Fh
    2364/     AEC :                     ;
    2365/     AEC : 06                  		db PIOCA		; PIOCA Tastatur
    2366/     AED : CF                  		db 0CFh			; Mode 3 (Bit E/A)
    2367/     AEE : 06                  		db PIOCA		; PIOCA Tastatur
    2368/     AEF : FF                  		db 0FFh			; alle Bits Eingabe
    2369/     AF0 : 06                  		db PIOCA		; PIOCA Tastatur
    2370/     AF1 : 07                  		db    7			; DI
    2371/     AF2 : 07                  		db PIOCB
    2372/     AF3 : CF                  		db 0CFh			; Mode 3 (Bit E/A)
    2373/     AF4 : 07                  		db PIOCB
    2374/     AF5 : 84                  		db  84h			; b7 und b2 Eingabe
    2375/     AF6 : 07                  		db PIOCB
    2376/     AF7 : 07                  		db    7			; DI
    2377/     AF8 :                     ;
    2378/     AF8 : 14                  		db modul1
    2379/     AF9 : 02                  		db    2			; BASIC-ROM an
    2380/     AFA :                     
    2381/     AFA : FF                  		db 0FFh
    2382/     AFB :                     
    2383/     AFB :                     ;------------------------------------------------------------------------------
    2384/     AFB :                     ; Funktion "K" --> Kassette save Turbo
    2385/     AFB :                     ; K aaaa bbbb ("name") Kassette bespielen Programm Turbo-Tape
    2386/     AFB :                     ; K aaaa bbbb * ("name") Kassette bespielen Datei Turbo-Tape
    2387/     AFB :                     ;------------------------------------------------------------------------------
    2388/     AFB :                     ; 
    2389/     AFB :                     ; Allgemeines:
    2390/     AFB :                     ; Daten in Blöcken zu 32 Byte plus 2 Byte Prüfsumme analog Z1013
    2391/     AFB :                     ; Übertragungsrate: 4000 Bit/s
    2392/     AFB :                     ; Block:
    2393/     AFB :                     ;	1000Hz Vorton, 2x 1-Bit, 16x0-Bit
    2394/     AFB :                     ; 	32 Byte Daten
    2395/     AFB :                     ; 	2 Byte Prüfsumme
    2396/     AFB :                     ;
    2397/     AFB :                     ; Namensblock + 1. Datenblock: langer Vorton, sonst kurzer Vorton
    2398/     AFB :                     ; Namensblock: 
    2399/     AFB :                     ; 	32 Byte Namen: 'NNNNNNNN' + 16stelliger Name + ': X' + eadr + aadr. + 'L'
    2400/     AFB :                     ; 	"X" = Filekennung: "P" = Programm, "D" = Speicherabzug
    2401/     AFB :                     ; 	"B" = BASIC-Programm, "F" = BASIC-Feld
    2402/     AFB :                     ;------------------------------------------------------------------------------
    2403/     AFB :                     
    2404/     AFB : 00 09 4B 0D         		db 0,9,'K',0Dh
    2405/     AFF :                     
    2406/     AFF : CD 97 0B            		call	tbheader	; Kdo-Parameter aufbereiten
    2407/     B02 :                     					; ret HL = tb_blkbuf
    2408/     B02 : CD 37 0A            		call	q_ko21		; Start/Stop-Schaltung start
    2409/     B05 : 2B                  		dec	hl		; HL = tbh_special ('L')
    2410/     B06 : 22 7E 18            		ld	(tbb_eadr), hl	; Speicher Save/Load Turbo - Tape
    2411/     B09 : 21 96 18            		ld	hl, tb_kopfbuf
    2412/     B0C : 22 80 18            		ld	(tbb_aadr), hl
    2413/     B0F : CD E1 0B            loc_B0F:	call	sub_BE1		; Ausgabe "Warten"
    2414/     B12 : CD F7 0B            		call	tbsave
    2415/     B15 : 11 7E 18            		ld	de, tbb_eadr	; Speicher Save/Load Turbo - Tape
    2416/     B18 : 21 B1 18            		ld	hl, tbh_eadr
    2417/     B1B : 01 04 00            		ld	bc, 4
    2418/     B1E : ED B0               		ldir
    2419/     B20 : CD F7 0B            		call	tbsave
    2420/     B23 : C3 4E 09            		jp	loc_94E		; Ausgabe CRC, PIO Reset, EI
    2421/     B26 :                     
    2422/     B26 :                     ;------------------------------------------------------------------------------
    2423/     B26 :                     ; Funktion "Z" --> Kassette verify
    2424/     B26 :                     ; Z ("name") Verify Turbo-Tape
    2425/     B26 :                     ;------------------------------------------------------------------------------
    2426/     B26 :                     
    2427/     B26 : 00 09 5A 0D         		db 0,9,'Z',0Dh
    2428/     B2A :                     
    2429/     B2A : AF                  		xor	a
    2430/     B2B : 3D                  		dec	a		; A=0FFh
    2431/     B2C : 18 05               		jr	loc_B33
    2432/     B2E :                     
    2433/     B2E :                     ;------------------------------------------------------------------------------
    2434/     B2E :                     ; Funktion "L" --> Kassette load
    2435/     B2E :                     ; L ("name" Laden Programm Turbo-Tape
    2436/     B2E :                     ; L #("name") Laden Datei Turbo-Tape
    2437/     B2E :                     ;------------------------------------------------------------------------------
    2438/     B2E :                     
    2439/     B2E : 00 09 4C 0D         		db 0,9,'L',0Dh
    2440/     B32 :                     
    2441/     B32 : 82                  		add	a, d
    2442/     B33 : 08                  loc_B33:	ex	af, af'	; '
    2443/     B34 : CD 97 0B            		call	tbheader	; Kdo-Parameter aufbereiten
    2444/     B37 : CD 37 0A            		call	q_ko21		; Start/Stop-Schaltung start
    2445/     B3A : 22 80 18            		ld	(tbb_aadr), hl	; HL = tb_blkbuf
    2446/     B3D : 21 D5 18            		ld	hl, tb_blkbuf+31
    2447/     B40 : 22 7E 18            		ld	(tbb_eadr), hl	; eadr => 1 Block
    2448/     B43 : CD E1 0B            loc_B43:	call	sub_BE1		; Ausgabe "Warten"
    2449/     B46 :                     ; Kopfblock lesen
    2450/     B46 : CD 81 0C            loc_B46:	call	tbload		; Block lesen nach HL
    2451/     B49 :                     		; Vergleich Kopfkennung 8x'N'
    2452/     B49 : 21 B6 18            		ld	hl, tb_blkbuf
    2453/     B4C : 11 96 18            		ld	de, tb_kopfbuf
    2454/     B4F : 06 08               		ld	b, 8
    2455/     B51 : 1A                  loc_B51:	ld	a, (de)
    2456/     B52 : BE                  		cp	(hl)
    2457/     B53 : 20 F1               		jr	nz, loc_B46	; kein Kopfblock -> neu einlesen
    2458/     B55 : 23                  		inc	hl
    2459/     B56 : 13                  		inc	de
    2460/     B57 : 10 F8               		djnz	loc_B51
    2461/     B59 :                     		; Vergleich Dateiname + ': ' + Dateityp
    2462/     B59 : 06 13               		ld	b, 13h
    2463/     B5B : 1A                  loc_B5B:	ld	a, (de)
    2464/     B5C : BE                  		cp	(hl)
    2465/     B5D : 28 04               		jr	z, loc_B63	; wenn gleich
    2466/     B5F : FE 20               		cp	' '		; oder wenn ohne Vorgabe Dateiname
    2467/     B61 : 20 22               		jr	nz, loc_B85	; sonst Fehler
    2468/     B63 : 23                  loc_B63:	inc	hl
    2469/     B64 : 13                  		inc	de
    2470/     B65 : 10 F4               		djnz	loc_B5B
    2471/     B67 :                     		;
    2472/     B67 : 1E 7E               		ld	e, lo(tbb_eadr)	; hl=tbl_eadr de=tbb_eadr
    2473/     B69 : 0E 04               		ld	c, 4		; bc=4
    2474/     B6B : ED B0               		ldir			; eadr+aadr nach tbb_eadr+tbb_aadr
    2475/     B6D : 21 B7 0D            		ld	hl, aVerify	; Text "VERIFY"
    2476/     B70 : 08                  		ex	af, af'
    2477/     B71 : 3C                  		inc	a		; A=FF bei Verify
    2478/     B72 : 28 02               		jr	z, loc_B76	; Sprung, wenn Verify
    2479/     B74 : 2E BD               		ld	l, lo(aLaden)	; sonst Text "LADEN"
    2480/     B76 : 08                  loc_B76:	ex	af, af'
    2481/     B77 : CD 86 0D            		call	sub_D86		; Ausgabe Text
    2482/     B7A : CD 81 0C            		call	tbload		; Block lesen nach HL
    2483/     B7D : CD C9 0D            		call	loc_DC9
    2484/     B80 : DF                  		rst	18h		; PRNST
    2485/     B81 : 8D                  		db  8Dh	; 
    2486/     B82 : C3 2B 0A            		jp	q_ko19
    2487/     B85 :                     ; Dateiname stimmt nicht		
    2488/     B85 : CD C9 0D            loc_B85:	call	loc_DC9
    2489/     B88 : 20 B9               		jr	nz, loc_B43
    2490/     B8A : CD 83 0D            		call	sub_D83
    2491/     B8D : 18 B4               		jr	loc_B43
    2492/     B8F :                     
    2493/     B8F : FF                  		db 0FFh
    2494/     B90 :                     
    2495/     B90 :                     ;------------------------------------------------------------------------------
    2496/     B90 :                     ; UP "Zeitschleife 18 ms" zur Tastaturentprellung
    2497/     B90 :                     ; ungenutzt
    2498/     B90 :                     ;------------------------------------------------------------------------------
    2499/     B90 :                     
    2500/     B90 : C5                  		push	bc
    2501/     B91 : 01 81 04            		ld	bc, 0481h
    2502/     B94 : C3 21 01            		jp	ms301
    2503/     B97 :                     
    2504/     B97 :                     ;------------------------------------------------------------------------------
    2505/     B97 :                     ; UP zu Turbo Save und Load
    2506/     B97 :                     ; Kdo-Parameter aufbereiten, tb-Kopfblock füllen
    2507/     B97 :                     ;------------------------------------------------------------------------------
    2508/     B97 :                     
    2509/     B97 : 2A 5D 18            tbheader:	ld	hl, (ARG2)	; Argument 2
    2510/     B9A : 22 B1 18            		ld	(tbh_eadr), hl	; eadr
    2511/     B9D : 2A 5B 18            		ld	hl, (ARG1)	; Argument 1
    2512/     BA0 : 22 B3 18            		ld	(tbh_aadr), hl	; aadr
    2513/     BA3 : 0E 50               		ld	c, 'P'		; Typ Programm
    2514/     BA5 : 1A                  tbh1:		ld	a, (de)
    2515/     BA6 : FE 3A               		cp	':'		; dieselben Parameter?
    2516/     BA8 : 1B                  		dec	de		; Doppelpunkt
    2517/     BA9 : 28 FA               		jr	z, tbh1	; überlesen
    2518/     BAB : FE 2A               		cp	'*'		; Datei ?
    2519/     BAD : 20 04               		jr	nz, tbh2
    2520/     BAF :                     ; Datei		
    2521/     BAF : 1A                  		ld	a, (de)
    2522/     BB0 : 1B                  		dec	de
    2523/     BB1 : 0E 44               		ld	c, 'D'		; Typ Datei
    2524/     BB3 :                     ; Programm		
    2525/     BB3 : FE 22               tbh2:		cp	'"'		; folgt Name?
    2526/     BB5 : 21 96 18            		ld	hl, tb_kopfbuf
    2527/     BB8 : 06 08               		ld	b, 8		; 8x'N' eintragen
    2528/     BBA : 36 4E               tbh3:		ld	(hl), 'N'
    2529/     BBC : 23                  		inc	hl
    2530/     BBD : 10 FB               		djnz	tbh3
    2531/     BBF : 06 10               		ld	b, 10h		; 16 Zeichen Namen
    2532/     BC1 : 20 0C               		jr	nz, tbh5	; ?? nach djnz ist z immer 1
    2533/     BC3 : 1A                  tbh4:		ld	a, (de)
    2534/     BC4 : FE 22               		cp	'"'		; folgt Name?
    2535/     BC6 : 28 07               		jr	z, tbh5	; nein
    2536/     BC8 : 77                  		ld	(hl), a		; sonst Name kopieren
    2537/     BC9 : 1B                  		dec	de
    2538/     BCA : 23                  		inc	hl
    2539/     BCB : 10 F6               		djnz	tbh4		; max. 16 Zeichen
    2540/     BCD : 18 05               		jr	tbh6
    2541/     BCF : 36 20               tbh5:		ld	(hl), ' '	; kein Name oder Rest: Leerzeichen
    2542/     BD1 : 23                  		inc	hl
    2543/     BD2 : 10 FB               		djnz	tbh5
    2544/     BD4 : 36 3A               tbh6:		ld	(hl), ':'	; ': '+Typ
    2545/     BD6 : 23                  		inc	hl
    2546/     BD7 : 36 20               		ld	(hl), ' '
    2547/     BD9 : 23                  		inc	hl
    2548/     BDA : 71                  		ld	(hl), c
    2549/     BDB : 2E B5               		ld	l, lo(tbh_special)	; hl=tbh_special
    2550/     BDD : 36 4C               		ld	(hl), 'L'
    2551/     BDF : 23                  		inc	hl
    2552/     BE0 : C9                  		ret
    2553/     BE1 :                     
    2554/     BE1 :                     ;------------------------------------------------------------------------------
    2555/     BE1 :                     ; UP zu Kassette Load und Save Turbo
    2556/     BE1 :                     ;------------------------------------------------------------------------------
    2557/     BE1 :                     
    2558/     BE1 :                     ; Ausgabe Warten
    2559/     BE1 : DF                  sub_BE1:	rst	18h		; PRNST
    2560/     BE2 : 8D                  		db 8Dh
    2561/     BE3 : 21 B1 0D            		ld	hl, aWarten	; "WARTEN"
    2562/     BE6 :                     ; Ausgabe Status-Text HL, invers
    2563/     BE6 : DF                  loc_BE6:	rst	18h		; PRNST
    2564/     BE7 : 0E 33 31 91         		db 0Eh,"31",91h		; goto 31[,0]; 11h (invers)
    2565/     BEB : 06 06               		ld	b, 6		; 6 Zeichen
    2566/     BED : 7E                  loc_BED:	ld	a, (hl)
    2567/     BEE : D7                  		rst	10h		; OUTCH
    2568/     BEF : 23                  		inc	hl
    2569/     BF0 : 10 FB               		djnz	loc_BED
    2570/     BF2 : DF                  		rst	18h		; PRNST
    2571/     BF3 : 20 10 A0            		db ' ',10h,0A0h		; 10h invers Ende
    2572/     BF6 : C9                  		ret
    2573/     BF7 :                     
    2574/     BF7 :                     ;------------------------------------------------------------------------------
    2575/     BF7 :                     ; Kassette Save Turbo
    2576/     BF7 :                     ;------------------------------------------------------------------------------
    2577/     BF7 :                     
    2578/     BF7 : 2A 80 18            tbsave:		ld	hl, (tbb_aadr)	; Anfangsadsresse Block
    2579/     BFA : CD 0B 0C            		call	tbsav2		; Ausgabe Block langer Vorton
    2580/     BFD : EB                  tbsav1:		ex	de, hl
    2581/     BFE : 2A 7E 18            		ld	hl, (tbb_eadr)	; Endadresse Save-Bereich
    2582/     C01 : A7                  		and	a
    2583/     C02 : ED 52               		sbc	hl, de
    2584/     C04 : EB                  		ex	de, hl
    2585/     C05 : D8                  		ret	c		; wenn File zu Ende
    2586/     C06 : CD 10 0C            		call	tbsav3		; Ausgabe ein Block
    2587/     C09 : 18 F2               		jr	tbsav1		; weiter ausgeben
    2588/     C0B :                     
    2589/     C0B :                     ;------------------------------------------------------------------------------
    2590/     C0B :                     ; UPs zu tbsave
    2591/     C0B :                     ; siehe Routinen Monitor Z1013 / POLY-880
    2592/     C0B :                     ;------------------------------------------------------------------------------
    2593/     C0B :                     
    2594/     C0B :                     ; Ausgabe Block langer Vorton
    2595/     C0B : 11 D0 07            tbsav2:		ld	de, 2000	; langer Vorton
    2596/     C0E : 18 03               		jr	tbsav4
    2597/     C10 :                     
    2598/     C10 :                     ; Ausgabe ein Block = 20H Bytes
    2599/     C10 : 11 0E 00            tbsav3:		ld	de, 14		; kurzer Vorton
    2600/     C13 :                     ; Vorton: DE Halbschwingungen a 1000h
    2601/     C13 : 06 48               tbsav4:		ld	b, 48h
    2602/     C15 : 10 FE               tbsav5:		djnz	tbsav5
    2603/     C17 : CD 7A 0C            		call	tbsav21		; Flanke wechseln
    2604/     C1A : 1B                  		dec	de
    2605/     C1B : 7B                  		ld	a, e
    2606/     C1C : B2                  		or	d
    2607/     C1D : 20 F4               		jr	nz, tbsav4
    2608/     C1F :                     ;Trennschwingung: 1 Vollschwingung
    2609/     C1F : 0E 02               		ld	c, 2		; Ausgabe Synchron-
    2610/     C21 : 06 21               tbsav6:		ld	b, 21h		; impulse
    2611/     C23 : 10 FE               tbsav7:		djnz	tbsav7
    2612/     C25 : CD 7A 0C            		call	tbsav21		; Flanke wechseln
    2613/     C28 : 0D                  		dec	c
    2614/     C29 : 5D                  		ld	e, l
    2615/     C2A : 54                  		ld	d, h
    2616/     C2B : 20 F4               		jr	nz, tbsav6
    2617/     C2D : 00                  		nop
    2618/     C2E :                     ;		
    2619/     C2E : D5                  		push	de		; DE=IX=0000
    2620/     C2F : DD E1               		pop	ix
    2621/     C31 :                     ; Kopfinhalt ausgeben
    2622/     C31 : 06 08               		ld	b, 8		; kurze Pause
    2623/     C33 : 10 FE               tbsav8:		djnz	tbsav8
    2624/     C35 : CD 59 0C            		call	tbsav14		; Ausgabe DE
    2625/     C38 : 06 05               		ld	b, 5		; kurze Pause
    2626/     C3A : 10 FE               tbsav9:		djnz	tbsav9
    2627/     C3C :                     ; 20H Bytes ausgeben
    2628/     C3C : 0E 10               		ld	c, 10h		;10H*2 Bytes
    2629/     C3E : 5E                  tbsav10:		ld	e, (hl)
    2630/     C3F : 23                  		inc	hl
    2631/     C40 : 56                  		ld	d, (hl)
    2632/     C41 : DD 19               		add	ix, de
    2633/     C43 : 23                  		inc	hl
    2634/     C44 : C5                  		push	bc
    2635/     C45 : CD 59 0C            		call	tbsav14		; Ausgabe DE
    2636/     C48 : C1                  		pop	bc
    2637/     C49 : 0D                  		dec	c
    2638/     C4A : 28 06               		jr	z, tbsav12
    2639/     C4C : 06 03               		ld	b, 3
    2640/     C4E : 10 FE               tbsav11:		djnz	tbsav11
    2641/     C50 : 18 EC               		jr	tbsav10
    2642/     C52 :                     ; Pruefsumme ausgeben		
    2643/     C52 : DD E5               tbsav12:		push	ix
    2644/     C54 : D1                  		pop	de		; DE = Pruefsumme
    2645/     C55 : 06 07               		ld	b, 7		; kurze Pause
    2646/     C57 : 10 FE               tbsav13:		djnz	tbsav13
    2647/     C59 :                     ; Ausgabe 16 Bit DE
    2648/     C59 : 0E 10               tbsav14:		ld	c, 16		; 16 Bit
    2649/     C5B : CB 3A               tbsav15:		srl	d		; Hi-Bit in Cy schieben
    2650/     C5D : CB 1B               		rr	e
    2651/     C5F : 30 07               		jr	nc, tbsav17	; Cy=1, wenn Bit=1
    2652/     C61 :                     ; 1-Bit 1 Halbschwingung
    2653/     C61 : 06 03               		ld	b, 3
    2654/     C63 : 10 FE               tbsav16:		djnz	tbsav16
    2655/     C65 : 00                  		nop
    2656/     C66 : 18 03               		jr	tbsav18
    2657/     C68 :                     ; 0-Bit 1 Vollschwingung		
    2658/     C68 : CD 7A 0C            tbsav17:		call	tbsav21		; Flanke wechseln
    2659/     C6B : 06 0F               tbsav18:		ld	b, 0Fh
    2660/     C6D : 10 FE               tbsav19:		djnz	tbsav19
    2661/     C6F : CD 7A 0C            		call	tbsav21		; Flanke wechseln
    2662/     C72 : 0D                  		dec	c
    2663/     C73 : C8                  		ret	z
    2664/     C74 : 06 0B               		ld	b, 0Bh
    2665/     C76 : 10 FE               tbsav20:		djnz	tbsav20
    2666/     C78 : 18 E1               		jr	tbsav15
    2667/     C7A :                     ; Flanke wechseln
    2668/     C7A : DB 05               tbsav21:		in	a, (PIODB)
    2669/     C7C : EE 40               		xor	40h		; TB-Interface-Ausgang
    2670/     C7E : D3 05               		out	(PIODB), a
    2671/     C80 : C9                  		ret
    2672/     C81 :                     
    2673/     C81 :                     ;------------------------------------------------------------------------------
    2674/     C81 :                     ; Kassette Load Turbo
    2675/     C81 :                     ;------------------------------------------------------------------------------
    2676/     C81 :                     
    2677/     C81 : FD 21 82 18         tbload:		ld	iy, tb_errarr	; Fehler-Array
    2678/     C85 : 2A 80 18            		ld	hl, (tbb_aadr)	; Ziel-Adresse Block
    2679/     C88 : D9                  		exx
    2680/     C89 : 21 00 01            		ld	hl, 100h	; H=1, L=0
    2681/     C8C :                     					; H=RAM-Fehler-Counter
    2682/     C8C : D9                  		exx
    2683/     C8D : CD BD 0C            tbload1:	call	tb_loa3		; Block lesen (32 Byte) nach (HL)
    2684/     C90 : D9                  		exx
    2685/     C91 : 20 06               		jr	nz, tbload2	; Lesefehler (Prüfsumme)
    2686/     C93 : 25                  		dec	h		; Fehler-Counter > 1 ?
    2687/     C94 : 26 01               		ld	h, 1		; Fehler-Counter reset
    2688/     C96 : 28 14               		jr	z, tbload3	; nein, keine Fehler
    2689/     C98 : 2C                  		inc	l		; sonst Block-Fehler-Counter ++
    2690/     C99 : 26 01               tbload2:	ld	h, 1		; Fehler-Counter reset
    2691/     C9B : D9                  		exx
    2692/     C9C : FD 75 00            		ld	(iy+0),	l	; Blockendeadresse in
    2693/     C9F : FD 74 01            		ld	(iy+1),	h	; Fehler-Array ablegen
    2694/     CA2 : FD 23               		inc	iy		; Zeiger erhöhen
    2695/     CA4 : FD 23               		inc	iy
    2696/     CA6 : FD 7D               		ld	a, iyl		; undoc	code!
    2697/     CA8 : D6 94               		sub	lo(tb_errarr)+12h	; Array-Ende?
    2698/     CAA : C8                  		ret	z		; Array-Ende erreicht
    2699/     CAB : D9                  		exx
    2700/     CAC : D9                  tbload3:	exx
    2701/     CAD : EB                  		ex	de, hl
    2702/     CAE : 2A 7E 18            		ld	hl, (tbb_eadr)	; zu lesende Endeadresse 
    2703/     CB1 : A7                  		and	a		; erreicht?
    2704/     CB2 : ED 52               		sbc	hl, de
    2705/     CB4 : EB                  		ex	de, hl
    2706/     CB5 : D8                  		ret	c		; ja
    2707/     CB6 : 18 D5               		jr	tbload1		; sonst weiterlesen
    2708/     CB8 :                     
    2709/     CB8 :                     ;------------------------------------------------------------------------------
    2710/     CB8 :                     ;' ' aaaa       bbbb cccc       Eingabe von Argumenten
    2711/     CB8 :                     ;------------------------------------------------------------------------------
    2712/     CB8 :                     
    2713/     CB8 : 00 09 20 0D         		db 0,9,' ',0Dh
    2714/     CBC :                     
    2715/     CBC : C9                  		ret
    2716/     CBD :                     
    2717/     CBD :                     ;------------------------------------------------------------------------------
    2718/     CBD :                     ; UP zu tbload zu Kassette Load Turbo
    2719/     CBD :                     ; siehe Monitorprogramm Z1013 / POLY-880
    2720/     CBD :                     ;------------------------------------------------------------------------------
    2721/     CBD :                     
    2722/     CBD :                     ; 20H Bytes laden nach (HL)
    2723/     CBD :                     ; ret Z=0 Ladefehler, Cy=1 Endeadresse erreicht
    2724/     CBD :                     
    2725/     CBD : CD 5A 0D            tb_loa3:	call	tb_loa24	; synchronisieren
    2726/     CC0 : CD 52 0D            		call	tb_loa25
    2727/     CC3 : 0E 07               		ld	c, 7
    2728/     CC5 : 11 0B 06            tb_loa5:	ld	de, 060Bh	; D=6, E=0Bh
    2729/     CC8 : 3E 02               		ld	a, 2
    2730/     CCA : 3D                  tb_loa6:	dec	a
    2731/     CCB : 20 FD               		jr	nz, tb_loa6
    2732/     CCD : CD 5A 0D            		call	tb_loa24	; synchronisieren
    2733/     CD0 : CD 5A 0D            tb_loa7:	call	tb_loa24	; Flanke ?
    2734/     CD3 : 20 E8               		jr	nz, tb_loa3	; wenn nicht Vorton
    2735/     CD5 : 15                  		dec	d
    2736/     CD6 : 20 F8               		jr	nz, tb_loa7
    2737/     CD8 : 0D                  		dec	c
    2738/     CD9 : 28 0C               		jr	z, tb_loa9
    2739/     CDB : DB 05               tb_loa8:	in	a, (PIODB)
    2740/     CDD : A8                  		xor	b
    2741/     CDE : CB 7F               		bit	7, a		; TB-Interface-Eingang
    2742/     CE0 : 20 E3               		jr	nz, tb_loa5
    2743/     CE2 : 1D                  		dec	e
    2744/     CE3 : 20 F6               		jr	nz, tb_loa8
    2745/     CE5 : 18 D6               		jr	tb_loa3
    2746/     CE7 :                     ; Synchronisierimpulse lesen		
    2747/     CE7 : CD 52 0D            tb_loa9:	call	tb_loa25	; Flanke abwarten
    2748/     CEA : 3E 2C               		ld	a, 2Ch
    2749/     CEC : 3D                  tb_loa10:	dec	a
    2750/     CED : 20 FD               		jr	nz, tb_loa10
    2751/     CEF : CD 5A 0D            		call	tb_loa24	; Flanke ?
    2752/     CF2 : 20 F3               		jr	nz, tb_loa9	; wenn nicht
    2753/     CF4 : CD 52 0D            		call	tb_loa25	; Flanke abwarten
    2754/     CF7 : 3E 12               		ld	a, 12h
    2755/     CF9 : 3D                  tb_loa11:	dec	a
    2756/     CFA : 20 FD               		jr	nz, tb_loa11
    2757/     CFC :                     ; 2 Bytes Kopf lesen		
    2758/     CFC : CD 64 0D            		call	tb_loa19	; lesen DE
    2759/     CFF :                     ; 20H Byte Daten lesen		
    2760/     CFF : 0E 10               		ld	c, 10h		; 10H x 2 Bytes
    2761/     D01 : D5                  		push	de
    2762/     D02 : DD E1               		pop	ix		; IX-Pruefsummenzaehler
    2763/     D04 : 3E 0D               		ld	a, 0Dh
    2764/     D06 : 3D                  tb_loa12:	dec	a
    2765/     D07 : 20 FD               		jr	nz, tb_loa12
    2766/     D09 : CD 64 0D            tb_loa13:	call	tb_loa19	; laden DE
    2767/     D0C : DD 19               		add	ix, de		; Pruefsumme bilden
    2768/     D0E : C5                  		push	bc
    2769/     D0F : 4D                  		ld	c, l
    2770/     D10 : 44                  		ld	b, h
    2771/     D11 : 2A 7E 18            		ld	hl, (tbb_eadr)	; Endadresse
    2772/     D14 : AF                  		xor	a
    2773/     D15 : ED 42               		sbc	hl, bc		; Endadresse erreicht?
    2774/     D17 : 69                  		ld	l, c
    2775/     D18 : 60                  		ld	h, b
    2776/     D19 : C1                  		pop	bc
    2777/     D1A : 38 16               		jr	c, tb_loa14	; ja --> Leseende
    2778/     D1C :                     		;
    2779/     D1C : 08                  		ex	af, af'
    2780/     D1D : 28 04               		jr	z, loc_D23	; bei Verify nicht speichern
    2781/     D1F :                     		;
    2782/     D1F : 73                  		ld	(hl), e		; DE auf (HL) ablegen
    2783/     D20 : 23                  		inc	hl
    2784/     D21 : 72                  		ld	(hl), d
    2785/     D22 :                     		;
    2786/     D22 : 2B                  		dec	hl
    2787/     D23 : 08                  loc_D23:	ex	af, af'
    2788/     D24 :                     		; Verify bzw. Test auf RAM
    2789/     D24 : 7B                  		ld	a, e
    2790/     D25 : BE                  		cp	(hl)
    2791/     D26 : 23                  		inc	hl
    2792/     D27 : 7A                  		ld	a, d
    2793/     D28 : 20 03               		jr	nz, loc_D2D	; E ungleich o. kein RAM
    2794/     D2A : BE                  		cp	(hl)
    2795/     D2B : 28 0B               		jr	z, tb_loa16	; D gleich, weiter, sonst
    2796/     D2D : D9                  loc_D2D:	exx
    2797/     D2E : 24                  		inc	h		; Fehler-Counter
    2798/     D2F : D9                  		exx
    2799/     D30 : 18 06               		jr	tb_loa16
    2800/     D32 :                     		;
    2801/     D32 : 3E 04               tb_loa14:	ld	a, 4
    2802/     D34 : 3D                  tb_loa15:	dec	a
    2803/     D35 : 20 FD               		jr	nz, tb_loa15
    2804/     D37 : 2B                  		dec	hl
    2805/     D38 : 23                  tb_loa16:	inc	hl
    2806/     D39 : 3E 02               		ld	a, 2
    2807/     D3B : 3D                  tb_loa17:	dec	a
    2808/     D3C : 20 FD               		jr	nz, tb_loa17
    2809/     D3E : 0D                  		dec	c
    2810/     D3F : 20 C8               		jr	nz, tb_loa13	; naechste 2 Byte
    2811/     D41 :                     ;Pruefsumme lesen		
    2812/     D41 : CD 64 0D            		call	tb_loa19	; lesen DE
    2813/     D44 : EB                  		ex	de, hl
    2814/     D45 : DD E5               		push	ix
    2815/     D47 : C1                  		pop	bc
    2816/     D48 : AF                  		xor	a
    2817/     D49 : ED 42               		sbc	hl, bc		; Prüfsumme gleich?
    2818/     D4B : EB                  		ex	de, hl		; Z=0 Ladefehler
    2819/     D4C : C9                  		ret
    2820/     D4D :                     
    2821/     D4D :                     ;------------------------------------------------------------------------------
    2822/     D4D :                     ; Funktion für Sprungverteiler 7E8h
    2823/     D4D :                     ;------------------------------------------------------------------------------
    2824/     D4D :                     
    2825/     D4D : CD 97 02            TASTE:		call	UPTAST
    2826/     D50 : 18 5B               		jr	loc_DAD		; zusätzlich Bit 7 setzen
    2827/     D52 :                     
    2828/     D52 :                     ;------------------------------------------------------------------------------
    2829/     D52 :                     ; UP zu Kassette Load Turbo
    2830/     D52 :                     ;------------------------------------------------------------------------------
    2831/     D52 :                     
    2832/     D52 :                     ; Warten auf Flankenwechsel
    2833/     D52 : DB 05               tb_loa25:	in	a, (PIODB)
    2834/     D54 : A8                  		xor	b
    2835/     D55 : CB 7F               		bit	7, a		; TB-Interface-Eingang
    2836/     D57 : 28 F9               		jr	z, tb_loa25
    2837/     D59 : C9                  		ret
    2838/     D5A :                     		
    2839/     D5A :                     ;------------------------------------------------------------------------------
    2840/     D5A :                     ; UP zu Kassette Load Turbo
    2841/     D5A :                     ;------------------------------------------------------------------------------
    2842/     D5A :                     
    2843/     D5A :                     ; Portabfrage
    2844/     D5A : DB 05               tb_loa24:	in	a, (PIODB)
    2845/     D5C : A8                  		xor	b
    2846/     D5D : CB 7F               		bit	7, a		; TB-Interface-Eingang
    2847/     D5F : F5                  		push	af
    2848/     D60 : A8                  		xor	b
    2849/     D61 : 47                  		ld	b, a
    2850/     D62 : F1                  		pop	af		; Z=0 --> Flanke
    2851/     D63 : C9                  		ret
    2852/     D64 :                     
    2853/     D64 :                     ;------------------------------------------------------------------------------
    2854/     D64 :                     ;  UP zu Kassette Load Turbo
    2855/     D64 :                     ;------------------------------------------------------------------------------
    2856/     D64 :                     
    2857/     D64 :                     ; Laden 2 Byte nach DE
    2858/     D64 : E5                  tb_loa19:	push	hl
    2859/     D65 : 2E 10               		ld	l, 10h		; 16 Datenbits
    2860/     D67 : CD 5A 0D            tb_loa20:	call	tb_loa24
    2861/     D6A : 20 03               		jr	nz, tb_loa21
    2862/     D6C : AF                  		xor	a		; Cy=0
    2863/     D6D : 18 01               		jr	tb_loa22
    2864/     D6F : 37                  tb_loa21:	scf
    2865/     D70 : CB 1A               tb_loa22:	rr	d
    2866/     D72 : CB 1B               		rr	e
    2867/     D74 : CD 52 0D            		call	tb_loa25	; Flanke abwarten
    2868/     D77 : 2D                  		dec	l
    2869/     D78 : 28 07               		jr	z, tb_loa23	; wenn fertig
    2870/     D7A : 3E 12               		ld	a, 12h
    2871/     D7C : 3D                  tb_loa26:	dec	a
    2872/     D7D : 20 FD               		jr	nz, tb_loa26
    2873/     D7F : 18 E6               		jr	tb_loa20
    2874/     D81 : E1                  tb_loa23:	pop	hl
    2875/     D82 : C9                  		ret
    2876/     D83 :                     		
    2877/     D83 :                     ;------------------------------------------------------------------------------
    2878/     D83 :                     ;  UP zu Kassette Load Turbo
    2879/     D83 :                     ;------------------------------------------------------------------------------
    2880/     D83 :                     
    2881/     D83 : 21 C3 0D            sub_D83:	ld	hl, aFound	; "FOUND "
    2882/     D86 : CD E6 0B            sub_D86:	call	loc_BE6		; Ausgabe Status
    2883/     D89 :                     ; sub_D89 wird extern in Turbo genutzt
    2884/     D89 :                     ; Anzeige Dateiname, aadr, eadr
    2885/     D89 : 21 BE 18            sub_D89:	ld	hl, tbl_filename	; Dateiname
    2886/     D8C : 06 13               		ld	b, 13h
    2887/     D8E : 7E                  loc_D8E:	ld	a, (hl)
    2888/     D8F : D7                  		rst	10h		; OUTCH
    2889/     D90 : 23                  		inc	hl
    2890/     D91 : 10 FB               		djnz	loc_D8E
    2891/     D93 : DF                  		rst	18h		; PRNST
    2892/     D94 : 20 20 20 A0         		db "   ",0A0h
    2893/     D98 : 2A D3 18            		ld	hl, (tbl_aadr)	; gelesene aadr
    2894/     D9B : 22 5B 18            		ld	(ARG1),	hl	; in Argument 1 sichern
    2895/     D9E : CD 9A 01            		call	OUTHL		; Ausgabe HL hexadezimal
    2896/     DA1 : DF                  		rst	18h		; PRNST
    2897/     DA2 : 20 A0               		db ' ',0A0h
    2898/     DA4 : 2A D1 18            		ld	hl, (tbl_eadr)	; gelesene eadr
    2899/     DA7 : 22 5D 18            		ld	(ARG2),	hl	; in Argument 2 sichern
    2900/     DAA : C3 9A 01            		jp	OUTHL		; Ausgabe HL hexadezimal
    2901/     DAD : C8                  loc_DAD:	ret	z
    2902/     DAE : CB FF               		set	7, a
    2903/     DB0 : C9                  		ret
    2904/     DB1 :                     
    2905/     DB1 :                     ;------------------------------------------------------------------------------
    2906/     DB1 :                     ; Turbo Meldungen
    2907/     DB1 :                     ;------------------------------------------------------------------------------
    2908/     DB1 :                     
    2909/     DB1 : 57 41 52 54 45 4E   aWarten:	db "WARTEN"
    2910/     DB7 : 56 45 52 49 46 59   aVerify:	db "VERIFY"
    2911/     DBD : 4C 41 44 45 4E 20   aLaden:		db "LADEN "
    2912/     DC3 : 46 4F 55 4E 44 20   aFound:		db "FOUND "
    2913/     DC9 :                     
    2914/     DC9 :                     ;------------------------------------------------------------------------------
    2915/     DC9 :                     ; UP zu Kassette Load Turbo
    2916/     DC9 :                     ;------------------------------------------------------------------------------
    2917/     DC9 :                     
    2918/     DC9 :                     ; Fehler
    2919/     DC9 : 11 82 18            loc_DC9:	ld	de, tb_errarr	; Blockfehler-Array
    2920/     DCC : FD 7D               		ld	a, iyl
    2921/     DCE : 93                  		sub	e
    2922/     DCF : C8                  		ret	z		; ret, wenn keine Einträge
    2923/     DD0 :                     		; sonst Ausgabe Fehlerliste
    2924/     DD0 : DF                  		rst	18h		; PRNST
    2925/     DD1 : 8D                  		db 8Dh
    2926/     DD2 : CD 68 02            		call	error		; Ausgabe "Error"
    2927/     DD5 : 0F                  		rrca
    2928/     DD6 : 47                  		ld	b, a
    2929/     DD7 : D9                  		exx
    2930/     DD8 : 95                  		sub	l
    2931/     DD9 : D9                  		exx
    2932/     DDA : 20 05               		jr	nz, loc_DE1
    2933/     DDC : DF                  		rst	18h		; PRNST
    2934/     DDD : 52 41 4D BA         		db "RAM",':'+80h
    2935/     DE1 : 1A                  loc_DE1:	ld	a, (de)
    2936/     DE2 : 13                  		inc	de
    2937/     DE3 : 6F                  		ld	l, a
    2938/     DE4 : 1A                  		ld	a, (de)
    2939/     DE5 : 13                  		inc	de
    2940/     DE6 : 67                  		ld	h, a
    2941/     DE7 : DF                  		rst	18h		; PRNST
    2942/     DE8 : A0                  		db	' '+80h
    2943/     DE9 : CD 9A 01            		call	OUTHL		; Ausgabe HL hexadezimal
    2944/     DEC : 10 F3               		djnz	loc_DE1
    2945/     DEE : 05                  		dec	b
    2946/     DEF : C9                  		ret
    2947/     DF0 :                     
    2948/     DF0 :                     ;------------------------------------------------------------------------------
    2949/     DF0 :                     ; Autostart-Test
    2950/     DF0 :                     ;------------------------------------------------------------------------------
    2951/     DF0 :                     
    2952/     DF0 : CD 31 0A            loc_DF0:	call	q_ko20		; Start/Stop-Schaltung stopp
    2953/     DF3 : EB                  		ex	de, hl
    2954/     DF4 : CD 7B 0A            		call	tstsch		; Test auf 'SCH' auf Programmanfang (DE)
    2955/     DF7 : C0                  		ret	nz		; kein Autostart
    2956/     DF8 : E9                  		jp	(hl)		; sonst starten
    2957/     DF9 :                     ;
    2958/     DF9 :                     
    2959/     DF9 :                     ;------------------------------------------------------------------------------
    2960/     DF9 :                     ; routch
    2961/     DF9 :                     ; Ausgabe V24
    2962/     DF9 :                     ; in hl=kdov24 Kontrollregister
    2963/     DF9 :                     ;------------------------------------------------------------------------------
    2964/     DF9 :                     ; PIO2 A1 Ausgang Daten TxD 
    2965/     DF9 :                     ;      A2 Eingang empfangsbereit CTS 
    2966/     DF9 :                     ; Taktraten gelten bei 2.4 MHz Systemtakt
    2967/     DF9 :                     ;------------------------------------------------------------------------------
    2968/     DF9 :                     
    2969/     DF9 : C5                  v24out:		push	bc
    2970/     DFA : F5                  		push	af
    2971/     DFB : 2B                  		dec	hl		; hl=kdov24o
    2972/     DFC : 01 FF 7F            		ld	bc, 7FFFh	; Datenmaske 7F= 7 Bit, FF= 8 Bit
    2973/     DFF : CB 66               		bit	4, (hl)		; 1=7 Datenbit, + P.ungerade
    2974/     E01 : 20 05               		jr	nz, v24out2	; ja
    2975/     E03 : CB 6E               		bit	5, (hl)		; 1=7 Datenbit, + P.gerade
    2976/     E05 : 28 07               		jr	z, v24out3	; nein -> 8 Datenbit
    2977/     E07 : 48                  		ld	c, b		; ja: c=7F, sonst c=FF
    2978/     E08 :                     v24out2:	; parity bestimmen
    2979/     E08 : A0                  		and	b		; ggf. 7. Bit löschen
    2980/     E09 : EA 0E 0E            		jp	pe, v24out3
    2981/     E0C : CB FF               		set	7, a		; Parity setzen
    2982/     E0E : A9                  v24out3:	xor	c		; Maske anwenden, bits negieren
    2983/     E0F : 4F                  		ld	c, a		; c=auszugebendes Zeichen
    2984/     E10 :                     		;
    2985/     E10 : 7E                  		ld	a, (hl)		; kdov24
    2986/     E11 : E6 07               		and	7		; Baudrate
    2987/     E13 : 47                  		ld	b, a
    2988/     E14 : 3E 01               		ld	a, 1
    2989/     E16 : 87                  v24out4:	add	a, a
    2990/     E17 : 10 FD               		djnz	v24out4
    2991/     E19 : 57                  		ld	d, a		; Baudratenzähler d=2^b
    2992/     E1A :                     					; b=1,d=2 19200 Baud, 
    2993/     E1A :                     					; b=2, d=4 9600 Baud
    2994/     E1A :                     					; .. b=7, d=128 300 Baud 
    2995/     E1A :                     		;
    2996/     E1A : CB 76               		bit	6, (hl)		; 1=3-Draht-Handshake
    2997/     E1C : 20 06               		jr	nz, v24out6	; dann nicht auf CTS warten
    2998/     E1E : DB 08               v24out5:	in	a, (PIO2DA)	; sonst X-Draht
    2999/     E20 : CB 57               		bit	2, a		; empfangsbereit CTS ?
    3000/     E22 : 20 FA               		jr	nz, v24out5	; warten auf Freigabe
    3001/     E24 :                     		;
    3002/     E24 : 06 0A               v24out6:	ld	b, 10		; 10 Bits senden (Start - 8Bit/7Bit+P - Stop)
    3003/     E26 : CB 5E               		bit	3, (hl)		; Stop-bit
    3004/     E28 : 28 01               		jr	z, v24out7	; 0=1 Stop-bit	
    3005/     E2A : 04                  		inc	b		; sonst ein Stop-Bit mehr
    3006/     E2B : 37                  v24out7:	scf			; Start mit 1-Bits
    3007/     E2C :                     		;
    3008/     E2C : 5A                  v24out8:	ld	e, d		; Baudratenzähler		4   Takte
    3009/     E2D : CB CF               		set	1, a		; b1=1				8
    3010/     E2F : 30 02               		jr	nc, v24out9	;				12/7
    3011/     E31 : CB 8F               		res	1, a		; b1=0				8 
    3012/     E33 : D3 08               v24out9:	out	(PIO2DA), a	; A1 Ausgang Daten TxD		(11
    3013/     E35 : E5                  		push	hl		; Zeitverzögerung		11
    3014/     E36 : E1                  		pop	hl		; Zeitverzögerung		10
    3015/     E37 : 7F                  		ld	a, a		; Zeitverzögerung		4
    3016/     E38 : 1D                  		dec	e		;				4
    3017/     E39 : 20 F8               		jr	nz, v24out9	;				12) * E - 5
    3018/     E3B : CB 39               		srl	c		; c=auszugebendes Zeichen	8
    3019/     E3D :                     					; nächstes Bit nach Cy
    3020/     E3D : 10 ED               		djnz	v24out8		;				13
    3021/     E3F :                     					; insg. 251 bzw.248 Takte bei E=4 (9600 Baud)
    3022/     E3F : 23                  		inc	hl
    3023/     E40 : F1                  		pop	af
    3024/     E41 : C1                  		pop	bc
    3025/     E42 : C9                  		ret
    3026/     E43 :                     		
    3027/     E43 :                     
    3028/     E43 :                     ; iobyt
    3029/     E43 :                     ; Ausgabe: b4 Bildschirm, b5 V24 (RS 232c), b6 Reserve, b7 User
    3030/     E43 :                     		
    3031/     E43 : 21 20 18            routch0:	ld	hl, kdov24	; hl=Kommandocode V 24
    3032/     E46 : C3 F3 0E            		jp	routch1		; dann test auf Eingabegerät
    3033/     E49 :                     
    3034/     E49 :                     ;------------------------------------------------------------------------------
    3035/     E49 :                     ; entfällt: c Copyrightmeldung
    3036/     E49 :                     ; entfällt: UP "Joy".Abfrage Joystick 1,keine Taste Z - Flag
    3037/     E49 :                     
    3038/     E49 :                     ; ---------------------------------------------------------------------------
    3039/     E49 :                     ; '6' Bank 1 (FDC)
    3040/     E49 :                     ; 8K-Eprom auf PIO2-Karte 
    3041/     E49 : 00 09 36 0D         		db 0,9,'6',0Dh
    3042/     E4D :                     
    3043/     E4D : 3E 10               		ld	a, 10h
    3044/     E4F : 18 21               		jr	loc_E72
    3045/     E51 :                     ; ---------------------------------------------------------------------------
    3046/     E51 :                     ; '7' Bank 2 (ROM-Bank)
    3047/     E51 :                     ; 8K-Eprom auf PIO2-Karte 
    3048/     E51 : 00 09 37 0D         		db 0,9,'7',0Dh
    3049/     E55 :                     
    3050/     E55 : 3E 20               		ld	a, 20h
    3051/     E57 : D3 0F               		out	(PIO2EPROM), a
    3052/     E59 : C3 00 20            		jp	2000h
    3053/     E5C :                     
    3054/     E5C :                     ; ---------------------------------------------------------------------------
    3055/     E5C :                     ; '8' Bank 3 (frei)
    3056/     E5C :                     ; 8K-Eprom auf PIO2-Karte 
    3057/     E5C : 00 09 38 0D         		db 0,9,'8',0Dh
    3058/     E60 :                     
    3059/     E60 : 3E 40               		ld	a, 40h
    3060/     E62 : 18 0E               		jr	loc_E72
    3061/     E64 :                     
    3062/     E64 :                     ; ---------------------------------------------------------------------------
    3063/     E64 :                     ; '9' Bank 4 (frei)
    3064/     E64 :                     ; 8K-Eprom auf PIO2-Karte 
    3065/     E64 : 00 09 39 0D         		db 0,9,'9',0Dh
    3066/     E68 :                     
    3067/     E68 : 3E 60               		ld	a, 60h
    3068/     E6A : 18 06               		jr	loc_E72
    3069/     E6C :                     
    3070/     E6C :                     ; ---------------------------------------------------------------------------
    3071/     E6C :                     ; '0' ROM disablen
    3072/     E6C :                     ; 8K-Eprom auf PIO2-Karte 
    3073/     E6C : 00 09 30 0D         		db 0,9,'0',0Dh
    3074/     E70 :                     
    3075/     E70 : 3E 00               		ld	a, 0
    3076/     E72 : D3 0F               loc_E72:	out	(PIO2EPROM), a
    3077/     E74 : C3 FD 07            		jp	j_GETCO1
    3078/     E77 :                     
    3079/     E77 :                     ; ---------------------------------------------------------------------------
    3080/     E77 :                     ; ! cc Farbbyte setzen
    3081/     E77 :                     ; s.a. Monitorpatch 08.11.2011.LISTING
    3082/     E77 :                     
    3083/     E77 : 00 09 21 0D         		db 0,9,'!',0Dh
    3084/     E7B :                     
    3085/     E7B : 3A 5B 18            		ld	a, (ARG1)	; mögliches FarbByte laden
    3086/     E7E : B7                  		or	a		; wenn 00H (keine Angabe) dann FarbByte
    3087/     E7F : 20 02               		jr	nz, loc_E83
    3088/     E81 : 3E 0F               loc_E81:	ld	a, 0Fh		; bg: schwarz, fg: weiß
    3089/     E83 : F5                  loc_E83:	push	af		; FarbByte sichern
    3090/     E84 : AF                  		xor	a		; noFarbRAM A=00
    3091/     E85 : 32 1F 18            		ld	(FARBBWS), a	; noFarbRAM einstellen
    3092/     E88 : F1                  		pop	af		; FarbByte nach A zurück
    3093/     E89 : 0E F0               		ld	c, BWSPORT
    3094/     E8B : ED 40               		in	b, (c)		; akt. Portwert einlesen
    3095/     E8D : 04                  		inc	b		; FFH wenn kein rücklesbares Register
    3096/     E8E : C8                  		ret	z		; Rückkehr weil kein BWSPort gefunden
    3097/     E8F :                     					; wenn hier dann wurde KEIN FFH gelesen, altes B zurück
    3098/     E8F : 05                  		dec	b		; altes B zurück
    3099/     E90 : 50                  		ld	d, b		; in B BWS Steuercode für Text RAM
    3100/     E91 : CB D2               		set	2, d		; in D BWS Steuercode für FarbRAM
    3101/     E93 : 21 00 10            		ld	hl, BWSEND
    3102/     E96 : 5E                  		ld	e, (hl)		; altes TextByte in E merken
    3103/     E97 : ED 51               		out	(c), d		; FarbRAM an
    3104/     E99 : 77                  		ld	(hl), a		; Farbbyte schreiben
    3105/     E9A : BE                  		cp	(hl)		; und vergleichslesen
    3106/     E9B : ED 41               		out	(c), b		; Text RAM wieder ein (wegen RET)
    3107/     E9D : 73                  		ld	(hl), e		; altes Zeichen Text-RAM zurück
    3108/     E9E : C0                  		ret	nz		; kein phys.RAM (Text- oder FarbRAM!)
    3109/     E9F :                     		; wenn hier dann unterschiedliche RAM's! damit gilt der FarbRAM
    3110/     E9F :                     		; als erkannt, das 1.Byte ist bereits in Farbe
    3111/     E9F : ED 51               		out	(c), d		; FarbRAM an
    3112/     EA1 : C5                  		push	bc		; BWSPort und TextRAM ein sichern
    3113/     EA2 : 11 01 10            		ld	de, BWSEND+1	; 2.Byte FarbRAM
    3114/     EA5 : 01 FF 07            		ld	bc, LINES*COLS-1	; restliche Bytezahl
    3115/     EA8 : ED B0               		ldir			; nun FarbRAM schreiben
    3116/     EAA : 7E                  		ld	a, (hl)		; FarbByte zurücklesen (von 17FFH)
    3117/     EAB : C1                  		pop	bc		; BWSPort und TextRAM ein
    3118/     EAC : ED 41               		out	(c), b		; Text RAM ein
    3119/     EAE : 32 1F 18            		ld	(FARBBWS), a	; FarbByte eintragen
    3120/     EB1 : C9                  		ret
    3121/     EB2 :                     
    3122/     EB2 :                     ; ---------------------------------------------------------------------------
    3123/     EB2 :                     ; minimales V24 HeaderSave Load 
    3124/     EB2 :                     ; "* xxxx CR" lädt HeaderSave-File nach xxxx, "* CR" lädt auf originale Adr.
    3125/     EB2 :                     
    3126/     EB2 : 00 09 2A 0D         		db 0,9,'*',0Dh
    3127/     EB6 :                     
    3128/     EB6 : F3                  		di			; Interrupts sperren
    3129/     EB7 : CD 22 0F            		call	v24hs
    3130/     EBA : FB                  		ei			; Interrupts freigeben
    3131/     EBB : C2 68 02            		jp	nz, error	; Abbruch bei Fehler & Rücksprung
    3132/     EBE : C3 F1 07            		jp	j_OUTHL		; letzte LadeAdresse anzeigen
    3133/     EC1 :                     					; und RET von OUTHL als Rücksprung
    3134/     EC1 :                     
    3135/     EC1 :                     ; ---------------------------------------------------------------------------
    3136/     EC1 : FF                  		db 0FFh
    3137/     EC2 : FF                  		db 0FFh
    3138/     EC3 : FF                  		db 0FFh
    3139/     EC4 : FF                  		db 0FFh
    3140/     EC5 : FF                  		db 0FFh
    3141/     EC6 : FF                  		db 0FFh
    3142/     EC7 : FF                  		db 0FFh
    3143/     EC8 :                     
    3144/     EC8 :                     
    3145/     EC8 :                     ;------------------------------------------------------------------------------
    3146/     EC8 :                     ;? Help
    3147/     EC8 :                     ;------------------------------------------------------------------------------
    3148/     EC8 :                     
    3149/     EC8 : 00 09 3F 0D         		db 0,9,'?',0Dh
    3150/     ECC :                     
    3151/     ECC : DF                  help:		rst	18h		; PRNST
    3152/     ECD : 48 65 6C 70 3A 8D   		db "Help:",8Dh
    3153/     ED3 : 21 00 02            		ld	hl, KDOANF	; Suchbereich Anfang
    3154/     ED6 : 01 00 FE            		ld	bc, RAMEND-KDOANF+1	; Länge
    3155/     ED9 : AF                  help1:		xor	a		; suche 00
    3156/     EDA : ED B1               		cpir
    3157/     EDC : E0                  		ret	po
    3158/     EDD : 3E 09               		ld	a, 9		; folgt 09?
    3159/     EDF : BE                  		cp	(hl)
    3160/     EE0 : 20 F7               		jr	nz, help1
    3161/     EE2 : 23                  		inc	hl
    3162/     EE3 : 56                  		ld	d, (hl)		; kdo merken
    3163/     EE4 : 23                  		inc	hl
    3164/     EE5 : 3E 0D               		ld	a, 0Dh		; folgt 0D?
    3165/     EE7 : BE                  		cp	(hl)
    3166/     EE8 : 20 EF               		jr	nz, help1	; wenn Rahmen nicht gefunden
    3167/     EEA : 7A                  		ld	a, d		; sonst kdo anzeigen
    3168/     EEB : D7                  		rst	10h		; OUTCH
    3169/     EEC : DF                  		rst	18h		; PRNST
    3170/     EED : 20 20 A0            		db "  ",0A0h
    3171/     EF0 : 18 E7               		jr	help1
    3172/     EF2 :                     
    3173/     EF2 : FF                  		db 0FFh
    3174/     EF3 :                     
    3175/     EF3 :                     ;------------------------------------------------------------------------------
    3176/     EF3 :                     ; routch
    3177/     EF3 :                     ; iobyt
    3178/     EF3 :                     ; Ausgabe: b4 Bildschirm, b5 V24 (RS 232c), b6 Reserve, b7 User
    3179/     EF3 :                     ;------------------------------------------------------------------------------
    3180/     EF3 :                     
    3181/     EF3 :                     ; zu routch
    3182/     EF3 : F5                  routch1:	push	af
    3183/     EF4 : CB 7E               		bit	7, (hl)		; hl=kdov24
    3184/     EF6 : 20 02               		jr	nz, routch2
    3185/     EF8 : E6 7F               		and	7Fh
    3186/     EFA : 23                  routch2:	inc	hl
    3187/     EFB :                     ; zusätzliche Steuercodes auswerten
    3188/     EFB : FE 18               		cp	18h		; Drucker ein (V24)
    3189/     EFD : 28 07               		jr	z, routch3
    3190/     EFF : FE 19               		cp	19h		; Drucker aus (V24)
    3191/     F01 : 20 07               		jr	nz, routch4
    3192/     F03 : 36 11               		ld	(hl), 11h
    3193/     F05 : 21                  		db	21h		; ld hl, xxx; nächsten Befehl überspringen
    3194/     F06 : CB EE               routch3:	set	5, (hl)	
    3195/     F08 : 18 14               		jr	routch5
    3196/     F0A :                     ;		
    3197/     F0A : CB 66               routch4:	bit	4, (hl)		; b4 ?
    3198/     F0C : C4 33 00            		call	nz, co		; Ausgabe über Bildschirm
    3199/     F0F : CB 6E               		bit	5, (hl)		; b5 ?
    3200/     F11 : C4 F9 0D            		call	nz, v24out	; V24 (RS 232c)
    3201/     F14 : CB 76               		bit	6, (hl)		; b6 ? Reserve
    3202/     F16 : C4 FF FF            		call	nz, 0FFFFh	; dort steht normalerweise FF -> break
    3203/     F19 : CB 7E               		bit	7, (hl)		; b7 ?
    3204/     F1B : C4 F3 18            		call	nz, unk_18F3	; User-Ausgaberoutine
    3205/     F1E : F1                  routch5:	pop	af
    3206/     F1F : D1                  		pop	de
    3207/     F20 : E1                  		pop	hl
    3208/     F21 : C9                  		ret
    3209/     F22 :                     
    3210/     F22 :                     ;------------------------------------------------------------------------------
    3211/     F22 :                     ; UP lädt ein HeaderSaveFile auf ARG1, ohne ARG1 auf Originale Adresse
    3212/     F22 :                     ; Rückkehr mit Z wenn alles OK
    3213/     F22 :                     ;------------------------------------------------------------------------------
    3214/     F22 :                     
    3215/     F22 : 21 8E 18            v24hs:		ld	hl, hsbuf
    3216/     F25 : 11 20 00            		ld	de, 20h		; 32Bytes Bytes Header
    3217/     F28 : CD 51 0F            		call	v24hs3		; Header laden
    3218/     F2B : 21 9B 18            		ld	hl, hsbuf+13	; HL auf HeaderSave Kennung
    3219/     F2E : 06 03               		ld	b, 3		; 3 Kennbytes testen
    3220/     F30 : 3E D3               		ld	a, 0D3h		; KennByte
    3221/     F32 : BE                  v24hs1:		cp	(hl)		; Vergleich
    3222/     F33 : 23                  		inc	hl		; nächstes Byte
    3223/     F34 : C0                  		ret	nz		; <>D3H ->kein HeaderSave = NZ
    3224/     F35 : 10 FB               		djnz	v24hs1		; bis alle 3 Byte fertig
    3225/     F37 : ED 5B 8E 18         		ld	de, (hsbuf+0)	; AADR
    3226/     F3B : 2A 90 18            		ld	hl, (hsbuf+2)	; EADR
    3227/     F3E : AF                  		xor	a		; Carry 0
    3228/     F3F : ED 52               		sbc	hl, de		; Bytezahl in HL
    3229/     F41 : 23                  		inc	hl		; Korrektur Bytezahl
    3230/     F42 : EB                  		ex	de, hl		; nun HL AAdr, in DE Bytezahl
    3231/     F43 :                     					; Zielladeadresse aus ARG1 holen 0000H übernimmt aus Header
    3232/     F43 : ED 4B 5B 18         		ld	bc, (ARG1)	; Ladeziel
    3233/     F47 : 79                  		ld	a, c
    3234/     F48 : B0                  		or	b
    3235/     F49 : 28 02               		jr	z, v24hs2	; wenn arg1=0000H, nicht verwenden
    3236/     F4B : 60                  		ld	h, b
    3237/     F4C : 69                  		ld	l, c		; in HL nun Ladeziel
    3238/     F4D : CD 51 0F            v24hs2:		call	v24hs3		; hier File holen
    3239/     F50 :                     					; Rückkehr mit Z + HL letzte Adr
    3240/     F50 : C9                  		ret
    3241/     F51 :                     
    3242/     F51 :                     ; Header laden
    3243/     F51 : CD 5C 0F            v24hs3:		call	v24hsin		; 1 Byte lesen
    3244/     F54 : 77                  		ld	(hl), a		; wegschreiben
    3245/     F55 : 1B                  		dec	de		; 1 Byte weniger zu senden
    3246/     F56 : 7B                  		ld	a, e
    3247/     F57 : B2                  		or	d		; DE = 0000 ?
    3248/     F58 : C8                  		ret	z		; ja, Z und HL auf letzter Adresse
    3249/     F59 : 23                  		inc	hl		; nächste Adresse
    3250/     F5A : 18 F5               		jr	v24hs3
    3251/     F5C :                     
    3252/     F5C :                     ; V24 Laderoutine ohne Handshake ! 4800Baud
    3253/     F5C : E5                  v24hsin:	push	hl
    3254/     F5D : D5                  		push	de
    3255/     F5E : 2A 00 18            		ld	hl, (cupos)
    3256/     F61 : 1E 08               		ld	e, 8		; Zeitkonstante D=08=4800, 16=2400, 32=1200
    3257/     F63 :                     					; Zeitkonstante Baudrate fest 4800Baud
    3258/     F63 : DB 08               v24hsin1:	in	a, (PIO2DA)	; Pegel am Datenport abfragen
    3259/     F65 : E6 01               		and	1		; nur RxD zulassen (Bits 7-1 ausblenden)
    3260/     F67 : 20 FA               		jr	nz, v24hsin1	; Dateneingang war L warten auf H-Pegel
    3261/     F69 :                     		; RxD war L = StartBit erkannt
    3262/     F69 : 43                  		ld	b, e		; Zeitkonstante nach B
    3263/     F6A :                     					; halbe Bitlänge warten
    3264/     F6A : CB 06               v24hsin2:	rlc	(hl)		; 15 Takte Statusanzeige
    3265/     F6C : 10 FC               		djnz	v24hsin2		; Zeit abwarten
    3266/     F6E : 06 09               		ld	b, 9		; Startbit + 8 bit
    3267/     F70 : 53                  v24hsin3:	ld	d, e		; Zeitkonstante Baudrate
    3268/     F71 : CB 19               		rr	c		; gelesenes CarryBit ins Bit 7 schieben
    3269/     F73 :                     					; 19 Takte OK
    3270/     F73 : CB 06               v24hsin4:	rlc	(hl)		; 15 Takte Statusanzeige
    3271/     F75 : 00                  		nop			;  4 Takte
    3272/     F76 : 15                  		dec	d		;  4 Takte Zeitzähler decrementieren
    3273/     F77 : DB 08               		in	a, (PIO2DA)	; 11 Takte Pegelabfrage
    3274/     F79 : 20 F8               		jr	nz, v24hsin4	; 7 Takte
    3275/     F7B : 1F                  		rra			; Bit0=RxD ins Carry schieben
    3276/     F7C : 10 F2               		djnz	v24hsin3		; weiter bis alle Bits durch
    3277/     F7E : 79                  		ld	a, c		; gelesenes Byte in A umladen
    3278/     F7F : D1                  		pop	de
    3279/     F80 : E1                  		pop	hl
    3280/     F81 : C9                  		ret
    3281/     F82 :                     
    3282/     F82 :                     ; ---------------------------------------------------------------------------
    3283/     F82 :                     ; Kommando "p" Clear RAM
    3284/     F82 : 00 09 70 0D         		db 0,9,'p',0Dh
    3285/     F86 :                     ; ---------------------------------------------------------------------------
    3286/     F86 : 21 58 18            		ld	hl, data
    3287/     F89 : 36 FF               		ld	(hl), 0FFh	; 1.Byte mit FF
    3288/     F8B : 11 59 18            		ld	de, data+1
    3289/     F8E : 01 A7 E6            		ld	bc, 0FEFFh-data	; Länge bis FEFF wegen DVHD
    3290/     F91 : ED B0               		ldir			; RAM löschen
    3291/     F93 : DF                  		rst	18h
    3292/     F94 : 20 43 6C 65 61 72   		db " Clear RAM",8Dh
                    20 52 41 4D 8D    
    3293/     F9F : C9                  		ret
    3294/     FA0 :                     ; ---------------------------------------------------------------------------
    3295/     FA0 :                     ; 'W nn xx' Port nn beschreiben
    3296/     FA0 : 00 09 57 0D         		db 0,9,'W',0Dh
    3297/     FA4 :                     ; ---------------------------------------------------------------------------
    3298/     FA4 : CD CA 04            		call	para
    3299/     FA7 : 44                  		ld	b, h
    3300/     FA8 : 4D                  		ld	c, l
    3301/     FA9 : ED 59               		out	(c), e
    3302/     FAB : C9                  		ret
    3303/     FAC :                     ; ---------------------------------------------------------------------------
    3304/     FAC :                     ; 'w nn' Port lesen		
    3305/     FAC : 00 09 77 0D         		db 0,9,'w',0Dh
    3306/     FB0 :                     ; ---------------------------------------------------------------------------
    3307/     FB0 : ED 4B 5B 18         		ld	bc, (ARG1)
    3308/     FB4 : ED 78               		in	a, (c)
    3309/     FB6 : C3 EE 07            		jp	j_OUTHEX
    3310/     FB9 :                     ; ---------------------------------------------------------------------------
    3311/     FB9 :                     ; '4' Umschaltung 2/4 Mhz
    3312/     FB9 : 00 09 34 0D         		db 0,9,'4',0Dh
    3313/     FBD :                     ; ---------------------------------------------------------------------------
    3314/     FBD : DB F0               		in	a, (BWSPORT)
    3315/     FBF : EE 01               		xor	1
    3316/     FC1 : D3 F0               		out	(BWSPORT), a
    3317/     FC3 : C9                  		ret
    3318/     FC4 :                     ; ---------------------------------------------------------------------------
    3319/     FC4 :                     ; 'z' Umschaltung Bildschirm-Modus
    3320/     FC4 : 00 09 7A 0D         		db 0,9,'z',0Dh
    3321/     FC8 :                     ; ---------------------------------------------------------------------------
    3322/     FC8 : DB 05               		in	a, (PIODB)
    3323/     FCA : CB 5F               		bit	3, a		; Bildschim-Mode
    3324/     FCC : 28 04               		jr	z, loc_FD2
    3325/     FCE : CB 9F               		res	3, a
    3326/     FD0 : 18 02               		jr	loc_FD4
    3327/     FD2 : CB DF               loc_FD2:	set	3, a
    3328/     FD4 : D3 05               loc_FD4:	out	(PIODB), a
    3329/     FD6 : C9                  		ret
    3330/     FD7 :                     ; ---------------------------------------------------------------------------
    3331/     FD7 : FF                  		db 0FFh
    3332/     FD8 : FF                  		db 0FFh
    3333/     FD9 : FF                  		db 0FFh
    3334/     FDA : FF                  		db 0FFh
    3335/     FDB : FF                  		db 0FFh
    3336/     FDC : FF                  		db 0FFh
    3337/     FDD : FF                  		db 0FFh
    3338/     FDE : FF                  		db 0FFh
    3339/     FDF : FF                  		db 0FFh
    3340/     FE0 : FF                  		db 0FFh
    3341/     FE1 : FF                  		db 0FFh
    3342/     FE2 : FF                  		db 0FFh
    3343/     FE3 : FF                  		db 0FFh
    3344/     FE4 : FF                  		db 0FFh
    3345/     FE5 : FF                  		db 0FFh
    3346/     FE6 : FF                  		db 0FFh
    3347/     FE7 : FF                  		db 0FFh
    3348/     FE8 : FF                  		db 0FFh
    3349/     FE9 : FF                  		db 0FFh
    3350/     FEA : FF                  		db 0FFh
    3351/     FEB : FF                  		db 0FFh
    3352/     FEC : FF                  		db 0FFh
    3353/     FED : FF                  		db 0FFh
    3354/     FEE : FF                  		db 0FFh
    3355/     FEF :                     
    3356/     FEF :                     ;------------------------------------------------------------------------------
    3357/     FEF :                     ; X Exit Sprung in das Betriebssystem Programmpaket X
    3358/     FEF :                     ;------------------------------------------------------------------------------
    3359/     FEF :                     
    3360/     FEF : 00 09 58 0D         		db 0,9,'X',0Dh
    3361/     FF3 :                     
    3362/     FF3 : C3 6B 00            		jp	rWarm2
    3363/     FF6 :                     
    3364/     FF6 :                     ;------------------------------------------------------------------------------
    3365/     FF6 :                     ; b Basic	Start des Basic-Interpreters V.	3.2
    3366/     FF6 :                     ;------------------------------------------------------------------------------
    3367/     FF6 :                     	
    3368/     FF6 :                     		; db 0 fehlt, aber Befehle davor endet auf 00
    3369/     FF6 :                     		; da lo(rWarm2) == 0
    3370/     FF6 :                     		
    3371/     FF6 : 09 62 0D            		db 9,'b',0Dh
    3372/     FF9 : 3E 02               		ld	a, 2
    3373/     FFB : D3 14               		out	(modul1), a	; Modul1 ROM "Basic" aktivieren
    3374/     FFD : C3 CC 5F            		jp	5FCCh		; und starten
    3375/    1000 :                     
    3376/    1000 :                     ;------------------------------------------------------------------------------
    3377/    1000 :                     ; Arbeitszellen Monitor
    3378/    1000 :                     ;------------------------------------------------------------------------------
    3379/    1000 :                     
    3380/    1800 :                     		org RAM
    3381/    1800 :                     
    3382/    1800 :                     cupos:		ds 2			; Cursorposition
    3383/    1802 :                     ; Sprungverteiler f. RST-Aufrufe und NMI
    3384/    1802 :                     ; wird initialisiert mit Werten von sv_rst
    3385/    1802 :                     jp_rst08:	ds 3			; jp	rinch
    3386/    1805 :                     jp_rst10:	ds 3			; jp	routch
    3387/    1808 :                     jp_rst18:	ds 3			; jp	rprnst
    3388/    180B :                     jp_rst20:	ds 3			; jp	rWarm	Warmstart
    3389/    180E :                     jp_rst28:	ds 3			; jp	loa15	Eingabe 1 Byte A Kassette
    3390/    1811 :                     jp_rst30:	ds 3			; jp	sav10	Ausgabe 1 Byte A Kassette
    3391/    1814 :                     jp_rst38:	ds 3			; jp	rst38	Einsprung bei Einzelschritt
    3392/    1817 :                     nmi:		ds 3			; jp	BREAK	NMI: Breakpoint
    3393/    181A :                     ;Hilfsregister, V24, I/O
    3394/    181A :                     soil:		ds 2			; Beginn Eingabezeile	, 0FFFFh
    3395/    181C :                     warmcod:	ds 3			; Warmstartcode		, "SCH"
    3396/    181F :                     FARBBWS:	ds 1			; 00=wenn KEINE Farbe, sonst akt. Farbbyte
    3397/    1820 :                     kdov24:		ds 1			; Kommandocode V 24 in	, 2
    3398/    1821 :                     IOBYT:		ds 1			; Ein/Ausgabebyte	; 11h
    3399/    1822 :                     			; Eingabe: b0 Tastatur, b1 V24 (Rs 232c), b2 Reserve, b3 User
    3400/    1822 :                     			; Ausgabe: b4 Bildschirm, b5 V24 (RS 232c), b6 Reserve, b7 User
    3401/    1822 :                     ;
    3402/    1822 :                     tacod:		ds 1			; Tastencode der zuletzt gedrückten Taste
    3403/    1823 :                     phako:		ds 1			; Hilfsregister	Einlesen, Phasenkorrektur
    3404/    1824 :                     repeat:		ds 1			; Hilfsregister	Repetierfunktion Tastatur
    3405/    1825 :                     poscnt:		ds 1			; Hilfsregister Kursorpositionierung (CTRL+N)
    3406/    1826 :                     					; std. 1, nach ctrln 5 (dh 5-1 Ziffern werden erwartet)
    3407/    1826 :                     ;Stack
    3408/    1826 :                     		ds 30h			; Stackbereich
    3409/    1856 :                     SYSSK:		ds 2			; Stack
    3410/    1858 :                     data:		ds 2			; Hilfsregister	UP "INLINE"
    3411/    185A :                     		ds 1
    3412/    185B :                     ;Kdo-Argumente
    3413/    185B :                     ARG1:		ds 2			; Argument 1
    3414/    185D :                     ARG2:		ds 2			; Argument 2
    3415/    185F :                     ARG3:		ds 2			; Argument 3
    3416/    1861 :                     ;Registerrettebereich (register save area)
    3417/    1861 :                     ;Reihenfolge REGAFX..REGSP ist wichtig! Nicht verändern!
    3418/    1861 : =1861H              RSA		equ	$
    3419/    1861 :                     REGAFX:		ds 2
    3420/    1863 :                     REGBCX:		ds 2
    3421/    1865 :                     REGDEX:		ds 2
    3422/    1867 :                     REGHLX:		ds 2
    3423/    1869 :                     REGAF:		ds 2
    3424/    186B :                     REGBC:		ds 2
    3425/    186D :                     REGDE:		ds 2
    3426/    186F :                     REGHL:		ds 2
    3427/    1871 :                     REGIX:		ds 2
    3428/    1873 :                     REGIY:		ds 2
    3429/    1875 :                     REGPC:		ds 2
    3430/    1877 :                     REGSP:		ds 2
    3431/    1879 :                     ;
    3432/    1879 :                     BPADR:		ds 2			; RSA: BP
    3433/    187B :                     BPOPC:		ds 3			; RSA: Breakpointsequenz
    3434/    187E :                     
    3435/    187E :                     ;Speicher Save/Load Turbo-Tape
    3436/    187E :                     tbb_eadr:	ds 2			; Endadr. zum Speichern
    3437/    1880 :                     tbb_aadr:	ds 2			; AAdr. zu speichender Block
    3438/    1882 :                     tb_errarr:	ds 20			; Speicher für 10 Adressen Blockfehler
    3439/    1896 :                     					; getestet wird auf 12h ! Das über-
    3440/    1896 :                     					; schreibt dann die nachfolgenden 6x'N'
    3441/    1896 :                     ;32 Byte Buffer für Turbo Namenskopf
    3442/    1896 :                     tb_kopfbuf:	ds 8			; 8x'N'
    3443/    189E :                     tbh_filename:	ds 16			; Dateiname
    3444/    18AE :                     tbh_trenner:	ds 2			; Trenner ': '
    3445/    18B0 :                     tbh_filetyp:	ds 1			; Dateityp, 'D'-Datei, 'P'-Programm
    3446/    18B1 :                     tbh_eadr:	ds 2			; eadr
    3447/    18B3 :                     tbh_aadr:	ds 2			; aadr
    3448/    18B5 :                     tbh_special:	ds 1			; 'L'	; L für Ludwig ?
    3449/    18B6 :                     ;32 Byte Kopfblockbuffer beim Lesen
    3450/    18B6 :                     tb_blkbuf:	ds 8
    3451/    18BE :                     tbl_filename:	ds 16			; Dateiname
    3452/    18CE :                     tbl_trenner:	ds 2			; Trenner ': '
    3453/    18D0 :                     tbl_filetyp:	ds 1			; Dateityp
    3454/    18D1 :                     tbl_eadr:	ds 2			; eadr
    3455/    18D3 :                     tbl_aadr:	ds 2			; aadr 
    3456/    18D5 :                     tbl_special:	ds 1			; Kennung
    3457/    18D6 :                     
    3458/    18D6 :                     ; V24-Headersave-Buffer, 32 Byte
    3459/    18D6 :                     ; überschneidet sich mit tb_errarr..tbh_trenner !!
    3460/    18D6 : =188EH              hsbuf		equ	188Eh		; 32 Byte bis 18ADh
    3461/    18D6 :                     
    3462/    18D6 :                     ; es sind noch ein paar Bytes frei 18D6..18DF
    3463/    18D6 :                     
    3464/    18F0 :                     		org	RAM+0F0h
    3465/    18F0 :                     
    3466/    18F0 :                     unk_18F0:	ds 3		; User Eingaberoutine
    3467/    18F3 :                     unk_18F3:	ds 3		; User Ausgaberoutine
    3468/    18F6 :                     
    3469/    18F6 : =18F6H              sysramend:	equ $
    3470/    18F6 :                     
    3471/    18F6 :                     		end
 AS V1.42 Beta [Bld 157] - Source File mon_v8-fdc-rfl.asm - Page 2 - 1/25/2023 11:3:40


  Symbol Table (* = unused):
  --------------------------

*AA :                           12B C | *ABREA :                        258 C |
 AFOUND :                      0DC3 C |  AKO1 :                         51D C |
 AKO2 :                         525 C |  AKO3 :                         52F C |
 AKO4 :                         552 C |  AKO5 :                         565 C |
 ALADEN :                      0DBD C | *ARCHITECTURE :  i386-unknown-win32 - |
 ARG1 :                        185B C |  ARG2 :                        185D C |
 ARG3 :                        185F C |  ASCH :                         23A C |
 AVERIFY :                     0DB7 C |  AWARTEN :                     0DB1 C |
 BEEP :                         272 C |  BEEP1 :                        275 C |
*BIGENDIAN :                      0 - |  BKO1 :                         6CE C |
 BPADR :                       1879 C |  BPOPC :                       187B C |
*BRANCHEXT :                      0 - |  BREAK :                        243 C |
*BREAK1 :                       24B C |  BREAK2 :                       25E C |
 BWS :                         1000 - |  BWSANF :                      17FF - |
 BWSEND :                      1000 - |  BWSPORT :                      0F0 - |
*CASESENSITIVE :                  0 - |  CKO1 :                         69C C |
 CKO2 :                         6BF C |  CO :                            33 C |
 CO0 :                          300 C |  CO00 :                          2B C |
 CO1 :                          318 C |  CO10 :                         37F C |
 CO11 :                         392 C |  CO12 :                         3AB C |
 CO13 :                         3B3 C |  CO14 :                         3C0 C |
 CO2 :                          31B C |  CO3 :                          328 C |
 CO4 :                          32B C |  CO5 :                          333 C |
 CO6 :                          354 C |  CO7 :                          355 C |
 CO8 :                          35D C |  CO9 :                          377 C |
 COLS :                          40 - | *CONSTPI :        3.141592653589793 - |
 COTAB :                        3C7 C |  CRC :                          404 - |
 CRC1 :                         40B C |  CRC2 :                         40D C |
*CRC3 :                         417 C |  CRC4 :                         41E C |
 CSAVE :                        8F2 C |  CTC0 :                           0 - |
 CTC1 :                           1 - |  CTC2 :                           2 - |
*CTC3 :                           3 - |  CUPOS :                       1800 C |
 DATA :                        1858 C | *DATE :                   1/25/2023 - |
 EKO1 :                         728 C |  EKO2 :                         72B C |
 ENDE8 :                        0A2 C |  ERROR :                        268 C |
*FALSE :                          0 - |  FARBBWS :                     181F C |
 FKDO1 :                        441 C |  FKDO10 :                       47E C |
 FKDO2 :                        44D C |  FKDO3 :                        450 C |
 FKDO4 :                        453 C | *FKDO5 :                        455 C |
 FKDO6 :                        45F C |  FKDO7 :                        463 C |
 FKDO8 :                        470 C |  FKDO9 :                        473 C |
 FLAGS :                        579 C |  FLAGS1 :                       57F C |
 FLAGS2 :                       585 C |  FLAGTAB :                      5BE C |
*FULLPMMU :                       1 - |  GETCO1 :                       1DE C |
 GTKO1 :                        83F C |  GTKO10 :                       8A3 C |
 GTKO11 :                       8AA C |  GTKO12 :                       8B7 C |
 GTKO13 :                       8B9 C |  GTKO2 :                        84A C |
 GTKO3 :                        855 C |  GTKO4 :                        861 C |
 GTKO5 :                        865 C |  GTKO6 :                        877 C |
 GTKO7 :                        883 C |  GTKO8 :                        885 C |
 GTKO9 :                        895 C | *GT_KDO :                       831 C |
 G_KDO :                        6E4 C | *HAS64 :                          1 - |
*HASDSP :                         0 - | *HASFPU :                         0 - |
*HASPMMU :                        0 - |  HELP :                        0ECC C |
 HELP1 :                       0ED9 C |  HSBUF :                       188E - |
 IKO1 :                        0AA8 C | *INCH :                           8 C |
*INEXTMODE :                      0 - |  INHEX :                        172 C |
*INIT :                           0 C |  INIT1 :                         0B C |
 INIT2 :                         23 C |  INIT3 :                         3B C |
 INIT4 :                         44 C |  INIT5 :                         1B C |
 INIT6 :                         4C C |  INIT7 :                         55 C |
 INIT8 :                         6E C |  INLIN1 :                       12F C |
 INLIN2 :                       13A C |  INLINE :                       128 C |
*INLWORDMODE :                    0 - | *INMAXMODE :                      0 - |
*INSRCMODE :                      0 - | *INSUPMODE :                      0 - |
 INTTAB :                       2F6 C |  INTTAB1 :                      2F8 C |
 IOBYT :                       1821 C |  JKO1 :                         6FA C |
 JKO2 :                         700 C |  JKO3 :                         70E C |
 JP_RST08 :                    1802 C |  JP_RST10 :                    1805 C |
 JP_RST18 :                    1808 C |  JP_RST20 :                    180B C |
 JP_RST28 :                    180E C |  JP_RST30 :                    1811 C |
 JP_RST38 :                    1814 C |  J_GETCO1 :                     7FD C |
*J_KDO :                        6EE C |  J_OUTHEX :                     7EE C |
 J_OUTHL :                      7F1 C |  KDO1 :                         1DE C |
 KDO2 :                         1E7 C |  KDO4 :                         21F C |
 KDOANF :                       200 - |  KDOERR :                       1DB C |
 KDOV24 :                      1820 C |  KONVX :                        146 C |
 KONVX2 :                       156 C |  KONVX3 :                       168 C |
 LINES :                         20 - | *LISTON :                         1 - |
 LOA10 :                       0A21 C |  LOA11 :                       0A28 C |
 LOA12 :                       0A73 C |  LOA15 :                       0A59 C |
 LOA16 :                       0A5C C |  LOA17 :                       0A40 C |
 LOA18 :                       0A47 C |  LOA19 :                       0A51 C |
 LOA3 :                         9AD C |  LOA4 :                         9BC C |
 LOA6 :                         9E5 C | *LOADB :                         28 C |
 LOC_235 :                      235 C |  LOC_743 :                      743 C |
 LOC_94E :                      94E C |  LOC_A98 :                     0A98 C |
 LOC_A9A :                     0A9A C | *LOC_B0F :                     0B0F C |
 LOC_B33 :                     0B33 C |  LOC_B43 :                     0B43 C |
 LOC_B46 :                     0B46 C |  LOC_B51 :                     0B51 C |
 LOC_B5B :                     0B5B C |  LOC_B63 :                     0B63 C |
 LOC_B76 :                     0B76 C |  LOC_B85 :                     0B85 C |
 LOC_BE6 :                     0BE6 C |  LOC_BED :                     0BED C |
 LOC_D23 :                     0D23 C |  LOC_D2D :                     0D2D C |
 LOC_D8E :                     0D8E C |  LOC_DAD :                     0DAD C |
 LOC_DC9 :                     0DC9 C |  LOC_DE1 :                     0DE1 C |
 LOC_DF0 :                     0DF0 C |  LOC_E72 :                     0E72 C |
 LOC_E81 :                     0E81 C |  LOC_E83 :                     0E83 C |
 LOC_FD2 :                     0FD2 C |  LOC_FD4 :                     0FD4 C |
*MACEXP :                         7 - |  MKDO1 :                        48D C |
 MKDO2 :                        48F C |  MKDO3 :                        49D C |
 MKDO4 :                        4AE C |  MODUL1 :                        14 - |
*MOMCPU :                      80DC - | *MOMCPUNAME :              Z80UNDOC - |
 MS30 :                         11D C |  MS301 :                        121 C |
 M_KDO :                        48A C |  NAMELEN :                       28 - |
*NESTMAX :                      100 - |  NMI :                         1817 C |
 NOTAST :                       0D6 C |  NOV24 :                        10B C |
*N_KDO :                        405 C |  OKO1 :                        0ACA C |
 OUT4SP :                       58C C | *OUTCH :                         10 C |
 OUTHEX :                       183 C |  OUTHEX1 :                      18C C |
 OUTHEX2 :                      197 C |  OUTHL :                        19A C |
 OUTHLSP :                      589 C |  O_00 :                         32E C |
 O_BELL :                       387 C |  O_CLLN :                       375 C |
 O_CLS :                        365 C |  O_CLSC :                       36B C |
 O_CR :                         39A C |  O_CUD :                        38F C |
 O_CUL :                        38C C |  O_CUR :                        327 C |
 O_CUU :                        395 C |  O_DEL :                        3A8 C |
 O_HOME :                       3A3 C |  O_INS :                        3B8 C |
 O_SETC :                       3A0 C |  O_SOL :                        381 C |
 O_TAB :                        3D7 C | *PACKING :                        0 - |
*PADDING :                        1 - |  PARA :                         4CA C |
 PHAKO :                       1823 C |  PIEP :                          9B C |
*PIO2CA :                        0A - | *PIO2CB :                        0B - |
 PIO2DA :                         8 - |  PIO2DB :                         9 - |
 PIO2EPROM :                     0F - |  PIOCA :                          6 - |
 PIOCB :                          7 - |  PIODA :                          4 - |
 PIODB :                          5 - |  PKO1 :                         4E9 C |
 POSCNT :                      1825 C | *PRNST :                         18 C |
 PROGX :                        116 C |  Q_KO1 :                        995 C |
 Q_KO10 :                       9E3 C |  Q_KO12 :                       9F2 C |
 Q_KO13 :                       9FE C |  Q_KO14 :                      0A05 C |
 Q_KO15 :                      0A18 C |  Q_KO16 :                      0A1C C |
 Q_KO19 :                      0A2B C |  Q_KO2 :                        99C C |
 Q_KO20 :                      0A31 C |  Q_KO21 :                      0A37 C |
 Q_KO27 :                      0A68 C |  Q_KO3 :                        9A2 C |
 Q_KO4 :                        9A5 C |  Q_KO7 :                        9C9 C |
 Q_KO8 :                        9DC C |  Q_KO9 :                        9DD C |
 RAM :                         1800 - |  RAMEND :                     0FFFF - |
 RAMTST :                      0ACE C |  REGA :                         1A5 C |
 REGAF :                       1869 C |  REGAFX :                      1861 C |
*REGBC :                       186B C | *REGBCX :                      1863 C |
*REGDE :                       186D C | *REGDEX :                      1865 C |
 REGH :                         1BC C |  REGH1 :                        1D1 C |
 REGHL :                       186F C | *REGHLX :                      1867 C |
*REGIX :                       1871 C | *REGIY :                       1873 C |
 REGPC :                       1875 C |  REGSP :                       1877 C |
 REGTAB1 :                      592 C |  REGTAB2 :                      59A C |
 REGTAB3 :                      5AA C | *RELAXED :                        0 - |
 REPEAT :                      1824 C |  RINCH :                        0A5 C |
 RINCH1 :                       0B3 C |  RINCH2 :                       0BD C |
 RINCH3 :                       0C1 C |  RINCH4 :                       0C3 C |
 RINCH5 :                       0CA C |  RKA1 :                         5CE C |
 RKA2 :                         5E3 C | *RKA3 :                         5EF C |
 RKA4 :                         5F3 C |  RKA5 :                         5F9 C |
 RKA6 :                         603 C | *RKA7 :                         60B C |
 RKO1 :                         63D C |  RKO2 :                         64C C |
 RKO3 :                         659 C |  RKO4 :                         665 C |
 RKO5 :                         672 C |  RKO6 :                         673 C |
 RKO7 :                         67E C |  ROM :                            0 - |
 ROUTCH :                        13 C |  ROUTCH0 :                     0E43 C |
 ROUTCH1 :                     0EF3 C |  ROUTCH2 :                     0EFA C |
 ROUTCH3 :                     0F06 C |  ROUTCH4 :                     0F0A C |
 ROUTCH5 :                     0F1E C |  RPRNST :                      0A8D C |
 RPRNST1 :                     0A8F C |  RSA :                         1861 - |
 RST38 :                        240 C |  RWARM :                         5A C |
 RWARM1 :                        69 C |  RWARM2 :                        6B C |
 SAV1 :                         8FA C |  SAV10 :                        957 C |
 SAV11 :                        95B C |  SAV12 :                        963 C |
 SAV13 :                        967 C |  SAV14 :                        96F C |
 SAV2 :                         908 C |  SAV3 :                         90F C |
 SAV4 :                         91A C |  SAV5 :                         92D C |
 SAV6 :                         92E C |  SAV7 :                         938 C |
 SAV8 :                         944 C |  SAV9 :                         954 C |
*SAVB :                          30 C |  SCROLL :                       3DC C |
 SCROLL1 :                      3E3 C |  SCROLL2 :                      3F6 C |
 SOIL :                        181A C |  STEP :                         75B C |
 STEP1 :                        775 C |  STEP10 :                       807 C |
 STEP11 :                       823 C |  STEP2 :                        77E C |
 STEP3 :                        785 C |  STEP4 :                        78D C |
 STEP5 :                        797 C |  STEP6 :                        7C2 C |
 STEP7 :                        7CF C |  STEP8 :                        7D0 C |
 STEP9 :                        800 C |  STEPEND :                      804 C |
 SUB_2CF :                      2CF C | *SUB_2E0 :                      2E0 C |
*SUB_38 :                        38 C |  SUB_BE1 :                     0BE1 C |
 SUB_D83 :                     0D83 C |  SUB_D86 :                     0D86 C |
*SUB_D89 :                     0D89 C |  SV_RST :                       220 C |
*SV_RSTEND :                    240 C | *SYSRAMEND :                   18F6 - |
 SYSSK :                       1856 C |  TABIO :                       0AD8 C |
 TACOD :                       1822 C | *TAST1 :                        29B C |
 TAST2 :                        2A0 C | *TAST3 :                        2AE C |
 TAST4 :                        2BB C |  TAST5 :                        2BD C |
 TAST6 :                        2C3 C |  TAST7 :                        2C5 C |
 TASTE :                       0D4D C |  TBB_AADR :                    1880 C |
 TBB_EADR :                    187E C |  TBH1 :                        0BA5 C |
 TBH2 :                        0BB3 C |  TBH3 :                        0BBA C |
 TBH4 :                        0BC3 C |  TBH5 :                        0BCF C |
 TBH6 :                        0BD4 C |  TBHEADER :                    0B97 C |
 TBH_AADR :                    18B3 C |  TBH_EADR :                    18B1 C |
*TBH_FILENAME :                189E C | *TBH_FILETYP :                 18B0 C |
 TBH_SPECIAL :                 18B5 C | *TBH_TRENNER :                 18AE C |
 TBLOAD :                      0C81 C |  TBLOAD1 :                     0C8D C |
 TBLOAD2 :                     0C99 C |  TBLOAD3 :                     0CAC C |
 TBL_AADR :                    18D3 C |  TBL_EADR :                    18D1 C |
 TBL_FILENAME :                18BE C | *TBL_FILETYP :                 18D0 C |
*TBL_SPECIAL :                 18D5 C | *TBL_TRENNER :                 18CE C |
 TBSAV1 :                      0BFD C |  TBSAV10 :                     0C3E C |
 TBSAV11 :                     0C4E C |  TBSAV12 :                     0C52 C |
 TBSAV13 :                     0C57 C |  TBSAV14 :                     0C59 C |
 TBSAV15 :                     0C5B C |  TBSAV16 :                     0C63 C |
 TBSAV17 :                     0C68 C |  TBSAV18 :                     0C6B C |
 TBSAV19 :                     0C6D C |  TBSAV2 :                      0C0B C |
 TBSAV20 :                     0C76 C |  TBSAV21 :                     0C7A C |
 TBSAV3 :                      0C10 C |  TBSAV4 :                      0C13 C |
 TBSAV5 :                      0C15 C |  TBSAV6 :                      0C21 C |
 TBSAV7 :                      0C23 C |  TBSAV8 :                      0C33 C |
 TBSAV9 :                      0C3A C |  TBSAVE :                      0BF7 C |
 TB_BLKBUF :                   18B6 C |  TB_ERRARR :                   1882 C |
 TB_KOPFBUF :                  1896 C |  TB_LOA10 :                    0CEC C |
 TB_LOA11 :                    0CF9 C |  TB_LOA12 :                    0D06 C |
 TB_LOA13 :                    0D09 C |  TB_LOA14 :                    0D32 C |
 TB_LOA15 :                    0D34 C |  TB_LOA16 :                    0D38 C |
 TB_LOA17 :                    0D3B C |  TB_LOA19 :                    0D64 C |
 TB_LOA20 :                    0D67 C |  TB_LOA21 :                    0D6F C |
 TB_LOA22 :                    0D70 C |  TB_LOA23 :                    0D81 C |
 TB_LOA24 :                    0D5A C |  TB_LOA25 :                    0D52 C |
 TB_LOA26 :                    0D7C C |  TB_LOA3 :                     0CBD C |
 TB_LOA5 :                     0CC5 C |  TB_LOA6 :                     0CCA C |
 TB_LOA7 :                     0CD0 C |  TB_LOA8 :                     0CDB C |
 TB_LOA9 :                     0CE7 C | *TIME :                     11:3:40 - |
 TON1 :                         288 C |  TON2 :                         290 C |
*TRUE :                           1 - |  TSTSCH :                      0A7B C |
 TSTSCH1 :                     0A80 C |  TSTSCH2 :                     0A78 C |
 UNK_18F0 :                    18F0 C |  UNK_18F3 :                    18F3 C |
 UPTAST :                       297 C |  UPTON :                        287 C |
 V24HS :                       0F22 C |  V24HS1 :                      0F32 C |
 V24HS2 :                      0F4D C |  V24HS3 :                      0F51 C |
 V24HSIN :                     0F5C C |  V24HSIN1 :                    0F63 C |
 V24HSIN2 :                    0F6A C |  V24HSIN3 :                    0F70 C |
 V24HSIN4 :                    0F73 C | *V24IN :                        1D6 C |
 V24IN0 :                       0D9 C |  V24IN1 :                       0E1 C |
 V24IN2 :                       0E8 C |  V24IN3 :                       0EF C |
 V24IN4 :                       0F6 C |  V24IN5 :                       0F9 C |
 V24OUT :                      0DF9 C |  V24OUT2 :                     0E08 C |
 V24OUT3 :                     0E0E C |  V24OUT4 :                     0E16 C |
 V24OUT5 :                     0E1E C |  V24OUT6 :                     0E24 C |
 V24OUT7 :                     0E2B C |  V24OUT8 :                     0E2C C |
 V24OUT9 :                     0E33 C | *VERSION :                     142F - |
*WARM :                          20 C |  WARMCOD :                     181C C |
 ZK1 :                           31 - |  ZK2 :                           2E - |
 ZKR :                           3F - |

    499 symbols
     70 unused symbols

 AS V1.42 Beta [Bld 157] - Source File mon_v8-fdc-rfl.asm - Page 3 - 1/25/2023 11:3:40


  Defined Functions:
  ------------------

LO                                    | HI                                   

 AS V1.42 Beta [Bld 157] - Source File mon_v8-fdc-rfl.asm - Page 4 - 1/25/2023 11:3:40


  Code Pages:
  ----------

STANDARD (0 changed characters)

1 code page

0.04 seconds assembly time

   3473 lines source file
      2 passes
      0 errors
      0 warnings
