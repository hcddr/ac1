 AS V1.42 Beta [Bld 157] - Source File mon_1088.asm - Page 1 - 1/25/2023 11:3:40


       1/       0 :                     ; File Name   :	d:\hobby3\ac1-2010\monitor\1088\mon_1088.bin
       2/       0 :                     ; Base Address:	0000h Range: 0000h - 1000h Loaded length: 1000h
       3/       0 :                     
       4/       0 :                     		page	0
       5/       0 :                     		cpu	z80undoc
       6/       0 :                     
       7/       0 :                     ;AC1-MONITOR V8 E. Ludwig SCCH, Monitor Version 10/1988
       8/       0 :                     ;reass. Volker Pohlers, Neustadt i.H., 10.01.2023
       9/       0 :                     ;letzte Änderung 23.01.2023 v24
      10/       0 :                     
      11/       0 :                     ;------------------------------------------------------------------------------
      12/       0 :                     ;
      13/       0 :                     ;------------------------------------------------------------------------------
      14/       0 :                     
      15/       0 :                     ; Makros
      16/       0 :                     hi              function x, (x>>8) & 0ffh	; High-Byte
      17/       0 :                     lo              function x, x & 0ffh		; Low-Byte
      18/       0 :                     
      19/       0 :                     ; Speicheraufteilung
      20/       0 : =0H                 ROM		equ	0000h
      21/       0 : =1000H              BWS		equ	1000h		; 2K
      22/       0 : =1800H              RAM		equ	1800h
      23/       0 :                     ; BWS
      24/       0 : =40H                COLS		equ	64		; muss 2er-Potenz sein!
      25/       0 : =20H                LINES		equ	32		; muss 2er-Potenz sein!
      26/       0 :                     
      27/       0 : =17FFH              BWSANF		equ	BWS+LINES*COLS-1	; Adresse Home (links oben)
      28/       0 : =1000H              BWSEND		equ	BWS			; letzte Adresse (rechts unten)
      29/       0 :                     
      30/       0 :                     ; I/O
      31/       0 : =0H                 CTC0		equ	0
      32/       0 : =1H                 CTC1		equ	1
      33/       0 : =2H                 CTC2		equ	2
      34/       0 : =3H                 CTC3		equ	3
      35/       0 : =4H                 PIODA		equ	4		; Tastatur
      36/       0 : =5H                 PIODB		equ	5		; Grafik/Ton
      37/       0 : =6H                 PIOCA		equ	6
      38/       0 : =7H                 PIOCB		equ	7
      39/       0 :                     
      40/       0 :                     ;Belegung PIOA
      41/       0 :                     ;B0..B6 ASCII-Code Zeichen
      42/       0 :                     ;B7 Taste gedrückt
      43/       0 :                     
      44/       0 :                     ;Belegung PIOB
      45/       0 :                     ;B0 Ton-Ausgang
      46/       0 :                     ;B1 Joystick ges. A
      47/       0 :                     ;B2 Grafiktaste
      48/       0 :                     ;B3 Bildschim-Mode
      49/       0 :                     ;B4 frei
      50/       0 :                     ;B5 Start/Stop-Schaltung
      51/       0 :                     ;B6 TB-Interface-Ausgang
      52/       0 :                     ;B7 TB-Interface-Eingang
      53/       0 :                     
      54/       0 : =8H                 PIO2DA		equ	8		; b0..b3 V24, b4..b7 IEC	/ U555 Eprommer
      55/       0 : =9H                 PIO2DB		equ	9		; U555 Eprommer
      56/       0 : =0AH                PIO2CA		equ	0ah
      57/       0 : =0BH                PIO2CB		equ	0bh
      58/       0 :                     
      59/       0 :                     ; PIO 2 / IOSEL2
      60/       0 :                     ; A0 Eingang Daten RxD 			serielle Schnittstelle	
      61/       0 :                     ; A1 Ausgang Daten TxD 			serielle Schnittstelle
      62/       0 :                     ; A2 Eingang empfangsbereit CTS		serielle Schnittstelle
      63/       0 :                     ; A3 Ausgang sendebereit DTR		serielle Schnittstelle
      64/       0 :                     ; A4 SRQ		IEC - Schnittstelle (in CPM + BASIC)
      65/       0 :                     ; A5 ATN		IEC - Schnittstelle (in CPM + BASIC)
      66/       0 :                     ; A6 CLK		IEC - Schnittstelle (in CPM + BASIC)
      67/       0 :                     ; A7 DATA		IEC - Schnittstelle (in CPM + BASIC)
      68/       0 :                     ; Der Eprommer arbeitet mit PIO 2 Port A + B.
      69/       0 :                     
      70/       0 :                     
      71/       0 : =14H                modul1		equ	14h		; Konfigurationsbyte für SCCH-Modul 1
      72/       0 :                     ; Port 14h, OUT-Port
      73/       0 :                     ; 	00 - Modul nicht aktiv
      74/       0 :                     ; 	01 - 8K-ROM "PaketX" E000-FFFF
      75/       0 :                     ; 	02 - 16K-ROM "Basic" 2000-5FFF
      76/       0 :                     ; 	x8 - 512K ROM1 aktiv, jeweils 32K-Bänke, x = 0..F Bank0..Bank15, 8000-FFFF
      77/       0 :                     ; 	x9 - 512K ROM2 aktiv, jeweils 32K-Bänke, x = 0..F Bank0..Bank15, 8000-FFFF
      78/       0 :                     
      79/       0 :                     ;
      80/       0 : =10H                NAMELEN		equ	16		; max. Länge des Dateinamens bei LOAD/SAVE
      81/       0 : =200H               KDOANF		equ	0200h		; Beginn f. Kdo-Suche
      82/       0 : =0FFFFH             RAMEND		equ	0FFFFh		; Ende f. Kdo-Suche, auf RAM beschränkt
      83/       0 :                     
      84/       0 :                     
      85/       0 :                     ;------------------------------------------------------------------------------
      86/       0 :                     ; Reset
      87/       0 :                     ;------------------------------------------------------------------------------
      88/       0 :                     
      89/       0 :                     		org	ROM
      90/       0 : F3                  init:		di
      91/       1 : 31 56 18            		ld	sp, SYSSK	; Stack
      92/       4 : ED 5E               		im	2
      93/       6 : 18 03               		jr	init1
      94/       8 :                     
      95/       8 :                     		org	8
      96/       8 :                     ; RST 8: Eingabekanal, normal Tastatur
      97/       8 : C3 02 18            inch:		jp	jp_rst08	; -> rinch
      98/       B :                     
      99/       B :                     
     100/       B : CD 1D 01            init1:		call    MS30		; ca. 30 ms warten
     101/       E : 18 0B               		jr	init2
     102/      10 :                     
     103/      10 :                     		org	10h
     104/      10 :                     ; RST 10: Ausgabekanal,	normal Bildschirm
     105/      10 : C3 05 18            outch:		jp	jp_rst10	; -> routch
     106/      13 :                     
     107/      13 : E5                  routch:		push	hl
     108/      14 : F5                  		push	af
     109/      15 : C3 F2 0E            		jp	routch0
     110/      18 :                     
     111/      18 :                     		org	18h
     112/      18 :                     ; RST 18: PRNST
     113/      18 : C3 08 18            prnst:		jp	jp_rst18	; -> rprnst
     114/      1B :                     
     115/      1B : 11 00 18            init2:		ld	de, cupos	; Beginn RAM-Arbeitszellen
     116/      1E : 18 1B               		jr	init3
     117/      20 :                     
     118/      20 :                     		org	20h
     119/      20 :                     ; RST 20
     120/      20 : C3 0B 18            		jp	jp_rst20
     121/      23 :                     
     122/      28 :                     		org	28h
     123/      28 :                     ; RST 28
     124/      28 : C3 0E 18            		jp	jp_rst28
     125/      2B :                     
     126/      2B : E5                  co00:		push	hl
     127/      2C : D5                  		push	de
     128/      2D : C3 00 03            		jp	co0
     129/      30 :                     
     130/      30 :                     		org	30h
     131/      30 :                     ; RST 30
     132/      30 : C3 11 18            		jp	jp_rst30
     133/      33 :                     
     134/      33 :                     ; Ausgabe über Bildschirm
     135/      33 : F5                  co:		push	af
     136/      34 : 18 F5               		jr	co00
     137/      36 : FF                  		db 0FFh
     138/      37 : FF                  		db 0FFh
     139/      38 :                     
     140/      38 :                     		org	38h
     141/      38 :                     ; RST 38: Breakpoint, Einsprung bei Einzelschritt
     142/      38 : C3 14 18            sub_38:		jp	jp_rst38	; -> rst38
     143/      3B :                     
     144/      3B :                     
     145/      3B :                     ;------------------------------------------------------------------------------
     146/      3B :                     ; Kaltstart
     147/      3B :                     ; Sprungverteiler initialisieren, RAM löschen
     148/      3B :                     ;------------------------------------------------------------------------------
     149/      3B :                     
     150/      3B : 3E 02               init3:		ld	a, hi(inttab)
     151/      3D : ED 47               		ld	i, a
     152/      3F : 21 D8 0A            		ld	hl, TABIO	; Tabelle Peripherie
     153/      42 : 06 11               		ld	b, 11h
     154/      44 : 4E                  init4:		ld	c, (hl)		; Port
     155/      45 : 23                  		inc	hl
     156/      46 : ED A3               		outi			; Wert ausgeben
     157/      48 : 20 FA               		jr	nz, init4
     158/      4A :                     ;
     159/      4A : EB                  		ex	de, hl		; HL=cupos
     160/      4B : 06 60               		ld	b, 60h		; Arbeitszellen Monitor
     161/      4D : 36 FF               init5:		ld	(hl), 0FFh	; mit FF initialisieren
     162/      4F : 23                  		inc	hl
     163/      50 : 10 FB               		djnz	init5
     164/      52 :                     		; Sprungverteiler initialisieren
     165/      52 : 01 20 00            		ld	bc, sv_rstend-sv_rst		; Länge
     166/      55 : 21 20 02            		ld	hl, sv_rst
     167/      58 : 11 02 18            		ld	de, jp_rst08
     168/      5B : ED B0               		ldir			; umladen
     169/      5D :                     		;
     170/      5D : CD 97 02            		call	UPTAST		; Taste bei Einschalten gedrückt?
     171/      60 : 20 07               		jr	nz, rWarm1
     172/      62 : 18 0A               		jr	init8
     173/      64 :                     		
     174/      64 : FF                  		db 0FFh
     175/      65 : FF                  		db 0FFh
     176/      66 :                     
     177/      66 :                     ;------------------------------------------------------------------------------
     178/      66 :                     ; MNI-Befehl, Programmunterbrechnung, Breakpoint
     179/      66 :                     ;------------------------------------------------------------------------------
     180/      66 :                     
     181/      66 :                     		org	66h
     182/      66 : C3 17 18            		jp	nmi		; -> BREAK
     183/      69 :                     
     184/      69 :                     ;------------------------------------------------------------------------------
     185/      69 :                     ; Taste "X" gedrückt: Sprung in Programmpaket X.
     186/      69 :                     ; sonst Systemmeldung ausgeben
     187/      69 :                     ;------------------------------------------------------------------------------
     188/      69 :                     
     189/      69 : FE 58               rWarm1:		cp	'X'		; 'X' bei Einschalten gedrückt?
     190/      6B : CA 16 01            rWarm2:		jp	z, PROGX	; dann zu "Paket X"
     191/      6E :                     ;
     192/      6E : AF                  init8:		xor	a
     193/      6F : D3 14               		out	(modul1), a	; Modul1 disablen
     194/      71 :                     ;
     195/      71 : DF                  		rst	18h		; PRNST
     196/      72 : 0C 0D 0F 0F 41 43   		db 0Ch,0Dh,0Fh,0Fh,"AC 1 * MONITOR * U880  * (10/88)",0Dh,8Dh
                    20 31 20 2A 20 4D 
                    4F 4E 49 54 4F 52 
                    20 2A 20 55 38 38 
                    30 20 20 2A 20 28 
                    31 30 2F 38 38 29 
                    0D 8D             
     197/      98 : C3 5B 02            		jp	GETCO1
     198/      9B :                     
     199/      9B :                     ;------------------------------------------------------------------------------
     200/      9B :                     ; Tasten-Piep
     201/      9B :                     ;------------------------------------------------------------------------------
     202/      9B :                     
     203/      9B : 71                  PIEP:		ld	(hl), c		; Tasten-Piep
     204/      9C : 01 34 A0            		ld	bc, 0A034h
     205/      9F : CD 87 02            		call	UPTON		; UP "Ton", Reg, B = Tonlaenge, C = Tonhoehe
     206/      A2 :                     ; Ende von rinch
     207/      A2 : C1                  ENDE8:		pop	bc
     208/      A3 : E1                  		pop	hl
     209/      A4 : C9                  		ret
     210/      A5 :                     
     211/      A5 :                     ;------------------------------------------------------------------------------
     212/      A5 :                     ; Einsprungpunkt fuer RST 08H
     213/      A5 :                     ; Eingabekanal auswerten
     214/      A5 :                     ; iobyt
     215/      A5 :                     ; Eingabe: b0 Tastatur, b1 V24 (Rs 232c), b2 Reserve, b3 User
     216/      A5 :                     ;------------------------------------------------------------------------------
     217/      A5 :                     
     218/      A5 : E5                  rinch:		push	hl		; UP "Eingabekanal"
     219/      A6 : C5                  		push	bc
     220/      A7 : 3A 21 18            		ld	a, (IOBYT)	; Ein/Ausgabebyte
     221/      AA : 0F                  		rrca			; b0 gesetzt?
     222/      AB : 30 29               		jr	nc, NOTAST	; nein, anderes Eingabegeraet (keine Tastatur)
     223/      AD :                     
     224/      AD :                     ; Eingabe von Tastatur		
     225/      AD : 21 57 18            		ld	hl, repeat
     226/      B0 : 46                  		ld	b, (hl)
     227/      B1 : 36 18               		ld	(hl), 18h
     228/      B3 : CD 97 02            rinch1:		call	UPTAST
     229/      B6 : 28 05               		jr	z, rinch2	; keine Taste gedrückt
     230/      B8 : 05                  		dec	b
     231/      B9 : 20 F8               		jr	nz, rinch1
     232/      BB : 36 01               		ld	(hl), 1
     233/      BD : 2A 00 18            rinch2:		ld	hl, (cupos)	; Zwischenspeicher Kursor
     234/      C0 : 4E                  		ld	c, (hl)		; Zeichen merken
     235/      C1 : 36 7F               rinch3:		ld	(hl), 7Fh	; Cursorsymbol anzeigen
     236/      C3 : CD 97 02            rinch4:		call	UPTAST
     237/      C6 :                     ; Taste gedrückt? dann Piep und ENDE8
     238/      C6 : 20 D3               		jr	nz, PIEP	; Tasten-Piep
     239/      C8 :                     ; sonst kurz warten
     240/      C8 : 3E 48               		ld	a, 48h
     241/      CA : 3D                  rinch5:		dec	a
     242/      CB : 20 FD               		jr	nz, rinch5
     243/      CD : 10 F4               		djnz	rinch4
     244/      CF :                     ; und Cursor toggeln
     245/      CF : 79                  		ld	a, c
     246/      D0 : BE                  		cp	(hl)		; ist Zeichen zu sehen?
     247/      D1 : 28 EE               		jr	z, rinch3	; dann Cursorsymbol anzeigen
     248/      D3 : 71                  		ld	(hl), c		; sonst Zeichen wieder anzeigen
     249/      D4 : 18 ED               		jr	rinch4
     250/      D6 :                     
     251/      D6 :                     ;------------------------------------------------------------------------------
     252/      D6 :                     ; Eingabe von V24 (RS232)
     253/      D6 :                     ;------------------------------------------------------------------------------
     254/      D6 :                     
     255/      D6 : 0F                  NOTAST:		rrca			; IOBYT b1 gesetzt?
     256/      D7 : 30 33               		jr	nc, NOV24	; nein, anderes Eingabegeraet (kein V.24)
     257/      D9 :                     
     258/      D9 :                     ; Eingabe von V24 (RS232)
     259/      D9 : 3A 20 18            v24in0:		ld	a, (kdov24)	; Kommandocode V 24
     260/      DC : E6 07               		and	7		; Baudrate
     261/      DE : 47                  		ld	b, a
     262/      DF : 3E 01               		ld	a, 1
     263/      E1 : 87                  v24in1:		add	a, a
     264/      E2 : 10 FD               		djnz	v24in1
     265/      E4 : 67                  		ld	h, a		; Baudratenzähler h=2^b
     266/      E5 :                     					; b=1,h=2 19200 Baud, 
     267/      E5 :                     					; b=2, h=4 9600 Baud
     268/      E5 :                     					; .. b=7, h=128 300 Baud 
     269/      E5 : AF                  		xor	a		; alles 0
     270/      E6 : D3 08               		out	(PIO2DA), a	; DTR=0,CTS=0,TxD=0,RxD=0
     271/      E8 : DB 08               v24in2:		in	a, (PIO2DA)	; Pegel am Datenport abfragen
     272/      EA : E6 01               		and	1		; nur RxD zulassen (Bits 7-1 ausblenden)
     273/      EC : 20 FA               		jr	nz, v24in2	; Dateneingang war L warten auf H-Pegel
     274/      EE : 44                  		ld	b, h		; Zeitkonstante nach B
     275/      EF : ED 5F               v24in3:		ld	a, r		; xx Takte
     276/      F1 : 7F                  		ld	a, a		; xx Takte
     277/      F2 : 10 FB               		djnz	v24in3		; warten
     278/      F4 : 06 0A               		ld	b, 10		; 10 Bits empfangen (Start - 8Bit - Stop)
     279/      F6 : 6C                  v24in4:		ld	l, h		; Baudrate
     280/      F7 : CB 19               		rr	c		; gelesenes CarryBit ins Bit 7 schieben
     281/      F9 : E5                  v24in5:		push	hl		; xx Takte
     282/      FA : E1                  		pop	hl		; xx Takte
     283/      FB : 7F                  		ld	a, a		; xx Takte
     284/      FC : 2D                  		dec	l		; 
     285/      FD : DB 08               		in	a, (PIO2DA)	; Pegelabfrage
     286/      FF : 20 F8               		jr	nz, v24in5
     287/     101 : 1F                  		rra			; Bit0=RxD ins Carry schieben
     288/     102 : 10 F2               		djnz	v24in4		; weiter bis alle Bits durch
     289/     104 : 3E 0A               		ld	a, 0Ah		; DTR=1,CTS=0,TxD=1,RxD=0
     290/     106 : D3 08               		out	(PIO2DA), a	; Bereitschaftsbits setzen
     291/     108 : 79                  		ld	a, c		; gelesenes Byte in A umladen
     292/     109 : 18 97               		jr	ENDE8		; Ende von rinch
     293/     10B :                     
     294/     10B : FF                  		db	0FFh
     295/     10C :                     		
     296/     10C :                     ;------------------------------------------------------------------------------
     297/     10C :                     ; anderes Eingabegeraet	(kein V.24)
     298/     10C :                     ;------------------------------------------------------------------------------
     299/     10C :                     
     300/     10C : 0F                  NOV24:		rrca			; b2 gesetzt ?
     301/     10D : DC FF FF            		call	c, 0FFFFh	; Reserve --> nicht belegt --> Fehlermeldung
     302/     110 : 0F                  		rrca			; b3 gesetzt ?
     303/     111 : DC F0 18            		call	c, unk_18F0	; User-Eingabe
     304/     114 : 18 8C               		jr	ENDE8
     305/     116 :                     
     306/     116 :                     ;------------------------------------------------------------------------------
     307/     116 :                     ; Start vom Programmpaket X
     308/     116 :                     ;------------------------------------------------------------------------------
     309/     116 :                     
     310/     116 : 3E 01               PROGX:		ld	a, 1
     311/     118 : D3 14               		out	(modul1), a	; Modul1 ROM "PaketX" aktivieren
     312/     11A : C3 00 E0            		jp	0E000h		; und starten
     313/     11D :                     
     314/     11D :                     ;------------------------------------------------------------------------------
     315/     11D :                     ; ca. 30 ms warten
     316/     11D :                     ;------------------------------------------------------------------------------
     317/     11D :                     
     318/     11D : C5                  MS30:		push	bc
     319/     11E : 01 03 09            		ld	bc, 903h	; Zeitkonstante	fuer 30ms, ; B = 9, C = 3
     320/     121 : 0B                  ms301:		dec	bc
     321/     122 : 78                  		ld	a, b
     322/     123 : B1                  		or	c
     323/     124 : 20 FB               		jr	nz, ms301
     324/     126 : C1                  		pop	bc
     325/     127 : C9                  		ret
     326/     128 :                     		
     327/     128 :                     ;------------------------------------------------------------------------------
     328/     128 :                     ; Zeile	eingeben
     329/     128 :                     ; liest eine Zeile, die mit cr abgeschlossen wird, auf dem Schirm ein und
     330/     128 :                     ; legt den Anfang der Zeile in SOIL ab
     331/     128 :                     ; kein Register wird zerstört
     332/     128 :                     ;------------------------------------------------------------------------------
     333/     128 :                     
     334/     128 : F5                  INLINE:		push	af
     335/     129 : E5                  		push	hl
     336/     12A : DF                  		rst	18h		; PRNST
     337/     12B : 20 23 A0            aA:		db " #",' '+80h		; Prompt
     338/     12E : 00                  		nop
     339/     12F : CF                  inlin1:		rst	8		; INCH
     340/     130 : 2A 00 18            		ld	hl, (cupos)	; Zwischenspeicher Kursor
     341/     133 : D7                  		rst	10h		; OUTCH
     342/     134 : FE 0D               		cp	0Dh		; Enter?
     343/     136 : 20 F7               		jr	nz, inlin1	; nein --> weiter eingeben
     344/     138 :                     ; Zeilenanfang ermitteln
     345/     138 : 3E 23               		ld	a, '#'
     346/     13A : 23                  inlin2:		inc	hl		; ein zeichen zurück
     347/     13B : BE                  		cp	(hl)		; zeilenanfang?
     348/     13C : 20 FC               		jr	nz, inlin2	; nein
     349/     13E : 2B                  		dec	hl		; das '#'
     350/     13F : 2B                  		dec	hl		; Leerzeichen davor
     351/     140 : 22 1A 18            		ld	(soil),	hl	; erstes Zeichen der Zeile
     352/     143 : E1                  		pop	hl
     353/     144 : F1                  		pop	af
     354/     145 : C9                  		ret
     355/     146 :                     
     356/     146 :                     ;------------------------------------------------------------------------------
     357/     146 :                     ; fuehrende Leerzeichen ueberlesen
     358/     146 :                     ; letzen vier Zeichen als Hexzahl konvertieren
     359/     146 :                     ; und in DATA ablegen
     360/     146 :                     ;------------------------------------------------------------------------------
     361/     146 :                     
     362/     146 : 1A                  konvx:		ld	a, (de)		; UP - Routine zu InHex
     363/     147 : FE 20               		cp	' '		; Leerzeichen
     364/     149 : 1B                  		dec	de
     365/     14A : 28 FA               		jr	z, konvx	; überlesen
     366/     14C :                     ;
     367/     14C : 13                  		inc	de		; erstes Zeichen
     368/     14D : AF                  		xor	a
     369/     14E : 21 58 18            		ld	hl, data	; Hilfsregister
     370/     151 : 77                  		ld	(hl), a
     371/     152 : 23                  		inc	hl
     372/     153 : 77                  		ld	(hl), a
     373/     154 : 23                  		inc	hl
     374/     155 : 77                  		ld	(hl), a		; data=0
     375/     156 : 1A                  konvx2:		ld	a, (de)
     376/     157 : 2B                  		dec	hl
     377/     158 : 2B                  		dec	hl
     378/     159 : D6 30               		sub	30h ; '0'	; Zeichen<"0"?
     379/     15B : F8                  		ret	m
     380/     15C : FE 0A               		cp	0Ah		; Zeichen<="9"?
     381/     15E : 38 08               		jr	c, konvx3
     382/     160 : D6 07               		sub	7
     383/     162 : FE 0A               		cp	0Ah		; Zeichen<"A"?
     384/     164 : F8                  		ret	m
     385/     165 : FE 10               		cp	10h		; Zeichen>"F"?
     386/     167 : F0                  		ret	p
     387/     168 : 1B                  konvx3:		dec	de
     388/     169 : 34                  		inc	(hl)
     389/     16A : 23                  		inc	hl
     390/     16B : ED 6F               		rld			; Hexziffer eintragen
     391/     16D : 23                  		inc	hl
     392/     16E : ED 6F               		rld			; nächste Ziffer
     393/     170 : 18 E4               		jr	konvx2
     394/     172 :                     		
     395/     172 :                     ;------------------------------------------------------------------------------
     396/     172 :                     ; wandelt eine maximal vierstellige in ASCII-Zeichen angegebene Zahl
     397/     172 :                     ; ab (DE) abwärts in deren hexadezimalen Wert um, der dann in HL steht.
     398/     172 :                     ; DE wird entsprechend dekrementiert, der Akku wird zerstört
     399/     172 :                     ;------------------------------------------------------------------------------
     400/     172 :                     
     401/     172 : C5                  INHEX:		push	bc
     402/     173 : F5                  		push	af
     403/     174 : CD 46 01            		call	konvx		; Konvertierung
     404/     177 : 23                  		inc	hl
     405/     178 : 44                  		ld	b, h		; BC=HL=DATA+1
     406/     179 : 4D                  		ld	c, l
     407/     17A : 6E                  		ld	l, (hl)		; unteres Byte
     408/     17B : 03                  		inc	bc
     409/     17C : 0A                  		ld	a, (bc)
     410/     17D : 67                  		ld	h, a		; oberes Byte
     411/     17E : C1                  		pop	bc
     412/     17F : B5                  		or	l		; Z-Flag setzen
     413/     180 : 78                  		ld	a, b
     414/     181 : C1                  		pop	bc
     415/     182 : C9                  		ret
     416/     183 :                     		
     417/     183 :                     ;------------------------------------------------------------------------------
     418/     183 :                     ; Ausgabe (A) hexadezimal
     419/     183 :                     ; gibt den Akku als zweistellige Hexzahl auf dem Schirm aus,
     420/     183 :                     ; kein Register wird zerstört
     421/     183 :                     ;------------------------------------------------------------------------------
     422/     183 :                     
     423/     183 : F5                  OUTHEX:		push	af
     424/     184 : 1F                  		rra
     425/     185 : 1F                  		rra
     426/     186 : 1F                  		rra
     427/     187 : 1F                  		rra
     428/     188 : CD 8C 01            		call	OUTHEX1		; obere Tetrade ausgeben
     429/     18B : F1                  		pop	af		; und die unter
     430/     18C : F5                  OUTHEX1:	push	af
     431/     18D : E6 0F               		and	0Fh
     432/     18F : C6 30               		add	a, '0'		; Konvertierung --> ASCII
     433/     191 : FE 3A               		cp	':'		; Ziffer "A" ... "F"?
     434/     193 : 38 02               		jr	c, OUTHEX2	; nein
     435/     195 : C6 07               		add	a, 7		; sonst Korrektur
     436/     197 : D7                  OUTHEX2:	rst	10h		; OUTCH ; und Ausgabe
     437/     198 : F1                  		pop	af
     438/     199 : C9                  		ret
     439/     19A :                     		
     440/     19A :                     ;------------------------------------------------------------------------------
     441/     19A :                     ; Ausgabe HL hexadezimal
     442/     19A :                     ; gibt das HL-Register als vierstellige Hexzahl auf dem Schirm aus,
     443/     19A :                     ; kein Register wird zerstört
     444/     19A :                     ;------------------------------------------------------------------------------
     445/     19A :                     
     446/     19A : F5                  OUTHL:		push	af
     447/     19B : 7C                  		ld	a, h
     448/     19C : CD 83 01            		call	OUTHEX		; Ausgabe A hexadezimal
     449/     19F : 7D                  		ld	a, l
     450/     1A0 : CD 83 01            		call	OUTHEX		; Ausgabe A hexadezimal
     451/     1A3 : F1                  		pop	af
     452/     1A4 : C9                  		ret
     453/     1A5 :                     
     454/     1A5 :                     ;------------------------------------------------------------------------------
     455/     1A5 :                     ; Register im Registerrettebereich ablegen/auslesen
     456/     1A5 :                     ; (RSA = register save area)
     457/     1A5 :                     ;------------------------------------------------------------------------------
     458/     1A5 :                     
     459/     1A5 : ED 73 58 18         REGA:		ld	(data),	sp
     460/     1A9 : 31 75 18            		ld	sp, REGPC
     461/     1AC : FD E5               		push	iy
     462/     1AE : DD E5               		push	ix
     463/     1B0 : E5                  		push	hl
     464/     1B1 : D5                  		push	de
     465/     1B2 : C5                  		push	bc
     466/     1B3 : F5                  		push	af
     467/     1B4 : D9                  		exx
     468/     1B5 : 08                  		ex	af, af'
     469/     1B6 : E5                  		push	hl
     470/     1B7 : D5                  		push	de
     471/     1B8 : C5                  		push	bc
     472/     1B9 : F5                  		push	af
     473/     1BA : 18 15               		jr	regh1
     474/     1BC :                     
     475/     1BC :                     ; Register aus Registerrettebereich holen
     476/     1BC : ED 73 58 18         REGH:		ld	(data),	sp
     477/     1C0 : 31 61 18            		ld	sp, RSA
     478/     1C3 : F1                  		pop	af
     479/     1C4 : C1                  		pop	bc
     480/     1C5 : D1                  		pop	de
     481/     1C6 : E1                  		pop	hl
     482/     1C7 : D9                  		exx
     483/     1C8 : 08                  		ex	af, af'
     484/     1C9 : F1                  		pop	af
     485/     1CA : C1                  		pop	bc
     486/     1CB : D1                  		pop	de
     487/     1CC : E1                  		pop	hl
     488/     1CD : DD E1               		pop	ix
     489/     1CF : FD E1               		pop	iy
     490/     1D1 : ED 7B 58 18         regh1:		ld	sp, (data)
     491/     1D5 : C9                  		ret
     492/     1D6 :                     
     493/     1D6 :                     ;------------------------------------------------------------------------------
     494/     1D6 :                     ; V24 -	Eingabe 
     495/     1D6 :                     ; (für externe Nutzung)
     496/     1D6 :                     ;------------------------------------------------------------------------------
     497/     1D6 :                     
     498/     1D6 : E5                  V24IN:		push	hl
     499/     1D7 : C5                  		push	bc
     500/     1D8 : C3 D9 00            		jp	v24in0
     501/     1DB :                     
     502/     1DB :                     ;------------------------------------------------------------------------------
     503/     1DB :                     ; Kommandoschleife
     504/     1DB :                     ;
     505/     1DB :                     ; Suchen des Kommandos
     506/     1DB :                     ; wenn ':' folgt, dann alte Parameter nehmen
     507/     1DB :                     ; sonst 3 Parameter einlesen und in ARG1..ARG3 ablegen
     508/     1DB :                     ; bei Kdo-Start gilt
     509/     1DB :                     ; 	BC = Return-Adr
     510/     1DB :                     ; 	DE zeigt auf ':' oder auf Leezeichen hinter letzem Parameter
     511/     1DB :                     ; 	HL = Kdo-Adr
     512/     1DB :                     ;------------------------------------------------------------------------------
     513/     1DB :                     
     514/     1DB : DF                  kdoerr:		rst	18h
     515/     1DC : 20 BF               		db ' ','?'+80h
     516/     1DE :                     
     517/     1DE :                     ;Eingang Kommandomodus
     518/     1DE : CD 28 01            kdo1:		call	INLINE		; Zeile eingeben
     519/     1E1 : 21 00 02            		ld	hl, KDOANF	; erste Adr, aber der Kdo zu suchen sind
     520/     1E4 : 01 00 FE            		ld	bc, RAMEND-KDOANF+1	; Anzahl (RAM-Ende-Startpos.)
     521/     1E7 : AF                  kdo2:		xor	a		; 00
     522/     1E8 : ED B1               		cpir			; suche 00
     523/     1EA : E2 DB 01            		jp	po, kdoerr
     524/     1ED : 3E 09               		ld	a, 9		; 09
     525/     1EF : BE                  		cp	(hl)		; folgt 09?
     526/     1F0 : 20 F5               		jr	nz, kdo2
     527/     1F2 : 23                  		inc	hl
     528/     1F3 : ED 5B 1A 18         		ld	de, (soil)	; Zwischenspeicher "Inline"
     529/     1F7 : 1A                  		ld	a, (de)		; KDO
     530/     1F8 : BE                  		cp	(hl)		; folgt Kommandbuchstabe?
     531/     1F9 : 20 EC               		jr	nz, kdo2
     532/     1FB : 23                  		inc	hl
     533/     1FC : 3E 0D               		ld	a, 0Dh		; 0d
     534/     1FE : BE                  		cp	(hl)		; folgt 0D?
     535/     1FF : 20 E6               		jr	nz, kdo2	; falsches Kdo
     536/     201 :                     ;
     537/     201 : 01 DE 01            		ld	bc, kdo1	; Returnadr. auf Stack
     538/     204 : C5                  		push	bc
     539/     205 : 23                  		inc	hl
     540/     206 : E5                  		push	hl
     541/     207 :                     ; Parameter
     542/     207 : 1B                  		dec	de
     543/     208 : CD 72 01            		call	INHEX		; 1. Argument
     544/     20B : 1A                  		ld	a, (de)
     545/     20C : FE 3A               		cp	':'		; die alten Werte nehmen ?
     546/     20E : 28 0F               		jr	z, kdo4
     547/     210 : 22 5B 18            		ld	(ARG1),	hl	; Argument 1
     548/     213 : CD 72 01            		call	INHEX
     549/     216 : 22 5D 18            		ld	(ARG2),	hl	; Argument 2
     550/     219 : CD 72 01            		call	INHEX
     551/     21C : 22 5F 18            		ld	(ARG3),	hl	; Argument 3
     552/     21F : C9                  kdo4:		ret
     553/     220 :                     
     554/     220 :                     ;------------------------------------------------------------------------------
     555/     220 :                     ; init. Sprungverteiler für RST-Aufrufe, NMI und Init.
     556/     220 :                     ; RST xx springt in den RAM. von dort geht es normalerweise zu den Monitor-
     557/     220 :                     ; Routinen, aber man kann auch eigene Ein-/Ausgaberoutinen nehmen
     558/     220 :                     ;
     559/     220 :                     ; bei Systemstart werden 32 Bytes nach Adresse 1802H kopiert
     560/     220 :                     ; Tabelle RST, NMI, Hilfsregister, V24, I/O (Voreinstellung)
     561/     220 :                     ;------------------------------------------------------------------------------
     562/     220 :                     
     563/     220 :                     		; org 220h
     564/     220 :                     
     565/     220 : C3 A5 00            sv_rst:		jp	rinch		; RST 08
     566/     223 : C3 13 00            		jp	routch		; RST 10
     567/     226 : C3 8D 0A            		jp	rprnst		; RST 18
     568/     229 : C3 FF FF            		jp	0FFFFH		; RST 20 frei
     569/     22C : C3 FF FF            		jp	0FFFFH		; RST 28 frei
     570/     22F : C3 FF FF            		jp	0FFFFH		; RST 30 frei
     571/     232 : C3 40 02            loc_232:	jp	BREAK		; RST 38 Breakpoint
     572/     235 : C3 40 02            		jp	BREAK		; NMI: Breakpoint
     573/     238 : FF FF               		db 0FFh, 0FFh		; soil
     574/     23A : 53 43 48            aSch:		db "SCH"		; 181C
     575/     23D : AF                  		db 0AFh			; 181F ??
     576/     23E : 02                  		db    2			; 1820 Kommandocode V 24 (Adresse 1820H)
     577/     23F : 11                  		db  11h			; Ein/Ausgabebyte (Adresse 1821H)
     578/     240 :                     sv_rstend:
     579/     240 :                     
     580/     240 :                     ;------------------------------------------------------------------------------
     581/     240 :                     ; Einsprung Breakpoint und NMI, Register werden in die RSA gerettet, 
     582/     240 :                     ; I/O und PIO werden auf Standard gesetzt
     583/     240 :                     ;------------------------------------------------------------------------------
     584/     240 :                     
     585/     240 :                     ; Breakpoint
     586/     240 : CD A5 01            BREAK:		call	REGA		; Register sichern
     587/     243 : E1                  		pop	hl		; Returnadr nach Break
     588/     244 : 2B                  		dec	hl		; ein Byte zurück (norm. RST 38)
     589/     245 : 22 75 18            		ld	(REGPC), hl	; merken
     590/     248 : ED 73 77 18         break1:		ld	(REGSP), sp
     591/     24C : 31 56 18            		ld	sp, SYSSK	; Stack
     592/     24F : 3E 11               		ld	a, 11h		; Standard Console
     593/     251 : 32 21 18            		ld	(IOBYT), a	; Ein/Ausgabebyte
     594/     254 : DF                  		rst	18h		; PRNST
     595/     255 : 20 42 52 45 41 CB   aBrea:		db " BREA",'K'+80h
     596/     25B :                     ;
     597/     25B :                     
     598/     25B :                     ;------------------------------------------------------------------------------
     599/     25B :                     ; Einsprung in zentrale Kommandoschleife, aus Sprungverteiler
     600/     25B :                     ; RETN funktioniert dann wie normales RET
     601/     25B :                     ;------------------------------------------------------------------------------
     602/     25B :                     
     603/     25B : 31 56 18            GETCO1:		ld	sp, SYSSK
     604/     25E : 3E DA               		ld	a, 0DAh		; PIO auf Standard setzen
     605/     260 : D3 05               		out	(PIODB), a
     606/     262 : 21 DE 01            		ld	hl, kdo1	; Kommandoschleife
     607/     265 : E5                  		push	hl		; auf Stack
     608/     266 : ED 45               		retn			; und anspringen
     609/     268 :                     
     610/     268 :                     ;------------------------------------------------------------------------------
     611/     268 :                     ; Ausgabe "Error"
     612/     268 :                     ;------------------------------------------------------------------------------
     613/     268 :                     
     614/     268 : DF                  error:		rst	18h		; PRNST
     615/     269 : 20 20 45 52 52 4F   		db "  ERROR",0A0h
                    52 A0             
     616/     271 : C9                  		ret
     617/     272 :                     
     618/     272 :                     ;------------------------------------------------------------------------------
     619/     272 :                     ; UP "akustisches Signal"
     620/     272 :                     ;------------------------------------------------------------------------------
     621/     272 :                     
     622/     272 : C5                  beep:		push	bc
     623/     273 : 06 02               		ld	b, 2
     624/     275 : C5                  beep1:		push	bc
     625/     276 : 01 40 00            		ld	bc, 0040h	; 
     626/     279 : CD 87 02            		call	UPTON		; UP "Ton", Reg, B = Tonlaenge, C = Tonhoehe
     627/     27C : 01 32 F0            		ld	bc, 0F032h
     628/     27F : CD 87 02            		call	UPTON		; UP "Ton", Reg, B = Tonlaenge, C = Tonhoehe
     629/     282 : C1                  		pop	bc
     630/     283 : 10 F0               		djnz	beep1
     631/     285 : C1                  		pop	bc
     632/     286 : C9                  		ret
     633/     287 :                     
     634/     287 :                     ;------------------------------------------------------------------------------
     635/     287 :                     ; UP "Ton", Reg, B = Tonlaenge, C = Tonhoehe
     636/     287 :                     ;------------------------------------------------------------------------------
     637/     287 :                     
     638/     287 : F5                  UPTON:		push	af
     639/     288 : DB 05               ton1:		in	a, (PIODB)
     640/     28A : 1F                  		rra
     641/     28B : 3F                  		ccf
     642/     28C : 17                  		rla
     643/     28D : D3 05               		out	(PIODB), a
     644/     28F : 79                  		ld	a, c
     645/     290 : 3D                  ton2:		dec	a
     646/     291 : 20 FD               		jr	nz, ton2
     647/     293 : 10 F3               		djnz	ton1
     648/     295 : F1                  		pop	af
     649/     296 : C9                  		ret
     650/     297 :                     		
     651/     297 :                     ;------------------------------------------------------------------------------
     652/     297 :                     ;UP "Taste", testet Tastaturtatus, kehrt bei gedrückter Taste
     653/     297 :                     ;nach 18 ms mit dem Kode zum Akku zurück, keine Taste-Rückkehr mit
     654/     297 :                     ;gesetztem Z-Flag und A=0, Code steht in $1822
     655/     297 :                     ;------------------------------------------------------------------------------
     656/     297 :                     
     657/     297 : C5                  UPTAST:		push	bc
     658/     298 : CD C3 02            		call	tast6		; Taste gedrückt?
     659/     29B : 28 20               tast1:		jr	z, tast5	; nein
     660/     29D : 06 0C               		ld	b, 12		; 12x Kontrollesen, Wartezeit
     661/     29F : 4F                  		ld	c, a		; Tastenwert
     662/     2A0 : CD C3 02            tast2:		call	tast6
     663/     2A3 : B9                  		cp	c		; noch dieselbe Taste?
     664/     2A4 : 20 17               		jr	nz, tast5
     665/     2A6 : 10 F8               		djnz	tast2
     666/     2A8 : FE FF               		cp	0FFh		; in Patches 21h
     667/     2AA : 38 0F               		jr	c, tast4	; sprung wenn a < 0ffh (21h, d.h. Steuerzeichen)
     668/     2AC :                     					; daher patch auf 21h, so dass für
     669/     2AC :                     					; ASCII-zeichen der Grafik-Offs. funktioniert
     670/     2AC : DB 05               		in	a, (PIODB)
     671/     2AE : CB 57               tast3:		bit	2, a		; Grafiktaste ?
     672/     2B0 : 79                  		ld	a, c
     673/     2B1 : 20 08               		jr	nz, tast4	; nein
     674/     2B3 : C6 80               		add	a, 80h		; sonst Grafik-Offset dazu
     675/     2B5 : FE E0               		cp	0E0h
     676/     2B7 : 38 02               		jr	c, tast4
     677/     2B9 : D6 60               		sub	60h
     678/     2BB : 04                  tast4:		inc	b		; ??
     679/     2BC : 06                  		db  06h			; --> ld b,xx; überspringt XOR A
     680/     2BD : AF                  tast5:		xor	a
     681/     2BE : C1                  		pop	bc
     682/     2BF : 32 22 18            		ld	(tacod), a	; Tastencode der zuletzt gedrückten Taste
     683/     2C2 : C9                  		ret
     684/     2C3 :                     
     685/     2C3 :                     ; Test Taste gedrückt?
     686/     2C3 : 3E 48               tast6:		ld	a, 48h		; kurz warten (Entprellen)
     687/     2C5 : 3D                  tast7:		dec	a
     688/     2C6 : 20 FD               		jr	nz, tast7
     689/     2C8 : DB 04               		in	a, (PIODA)	; Tastenwert
     690/     2CA : CB 7F               		bit	7, a		; Taste	gedrückt?
     691/     2CC : CB BF               		res	7, a
     692/     2CE : C9                  		ret
     693/     2CF :                     
     694/     2CF :                     ;------------------------------------------------------------------------------
     695/     2CF :                     ; W xx aa 	Port ausgeben
     696/     2CF :                     ;------------------------------------------------------------------------------
     697/     2CF :                     
     698/     2CF : 00 09 57 0D         		db 0,9,'W',0Dh
     699/     2D3 : CD CA 04            		call	para
     700/     2D6 : 44                  		ld	b, h
     701/     2D7 : 4D                  		ld	c, l
     702/     2D8 : ED 59               		out	(c), e
     703/     2DA : C9                  		ret
     704/     2DB :                     
     705/     2DB : FF                  		db 0FFh
     706/     2DC : FF                  		db 0FFh
     707/     2DD : FF                  		db 0FFh
     708/     2DE : FF                  		db 0FFh
     709/     2DF : FF                  		db 0FFh
     710/     2E0 : FF                  		db 0FFh
     711/     2E1 : FF                  		db 0FFh
     712/     2E2 : FF                  		db 0FFh
     713/     2E3 : FF                  		db 0FFh
     714/     2E4 : FF                  		db 0FFh
     715/     2E5 : FF                  		db 0FFh
     716/     2E6 : FF                  		db 0FFh
     717/     2E7 : FF                  		db 0FFh
     718/     2E8 : FF                  		db 0FFh
     719/     2E9 : FF                  		db 0FFh
     720/     2EA : FF                  		db 0FFh
     721/     2EB : FF                  		db 0FFh
     722/     2EC : FF                  		db 0FFh
     723/     2ED : FF                  		db 0FFh
     724/     2EE : FF                  		db 0FFh
     725/     2EF : FF                  		db 0FFh
     726/     2F0 :                     
     727/     2F0 :                     ;------------------------------------------------------------------------------
     728/     2F0 :                     ; co: 1Ah Umschaltung Zeichensatz
     729/     2F0 :                     ;------------------------------------------------------------------------------
     730/     2F0 :                     
     731/     2F0 : DB 05               o_ZS:		in	a, (PIODB)
     732/     2F2 : EE 08               		xor	8
     733/     2F4 : D3 05               		out	(PIODB), a
     734/     2F6 : 18 36               		jr	o_00
     735/     2F8 :                     		
     736/     2F8 :                     ;------------------------------------------------------------------------------
     737/     2F8 :                     ; Interrupt Tabelle PIO/CTC
     738/     2F8 :                     ;------------------------------------------------------------------------------
     739/     2F8 :                     
     740/     2F8 :                     		align 2
     741/     2F8 :                     
     742/     2F8 : 5B 07               inttab		dw step			; interrupt-Routine CTC0
     743/     2FA : FF FF               		dw 0FFFFh		; interrupt-Routine CTC1
     744/     2FC : FF FF               		dw 0FFFFh		; interrupt-Routine CTC2
     745/     2FE : FF FF               		dw 0FFFFh		; interrupt-Routine CTC3
     746/     300 :                     
     747/     300 :                     ;------------------------------------------------------------------------------
     748/     300 :                     ; Bildschirmtreiber
     749/     300 :                     ; im Sprungverteiler wurde die HI-Adresse eingespart, deshalb müssen alle
     750/     300 :                     ; Steuerzeichenroutinen in derselben Page 03xx liegen! ( hi(cotab),lo(co_fkt) )
     751/     300 :                     ;
     752/     300 :                     ; 017FFH Bildschirmanfang (links oben !!)
     753/     300 :                     ; 01000H Bildschirmende (rechts unten !!)
     754/     300 :                     ; 32 Zeilen a 64 Zeichen
     755/     300 :                     ;
     756/     300 :                     ; Der BWS arbeitet aufgrund der Hardware invers
     757/     300 :                     ; d.h. inc geht ein Zeichen / eine Zeile zurück
     758/     300 :                     ;      dec geht ein Zeichen / eine Zeile vor
     759/     300 :                     ;------------------------------------------------------------------------------
     760/     300 :                     
     761/     300 :                     		; org 300h
     762/     300 : C5                  co0:		push	bc
     763/     301 : ED 5B 00 18         		ld	de, (cupos)	; Zwischenspeicher Kursor
     764/     305 : 21 56 18            		ld	hl, poscnt	; Hilfsregister Kursorpositionierung (CTRL+N)
     765/     308 : FE 10               		cp	10h		; Steuerzeichen?
     766/     30A : 30 0C               		jr	nc, co1		; Sprung, wenn kein Steuerzeichen
     767/     30C : 36 01               		ld	(hl), 1		; poscnt auf 1 setzen
     768/     30E : 01 C7 03            		ld	bc, cotab	; Tabelle f. Steuerzeichen
     769/     311 : 81                  		add	a, c
     770/     312 : 4F                  		ld	c, a
     771/     313 : 0A                  		ld	a, (bc)
     772/     314 : 4F                  		ld	c, a		; bc = hi(cotab),lo(co_fkt)
     773/     315 : C5                  		push	bc		; Adresse Steuerzeichenfkt. auf Stack
     774/     316 : EB                  		ex	de, hl		; hl=cupos, de=poscnt
     775/     317 : C9                  		ret			; und anspringen
     776/     318 :                     
     777/     318 :                     ; einfache Zeichenausgabe
     778/     318 : 35                  co1:		dec	(hl)		; hl=poscnt. ist ctrl-n-Mode aktiv? d.h.
     779/     319 :                     					; sind noch Ziffern zu verarbeiten?
     780/     319 : 20 18               		jr	nz, co5		; poscnt > 1 -> ja, dann dort weiter
     781/     31B : 36 01               co2:		ld	(hl), 1		; sonst wieder poscnt auf 1 setzen
     782/     31D :                     		;
     783/     31D : EB                  		ex	de, hl		; hl=cupos
     784/     31E : FE 1A               		cp	1Ah		; steuerzeichen 1Ah (Umschaltung Zeichensatz)
     785/     320 : 28 CE               		jr	z, o_ZS
     786/     322 : FE 5F               		cp	5Fh		; steuerzeichen 5Fh (rubout)
     787/     324 : 28 37               		jr	z, co8
     788/     326 : 77                  		ld	(hl), a		; sonst Zeichen in BWS schreiben
     789/     327 :                     
     790/     327 :                     ; Kursor nach rechts
     791/     327 : 2B                  o_cur:		dec	hl		; inc. cupos
     792/     328 : CD DC 03            co3:		call	scroll
     793/     32B : 22 00 18            co4:		ld	(cupos), hl	; Zwischenspeicher Kursor
     794/     32E :                     ; co Ende
     795/     32E : C1                  o_00:		pop	bc
     796/     32F : D1                  		pop	de
     797/     330 : E1                  		pop	hl
     798/     331 : F1                  		pop	af
     799/     332 : C9                  		ret
     800/     333 :                     
     801/     333 :                     ; direkte Cursorpositionierung
     802/     333 :                     ; in hl=poscnt Hilfsregister Kursorpositionierung (CTRL+N)
     803/     333 :                     ; de = bwsanf
     804/     333 :                     ; es folgen 4 Ziffern dezimal Zeile 00.31, Spalte 00..63
     805/     333 : FE 30               co5:		cp	'0'		; wenn keine Ziffer
     806/     335 : 38 E4               		jr	c, co2		; dann Abbruch 
     807/     337 : 28 F5               		jr	z, o_00		; '0' übergehen
     808/     339 : FE 3A               		cp	'9'+1		; wenn keine Ziffer
     809/     33B : 30 DE               		jr	nc, co2		; dann Abbruch 
     810/     33D : D6 30               		sub	'0'
     811/     33F : 46                  		ld	b, (hl)		; hl=poscnt
     812/     340 :                     		; offs. berechnen
     813/     340 :                     		; summand ermitteln
     814/     340 : EB                  		ex	de, hl		; hl = bwsanf
     815/     341 : 11 FF FF            		ld	de, -1
     816/     344 : 05                  		dec	b
     817/     345 : 28 0D               		jr	z, co6		; wenn Einerstelle Spalte
     818/     347 : 1E F6               		ld	e, -10
     819/     349 : 05                  		dec	b
     820/     34A : 28 08               		jr	z, co6		; wenn Zehnerstelle Spalte
     821/     34C : 1E C0               		ld	e, -COLS
     822/     34E : 05                  		dec	b
     823/     34F : 28 03               		jr	z, co6		; wenn Einerstelle Zeile
     824/     351 : 11 80 FD            		ld	de, -COLS*10	; sonst wenn Zehner Zeile
     825/     354 : 47                  co6:		ld	b, a		; a (=ziffer) mal
     826/     355 : 19                  co7:		add	hl, de		; aufaddieren
     827/     356 : CD DC 03            		call	scroll
     828/     359 : 10 FA               		djnz	co7
     829/     35B : 18 CE               		jr	co4		; ende
     830/     35D :                     
     831/     35D :                     ; del 7Fh, 5Fh
     832/     35D : 23                  co8:		inc	hl		; ein Zeichen zurück
     833/     35E : CD DC 03            		call	scroll
     834/     361 : 36 20               		ld	(hl), ' '	; Zeichen löschen
     835/     363 : 18 C6               		jr	co4
     836/     365 :                     
     837/     365 :                     ; Bildschirm löschen
     838/     365 : 21 FF 17            o_cls:		ld	hl, BWSANF
     839/     368 : 22 00 18            		ld	(cupos), hl	; Zwischenspeicher Kursor
     840/     36B :                     
     841/     36B :                     ; Bildschirm ab Kursorposition löschen
     842/     36B : 36 20               o_clsc:		ld	(hl), ' '
     843/     36D : 2B                  		dec	hl
     844/     36E : 7C                  		ld	a, h
     845/     36F : FE 0F               		cp	0Fh
     846/     371 : 20 F8               		jr	nz, o_clsc
     847/     373 : 18 B9               		jr	o_00
     848/     375 :                     
     849/     375 :                     ; Zeile ab Kursorposition löschen
     850/     375 : 36 20               o_clln:		ld	(hl), ' '	; aktuelles Zeichen löschen
     851/     377 : 2B                  co9:		dec	hl		; inc cupos
     852/     378 : 36 20               		ld	(hl), ' '	; nächstes  Zeichen löschen
     853/     37A : 3E 3F               		ld	a, COLS-1
     854/     37C : A5                  		and	l		; Zeilenende erreicht?
     855/     37D : 20 F8               		jr	nz, co9		; nein -> weiter
     856/     37F : 18 AD               co10:		jr	o_00
     857/     381 :                     
     858/     381 :                     ; Kursor an den Anfang der Zeile
     859/     381 : 7D                  o_sol:		ld	a, l
     860/     382 : F6 3F               		or	COLS-1		 ; setze auf Zeilenanfang
     861/     384 : 6F                  		ld	l, a
     862/     385 : 18 A4               		jr	co4
     863/     387 :                     
     864/     387 :                     ; BEL, akustisches Signal
     865/     387 : CD 72 02            o_bell:		call	beep
     866/     38A : 18 A2               		jr	o_00
     867/     38C :                     
     868/     38C :                     ; Kursor nach links
     869/     38C : 23                  o_cul:		inc	hl		; dec cupos
     870/     38D : 18 99               		jr	co3
     871/     38F :                     
     872/     38F :                     ; Kursor nach unten
     873/     38F : 11 C0 FF            o_cud:		ld	de, -COLS
     874/     392 : 19                  co11:		add	hl, de
     875/     393 : 18 93               		jr	co3
     876/     395 :                     
     877/     395 :                     ; Kursor nach oben
     878/     395 : 11 40 00            o_cuu:		ld	de, COLS
     879/     398 : 18 F8               		jr	co11
     880/     39A :                     
     881/     39A :                     ; CR, Kursor an Anfang nächster Zeile; Enter
     882/     39A : 7D                  o_cr:		ld	a, l
     883/     39B : E6 C0               		and	0C0h
     884/     39D : 6F                  		ld	l, a
     885/     39E : 18 87               		jr	o_cur
     886/     3A0 :                     
     887/     3A0 :                     ; Kursor direkt positionieren
     888/     3A0 : 3E 05               o_setc:		ld	a, 5
     889/     3A2 : 12                  		ld	(de), a		; de=poscnt Hilfsregister Kursorpositionierung (CTRL+N)
     890/     3A3 :                     		; jetzt Cursor auf BWSANF setzen (f. Berechnung in co5)
     891/     3A3 :                     
     892/     3A3 :                     ; Home, Kursor oben links
     893/     3A3 : 21 FF 17            o_home:		ld	hl, BWSANF
     894/     3A6 : 18 83               		jr	co4
     895/     3A8 :                     
     896/     3A8 :                     ; Delete;	Zeichen	löschen, Zeile rückt nach links
     897/     3A8 : 54                  o_del:		ld	d, h
     898/     3A9 : 5D                  		ld	e, l
     899/     3AA : 2B                  		dec	hl
     900/     3AB : 7D                  co12:		ld	a, l
     901/     3AC : ED A8               		ldd
     902/     3AE : E6 3F               		and	COLS-1
     903/     3B0 : 20 F9               		jr	nz, co12
     904/     3B2 : 13                  		inc	de
     905/     3B3 : 3E 20               co13:		ld	a, ' '
     906/     3B5 : 12                  		ld	(de), a
     907/     3B6 : 18 C7               		jr	co10
     908/     3B8 :                     
     909/     3B8 :                     ; Insert;	Space einfügen,	Zeile rückt nach rechts
     910/     3B8 : 7D                  o_ins:		ld	a, l
     911/     3B9 : E6 C0               		and	0C0h
     912/     3BB : 5F                  		ld	e, a
     913/     3BC : 7D                  		ld	a, l
     914/     3BD : 6B                  		ld	l, e
     915/     3BE : 54                  		ld	d, h
     916/     3BF : 23                  		inc	hl
     917/     3C0 : BB                  co14:		cp	e
     918/     3C1 : 28 F0               		jr	z, co13
     919/     3C3 : ED A0               		ldi
     920/     3C5 : 18 F9               		jr	co14
     921/     3C7 :                     
     922/     3C7 :                     ; Tabelle Steuercodes, lo-teil, hi-teil ist hi(cotab) also, 03xx !
     923/     3C7 : 2E                  cotab:		db lo(o_00)	; 00 keine Funktion
     924/     3C8 : A3                  		db lo(o_home)	; 01 Home, Kursor oben links
     925/     3C9 : 6B                  		db lo(o_clsc)	; 02 Bildschirm ab Kursorposition löschen
     926/     3CA : 75                  		db lo(o_clln)	; 03 Zeile ab Kursorposition löschen
     927/     3CB : A8                  		db lo(o_del)	; 04 Delete; Zeichen löschen, Zeile rückt nach links
     928/     3CC : B8                  		db lo(o_ins)	; 05 Insert; Space einfügen, Zeile rückt nach rechts
     929/     3CD : 81                  		db lo(o_sol)	; 06 Kursor an den Anfang der Zeile
     930/     3CE : 87                  		db lo(o_bell)	; 07 BEL, akustisches Signal
     931/     3CF : 8C                  		db lo(o_cul)	; 08 Kursor nach links
     932/     3D0 : 27                  		db lo(o_cur)	; 09 Kursor nach rechts
     933/     3D1 : 8F                  		db lo(o_cud)	; 0A Kursor nach unten
     934/     3D2 : 95                  		db lo(o_cuu)	; 0B Kursor nach oben
     935/     3D3 : 65                  		db lo(o_cls)	; 0C Bildschirm löschen
     936/     3D4 : 9A                  		db lo(o_cr)	; 0D CR, Kursor an Anfang nächster Zeile; Enter
     937/     3D5 : A0                  		db lo(o_setc)	; 0E Kursor direkt positionieren
     938/     3D6 : D7                  		db lo(o_tab)	; 0F Tabulator 8 Spalten
     939/     3D7 :                     
     940/     3D7 :                     ; Tabulator 8 Spalten
     941/     3D7 : 11 F8 FF            o_tab:		ld	de, -8
     942/     3DA : 18 B6               		jr	co11
     943/     3DC :                     
     944/     3DC :                     ; eine Zeile hochscrollen
     945/     3DC : 7C                  scroll:		ld	a, h
     946/     3DD : FE 18               		cp	hi(BWSANF)+1	; BWS-Ende?
     947/     3DF : 38 02               		jr	c, scroll1
     948/     3E1 : 26 10               		ld	h, Hi(BWSEND)
     949/     3E3 : FE 10               scroll1:	cp	Hi(BWSEND)
     950/     3E5 : D0                  		ret	nc
     951/     3E6 : 7D                  		ld	a, l
     952/     3E7 : D5                  		push	de
     953/     3E8 : C5                  		push	bc
     954/     3E9 : 21 BF 17            		ld	hl, BWSANF-COLS
     955/     3EC : 11 FF 17            		ld	de, BWSANF
     956/     3EF : 01 C0 07            		ld	bc, COLS*(LINES-1)
     957/     3F2 : ED B8               		lddr			; scrollen
     958/     3F4 : EB                  		ex	de, hl
     959/     3F5 : 23                  		inc	hl
     960/     3F6 : 2D                  scroll2:	dec	l
     961/     3F7 : 36 20               		ld	(hl), ' '
     962/     3F9 : 20 FB               		jr	nz, scroll2
     963/     3FB : E6 3F               		and	COLS-1
     964/     3FD : 6F                  		ld	l, a
     965/     3FE : C1                  		pop	bc
     966/     3FF : D1                  		pop	de
     967/     400 : C9                  		ret
     968/     401 :                     
     969/     401 :                     ;------------------------------------------------------------------------------
     970/     401 :                     ; N aaaa bbbb CRC - Prüfsumme
     971/     401 :                     ; n_kdo-1	0Dh ist dec c, wird 2x angesprungen! passiert glücklicherweise nix...
     972/     401 :                     ;------------------------------------------------------------------------------
     973/     401 :                     ; fast crc routine, vgl. Z9001 etc.
     974/     401 :                     
     975/     401 : 00 09 4E 0D         		db 0,9,'N',0Dh
     976/     405 :                     
     977/     405 : CD CA 04            n_kdo:		call	para
     978/     408 : EB                  		ex	de, hl
     979/     409 : 23                  		inc	hl
     980/     40A : AF                  		xor	a
     981/     40B : ED 52               		sbc	hl, de
     982/     40D : 01 FF FF            		ld	bc, 0FFFFh
     983/     410 : 1A                  nko1:		ld	a, (de)
     984/     411 : A8                  		xor	b
     985/     412 : 47                  		ld	b, a
     986/     413 : 0F                  		rrca
     987/     414 : 0F                  		rrca
     988/     415 : 0F                  		rrca
     989/     416 : 0F                  		rrca
     990/     417 : E6 0F               		and	0Fh
     991/     419 : A8                  		xor	b
     992/     41A : 47                  		ld	b, a
     993/     41B : 0F                  		rrca
     994/     41C : 0F                  		rrca
     995/     41D : 0F                  		rrca
     996/     41E : F5                  		push	af
     997/     41F : E6 1F               		and	1Fh
     998/     421 : A9                  		xor	c
     999/     422 : 4F                  		ld	c, a
    1000/     423 : F1                  		pop	af
    1001/     424 : F5                  		push	af
    1002/     425 : 0F                  		rrca
    1003/     426 : E6 F0               		and	0F0h
    1004/     428 : A9                  		xor	c
    1005/     429 : 4F                  		ld	c, a
    1006/     42A : F1                  		pop	af
    1007/     42B : E6 E0               		and	0E0h
    1008/     42D : A8                  		xor	b
    1009/     42E : 41                  		ld	b, c
    1010/     42F : 4F                  		ld	c, a
    1011/     430 : 13                  		inc	de
    1012/     431 : 2B                  		dec	hl
    1013/     432 : 7C                  		ld	a, h
    1014/     433 : B5                  		or	l
    1015/     434 : 20 DA               		jr	nz, nko1
    1016/     436 : C5                  		push	bc
    1017/     437 : DF                  		rst	18h		; PRNST
    1018/     438 : 20 43 52 43 A0      		db " CRC",0A0h
    1019/     43D : E1                  		pop	hl
    1020/     43E : C3 9A 01            		jp	OUTHL		; Ausgabe HL hexadezimal
    1021/     441 :                     
    1022/     441 :                     ;------------------------------------------------------------------------------
    1023/     441 :                     ; UP zu Dump
    1024/     441 :                     ;------------------------------------------------------------------------------
    1025/     441 :                     
    1026/     441 : 41                  loc_441:	ld	b, c
    1027/     442 : 23                  		inc	hl
    1028/     443 : 2B                  loc_443:	dec	hl
    1029/     444 : 10 FD               		djnz	loc_443
    1030/     446 : 22 5D 18            		ld	(ARG2), hl
    1031/     449 : DF                  		rst	18h		; PRNST
    1032/     44A : 06 83               		db    6, 83h		; Zeilenanfang,zeile löschen
    1033/     44C : 06 0C               		ld	b, 0Ch
    1034/     44E : DF                  loc_44E:	rst	18h		; PRNST
    1035/     44F : 89                  		db 89h			; cursor right
    1036/     450 : 10 FC               		djnz	loc_44E
    1037/     452 : CD F1 07            		call	j_OUTHL
    1038/     455 : ED 5B 00 18         		ld	de, (cupos)
    1039/     459 : DF                  		rst	18h		; PRNST
    1040/     45A : 3E A0               		db '>',' '+80h
    1041/     45C : 06 08               		ld	b, 8
    1042/     45E : 7E                  loc_45E:	ld	a, (hl)
    1043/     45F : 23                  		inc	hl
    1044/     460 : DF                  		rst	18h		; PRNST
    1045/     461 : A0                  		db ' '+80h
    1046/     462 : CD EE 07            		call	j_OUTHEX
    1047/     465 : 10 F7               		djnz	loc_45E
    1048/     467 : DF                  		rst	18h		; PRNST
    1049/     468 : 20 20 2A A0         		db "  *",' '+80h
    1050/     46C : 2A 5D 18            		ld	hl, (ARG2)
    1051/     46F : 06 08               		ld	b, 8
    1052/     471 : 7E                  loc_471:	ld	a, (hl)
    1053/     472 : 23                  		inc	hl
    1054/     473 : CD 87 04            		call	sub_487
    1055/     476 : 30 02               		jr	nc, loc_47A
    1056/     478 : 3E 2E               		ld	a, '.'
    1057/     47A : D7                  loc_47A:	rst	10h
    1058/     47B : 10 F4               		djnz	loc_471
    1059/     47D : 22 5B 18            		ld	(ARG1), hl
    1060/     480 : DF                  		rst	18h		; PRNST
    1061/     481 : 20 2A 06 20 86      		db " *",6,' ',86h
    1062/     486 : C9                  		ret
    1063/     487 :                     
    1064/     487 :                     ; Test auf normales ASCII-Zeichen
    1065/     487 : FE 5F               sub_487:	cp	5Fh 		; rubout
    1066/     489 : 28 09               		jr	z, loc_494
    1067/     48B : FE 20               		cp	' '
    1068/     48D : D8                  		ret	c		; wenn Steuerzeichen
    1069/     48E : FE 7F               		cp	7Fh 
    1070/     490 : 30 02               		jr	nc, loc_494	; wenn kein ACSII
    1071/     492 : A7                  loc_492:	and	a
    1072/     493 : C9                  		ret
    1073/     494 : 37                  loc_494:	scf
    1074/     495 : C9                  		ret
    1075/     496 :                     
    1076/     496 :                     ; Test auf Hexziffer
    1077/     496 : FE 47               sub_496:	cp	'F'+1
    1078/     498 : 30 FA               		jr	nc, loc_494
    1079/     49A : FE 30               		cp	'0'
    1080/     49C : D8                  		ret	c
    1081/     49D : FE 3A               		cp	'9'+1
    1082/     49F : 38 F1               		jr	c, loc_492
    1083/     4A1 : FE 41               		cp	'A'
    1084/     4A3 : C9                  		ret
    1085/     4A4 :                     
    1086/     4A4 :                     ; Ausgabe 12 Leerzeichen an Zeilenanfang
    1087/     4A4 : DF                  loc_4A4:	rst	18h		; PRNST
    1088/     4A5 : 86                  		db 86h
    1089/     4A6 : 06 0C               		ld	b, 12
    1090/     4A8 : DF                  loc_4A8:	rst	18h		; PRNST
    1091/     4A9 : A0                  		db 0A0h
    1092/     4AA : 10 FC               		djnz	loc_4A8
    1093/     4AC : C9                  		ret
    1094/     4AD :                     
    1095/     4AD :                     ;
    1096/     4AD : D9                  sub_4AD:	exx
    1097/     4AE : 1A                  		ld	a, (de)
    1098/     4AF : A7                  		and	a
    1099/     4B0 : 28 03               		jr	z, loc_4B5
    1100/     4B2 : FE 02               		cp	2
    1101/     4B4 : 7E                  		ld	a, (hl)
    1102/     4B5 : 13                  loc_4B5:	inc	de
    1103/     4B6 : 23                  		inc	hl
    1104/     4B7 : D9                  		exx
    1105/     4B8 : C9                  		ret
    1106/     4B9 :                     
    1107/     4B9 :                     
    1108/     4B9 : FF                  		db 0FFh
    1109/     4BA : FF                  		db 0FFh
    1110/     4BB : FF                  		db 0FFh
    1111/     4BC : FF                  		db 0FFh
    1112/     4BD : FF                  		db 0FFh
    1113/     4BE : FF                  		db 0FFh
    1114/     4BF : FF                  		db 0FFh
    1115/     4C0 : FF                  		db 0FFh
    1116/     4C1 : FF                  		db 0FFh
    1117/     4C2 : FF                  		db 0FFh
    1118/     4C3 : FF                  		db 0FFh
    1119/     4C4 : FF                  		db 0FFh
    1120/     4C5 : FF                  		db 0FFh
    1121/     4C6 : FF                  		db 0FFh
    1122/     4C7 : FF                  		db 0FFh
    1123/     4C8 : FF                  		db 0FFh
    1124/     4C9 : FF                  		db 0FFh
    1125/     4CA :                     
    1126/     4CA :                     		
    1127/     4CA :                     ;------------------------------------------------------------------------------
    1128/     4CA :                     ; Register mit Argumenten laden, aaaa=HL, bbbb=DE, cccc=BC
    1129/     4CA :                     ;------------------------------------------------------------------------------
    1130/     4CA :                     
    1131/     4CA : 2A 5B 18            para:		ld	hl, (ARG1)	; Argument 1
    1132/     4CD : ED 5B 5D 18         		ld	de, (ARG2)	; Argument 2
    1133/     4D1 : ED 4B 5F 18         		ld	bc, (ARG3)
    1134/     4D5 : C9                  		ret
    1135/     4D6 :                     
    1136/     4D6 : FF                  		db 0FFh
    1137/     4D7 : FF                  		db 0FFh
    1138/     4D8 :                     
    1139/     4D8 :                     ;------------------------------------------------------------------------------
    1140/     4D8 :                     ; P aaaa bbbb cc Pattern
    1141/     4D8 :                     ;------------------------------------------------------------------------------
    1142/     4D8 :                     
    1143/     4D8 : 00 09 50 0D         		db 0,9,'P',0Dh
    1144/     4DC :                     
    1145/     4DC : CD CA 04            		call	para		; Argumente uebergeben
    1146/     4DF : 71                  		ld	(hl), c		; Pattern cc
    1147/     4E0 : E5                  		push	hl
    1148/     4E1 : AF                  		xor	a
    1149/     4E2 : EB                  		ex	de, hl
    1150/     4E3 : ED 52               		sbc	hl, de
    1151/     4E5 : 44                  		ld	b, h
    1152/     4E6 : 4D                  		ld	c, l
    1153/     4E7 : E1                  		pop	hl
    1154/     4E8 : 13                  		inc	de
    1155/     4E9 : ED B0               pko1:		ldir
    1156/     4EB : C9                  		ret
    1157/     4EC :                     
    1158/     4EC :                     ;------------------------------------------------------------------------------
    1159/     4EC :                     ; T aaaa bbbb cccc Transfer
    1160/     4EC :                     ;------------------------------------------------------------------------------
    1161/     4EC :                     
    1162/     4EC : 00 09 54 0D         		db 0,9,'T',0Dh
    1163/     4F0 :                     
    1164/     4F0 : CD CA 04            		call	para		; Argumente uebergeben
    1165/     4F3 : AF                  		xor	a
    1166/     4F4 : E5                  		push	hl
    1167/     4F5 : ED 52               		sbc	hl, de
    1168/     4F7 : E1                  		pop	hl
    1169/     4F8 : 30 EF               		jr	nc, pko1
    1170/     4FA : 09                  		add	hl, bc
    1171/     4FB : EB                  		ex	de, hl
    1172/     4FC : 09                  		add	hl, bc
    1173/     4FD : EB                  		ex	de, hl
    1174/     4FE : 2B                  		dec	hl
    1175/     4FF : 1B                  		dec	de
    1176/     500 : ED B8               		lddr
    1177/     502 : C9                  		ret
    1178/     503 :                     
    1179/     503 :                     ;------------------------------------------------------------------------------
    1180/     503 :                     ; A aaaa bbbb c	Arithmetik Summe, Differenz, Displ., Dezimalwert
    1181/     503 :                     ; c ist	Länge des Sprungbefehls	(für relative Sprungbefehle ist	c gleich zwei)
    1182/     503 :                     ;------------------------------------------------------------------------------
    1183/     503 :                     
    1184/     503 : 00 09 41 0D         		db 0,9,'A',0Dh
    1185/     507 :                     
    1186/     507 : CD CA 04            		call	para		; Argumente uebergeben
    1187/     50A : E5                  		push	hl
    1188/     50B : D5                  		push	de
    1189/     50C : 23                  		inc	hl
    1190/     50D : 23                  		inc	hl
    1191/     50E : EB                  		ex	de, hl
    1192/     50F : AF                  		xor	a
    1193/     510 : ED 52               		sbc	hl, de
    1194/     512 : 38 09               		jr	c, ako1
    1195/     514 : BC                  		cp	h
    1196/     515 : 20 18               		jr	nz, ako3
    1197/     517 : CB 7D               		bit	7, l
    1198/     519 : 20 14               		jr	nz, ako3
    1199/     51B : 18 08               		jr	ako2
    1200/     51D :                     ;
    1201/     51D : 2F                  ako1:		cpl
    1202/     51E : BC                  		cp	h
    1203/     51F : 20 0E               		jr	nz, ako3
    1204/     521 : CB 7D               		bit	7, l
    1205/     523 : 28 0A               		jr	z, ako3
    1206/     525 : DF                  ako2:		rst	18h		; PRNST
    1207/     526 : 44 53 50 4C BA      		db 	"DSPL",':'+80h
    1208/     52B : 7D                  		ld	a, l
    1209/     52C : CD 83 01            		call	OUTHEX		; Ausgabe A hexadezimal
    1210/     52F : D1                  ako3:		pop	de
    1211/     530 : E1                  		pop	hl
    1212/     531 : E5                  		push	hl
    1213/     532 : E5                  		push	hl
    1214/     533 : 19                  		add	hl, de		; Summe
    1215/     534 : DF                  		rst	18h		; PRNST
    1216/     535 : 20 20 20 53 55 4D   		db 	"   SUM",':'+80h
                    BA                
    1217/     53C : CD 9A 01            		call	OUTHL		; Ausgabe HL hexadezimal
    1218/     53F : E1                  		pop	hl
    1219/     540 : ED 52               		sbc	hl, de		; Differenz
    1220/     542 : DF                  		rst	18h		; PRNST
    1221/     543 : 20 20 20 44 49 46   		db 	"   DIF",':'+80h
                    BA                
    1222/     54A : CD 9A 01            		call	OUTHL		; Ausgabe HL hexadezimal
    1223/     54D : C1                  		pop	bc
    1224/     54E :                     ; Hezimalwandlung BC ->	AHL
    1225/     54E : 21 00 00            		ld	hl, 0
    1226/     551 : 5D                  		ld	e, l
    1227/     552 : 78                  ako4:		ld	a, b
    1228/     553 : B1                  		or	c
    1229/     554 : 28 0F               		jr	z, ako5
    1230/     556 : 0B                  		dec	bc
    1231/     557 : 7D                  		ld	a, l
    1232/     558 : 3C                  		inc	a
    1233/     559 : 27                  		daa
    1234/     55A : 6F                  		ld	l, a
    1235/     55B : 7C                  		ld	a, h
    1236/     55C : CE 00               		adc	a, 0
    1237/     55E : 27                  		daa
    1238/     55F : 67                  		ld	h, a
    1239/     560 : 30 F0               		jr	nc, ako4
    1240/     562 : 1C                  		inc	e
    1241/     563 : 18 ED               		jr	ako4
    1242/     565 :                     ;		
    1243/     565 : DF                  ako5:		rst	18h		; PRNST
    1244/     566 : 20 20 20 44 45 43   		db "   DEC",':'+80h
                    BA                
    1245/     56D : 7B                  		ld	a, e
    1246/     56E : E6 0F               		and	0Fh
    1247/     570 : F6 30               		or	30h ; '0'	; 5. Stelle (max 6)
    1248/     572 : D7                  		rst	10h		; OUTCH
    1249/     573 : CD 9A 01            		call	OUTHL		; Ausgabe HL hexadezimal
    1250/     576 : DF                  		rst	18h		; PRNST
    1251/     577 : 8D                  		db	0Dh+80h
    1252/     578 : C9                  		ret
    1253/     579 :                     
    1254/     579 :                     ;------------------------------------------------------------------------------
    1255/     579 :                     ; Registeranzeige und -Modifikation
    1256/     579 :                     ;------------------------------------------------------------------------------
    1257/     579 :                     
    1258/     579 : 4F                  flags:		ld	c, a
    1259/     57A : 21 BE 05            		ld	hl, flagtab	; Liste	der Flag-Kürzel
    1260/     57D : 06 08               		ld	b, 8		; 8 Bit
    1261/     57F : CB 01               flags1:		rlc	c
    1262/     581 : 30 02               		jr	nc, flags2	; wenn Flag gesetzt
    1263/     583 : 7E                  		ld	a, (hl)		; dann dessen Kürzel ausgeben
    1264/     584 : D7                  		rst	10h		; OUTCH
    1265/     585 : 23                  flags2:		inc	hl
    1266/     586 : 10 F7               		djnz	flags1
    1267/     588 : C9                  		ret
    1268/     589 :                     
    1269/     589 :                     ; Ausgabe HL + 4 Leerzeichen
    1270/     589 : CD 9A 01            outhlsp:	call	OUTHL		; Ausgabe HL hexadezimal
    1271/     58C : DF                  out4sp:		rst	18h		; PRNST
    1272/     58D : 20 20 20 A0         		db "   ",' ' +80h
    1273/     591 : C9                  		ret
    1274/     592 :                     
    1275/     592 :                     ; Kürzel f. Register-Edit
    1276/     592 : 41 42 44 48         regtab1:	db  'A','B','D','H'
    1277/     596 : 58 59 43 50         		db  'X','Y','C','P'
    1278/     59A :                     
    1279/     59A :                     ; Registeranzeige. Reihenfolge der Register entspricht der RSA (absteigend)!
    1280/     59A : 20 20 20 20         regtab2:	db "    "
    1281/     59E : 53 50               		db "SP"
    1282/     5A0 : 50 43               		db "PC"
    1283/     5A2 : 49 59               		db "IY"
    1284/     5A4 : 49 58               		db "IX"
    1285/     5A6 :                     		;
    1286/     5A6 : 4D 41 49 4E         		db "MAIN"
    1287/     5AA : 48 4C               regtab3:	db "HL"
    1288/     5AC : 44 45               		db "DE"
    1289/     5AE : 42 43               		db "BC"
    1290/     5B0 : 41 46               		db "AF"
    1291/     5B2 :                     		;
    1292/     5B2 : 45 58 58 52         		db "EXXR"
    1293/     5B6 : 48 4C               		db "HL"
    1294/     5B8 : 44 45               		db "DE"
    1295/     5BA : 42 43               		db "BC"
    1296/     5BC : 41 46               		db "AF"
    1297/     5BE :                     
    1298/     5BE :                     ; Liste	der Flag-Kürzel
    1299/     5BE : 53 5A 00 48 00 50   flagtab:	db  'S', 'Z', 0, 'H', 0, 'P', 'N', 'C'
                    4E 43             
    1300/     5C6 :                     
    1301/     5C6 :                     ;------------------------------------------------------------------------------
    1302/     5C6 :                     ;R XX	Register Registerinhalt verändern
    1303/     5C6 :                     ;R:	Registerinhalte	anzeigen
    1304/     5C6 :                     
    1305/     5C6 :                     ;  BP:FFFF    BS:FFFFFF
    1306/     5C6 :                     ;        SP:FFFF    PC:FFFF    IY:FFFF    IX:FFFF
    1307/     5C6 :                     ;  MAIN  HL:FFFF    DE:FFFF    BC:FFFF    AF:FFFF
    1308/     5C6 :                     ;  EXXR  HL:FFFF    DE:FFFF    BC:FFFF    AF:FFFF
    1309/     5C6 :                     ;  FLAGS:  SZHPNC  (SZHPNC)
    1310/     5C6 :                     ;------------------------------------------------------------------------------
    1311/     5C6 :                     
    1312/     5C6 : 00 09 52 0D         		db 0,9,'R',0Dh
    1313/     5CA :                     
    1314/     5CA : FE 3A               		cp	':'
    1315/     5CC : 20 6F               		jr	nz, rko1
    1316/     5CE :                     ; Register anzeigen
    1317/     5CE :                     rka1:		; BP
    1318/     5CE : DF                  		rst	18h		; PRNST
    1319/     5CF : 20 20 42 50 BA      		db	 "  BP",':'+80h
    1320/     5D4 : 2A 79 18            		ld	hl, (BPADR)
    1321/     5D7 : CD 89 05            		call	outhlsp		; Ausgabe HL + 4 Leerzeichen
    1322/     5DA :                     		; BS
    1323/     5DA : DF                  		rst	18h		; PRNST
    1324/     5DB : 42 53 BA            		db 	"BS",':'+80h
    1325/     5DE : 21 7B 18            		ld	hl, BPOPC	; RSA: Breakpointsequenz
    1326/     5E1 : 06 03               		ld	b, 3		; 3 Byte Code
    1327/     5E3 : 7E                  rka2:		ld	a, (hl)
    1328/     5E4 : CD 83 01            		call	OUTHEX		; Ausgabe A hexadezimal
    1329/     5E7 : 23                  		inc	hl
    1330/     5E8 : 10 F9               		djnz	rka2
    1331/     5EA :                     		; 3 Zeilen a 4 Doppel-Register
    1332/     5EA : 0E 03               		ld	c, 3		; 3 Zeilen
    1333/     5EC : 11 9A 05            		ld	de, regtab2	; "    "
    1334/     5EF : DD 21 78 18         rka3:		ld	ix, REGSP+1	; Werte, lo-Byte von REGSP
    1335/     5F3 : DF                  rka4:		rst	18h		; PRNST
    1336/     5F4 : 0D 20 A0            		db 	0Dh,' ',' '+80h
    1337/     5F7 :                     		; 4 Zeichen Zeilenbezeichnung
    1338/     5F7 : 06 04               		ld	b, 4		
    1339/     5F9 : 1A                  rka5:		ld	a, (de)
    1340/     5FA : D7                  		rst	10h		; OUTCH
    1341/     5FB : 13                  		inc	de
    1342/     5FC : 10 FB               		djnz	rka5
    1343/     5FE : DF                  		rst	18h		; PRNST
    1344/     5FF : 20 A0               		db 	' ',' '+80h
    1345/     601 :                     		; 4 Doppelregister
    1346/     601 : 06 04               		ld	b, 4
    1347/     603 : 1A                  rka6:		ld	a, (de)		; 1. Buchstabe
    1348/     604 : D7                  		rst	10h		; OUTCH
    1349/     605 : 13                  		inc	de
    1350/     606 : 1A                  		ld	a, (de)		; 2. Buchstabe	
    1351/     607 : D7                  		rst	10h		; OUTCH
    1352/     608 : 13                  		inc	de
    1353/     609 : DF                  		rst	18h		; PRNST
    1354/     60A : BA                  		db 	':'+80h
    1355/     60B : DD 66 00            rka7:		ld	h, (ix+0)	; Registerinhalte
    1356/     60E : DD 2B               		dec	ix
    1357/     610 : DD 6E 00            		ld	l, (ix+0)
    1358/     613 : DD 2B               		dec	ix
    1359/     615 : CD 89 05            		call	outhlsp		; Ausgabe HL + 4 Leerzeichen
    1360/     618 : 10 E9               		djnz	rka6
    1361/     61A :                     		;
    1362/     61A : 0D                  		dec	c
    1363/     61B : 20 D6               		jr	nz, rka4
    1364/     61D :                     		; und noch die Flags
    1365/     61D : DF                  		rst	18h		; PRNST
    1366/     61E : 0D 20 20 46 4C 41   		db 	0Dh,"  FLAGS: ",' '+80h
                    47 53 3A 20 A0    
    1367/     629 : 3A 69 18            		ld	a, (REGAF)
    1368/     62C : CD 79 05            		call	flags		; Flags auswerten und anzeigen
    1369/     62F : DF                  		rst	18h		; PRNST
    1370/     630 : 20 20 A8            		db 	"  ",'('+80h
    1371/     633 : 3A 61 18            		ld	a, (REGAFX)
    1372/     636 : CD 79 05            		call	flags		; Flags auswerten und anzeigen
    1373/     639 : DF                  		rst	18h		; PRNST
    1374/     63A : 29 8D               		db 	')',0Dh+80h
    1375/     63C : C9                  		ret
    1376/     63D :                     
    1377/     63D :                     ; Register ändern
    1378/     63D : 2A 1A 18            rko1:		ld	hl, (soil)	; HL zeigt auf Zeichen nach 'R'
    1379/     640 : 2B                  		dec	hl		; 2 Zeichen vor ('R')
    1380/     641 : 2B                  		dec	hl		; Leerzeichen
    1381/     642 : 7E                  		ld	a, (hl)		; Registername 1. Buchstabe
    1382/     643 : E5                  		push	hl
    1383/     644 : 21 92 05            		ld	hl, regtab1
    1384/     647 : 06 04               		ld	b, 4
    1385/     649 : 11 69 18            		ld	de, REGAF	; Registerinhalte in RSA
    1386/     64C : BE                  rko2:		cp	(hl)		; suche 'A','B','D','H'
    1387/     64D : 28 16               		jr	z, rko4		; wenn gefunden
    1388/     64F : 13                  		inc	de		; RSA-Pointer erhöhen (2 Byte)
    1389/     650 : 13                  		inc	de
    1390/     651 : 23                  		inc	hl
    1391/     652 : 10 F8               		djnz	rko2		; weiter vergleichen
    1392/     654 :                     		;
    1393/     654 : C1                  		pop	bc		; bc=Registername 1. Buchstabe
    1394/     655 : 0B                  		dec	bc		; 1 Zeichen vor
    1395/     656 : 0A                  		ld	a, (bc)		; Registername 2. Buchstabe
    1396/     657 : 06 04               		ld	b, 4
    1397/     659 : BE                  rko3:		cp	(hl)		; suche 'X','Y','C','P'
    1398/     65A : 28 17               		jr	z, rko6		; wenn gefunden
    1399/     65C : 13                  		inc	de		; RSA-Pointer erhöhen (2 Byte)
    1400/     65D : 13                  		inc	de
    1401/     65E : 23                  		inc	hl
    1402/     65F : 10 F8               		djnz	rko3		; weiter vergleichen
    1403/     661 :                     		;
    1404/     661 : C3 CE 05            		jp	rka1		; Register anzeigen
    1405/     664 :                     
    1406/     664 : FF                  		db 0FFh
    1407/     665 :                     
    1408/     665 :                     ; Registerwert ändern AF..HL [']
    1409/     665 : E1                  rko4:		pop	hl
    1410/     666 : 2B                  		dec	hl
    1411/     667 : 2B                  		dec	hl
    1412/     668 : 7E                  		ld	a, (hl)		; folgt noch ein ' ?
    1413/     669 : EB                  		ex	de, hl		; (Zweitregistersatz)
    1414/     66A : FE 27               		cp	27h ; '''
    1415/     66C : 20 04               		jr	nz, rko5	; nein
    1416/     66E : 11 F8 FF            		ld	de, -8		; ja, dann in RSA auf 
    1417/     671 : 19                  		add	hl, de		; Zweitregistersatz gehen
    1418/     672 : EB                  rko5:		ex	de, hl
    1419/     673 :                     ; Registerwert ändern IX..SP
    1420/     673 : 1A                  rko6:		ld	a, (de)
    1421/     674 : 6F                  		ld	l, a
    1422/     675 : 13                  		inc	de
    1423/     676 : 1A                  		ld	a, (de)
    1424/     677 : 67                  		ld	h, a		; HL=aktueller Registerwert
    1425/     678 : DF                  		rst	18h		; PRNST
    1426/     679 : 20 A0               		db 	' ',' '+80h
    1427/     67B : CD 9A 01            		call	OUTHL		; Ausgabe HL hexadezimal
    1428/     67E :                     ;Eingabe neuer Wert
    1429/     67E : CD 28 01            rko7:		call	INLINE		; Zeile eingeben
    1430/     681 : 2A 1A 18            		ld	hl, (soil)	; Zwischenspeicher "Inline"
    1431/     684 : EB                  		ex	de, hl
    1432/     685 : E5                  		push	hl
    1433/     686 : D5                  		push	de
    1434/     687 : CD 72 01            		call	INHEX		; HL=neuer Wert
    1435/     68A : EB                  		ex	de, hl
    1436/     68B : E1                  		pop	hl
    1437/     68C : 7E                  		ld	a, (hl)
    1438/     68D : E1                  		pop	hl
    1439/     68E : FE 20               		cp	' '		; wurde was eingegeben?
    1440/     690 : C8                  		ret	z		; wenn keine Eingabe
    1441/     691 : 72                  		ld	(hl), d		; sonst Wert
    1442/     692 : 2B                  		dec	hl
    1443/     693 : 73                  		ld	(hl), e		; übernehmen
    1444/     694 : C9                  		ret
    1445/     695 :                     
    1446/     695 :                     ;------------------------------------------------------------------------------
    1447/     695 :                     ; C aaaa bbbb cccc Compare
    1448/     695 :                     ;------------------------------------------------------------------------------
    1449/     695 :                     
    1450/     695 : 00 09 43 0D         		db 0,9,'C',0Dh
    1451/     699 :                     
    1452/     699 : CD CA 04            		call	para		; Argumente uebergeben
    1453/     69C : 1A                  cko1:		ld	a, (de)		; bbbb
    1454/     69D : BE                  		cp	(hl)		; vergleich mit aaaa
    1455/     69E : 28 1F               		jr	z, cko2		; weiter wenn gleich
    1456/     6A0 :                     		; Differenz anzeigen
    1457/     6A0 :                     		; "a-Adr. Wert b-Adr. Wert"
    1458/     6A0 : DF                  		rst	18h		; PRNST
    1459/     6A1 : 20 A0               		db 	' ',' '+80h
    1460/     6A3 : CD 89 05            		call	outhlsp		; Ausgabe HL + 4 Leerzeichen aaaa
    1461/     6A6 : 7E                  		ld	a, (hl)
    1462/     6A7 : CD 83 01            		call	OUTHEX		; Ausgabe A hexadezimal Wert
    1463/     6AA : CD 8C 05            		call	out4sp		; Ausgabe Leerzeichen
    1464/     6AD : CD 8C 05            		call	out4sp		; Ausgabe Leerzeichen
    1465/     6B0 : EB                  		ex	de, hl
    1466/     6B1 : CD 89 05            		call	outhlsp		; Ausgabe HL + 4 Leerzeichen bbbb
    1467/     6B4 : EB                  		ex	de, hl
    1468/     6B5 : 1A                  		ld	a, (de)
    1469/     6B6 : CD 83 01            		call	OUTHEX		; Ausgabe A hexadezimal  wert 
    1470/     6B9 : DF                  		rst	18h		; PRNST
    1471/     6BA : 8D                  		db 	0Dh+80h
    1472/     6BB : CF                  		rst	8		; INCH
    1473/     6BC : FE 0D               		cp	0Dh
    1474/     6BE : C0                  		ret	nz
    1475/     6BF : 0B                  cko2:		dec	bc		; Anzahl cccc
    1476/     6C0 : 23                  		inc	hl		; Adressen erhöhen
    1477/     6C1 : 13                  		inc	de
    1478/     6C2 : 78                  		ld	a, b		; Anzahl cccc abgearbeitet?
    1479/     6C3 : B1                  		or	c
    1480/     6C4 : C8                  		ret	z		; dann Ende
    1481/     6C5 : 18 D5               		jr	cko1		; sonst weiter vergleichen
    1482/     6C7 :                     
    1483/     6C7 :                     ;------------------------------------------------------------------------------
    1484/     6C7 :                     ; B aaaa Breakpoint
    1485/     6C7 :                     ; Setzen eines Softwarehaltepunktes auf Adresse aaaa. 
    1486/     6C7 :                     ; Hinweis: Der Breakpoint wird erst bei j_kdo geladen!
    1487/     6C7 :                     ;------------------------------------------------------------------------------
    1488/     6C7 :                     
    1489/     6C7 : 00 09 42 0D         		db 0,9,'B',0Dh
    1490/     6CB :                     
    1491/     6CB : 2A 5B 18            		ld	hl, (ARG1)	; Argument 1
    1492/     6CE : 22 79 18            bko1:		ld	(BPADR), hl
    1493/     6D1 : 11 7B 18            		ld	de, BPOPC	; RSA: Breakpointsequenz
    1494/     6D4 : 01 03 00            		ld	bc, 3		; 3 Byte sichern
    1495/     6D7 : ED B0               		ldir
    1496/     6D9 : 21 43 07            		ld	hl, loc_743	; Breakpoint-Routine
    1497/     6DC : 22 15 18            		ld	(jp_rst38+1), hl	; Eintragen bei RST 38
    1498/     6DF : C9                  		ret
    1499/     6E0 :                     
    1500/     6E0 :                     ;------------------------------------------------------------------------------
    1501/     6E0 :                     ; G Go on
    1502/     6E0 :                     ; Start eines Programms ab Adresse PC, Siehe Befehl 'J'.
    1503/     6E0 :                     ;------------------------------------------------------------------------------
    1504/     6E0 :                     
    1505/     6E0 : 00 09 47 0D         		db 0,9,'G',0Dh
    1506/     6E4 :                     
    1507/     6E4 : 2A 75 18            g_kdo:		ld	hl, (REGPC)
    1508/     6E7 : 22 5B 18            		ld	(ARG1),	hl	; Argument 1
    1509/     6EA :                     
    1510/     6EA :                     ;vp: hier fehlt eigentlich ein jr j_kdo
    1511/     6EA :                     ;die nachfolgende Kommandokennung wird dekodiert als 
    1512/     6EA :                     ;		nop
    1513/     6EA :                     ;		add	hl, bc
    1514/     6EA :                     ;		ld	c, d
    1515/     6EA :                     ;		dec	c
    1516/     6EA :                     ;das bringt zum Glueck das Programm nicht durcheinander
    1517/     6EA :                     
    1518/     6EA :                     ;------------------------------------------------------------------------------
    1519/     6EA :                     ; J aaaa 	Jump
    1520/     6EA :                     ;------------------------------------------------------------------------------
    1521/     6EA :                     		
    1522/     6EA : 00 09 4A 0D         		db 0,9,'J',0Dh		
    1523/     6EE :                     		
    1524/     6EE : 3A 15 18            j_kdo:		ld	a, (jp_rst38+1)	; Routine bei RST 38
    1525/     6F1 : FE 40               		cp	lo(BREAK)	; ?? 40h
    1526/     6F3 : 28 05               		jr	z, jko1
    1527/     6F5 : 2A 79 18            		ld	hl, (BPADR)
    1528/     6F8 : 36 FF               		ld	(hl), 0FFh	; RST 38-Befehl eintragen
    1529/     6FA :                     		; Test auf genügend freien RAM ab SP
    1530/     6FA : 2A 77 18            jko1:		ld	hl, (REGSP)
    1531/     6FD : 06 0A               		ld	b, 10		; 10 Byte RAM?
    1532/     6FF : 2B                  		dec	hl
    1533/     700 : 7E                  jko2:		ld	a, (hl)
    1534/     701 : 2F                  		cpl
    1535/     702 : 77                  		ld	(hl), a
    1536/     703 : BE                  		cp	(hl)
    1537/     704 : 20 08               		jr	nz, jko3
    1538/     706 : 2F                  		cpl
    1539/     707 : 77                  		ld	(hl), a
    1540/     708 : 10 F6               		djnz	jko2
    1541/     70A : 2A 77 18            		ld	hl, (REGSP)
    1542/     70D : DD                  		db 0DDh			; nachfolgenden	Befehl übergehen, deuten als ld	ix, xxx
    1543/     70E : 21 00 20            jko3:		ld	hl, 2000h	; wenn kein RAM, dann Adr. 1FFFh..1FF0h nutzen
    1544/     711 : F9                  		ld	sp, hl
    1545/     712 : 2A 5B 18            		ld	hl, (ARG1)	; Argument 1
    1546/     715 : 22 75 18            		ld	(REGPC), hl
    1547/     718 : E5                  		push	hl
    1548/     719 : C3 BC 01            		jp	REGH		; Register aus Registerrettebereich holen
    1549/     71C :                     
    1550/     71C :                     ;------------------------------------------------------------------------------
    1551/     71C :                     ; E aaaa ; E Einzelschritt
    1552/     71C :                     ;------------------------------------------------------------------------------
    1553/     71C :                     
    1554/     71C : 00 09 45 0D         		db 0,9,'E',0Dh
    1555/     720 :                     
    1556/     720 : 1A                  		ld	a, (de)
    1557/     721 : FE 3A               		cp	':'
    1558/     723 : 28 06               		jr	z, eko2
    1559/     725 :                     ;		
    1560/     725 : 2A 5B 18            		ld	hl, (ARG1)	; Argument 1, aaaa
    1561/     728 : 22 75 18            eko1:		ld	(REGPC), hl
    1562/     72B : ED 7B 77 18         eko2:		ld	sp, (REGSP)
    1563/     72F : 2A 75 18            		ld	hl, (REGPC)
    1564/     732 : E5                  		push	hl		; Adr. auf Stack
    1565/     733 : CD BC 01            		call	REGH		; Register aus Registerrettebereich holen
    1566/     736 : F5                  		push	af
    1567/     737 : 3E 87               		ld	a, 87h
    1568/     739 : D3 00               		out	(CTC0), a	; EI,Zeitgeber,Vorteiler 16,ZK folgt
    1569/     73B : 3E 02               		ld	a, 2
    1570/     73D : D3 00               		out	(CTC0), a	; ZK
    1571/     73F : FB                  		ei
    1572/     740 : 0A                  		ld	a, (bc)
    1573/     741 : F1                  		pop	af
    1574/     742 : C9                  		ret			; aaaa anspringen
    1575/     743 :                     
    1576/     743 :                     ;------------------------------------------------------------------------------
    1577/     743 :                     ; wird bei Breakpoint aufgerufen (via RST 38)
    1578/     743 :                     ;------------------------------------------------------------------------------
    1579/     743 :                     
    1580/     743 : CD A5 01            loc_743:	call	REGA		; CPU-Register ausräumen nach RSA
    1581/     746 : 2A 33 02            		ld	hl, (loc_232+1)	; wieder BREAK eintragen, Std. Routine RST 38
    1582/     749 : 22 15 18            		ld	(jp_rst38+1), hl	; Eintragen bei RST 38
    1583/     74C : E1                  		pop	hl
    1584/     74D : 2B                  		dec	hl
    1585/     74E : 3A 7B 18            		ld	a, (BPOPC)	; RSA: Breakpointsequenz
    1586/     751 : 77                  		ld	(hl), a		; Code-Byte restaurieren
    1587/     752 : ED 73 77 18         		ld	(REGSP), sp
    1588/     756 : 18 D0               		jr	eko1		; Code weiter ausführen
    1589/     758 :                     
    1590/     758 : FF                  		db 0FFh
    1591/     759 : FF                  		db 0FFh
    1592/     75A : FF                  		db 0FFh
    1593/     75B :                     
    1594/     75B :                     ;------------------------------------------------------------------------------
    1595/     75B :                     ; Interrupt-Routine CTC Kanal CTC0
    1596/     75B :                     ; wird bei Einzelschrittbetrieb 'E' aufgerufen, wenn der nächste Befehl erreicht ist
    1597/     75B :                     ;------------------------------------------------------------------------------
    1598/     75B :                     ; z.B.
    1599/     75B :                     ; 0637 79             HL:0000 DE:0000 BC:0000 AF:0078 F:ZH
    1600/     75B :                     ; 0638 05             HL:0000 DE:0000 BC:FF00 AF:00BA F:SHN      
    1601/     75B :                     ;------------------------------------------------------------------------------
    1602/     75B :                     
    1603/     75B :                     
    1604/     75B : CD A5 01            step:		call	REGA		; Register sichern
    1605/     75E : D1                  		pop	de		; Adr. nach "RST 38"
    1606/     75F : ED 73 77 18         		ld	(REGSP), sp
    1607/     763 : 2A 75 18            		ld	hl, (REGPC)	; voherige Adr. merken
    1608/     766 : ED 53 75 18         		ld	(REGPC), de
    1609/     76A : 31 56 18            		ld	sp, SYSSK	; Stack
    1610/     76D : DF                  		rst	18h		; PRNST
    1611/     76E : 06 A0               		db 	6,' '+80h	; and zeilenanfang, überschreibt damit 
    1612/     770 :                     					; aktuelle Anzeige
    1613/     770 : CD 9A 01            		call	OUTHL		; Ausgabe HL hexadezimal PC aktuelle Adr.
    1614/     773 :                     		; max 5 Code-Bytes anzeigen
    1615/     773 : 06 05               		ld	b, 5		
    1616/     775 : DF                  step1:		rst	18h		; PRNST
    1617/     776 : A0                  		db	' '+80h		; Leerzeichen
    1618/     777 : E5                  		push	hl
    1619/     778 : AF                  		xor	a
    1620/     779 : ED 52               		sbc	hl, de
    1621/     77B : E1                  		pop	hl
    1622/     77C : 28 07               		jr	z, step3	; wenn aktuelle Adresse erreicht
    1623/     77E :                     					; nichts mehr anzeigen
    1624/     77E : 7E                  step2:		ld	a, (hl)		; sonst Codebyte
    1625/     77F : 23                  		inc	hl
    1626/     780 : CD 83 01            		call	OUTHEX		; Ausgabe
    1627/     783 : 18 08               		jr	step4		; weiter
    1628/     785 : 3E 05               step3:		ld	a, 5		; Spezialfall 5 Bytes
    1629/     787 : B8                  		cp	b
    1630/     788 : 28 F4               		jr	z, step2	; ja -> trotzdem 5 Bytes anzeigen
    1631/     78A : DF                  		rst	18h		; PRNST
    1632/     78B : 20 A0               		db ' ',' '+80h		; sonst 2 Leerzeichen statt Byte
    1633/     78D : 10 E6               step4:		djnz	step1
    1634/     78F :                     		; die 4 Doppelregister HL .. AF ausgeben
    1635/     78F : 06 04               		ld	b, 4		
    1636/     791 : 11 AA 05            		ld	de, regtab3	; ab "HL"
    1637/     794 : 21 70 18            		ld	hl, REGHL+1	; Registerinhalte, lo-Byte
    1638/     797 : DF                  step5:		rst	18h		; PRNST
    1639/     798 : A0                  		db	' '+80h
    1640/     799 : 1A                  		ld	a, (de)		; Registername 1. Zeichen
    1641/     79A : D7                  		rst	10h		; OUTCH
    1642/     79B : 13                  		inc	de
    1643/     79C : 1A                  		ld	a, (de)		; Registername 2. Zeichen
    1644/     79D : D7                  		rst	10h		; OUTCH
    1645/     79E : 13                  		inc	de
    1646/     79F : DF                  		rst	18h		; PRNST
    1647/     7A0 : BA                  		db 	':' + 80h
    1648/     7A1 : 7E                  		ld	a, (hl)
    1649/     7A2 : 2B                  		dec	hl
    1650/     7A3 : E5                  		push	hl
    1651/     7A4 : 6E                  		ld	l, (hl)
    1652/     7A5 : 67                  		ld	h, a		; Registerwert
    1653/     7A6 : CD 9A 01            		call	OUTHL		; Ausgabe HL hexadezimal
    1654/     7A9 : E1                  		pop	hl
    1655/     7AA : 2B                  		dec	hl
    1656/     7AB : 10 EA               		djnz	step5		; weiter
    1657/     7AD :                     		; Flags anzeigen
    1658/     7AD : DF                  		rst	18h		; PRNST
    1659/     7AE : 20 46 BA            		db " F",':'+80h
    1660/     7B1 : 3A 69 18            		ld	a, (REGAF)
    1661/     7B4 : CD 79 05            		call	flags		; Flags anzeigen
    1662/     7B7 :                     		; Zeilenende
    1663/     7B7 : DF                  		rst	18h		; PRNST
    1664/     7B8 : 0D A0               		db 0Dh,' '+80h
    1665/     7BA :                     		; aktuelle Ad. in neuer Zeile anzeigen
    1666/     7BA : 2A 75 18            		ld	hl, (REGPC)
    1667/     7BD : CD 9A 01            		call	OUTHL		; Ausgabe HL hexadezimal
    1668/     7C0 :                     		; 5 Codebytes anzeigen
    1669/     7C0 : 06 05               		ld	b, 5
    1670/     7C2 : DF                  step6:		rst	18h		; PRNST
    1671/     7C3 : A0                  		db	' '+80h
    1672/     7C4 : 7E                  		ld	a, (hl)
    1673/     7C5 : 23                  		inc	hl
    1674/     7C6 : CD 83 01            		call	OUTHEX		; Ausgabe A hexadezimal
    1675/     7C9 : 10 F7               		djnz	step6
    1676/     7CB : 3E 03               		ld	a, 3		; DI, Reset
    1677/     7CD : D3 00               		out	(CTC0), a
    1678/     7CF :                     ; interaktiv
    1679/     7CF : D7                  step7:		rst	10h		; OUTCH
    1680/     7D0 : CF                  step8:		rst	8		; INCH
    1681/     7D1 : 21 E4 06            		ld	hl, g_kdo
    1682/     7D4 : FE 47               		cp	'G'		; 'G' Go?
    1683/     7D6 : 28 2C               		jr	z, stepend	; -> G
    1684/     7D8 : 21 2B 07            		ld	hl, eko2
    1685/     7DB : FE 0D               		cp	0Dh		; CR?
    1686/     7DD : 28 25               		jr	z, stepend	; -> E, nächster Step
    1687/     7DF : FE 20               		cp	' '		
    1688/     7E1 : 38 EC               		jr	c, step7	; sonstige Steuerzeichen ignorieren
    1689/     7E3 :                     		;
    1690/     7E3 : 21 DE 01            		ld	hl, kdo1	; Kommandoschleife
    1691/     7E6 : 18 18               		jr	step9		; Sprungverteiler übergehen
    1692/     7E8 :                     
    1693/     7E8 :                     ; Einschub
    1694/     7E8 :                     ;------------------------------------------------------------------------------
    1695/     7E8 :                     ; Sprungverteiler
    1696/     7E8 :                     ; an dieser festen Adr. zur Kompatibilität mit Ur-AC1
    1697/     7E8 :                     ; (Ende 2K-EPROM)
    1698/     7E8 :                     ;------------------------------------------------------------------------------
    1699/     7E8 :                     
    1700/     7E8 :                     		org	07E8h
    1701/     7E8 :                     
    1702/     7E8 : C3 F9 0D            		jp	v24out		; Ausgabe V24
    1703/     7EB : C3 1D 01            		jp	MS30		; ca. 30 ms warten
    1704/     7EE : C3 83 01            j_OUTHEX:	jp	OUTHEX		; Ausgabe A hexadezimal
    1705/     7F1 : C3 9A 01            j_OUTHL:	jp	OUTHL		; Ausgabe HL hexadezimal
    1706/     7F4 : C3 28 01            		jp	INLINE		; Zeile eingeben
    1707/     7F7 : C3 72 01            j_INHEX:	jp	INHEX
    1708/     7FA : C3 4D 0D            j_TASTE:	jp	TASTE
    1709/     7FD : C3 5B 02            		jp	GETCO1		; Kommandoschleife
    1710/     800 :                     
    1711/     800 :                     ;------------------------------------------------------------------------------
    1712/     800 :                     ; weiter mit CTC-ISR
    1713/     800 :                     ;------------------------------------------------------------------------------
    1714/     800 :                     
    1715/     800 : FE 51               step9:		cp	'Q'		; 'Q' Quit?
    1716/     802 : 20 03               		jr	nz, step10	; ja, Ende Schrittbetrieb
    1717/     804 : E5                  stepend:	push	hl
    1718/     805 : ED 4D               		reti
    1719/     807 :                     ; 
    1720/     807 : FE 42               step10:		cp	'B'		; 'B' Breakpoint?
    1721/     809 : 20 18               		jr	nz, step11
    1722/     80B :                     		; Breakpoint
    1723/     80B : DF                  		rst	18h		; PRNST
    1724/     80C : 20 42 D0            		db " B",'P'+80h
    1725/     80F : CD 28 01            		call	INLINE		; Zeile eingeben
    1726/     812 : 2A 1A 18            		ld	hl, (soil)	; Zwischenspeicher "Inline"
    1727/     815 : 7E                  		ld	a, (hl)
    1728/     816 : FE 20               		cp	' '
    1729/     818 : 28 B6               		jr	z, step8
    1730/     81A : EB                  		ex	de, hl
    1731/     81B : CD 72 01            		call	INHEX		; Eingabe Breakpointadr.
    1732/     81E : CD CE 06            		call	bko1		; Breakpoint setzen
    1733/     821 : 18 AD               		jr	step8
    1734/     823 :                     ;		
    1735/     823 : FE 52               step11:		cp	'R'		; 'R' Register show/edit
    1736/     825 : CC 28 01            		call	z, INLINE	; Zeile eingeben
    1737/     828 : CC 3D 06            		call	z, rko1
    1738/     82B : 18 A3               		jr	step8		; weiter in Bearbeitungsschleife
    1739/     82D :                     
    1740/     82D :                     ;------------------------------------------------------------------------------
    1741/     82D :                     ; D Dump Hexdump und ASCII-Darstellung
    1742/     82D :                     ; D aaaa Dump normal
    1743/     82D :                     ; D aaaa eeee Dump drucken
    1744/     82D :                     ;------------------------------------------------------------------------------
    1745/     82D :                     
    1746/     82D : 00 09 44 0D         		db 0,9,'D',0Dh
    1747/     831 :                     
    1748/     831 : DD 2A 5D 18         		ld	ix, (ARG2)
    1749/     835 : AF                  		xor	a
    1750/     836 : 32 5F 18            d_ko1:		ld	(ARG3), a
    1751/     839 : 21 5D 18            		ld	hl, ARG2
    1752/     83C : 3A 5E 18            		ld	a, (ARG2+1)
    1753/     83F : B6                  		or	(hl)
    1754/     840 : 32 60 18            		ld	(ARG3+1), a
    1755/     843 : DF                  		rst	18h		; PRNST
    1756/     844 : 2A 8D               		db '*',8Dh
    1757/     846 : 0E 01               d_ko2:		ld	c, 1
    1758/     848 : 2A 5B 18            		ld	hl, (ARG1)
    1759/     84B : 7D                  		ld	a, l
    1760/     84C : E6 F8               		and	0F8h ; 'ø'
    1761/     84E : 6F                  		ld	l, a
    1762/     84F : CD 41 04            		call	loc_441
    1763/     852 : 3A 60 18            		ld	a, (ARG3+1)
    1764/     855 : A7                  		and	a
    1765/     856 : 28 0F               		jr	z, d_ko4
    1766/     858 : DF                  		rst	18h		; PRNST
    1767/     859 : 8D                  		db 8Dh
    1768/     85A : ED 5B 5B 18         d_ko3:		ld	de, (ARG1)
    1769/     85E : DD E5               		push	ix
    1770/     860 : E1                  		pop	hl
    1771/     861 : A7                  		and	a
    1772/     862 : ED 52               		sbc	hl, de
    1773/     864 : D8                  		ret	c
    1774/     865 : 18 DF               		jr	d_ko2
    1775/     867 : CD FA 07            d_ko4:		call	j_TASTE
    1776/     86A : 28 07               		jr	z, d_ko6
    1777/     86C : DF                  		rst	18h		; PRNST
    1778/     86D : 8D                  		db 8Dh
    1779/     86E : 18 D6               		jr	d_ko2
    1780/     870 : CD 41 04            d_ko5:		call	loc_441
    1781/     873 : 2A 5D 18            d_ko6:		ld	hl, (ARG2)
    1782/     876 : 09                  		add	hl, bc
    1783/     877 : 2B                  		dec	hl
    1784/     878 : DF                  		rst	18h		; PRNST
    1785/     879 : 20 BC               		db ' ',0BCh
    1786/     87B : CD F1 07            		call	j_OUTHL
    1787/     87E : DF                  		rst	18h		; PRNST
    1788/     87F : BE                  		db 0BEh
    1789/     880 : 3A 5F 18            		ld	a, (ARG3)
    1790/     883 : A7                  		and	a
    1791/     884 : 20 08               		jr	nz, d_ko7
    1792/     886 : DF                  		rst	18h		; PRNST
    1793/     887 : 20 28 48 29 A0      		db " (H)",0A0h
    1794/     88C : 18 06               		jr	d_ko8
    1795/     88E : DF                  d_ko7:		rst	18h		; PRNST
    1796/     88F : 20 28 41 29 A0      		db " (A)",0A0h
    1797/     894 : ED 53 00 18         d_ko8:		ld	(cupos), de
    1798/     898 : 41                  		ld	b, c
    1799/     899 : DF                  d_ko9:		rst	18h		; PRNST
    1800/     89A : 09 09 89            		db    9,9,89h
    1801/     89D : 10 FA               		djnz	d_ko9
    1802/     89F : CD FA 07            		call	j_TASTE
    1803/     8A2 : FE 8B               		cp	8Bh ; ''
    1804/     8A4 : 28 5D               		jr	z, d_ko19
    1805/     8A6 : CF                  d_ko10:		rst	8
    1806/     8A7 : FE 08               		cp	8
    1807/     8A9 : CA 32 09            		jp	z, d_ko26
    1808/     8AC : FE 03               		cp	3
    1809/     8AE : 28 43               		jr	z, d_ko17
    1810/     8B0 : FE 0D               d_ko11:		cp	0Dh
    1811/     8B2 : 28 37               		jr	z, d_ko16
    1812/     8B4 : FE 01               		cp	1
    1813/     8B6 : 28 41               		jr	z, d_ko18
    1814/     8B8 : FE 09               d_ko12:		cp	9
    1815/     8BA : 28 5F               		jr	z, d_ko22
    1816/     8BC : FE 0A               		cp	0Ah
    1817/     8BE : 28 6C               		jr	z, d_ko25
    1818/     8C0 : FE 0B               		cp	0Bh
    1819/     8C2 : 28 3F               		jr	z, d_ko19
    1820/     8C4 : FE 20               		cp	' '
    1821/     8C6 : 38 DE               		jr	c, d_ko10
    1822/     8C8 : 08                  		ex	af, af'
    1823/     8C9 : 3A 5F 18            		ld	a, (ARG3)
    1824/     8CC : A7                  		and	a
    1825/     8CD : 20 3C               		jr	nz, d_ko20
    1826/     8CF : 08                  		ex	af, af'
    1827/     8D0 : CD 96 04            		call	sub_496
    1828/     8D3 : 38 D1               		jr	c, d_ko10
    1829/     8D5 : 06 02               		ld	b, 2
    1830/     8D7 : D7                  d_ko13:		rst	10h
    1831/     8D8 : FE 3A               		cp	3Ah ; ':'
    1832/     8DA : 38 02               		jr	c, d_ko14
    1833/     8DC : D6 37               		sub	37h ; '7'
    1834/     8DE : ED 6F               d_ko14:		rld
    1835/     8E0 : 05                  		dec	b
    1836/     8E1 : 28 2F               		jr	z, d_ko21
    1837/     8E3 : CF                  d_ko15:		rst	8
    1838/     8E4 : CD 96 04            		call	sub_496
    1839/     8E7 : 38 FA               		jr	c, d_ko15
    1840/     8E9 : 18 EC               		jr	d_ko13
    1841/     8EB : CD A4 04            d_ko16:		call	loc_4A4
    1842/     8EE : DF                  		rst	18h		; PRNST
    1843/     8EF : 8D                  		db 8Dh
    1844/     8F0 : C3 46 08            		jp	d_ko2
    1845/     8F3 : DF                  d_ko17:		rst	18h		; PRNST
    1846/     8F4 : 8D                  		db 8Dh
    1847/     8F5 : 22 5B 18            		ld	(ARG1),	hl
    1848/     8F8 : C9                  		ret
    1849/     8F9 : 3A 5F 18            d_ko18:		ld	a, (ARG3)
    1850/     8FC : 2F                  		cpl
    1851/     8FD : 32 5F 18            		ld	(ARG3), a
    1852/     900 : C3 70 08            		jp	d_ko5
    1853/     903 : 11 08 00            d_ko19:		ld	de, 8
    1854/     906 : A7                  		and	a
    1855/     907 : ED 52               		sbc	hl, de
    1856/     909 : 18 2D               		jr	d_ko27
    1857/     90B : 08                  d_ko20:		ex	af, af'		;'
    1858/     90C : CD 87 04            		call	sub_487
    1859/     90F : 38 95               		jr	c, d_ko10
    1860/     911 : 77                  		ld	(hl), a
    1861/     912 : 3E 08               d_ko21:		ld	a, 8
    1862/     914 : B9                  		cp	c
    1863/     915 : 20 04               		jr	nz, d_ko22
    1864/     917 : CD 41 04            		call	loc_441
    1865/     91A : 2B                  		dec	hl
    1866/     91B : 0C                  d_ko22:		inc	c
    1867/     91C : 23                  		inc	hl
    1868/     91D : 3E 09               		ld	a, 9
    1869/     91F : B9                  		cp	c
    1870/     920 : 20 07               		jr	nz, d_ko24
    1871/     922 : 0E 01               		ld	c, 1
    1872/     924 : CD A4 04            d_ko23:		call	loc_4A4
    1873/     927 : DF                  		rst	18h		; PRNST
    1874/     928 : 8A                  		db 8Ah
    1875/     929 : C3 70 08            d_ko24:		jp	d_ko5
    1876/     92C : 11 08 00            d_ko25:		ld	de, 8
    1877/     92F : 19                  		add	hl, de
    1878/     930 : 18 F2               		jr	d_ko23
    1879/     932 : 2B                  d_ko26:		dec	hl
    1880/     933 : 0D                  		dec	c
    1881/     934 : 20 F3               		jr	nz, d_ko24
    1882/     936 : 0E 08               		ld	c, 8
    1883/     938 : CD A4 04            d_ko27:		call	loc_4A4
    1884/     93B : ED 5B 00 18         		ld	de, (cupos)
    1885/     93F : E5                  		push	hl
    1886/     940 : 21 BF 17            		ld	hl, BWSANF-COLS
    1887/     943 : ED 52               		sbc	hl, de
    1888/     945 : E1                  		pop	hl
    1889/     946 : 30 0F               		jr	nc, d_ko28
    1890/     948 : D9                  		exx
    1891/     949 : 21 40 10            		ld	hl, BWSEND+COLS
    1892/     94C : 11 00 10            		ld	de, BWSEND
    1893/     94F : 01 C0 07            		ld	bc, COLS*(LINES-1)
    1894/     952 : ED B0               		ldir
    1895/     954 : D9                  		exx
    1896/     955 : 18 D2               		jr	d_ko24
    1897/     957 : DF                  d_ko28:		rst	18h		; PRNST
    1898/     958 : 8B                  		db 8Bh
    1899/     959 : 18 CE               		jr	d_ko24
    1900/     95B :                     
    1901/     95B :                     ;------------------------------------------------------------------------------
    1902/     95B :                     ; F aaaa bbbb cc dd ... Finding String Hex
    1903/     95B :                     ; F aaaa bbbb 'ABC.... Finding String ASCII
    1904/     95B :                     ;------------------------------------------------------------------------------
    1905/     95B :                     
    1906/     95B : 00 09 46 0D         		db 0,9,'F',0Dh
    1907/     95F :                     
    1908/     95F : CD 61 0A            		call	sub_A61
    1909/     962 : 1A                  		ld	a, (de)
    1910/     963 : FE 4A               		cp	'J'		; Jokerzeichen
    1911/     965 : 28 32               		jr	z, f_ko4
    1912/     967 : FE 27               		cp	27h ; '''	; ASCII
    1913/     969 : 28 02               		jr	z, f_ko1
    1914/     96B : 18 21               		jr	f_ko3
    1915/     96D : 1B                  f_ko1:		dec	de
    1916/     96E : 1A                  		ld	a, (de)
    1917/     96F : FE 20               		cp	20h ; ' '
    1918/     971 : 28 0A               		jr	z, f_ko2
    1919/     973 : D9                  		exx
    1920/     974 : 77                  		ld	(hl), a
    1921/     975 : 23                  		inc	hl
    1922/     976 : 3E 01               		ld	a, 1
    1923/     978 : 12                  		ld	(de), a
    1924/     979 : 13                  		inc	de
    1925/     97A : D9                  		exx
    1926/     97B : 18 F0               		jr	f_ko1
    1927/     97D : 1B                  f_ko2:		dec	de
    1928/     97E : 1A                  		ld	a, (de)
    1929/     97F : FE 4A               		cp	'J'		; Jokerzeichen
    1930/     981 : 28 16               		jr	z, f_ko4
    1931/     983 : FE 27               		cp	27h ; '''	; ASCII
    1932/     985 : 28 E6               		jr	z, f_ko1
    1933/     987 : FE 20               		cp	' '
    1934/     989 : 28 17               		jr	z, f_ko5
    1935/     98B : CD F7 07            		call	j_INHEX
    1936/     98E :                     ;
    1937/     98E : 7D                  f_ko3:		ld	a, l
    1938/     98F : D9                  		exx
    1939/     990 : 77                  		ld	(hl), a
    1940/     991 : 23                  		inc	hl
    1941/     992 : 3E 01               		ld	a, 1
    1942/     994 : 12                  		ld	(de), a
    1943/     995 : 13                  		inc	de
    1944/     996 : D9                  		exx
    1945/     997 : 18 E4               		jr	f_ko2
    1946/     999 :                     ;		
    1947/     999 : D9                  f_ko4:		exx
    1948/     99A : 23                  		inc	hl
    1949/     99B : AF                  		xor	a
    1950/     99C : 12                  		ld	(de), a
    1951/     99D : 13                  		inc	de
    1952/     99E : D9                  		exx
    1953/     99F : 1B                  		dec	de
    1954/     9A0 : 18 DB               		jr	f_ko2
    1955/     9A2 :                     ;		
    1956/     9A2 : D9                  f_ko5:		exx
    1957/     9A3 : 3E FF               		ld	a, 0FFh
    1958/     9A5 : 12                  		ld	(de), a
    1959/     9A6 : D9                  		exx
    1960/     9A7 : CD CA 04            		call	para
    1961/     9AA : 01 64 01            		ld	bc, 164h	; 1,'d' ??  
    1962/     9AD : CD 61 0A            f_ko6:		call	sub_A61
    1963/     9B0 : CD AD 04            		call	sub_4AD
    1964/     9B3 : F5                  f_ko7:		push	af
    1965/     9B4 : A7                  		and	a
    1966/     9B5 : E5                  		push	hl
    1967/     9B6 : ED 52               		sbc	hl, de
    1968/     9B8 : E1                  		pop	hl
    1969/     9B9 : 30 09               		jr	nc, f_ko8
    1970/     9BB : F1                  		pop	af
    1971/     9BC : 28 20               		jr	z, f_ko11
    1972/     9BE : BE                  		cp	(hl)
    1973/     9BF : 28 1D               		jr	z, f_ko11
    1974/     9C1 : 23                  		inc	hl
    1975/     9C2 : 18 EF               		jr	f_ko7
    1976/     9C4 :                     ;		
    1977/     9C4 : F1                  f_ko8:		pop	af
    1978/     9C5 : CD 61 0A            f_ko9:		call	sub_A61
    1979/     9C8 : D9                  		exx
    1980/     9C9 : CD 6A 0A            		call	sub_A6A
    1981/     9CC : 05                  		dec	b
    1982/     9CD : C2 DB 09            		jp	nz, f_ko10
    1983/     9D0 : DF                  		rst	18h		; PRNST
    1984/     9D1 : 20 4E 6F 74 20 66   		db " Not foun",0E4h
                    6F 75 6E E4       
    1985/     9DB : DF                  f_ko10:		rst	18h		; PRNST
    1986/     9DC : 8D                  		db 8Dh
    1987/     9DD : C9                  		ret
    1988/     9DE :                     ;		
    1989/     9DE : E5                  f_ko11:		push	hl
    1990/     9DF : DD E1               		pop	ix
    1991/     9E1 : 3E 18               		ld	a, 18h
    1992/     9E3 : BC                  		cp	h
    1993/     9E4 : 20 05               		jr	nz, f_ko12
    1994/     9E6 : 3E D0               		ld	a, 0D0h	; 'Ð'
    1995/     9E8 : BD                  		cp	l
    1996/     9E9 : 28 0B               		jr	z, f_ko13
    1997/     9EB : 23                  f_ko12:		inc	hl
    1998/     9EC : CD AD 04            		call	sub_4AD
    1999/     9EF : 28 FA               		jr	z, f_ko12
    2000/     9F1 : 30 09               		jr	nc, f_ko14
    2001/     9F3 : BE                  		cp	(hl)
    2002/     9F4 : 28 F5               		jr	z, f_ko12
    2003/     9F6 : DD E5               f_ko13:		push	ix
    2004/     9F8 : E1                  		pop	hl
    2005/     9F9 : 23                  		inc	hl
    2006/     9FA : 18 B1               		jr	f_ko6
    2007/     9FC :                     ;		
    2008/     9FC : DD E5               f_ko14:		push	ix
    2009/     9FE : E1                  		pop	hl
    2010/     9FF : AF                  		xor	a
    2011/     A00 : 80                  		add	a, b
    2012/     A01 : 28 03               		jr	z, f_ko15
    2013/     A03 : 22 5B 18            		ld	(ARG1),	hl
    2014/     A06 : DF                  f_ko15:		rst	18h		; PRNST
    2015/     A07 : A0                  		db 0A0h
    2016/     A08 : CD 9A 01            		call	OUTHL
    2017/     A0B : DF                  		rst	18h		; PRNST
    2018/     A0C : BA                  		db 0BAh
    2019/     A0D : 06 04               		ld	b, 4
    2020/     A0F : 7E                  f_ko16:		ld	a, (hl)
    2021/     A10 : CD 83 01            		call	OUTHEX
    2022/     A13 : 23                  		inc	hl
    2023/     A14 : 10 F9               		djnz	f_ko16
    2024/     A16 : DF                  		rst	18h		; PRNST
    2025/     A17 : 20 A0               		db ' ',0A0h
    2026/     A19 : DD E5               		push	ix
    2027/     A1B : E1                  		pop	hl
    2028/     A1C : 23                  		inc	hl
    2029/     A1D : 0D                  		dec	c
    2030/     A1E : 20 8D               		jr	nz, f_ko6
    2031/     A20 : CF                  		rst	8
    2032/     A21 : FE 51               		cp	'Q'
    2033/     A23 : 28 A0               		jr	z, f_ko9
    2034/     A25 : 0E 64               		ld	c, 64h ; 'd' ??
    2035/     A27 : 18 84               		jr	f_ko6
    2036/     A29 :                     
    2037/     A29 : FF                  		db 0FFh
    2038/     A2A : FF                  		db 0FFh
    2039/     A2B :                     
    2040/     A2B :                     ;------------------------------------------------------------------------------
    2041/     A2B :                     ; UPs zu Kassette Load Turbo
    2042/     A2B :                     ;------------------------------------------------------------------------------
    2043/     A2B :                     
    2044/     A2B : 2A 5B 18            q_ko19:		ld	hl, (ARG1)	; Argument 1
    2045/     A2E : CA F0 0D            		jp	z, loc_DF0
    2046/     A31 :                     
    2047/     A31 :                     ;Start/Stop-Schaltung stopp
    2048/     A31 : DB 05               q_ko20:		in	a, (PIODB)
    2049/     A33 : CB AF               		res	5, a		; Start/Stop-Schaltung
    2050/     A35 : 18 05               		jr	loc_A3C
    2051/     A37 :                     ;Start/Stop-Schaltung start
    2052/     A37 : DB 05               q_ko21:		in	a, (PIODB)
    2053/     A39 : CB EF               		set	5, a		; Start/Stop-Schaltung
    2054/     A3B : F3                  		di
    2055/     A3C : DF                  loc_A3C:	rst	18h		; PRNST
    2056/     A3D : 87                  		db 	07+80h		; beep
    2057/     A3E : D3 05               		out	(PIODB), a
    2058/     A40 : C9                  		ret
    2059/     A41 :                     
    2060/     A41 :                     
    2061/     A41 :                     ;------------------------------------------------------------------------------
    2062/     A41 :                     ; H I/O - Byte
    2063/     A41 :                     ;------------------------------------------------------------------------------
    2064/     A41 :                     
    2065/     A41 : 00 09 48 0D         		db 0,9,'H',0Dh
    2066/     A45 :                     
    2067/     A45 : DF                  		rst	18h		; PRNST
    2068/     A46 : 20 49 2F 4F 20 42   		db " I/O Byte",0A0h
                    79 74 65 A0       
    2069/     A50 : 11 21 18            		ld	de, IOBYT	; Ein/Ausgabebyte
    2070/     A53 : 1A                  		ld	a, (de)
    2071/     A54 : CD 83 01            		call	OUTHEX		; Ausgabe A hexadezimal
    2072/     A57 : 13                  		inc	de
    2073/     A58 : C3 7E 06            		jp	rko7
    2074/     A5B :                     
    2075/     A5B :                     ;------------------------------------------------------------------------------
    2076/     A5B :                     ; 
    2077/     A5B :                     ;------------------------------------------------------------------------------
    2078/     A5B :                     
    2079/     A5B :                     ; Rest von Kassette Save Turbo
    2080/     A5B : CD 04 04            loc_A5B:	call	n_kdo-1		; CRC
    2081/     A5E : C3 31 0A            		jp	q_ko20		; Start/Stop-Schaltung stopp
    2082/     A61 :                     
    2083/     A61 :                     
    2084/     A61 :                     ;------------------------------------------------------------------------------
    2085/     A61 :                     ; 
    2086/     A61 :                     ;------------------------------------------------------------------------------
    2087/     A61 :                     
    2088/     A61 :                     ; UP zu Find-Kdo
    2089/     A61 : D9                  sub_A61:	exx
    2090/     A62 : 21 D0 18            		ld	hl, unk_18D0
    2091/     A65 : 11 E8 18            		ld	de, unk_18E8
    2092/     A68 : D9                  		exx
    2093/     A69 : C9                  		ret
    2094/     A6A :                     
    2095/     A6A :                     ; UP zu Find-Kdo
    2096/     A6A : 71                  sub_A6A:	ld	(hl), c
    2097/     A6B : E5                  		push	hl
    2098/     A6C : AF                  		xor	a
    2099/     A6D : EB                  		ex	de, hl
    2100/     A6E : ED 52               		sbc	hl, de
    2101/     A70 : 44                  		ld	b, h
    2102/     A71 : 4D                  		ld	c, l
    2103/     A72 : E1                  		pop	hl
    2104/     A73 : 1B                  		dec	de
    2105/     A74 : ED B0               		ldir
    2106/     A76 : D9                  		exx
    2107/     A77 : C9                  		ret
    2108/     A78 :                     
    2109/     A78 : FF                  		db 0FFh
    2110/     A79 : FF                  		db 0FFh
    2111/     A7A : FF                  		db 0FFh
    2112/     A7B :                     
    2113/     A7B :                     ;------------------------------------------------------------------------------
    2114/     A7B :                     ; Test auf Autostart
    2115/     A7B :                     ;------------------------------------------------------------------------------
    2116/     A7B :                     
    2117/     A7B : 21 3A 02            tstsch:		ld	hl, aSch	; "SCH"
    2118/     A7E : 06 03               		ld	b, 3
    2119/     A80 : 1A                  tstsch1:	ld	a, (de)
    2120/     A81 : BE                  		cp	(hl)
    2121/     A82 : C0                  		ret	nz		; nicht gefunden
    2122/     A83 : 23                  		inc	hl
    2123/     A84 : 13                  		inc	de
    2124/     A85 : 10 F9               		djnz	tstsch1
    2125/     A87 :                     		; Adresse hinter "SCH" in HL
    2126/     A87 : 1A                  		ld	a, (de)
    2127/     A88 : 6F                  		ld	l, a
    2128/     A89 : 13                  		inc	de
    2129/     A8A : 1A                  		ld	a, (de)
    2130/     A8B : 67                  		ld	h, a		; HL=Autostartadr.
    2131/     A8C : C9                  		ret
    2132/     A8D :                     
    2133/     A8D :                     ;------------------------------------------------------------------------------
    2134/     A8D :                     ; Standard-Routine Ausgabe Zeichenkette, RST 18
    2135/     A8D :                     ;------------------------------------------------------------------------------
    2136/     A8D :                     
    2137/     A8D : E3                  rprnst:		ex	(sp), hl
    2138/     A8E : F5                  		push	af
    2139/     A8F : 7E                  rprnst1:	ld	a, (hl)		; Zeichen holen
    2140/     A90 : 23                  		inc	hl		; nächste Adr.
    2141/     A91 : D7                  		rst	10h		; OUTCH
    2142/     A92 : 07                  		rlca			; Ende (Bit7 gesetzt)?
    2143/     A93 : 30 FA               		jr	nc, rprnst1	; nein -> nächstes Zeichen
    2144/     A95 : F1                  		pop	af
    2145/     A96 : E3                  		ex	(sp), hl	; neue Return-Adr.
    2146/     A97 : C9                  		ret
    2147/     A98 :                     
    2148/     A98 :                     ;------------------------------------------------------------------------------
    2149/     A98 :                     ; ???
    2150/     A98 :                     ;------------------------------------------------------------------------------
    2151/     A98 :                     
    2152/     A98 : D3 05               		out	(PIODB), a
    2153/     A9A : C9                  		ret
    2154/     A9B :                     		
    2155/     A9B : FF                  		db 0FFh
    2156/     A9C : FF                  		db 0FFh
    2157/     A9D : FF                  		db 0FFh
    2158/     A9E : FF                  		db 0FFh
    2159/     A9F :                     
    2160/     A9F :                     ;------------------------------------------------------------------------------
    2161/     A9F :                     ; I	lnitialize	RSA löschen, SP	initialisieren
    2162/     A9F :                     ;------------------------------------------------------------------------------
    2163/     A9F :                     
    2164/     A9F : 00 09 49 0D         		db 0,9,'I',0Dh
    2165/     AA3 :                     
    2166/     AA3 : 21 58 18            		ld	hl, data	; Hilfsregister	UP "INLINE"
    2167/     AA6 : 06 26               		ld	b, tbb_eadr-data	; Bereich data..BPOPC+3
    2168/     AA8 : 36 00               iko1:		ld	(hl), 0		;  mit 0 füllen
    2169/     AAA : 23                  		inc	hl
    2170/     AAB : 10 FB               		djnz	iko1
    2171/     AAD : DF                  		rst	18h		; PRNST
    2172/     AAE : 20 53 50 A0         		db " SP", ' '+80h
    2173/     AB2 : CD CE 0A            		call	ramtst		; Ramtest
    2174/     AB5 : 22 77 18            		ld	(REGSP), hl	; letzte RAM-Adr+1
    2175/     AB8 : 18 10               		jr	oko1		; auch auf Bildschirm ausgeben
    2176/     ABA :                     
    2177/     ABA :                     ;------------------------------------------------------------------------------
    2178/     ABA :                     ; O aaaa RAM - Test
    2179/     ABA :                     ;------------------------------------------------------------------------------
    2180/     ABA :                     
    2181/     ABA : 00 09 4F 0D         		db 0,9,'O',0Dh
    2182/     ABE :                     
    2183/     ABE : 2A 5B 18            		ld	hl, (ARG1)	; Argument 1
    2184/     AC1 : DF                  		rst	18h		; PRNST
    2185/     AC2 : 20 4D 45 A0         		db " ME", ' '+80h	; 'memory end'
    2186/     AC6 : CD CE 0A            		call	ramtst		; Ramtest
    2187/     AC9 : 2B                  		dec	hl
    2188/     ACA : C3 9A 01            oko1:		jp	OUTHL		; Ausgabe HL hexadezimal
    2189/     ACD :                     
    2190/     ACD : FF                  		db 0FFh
    2191/     ACE :                     
    2192/     ACE :                     ;------------------------------------------------------------------------------
    2193/     ACE :                     ; Test auf RAM, bis RAM Ende
    2194/     ACE :                     ; in HL = startadr
    2195/     ACE :                     ;------------------------------------------------------------------------------
    2196/     ACE :                     
    2197/     ACE : 7E                  ramtst:		ld	a, (hl)
    2198/     ACF : 2F                  		cpl
    2199/     AD0 : 77                  		ld	(hl), a
    2200/     AD1 : BE                  		cp	(hl)
    2201/     AD2 : C0                  		ret	nz		;  Ende	wenn kein RAM mehr
    2202/     AD3 : 2F                  		cpl
    2203/     AD4 : 77                  		ld	(hl), a
    2204/     AD5 : 23                  		inc	hl
    2205/     AD6 : 18 F6               		jr	ramtst		; Ramtest
    2206/     AD8 :                     
    2207/     AD8 :                     ;------------------------------------------------------------------------------
    2208/     AD8 :                     ; Tabelle Peripherie Initialisierung
    2209/     AD8 :                     ;------------------------------------------------------------------------------
    2210/     AD8 :                     
    2211/     AD8 :                     ; jeweils port, wert, s. init3
    2212/     AD8 : 00                  TABIO:		db CTC0
    2213/     AD9 : F8                  		db lo(inttab)		; Interrupt-Vektor CTC
    2214/     ADA : 01                  		db CTC1
    2215/     ADB : 37                  		db  37h			; DI,Zeitgeber,Vorteiler 256,ZK folgt
    2216/     ADC : 01                  		db CTC1
    2217/     ADD : 4E                  		db  4Eh			; Zeitkonstante
    2218/     ADE : 02                  		db CTC2
    2219/     ADF : 47                  		db  47h			; DI,Zähler,Vorteiler 16,ZK folgt
    2220/     AE0 : 02                  		db CTC2
    2221/     AE1 : 32                  		db  32h			; Zeitkonstante
    2222/     AE2 :                     ;
    2223/     AE2 : 0B                  		db PIO2CB
    2224/     AE3 : CF                  		db 0CFh			; Mode 3 (Bit E/A)
    2225/     AE4 : 0B                  		db PIO2CB
    2226/     AE5 : 00                  		db    0			; alle Bits Ausgabe
    2227/     AE6 : 0A                  		db PIO2CA
    2228/     AE7 : CF                  		db 0CFh			; Mode 3 (Bit E/A)
    2229/     AE8 : 0A                  		db PIO2CA
    2230/     AE9 : C5                  		db  0C5h		; b7,b6,b3 und b0 Eingabe
    2231/     AEA : 08                  		db PIO2DA
    2232/     AEB : 0A                  		db  0Ah			; Bits setzen
    2233/     AEC :                     ;
    2234/     AEC : 06                  		db PIOCA		; PIOCA Tastatur
    2235/     AED : CF                  		db 0CFh			; Mode 3 (Bit E/A)
    2236/     AEE : 06                  		db PIOCA		; PIOCA Tastatur
    2237/     AEF : FF                  		db 0FFh			; alle Bits Eingabe
    2238/     AF0 : 06                  		db PIOCA		; PIOCA Tastatur
    2239/     AF1 : 07                  		db    7			; DI
    2240/     AF2 : 07                  		db PIOCB
    2241/     AF3 : CF                  		db 0CFh			; Mode 3 (Bit E/A)
    2242/     AF4 : 07                  		db PIOCB
    2243/     AF5 : 84                  		db  84h			; b7 und b2 Eingabe
    2244/     AF6 : 07                  		db PIOCB
    2245/     AF7 : 07                  		db    7			; DI
    2246/     AF8 :                     ;
    2247/     AF8 : 14                  		db modul1
    2248/     AF9 : 00                  		db    0			; alles deaktiviert
    2249/     AFA :                     
    2250/     AFA : FF                  		db 0FFh
    2251/     AFB :                     
    2252/     AFB :                     ;------------------------------------------------------------------------------
    2253/     AFB :                     ; Funktion "K" --> Kassette save Turbo
    2254/     AFB :                     ; K aaaa bbbb ("name") Kassette bespielen Programm Turbo-Tape
    2255/     AFB :                     ; K aaaa bbbb * ("name") Kassette bespielen Datei Turbo-Tape
    2256/     AFB :                     ;------------------------------------------------------------------------------
    2257/     AFB :                     ; 
    2258/     AFB :                     ; Allgemeines:
    2259/     AFB :                     ; Daten in Blöcken zu 32 Byte plus 2 Byte Prüfsumme analog Z1013
    2260/     AFB :                     ; Übertragungsrate: 4000 Bit/s
    2261/     AFB :                     ; Block:
    2262/     AFB :                     ;	1000Hz Vorton, 2x 1-Bit, 16x0-Bit
    2263/     AFB :                     ; 	32 Byte Daten
    2264/     AFB :                     ; 	2 Byte Prüfsumme
    2265/     AFB :                     ;
    2266/     AFB :                     ; Namensblock + 1. Datenblock: langer Vorton, sonst kurzer Vorton
    2267/     AFB :                     ; Namensblock: 
    2268/     AFB :                     ; 	32 Byte Namen: 'NNNNNNNN' + 16stelliger Name + ': X' + eadr + aadr. + 'L'
    2269/     AFB :                     ; 	"X" = Filekennung: "P" = Programm, "D" = Speicherabzug
    2270/     AFB :                     ; 	"B" = BASIC-Programm, "F" = BASIC-Feld
    2271/     AFB :                     ;------------------------------------------------------------------------------
    2272/     AFB :                     
    2273/     AFB : 00 09 4B 0D         		db 0,9,'K',0Dh
    2274/     AFF :                     
    2275/     AFF : CD 97 0B            		call	tbheader	; Kdo-Parameter aufbereiten
    2276/     B02 :                     					; ret HL = tb_blkbuf
    2277/     B02 : CD 37 0A            		call	q_ko21		; Start/Stop-Schaltung start
    2278/     B05 : 2B                  		dec	hl		; HL = tbh_special ('L')
    2279/     B06 : 22 7E 18            		ld	(tbb_eadr), hl	; Speicher Save/Load Turbo - Tape
    2280/     B09 : 21 96 18            		ld	hl, tb_kopfbuf
    2281/     B0C : 22 80 18            		ld	(tbb_aadr), hl
    2282/     B0F : CD E1 0B            loc_B0F:	call	sub_BE1		; Ausgabe "Warten"
    2283/     B12 : CD F7 0B            		call	tbsave
    2284/     B15 : 11 7E 18            		ld	de, tbb_eadr	; Speicher Save/Load Turbo - Tape
    2285/     B18 : 21 B1 18            		ld	hl, tbh_eadr
    2286/     B1B : 01 04 00            		ld	bc, 4
    2287/     B1E : ED B0               		ldir
    2288/     B20 : CD F7 0B            		call	tbsave
    2289/     B23 : C3 5B 0A            		jp	loc_A5B		; Ausgabe CRC, PIO Reset, EI
    2290/     B26 :                     
    2291/     B26 :                     ;------------------------------------------------------------------------------
    2292/     B26 :                     ; Funktion "Z" --> Kassette verify
    2293/     B26 :                     ; Z ("name") Verify Turbo-Tape
    2294/     B26 :                     ;------------------------------------------------------------------------------
    2295/     B26 :                     
    2296/     B26 : 00 09 5A 0D         		db 0,9,'Z',0Dh
    2297/     B2A :                     
    2298/     B2A : AF                  		xor	a
    2299/     B2B : 3D                  		dec	a		; A=0FFh
    2300/     B2C : 18 05               		jr	loc_B33
    2301/     B2E :                     
    2302/     B2E :                     ;------------------------------------------------------------------------------
    2303/     B2E :                     ; Funktion "L" --> Kassette load
    2304/     B2E :                     ; L ("name" Laden Programm Turbo-Tape
    2305/     B2E :                     ; L #("name") Laden Datei Turbo-Tape
    2306/     B2E :                     ;------------------------------------------------------------------------------
    2307/     B2E :                     
    2308/     B2E : 00 09 4C 0D         		db 0,9,'L',0Dh
    2309/     B32 :                     
    2310/     B32 : 82                  		add	a, d
    2311/     B33 : 08                  loc_B33:	ex	af, af'	; '
    2312/     B34 : CD 97 0B            		call	tbheader	; Kdo-Parameter aufbereiten
    2313/     B37 : CD 37 0A            		call	q_ko21		; Start/Stop-Schaltung start
    2314/     B3A : 22 80 18            		ld	(tbb_aadr), hl	; HL = tb_blkbuf
    2315/     B3D : 21 D5 18            		ld	hl, tb_blkbuf+31
    2316/     B40 : 22 7E 18            		ld	(tbb_eadr), hl	; eadr => 1 Block
    2317/     B43 : CD E1 0B            loc_B43:	call	sub_BE1		; Ausgabe "Warten"
    2318/     B46 :                     ; Kopfblock lesen
    2319/     B46 : CD 81 0C            loc_B46:	call	tbload		; Block lesen nach HL
    2320/     B49 :                     		; Vergleich Kopfkennung 8x'N'
    2321/     B49 : 21 B6 18            		ld	hl, tb_blkbuf
    2322/     B4C : 11 96 18            		ld	de, tb_kopfbuf
    2323/     B4F : 06 08               		ld	b, 8
    2324/     B51 : 1A                  loc_B51:	ld	a, (de)
    2325/     B52 : BE                  		cp	(hl)
    2326/     B53 : 20 F1               		jr	nz, loc_B46	; kein Kopfblock -> neu einlesen
    2327/     B55 : 23                  		inc	hl
    2328/     B56 : 13                  		inc	de
    2329/     B57 : 10 F8               		djnz	loc_B51
    2330/     B59 :                     		; Vergleich Dateiname + ': ' + Dateityp
    2331/     B59 : 06 13               		ld	b, 13h
    2332/     B5B : 1A                  loc_B5B:	ld	a, (de)
    2333/     B5C : BE                  		cp	(hl)
    2334/     B5D : 28 04               		jr	z, loc_B63	; wenn gleich
    2335/     B5F : FE 20               		cp	' '		; oder wenn ohne Vorgabe Dateiname
    2336/     B61 : 20 22               		jr	nz, loc_B85	; sonst Fehler
    2337/     B63 : 23                  loc_B63:	inc	hl
    2338/     B64 : 13                  		inc	de
    2339/     B65 : 10 F4               		djnz	loc_B5B
    2340/     B67 :                     		;
    2341/     B67 : 1E 7E               		ld	e, lo(tbb_eadr)	; hl=tbl_eadr de=tbb_eadr
    2342/     B69 : 0E 04               		ld	c, 4		; bc=4
    2343/     B6B : ED B0               		ldir			; eadr+aadr nach tbb_eadr+tbb_aadr
    2344/     B6D : 21 B7 0D            		ld	hl, aVerify	; Text "VERIFY"
    2345/     B70 : 08                  		ex	af, af'
    2346/     B71 : 3C                  		inc	a		; A=FF bei Verify
    2347/     B72 : 28 02               		jr	z, loc_B76	; Sprung, wenn Verify
    2348/     B74 : 2E BD               		ld	l, lo(aLaden)	; sonst Text "LADEN"
    2349/     B76 : 08                  loc_B76:	ex	af, af'
    2350/     B77 : CD 86 0D            		call	sub_D86		; Ausgabe Text
    2351/     B7A : CD 81 0C            		call	tbload		; Block lesen nach HL
    2352/     B7D : CD C9 0D            		call	loc_DC9
    2353/     B80 : DF                  		rst	18h		; PRNST
    2354/     B81 : 8D                  		db  8Dh	; 
    2355/     B82 : C3 2B 0A            		jp	q_ko19
    2356/     B85 :                     ; Dateiname stimmt nicht		
    2357/     B85 : CD C9 0D            loc_B85:	call	loc_DC9
    2358/     B88 : 20 B9               		jr	nz, loc_B43
    2359/     B8A : CD 83 0D            		call	sub_D83
    2360/     B8D : 18 B4               		jr	loc_B43
    2361/     B8F :                     
    2362/     B8F : FF                  		db 0FFh
    2363/     B90 :                     
    2364/     B90 :                     ;------------------------------------------------------------------------------
    2365/     B90 :                     ; UP "Zeitschleife 18 ms" zur Tastaturentprellung
    2366/     B90 :                     ; ungenutzt
    2367/     B90 :                     ;------------------------------------------------------------------------------
    2368/     B90 :                     
    2369/     B90 : C5                  		push	bc
    2370/     B91 : 01 81 04            		ld	bc, 0481h
    2371/     B94 : C3 21 01            		jp	ms301
    2372/     B97 :                     
    2373/     B97 :                     ;------------------------------------------------------------------------------
    2374/     B97 :                     ; UP zu Turbo Save und Load
    2375/     B97 :                     ; Kdo-Parameter aufbereiten, tb-Kopfblock füllen
    2376/     B97 :                     ;------------------------------------------------------------------------------
    2377/     B97 :                     
    2378/     B97 : 2A 5D 18            tbheader:	ld	hl, (ARG2)	; Argument 2
    2379/     B9A : 22 B1 18            		ld	(tbh_eadr), hl	; eadr
    2380/     B9D : 2A 5B 18            		ld	hl, (ARG1)	; Argument 1
    2381/     BA0 : 22 B3 18            		ld	(tbh_aadr), hl	; aadr
    2382/     BA3 : 0E 50               		ld	c, 'P'		; Typ Programm
    2383/     BA5 : 1A                  tbh1:		ld	a, (de)
    2384/     BA6 : FE 3A               		cp	':'		; dieselben Parameter?
    2385/     BA8 : 1B                  		dec	de		; Doppelpunkt
    2386/     BA9 : 28 FA               		jr	z, tbh1	; überlesen
    2387/     BAB : FE 2A               		cp	'*'		; Datei ?
    2388/     BAD : 20 04               		jr	nz, tbh2
    2389/     BAF :                     ; Datei		
    2390/     BAF : 1A                  		ld	a, (de)
    2391/     BB0 : 1B                  		dec	de
    2392/     BB1 : 0E 44               		ld	c, 'D'		; Typ Datei
    2393/     BB3 :                     ; Programm		
    2394/     BB3 : FE 22               tbh2:		cp	'"'		; folgt Name?
    2395/     BB5 : 21 96 18            		ld	hl, tb_kopfbuf
    2396/     BB8 : 06 08               		ld	b, 8		; 8x'N' eintragen
    2397/     BBA : 36 4E               tbh3:		ld	(hl), 'N'
    2398/     BBC : 23                  		inc	hl
    2399/     BBD : 10 FB               		djnz	tbh3
    2400/     BBF : 06 10               		ld	b, 10h		; 16 Zeichen Namen
    2401/     BC1 : 20 0C               		jr	nz, tbh5	; ?? nach djnz ist z immer 1
    2402/     BC3 : 1A                  tbh4:		ld	a, (de)
    2403/     BC4 : FE 22               		cp	'"'		; folgt Name?
    2404/     BC6 : 28 07               		jr	z, tbh5	; nein
    2405/     BC8 : 77                  		ld	(hl), a		; sonst Name kopieren
    2406/     BC9 : 1B                  		dec	de
    2407/     BCA : 23                  		inc	hl
    2408/     BCB : 10 F6               		djnz	tbh4		; max. 16 Zeichen
    2409/     BCD : 18 05               		jr	tbh6
    2410/     BCF : 36 20               tbh5:		ld	(hl), ' '	; kein Name oder Rest: Leerzeichen
    2411/     BD1 : 23                  		inc	hl
    2412/     BD2 : 10 FB               		djnz	tbh5
    2413/     BD4 : 36 3A               tbh6:		ld	(hl), ':'	; ': '+Typ
    2414/     BD6 : 23                  		inc	hl
    2415/     BD7 : 36 20               		ld	(hl), ' '
    2416/     BD9 : 23                  		inc	hl
    2417/     BDA : 71                  		ld	(hl), c
    2418/     BDB : 2E B5               		ld	l, lo(tbh_special)	; hl=tbh_special
    2419/     BDD : 36 4C               		ld	(hl), 'L'
    2420/     BDF : 23                  		inc	hl
    2421/     BE0 : C9                  		ret
    2422/     BE1 :                     
    2423/     BE1 :                     ;------------------------------------------------------------------------------
    2424/     BE1 :                     ; UP zu Kassette Load und Save Turbo
    2425/     BE1 :                     ;------------------------------------------------------------------------------
    2426/     BE1 :                     
    2427/     BE1 :                     ; Ausgabe Warten
    2428/     BE1 : DF                  sub_BE1:	rst	18h		; PRNST
    2429/     BE2 : 8D                  		db 8Dh
    2430/     BE3 : 21 B1 0D            		ld	hl, aWarten	; "WARTEN"
    2431/     BE6 :                     ; Ausgabe Status-Text HL, invers
    2432/     BE6 : DF                  loc_BE6:	rst	18h		; PRNST
    2433/     BE7 : 0E 33 31 91         		db 0Eh,"31",91h		; goto 31[,0]; 11h (invers)
    2434/     BEB : 06 06               		ld	b, 6		; 6 Zeichen
    2435/     BED : 7E                  loc_BED:	ld	a, (hl)
    2436/     BEE : D7                  		rst	10h		; OUTCH
    2437/     BEF : 23                  		inc	hl
    2438/     BF0 : 10 FB               		djnz	loc_BED
    2439/     BF2 : DF                  		rst	18h		; PRNST
    2440/     BF3 : 20 10 A0            		db ' ',10h,0A0h		; 10h invers Ende
    2441/     BF6 : C9                  		ret
    2442/     BF7 :                     
    2443/     BF7 :                     ;------------------------------------------------------------------------------
    2444/     BF7 :                     ; Kassette Save Turbo
    2445/     BF7 :                     ;------------------------------------------------------------------------------
    2446/     BF7 :                     
    2447/     BF7 : 2A 80 18            tbsave:		ld	hl, (tbb_aadr)	; Anfangsadsresse Block
    2448/     BFA : CD 0B 0C            		call	tbsav2		; Ausgabe Block langer Vorton
    2449/     BFD : EB                  tbsav1:		ex	de, hl
    2450/     BFE : 2A 7E 18            		ld	hl, (tbb_eadr)	; Endadresse Save-Bereich
    2451/     C01 : A7                  		and	a
    2452/     C02 : ED 52               		sbc	hl, de
    2453/     C04 : EB                  		ex	de, hl
    2454/     C05 : D8                  		ret	c		; wenn File zu Ende
    2455/     C06 : CD 10 0C            		call	tbsav3		; Ausgabe ein Block
    2456/     C09 : 18 F2               		jr	tbsav1		; weiter ausgeben
    2457/     C0B :                     
    2458/     C0B :                     ;------------------------------------------------------------------------------
    2459/     C0B :                     ; UPs zu tbsave
    2460/     C0B :                     ; siehe Routinen Monitor Z1013 / POLY-880
    2461/     C0B :                     ;------------------------------------------------------------------------------
    2462/     C0B :                     
    2463/     C0B :                     ; Ausgabe Block langer Vorton
    2464/     C0B : 11 D0 07            tbsav2:		ld	de, 2000	; langer Vorton
    2465/     C0E : 18 03               		jr	tbsav4
    2466/     C10 :                     
    2467/     C10 :                     ; Ausgabe ein Block = 20H Bytes
    2468/     C10 : 11 0E 00            tbsav3:		ld	de, 14		; kurzer Vorton
    2469/     C13 :                     ; Vorton: DE Halbschwingungen a 1000h
    2470/     C13 : 06 48               tbsav4:		ld	b, 48h
    2471/     C15 : 10 FE               tbsav5:		djnz	tbsav5
    2472/     C17 : CD 7A 0C            		call	tbsav21		; Flanke wechseln
    2473/     C1A : 1B                  		dec	de
    2474/     C1B : 7B                  		ld	a, e
    2475/     C1C : B2                  		or	d
    2476/     C1D : 20 F4               		jr	nz, tbsav4
    2477/     C1F :                     ;Trennschwingung: 1 Vollschwingung
    2478/     C1F : 0E 02               		ld	c, 2		; Ausgabe Synchron-
    2479/     C21 : 06 21               tbsav6:		ld	b, 21h		; impulse
    2480/     C23 : 10 FE               tbsav7:		djnz	tbsav7
    2481/     C25 : CD 7A 0C            		call	tbsav21		; Flanke wechseln
    2482/     C28 : 0D                  		dec	c
    2483/     C29 : 5D                  		ld	e, l
    2484/     C2A : 54                  		ld	d, h
    2485/     C2B : 20 F4               		jr	nz, tbsav6
    2486/     C2D : 00                  		nop
    2487/     C2E :                     ;		
    2488/     C2E : D5                  		push	de		; DE=IX=0000
    2489/     C2F : DD E1               		pop	ix
    2490/     C31 :                     ; Kopfinhalt ausgeben
    2491/     C31 : 06 08               		ld	b, 8		; kurze Pause
    2492/     C33 : 10 FE               tbsav8:		djnz	tbsav8
    2493/     C35 : CD 59 0C            		call	tbsav14		; Ausgabe DE
    2494/     C38 : 06 05               		ld	b, 5		; kurze Pause
    2495/     C3A : 10 FE               tbsav9:		djnz	tbsav9
    2496/     C3C :                     ; 20H Bytes ausgeben
    2497/     C3C : 0E 10               		ld	c, 10h		;10H*2 Bytes
    2498/     C3E : 5E                  tbsav10:		ld	e, (hl)
    2499/     C3F : 23                  		inc	hl
    2500/     C40 : 56                  		ld	d, (hl)
    2501/     C41 : DD 19               		add	ix, de
    2502/     C43 : 23                  		inc	hl
    2503/     C44 : C5                  		push	bc
    2504/     C45 : CD 59 0C            		call	tbsav14		; Ausgabe DE
    2505/     C48 : C1                  		pop	bc
    2506/     C49 : 0D                  		dec	c
    2507/     C4A : 28 06               		jr	z, tbsav12
    2508/     C4C : 06 03               		ld	b, 3
    2509/     C4E : 10 FE               tbsav11:		djnz	tbsav11
    2510/     C50 : 18 EC               		jr	tbsav10
    2511/     C52 :                     ; Pruefsumme ausgeben		
    2512/     C52 : DD E5               tbsav12:		push	ix
    2513/     C54 : D1                  		pop	de		; DE = Pruefsumme
    2514/     C55 : 06 07               		ld	b, 7		; kurze Pause
    2515/     C57 : 10 FE               tbsav13:		djnz	tbsav13
    2516/     C59 :                     ; Ausgabe 16 Bit DE
    2517/     C59 : 0E 10               tbsav14:		ld	c, 16		; 16 Bit
    2518/     C5B : CB 3A               tbsav15:		srl	d		; Hi-Bit in Cy schieben
    2519/     C5D : CB 1B               		rr	e
    2520/     C5F : 30 07               		jr	nc, tbsav17	; Cy=1, wenn Bit=1
    2521/     C61 :                     ; 1-Bit 1 Halbschwingung
    2522/     C61 : 06 03               		ld	b, 3
    2523/     C63 : 10 FE               tbsav16:		djnz	tbsav16
    2524/     C65 : 00                  		nop
    2525/     C66 : 18 03               		jr	tbsav18
    2526/     C68 :                     ; 0-Bit 1 Vollschwingung		
    2527/     C68 : CD 7A 0C            tbsav17:		call	tbsav21		; Flanke wechseln
    2528/     C6B : 06 0F               tbsav18:		ld	b, 0Fh
    2529/     C6D : 10 FE               tbsav19:		djnz	tbsav19
    2530/     C6F : CD 7A 0C            		call	tbsav21		; Flanke wechseln
    2531/     C72 : 0D                  		dec	c
    2532/     C73 : C8                  		ret	z
    2533/     C74 : 06 0B               		ld	b, 0Bh
    2534/     C76 : 10 FE               tbsav20:		djnz	tbsav20
    2535/     C78 : 18 E1               		jr	tbsav15
    2536/     C7A :                     ; Flanke wechseln
    2537/     C7A : DB 05               tbsav21:		in	a, (PIODB)
    2538/     C7C : EE 40               		xor	40h		; TB-Interface-Ausgang
    2539/     C7E : D3 05               		out	(PIODB), a
    2540/     C80 : C9                  		ret
    2541/     C81 :                     
    2542/     C81 :                     ;------------------------------------------------------------------------------
    2543/     C81 :                     ; Kassette Load Turbo
    2544/     C81 :                     ;------------------------------------------------------------------------------
    2545/     C81 :                     
    2546/     C81 : FD 21 82 18         tbload:		ld	iy, tb_errarr	; Fehler-Array
    2547/     C85 : 2A 80 18            		ld	hl, (tbb_aadr)	; Ziel-Adresse Block
    2548/     C88 : D9                  		exx
    2549/     C89 : 21 00 01            		ld	hl, 100h	; H=1, L=0
    2550/     C8C :                     					; H=RAM-Fehler-Counter
    2551/     C8C : D9                  		exx
    2552/     C8D : CD BD 0C            tbload1:	call	tb_loa3		; Block lesen (32 Byte) nach (HL)
    2553/     C90 : D9                  		exx
    2554/     C91 : 20 06               		jr	nz, tbload2	; Lesefehler (Prüfsumme)
    2555/     C93 : 25                  		dec	h		; Fehler-Counter > 1 ?
    2556/     C94 : 26 01               		ld	h, 1		; Fehler-Counter reset
    2557/     C96 : 28 14               		jr	z, tbload3	; nein, keine Fehler
    2558/     C98 : 2C                  		inc	l		; sonst Block-Fehler-Counter ++
    2559/     C99 : 26 01               tbload2:	ld	h, 1		; Fehler-Counter reset
    2560/     C9B : D9                  		exx
    2561/     C9C : FD 75 00            		ld	(iy+0),	l	; Blockendeadresse in
    2562/     C9F : FD 74 01            		ld	(iy+1),	h	; Fehler-Array ablegen
    2563/     CA2 : FD 23               		inc	iy		; Zeiger erhöhen
    2564/     CA4 : FD 23               		inc	iy
    2565/     CA6 : FD 7D               		ld	a, iyl		; undoc	code!
    2566/     CA8 : D6 94               		sub	lo(tb_errarr)+12h	; Array-Ende?
    2567/     CAA : C8                  		ret	z		; Array-Ende erreicht
    2568/     CAB : D9                  		exx
    2569/     CAC : D9                  tbload3:	exx
    2570/     CAD : EB                  		ex	de, hl
    2571/     CAE : 2A 7E 18            		ld	hl, (tbb_eadr)	; zu lesende Endeadresse 
    2572/     CB1 : A7                  		and	a		; erreicht?
    2573/     CB2 : ED 52               		sbc	hl, de
    2574/     CB4 : EB                  		ex	de, hl
    2575/     CB5 : D8                  		ret	c		; ja
    2576/     CB6 : 18 D5               		jr	tbload1		; sonst weiterlesen
    2577/     CB8 :                     
    2578/     CB8 : FF                  		db 0FFh
    2579/     CB9 : FF                  		db 0FFh
    2580/     CBA : FF                  		db 0FFh
    2581/     CBB : FF                  		db 0FFh
    2582/     CBC : FF                  		db 0FFh
    2583/     CBD :                     
    2584/     CBD :                     ;------------------------------------------------------------------------------
    2585/     CBD :                     ; UP zu sub_C81 zu Kassette Load Turbo
    2586/     CBD :                     ; siehe Monitorprogramm Z1013 / POLY-880
    2587/     CBD :                     ;------------------------------------------------------------------------------
    2588/     CBD :                     
    2589/     CBD :                     ; 20H Bytes laden nach (HL)
    2590/     CBD :                     ; ret Z=0 Ladefehler, Cy=1 Endeadresse erreicht
    2591/     CBD :                     
    2592/     CBD : CD 5A 0D            tb_loa3:	call	tb_loa24	; synchronisieren
    2593/     CC0 : CD 52 0D            		call	tb_loa25
    2594/     CC3 : 0E 07               		ld	c, 7
    2595/     CC5 : 11 0B 06            tb_loa5:	ld	de, 060Bh	; D=6, E=0Bh
    2596/     CC8 : 3E 02               		ld	a, 2
    2597/     CCA : 3D                  tb_loa6:	dec	a
    2598/     CCB : 20 FD               		jr	nz, tb_loa6
    2599/     CCD : CD 5A 0D            		call	tb_loa24	; synchronisieren
    2600/     CD0 : CD 5A 0D            tb_loa7:	call	tb_loa24	; Flanke ?
    2601/     CD3 : 20 E8               		jr	nz, tb_loa3	; wenn nicht Vorton
    2602/     CD5 : 15                  		dec	d
    2603/     CD6 : 20 F8               		jr	nz, tb_loa7
    2604/     CD8 : 0D                  		dec	c
    2605/     CD9 : 28 0C               		jr	z, tb_loa9
    2606/     CDB : DB 05               tb_loa8:	in	a, (PIODB)
    2607/     CDD : A8                  		xor	b
    2608/     CDE : CB 7F               		bit	7, a		; TB-Interface-Eingang
    2609/     CE0 : 20 E3               		jr	nz, tb_loa5
    2610/     CE2 : 1D                  		dec	e
    2611/     CE3 : 20 F6               		jr	nz, tb_loa8
    2612/     CE5 : 18 D6               		jr	tb_loa3
    2613/     CE7 :                     ; Synchronisierimpulse lesen		
    2614/     CE7 : CD 52 0D            tb_loa9:	call	tb_loa25	; Flanke abwarten
    2615/     CEA : 3E 2C               		ld	a, 2Ch
    2616/     CEC : 3D                  tb_loa10:	dec	a
    2617/     CED : 20 FD               		jr	nz, tb_loa10
    2618/     CEF : CD 5A 0D            		call	tb_loa24	; Flanke ?
    2619/     CF2 : 20 F3               		jr	nz, tb_loa9	; wenn nicht
    2620/     CF4 : CD 52 0D            		call	tb_loa25	; Flanke abwarten
    2621/     CF7 : 3E 12               		ld	a, 12h
    2622/     CF9 : 3D                  tb_loa11:	dec	a
    2623/     CFA : 20 FD               		jr	nz, tb_loa11
    2624/     CFC :                     ; 2 Bytes Kopf lesen		
    2625/     CFC : CD 64 0D            		call	tb_loa19	; lesen DE
    2626/     CFF :                     ; 20H Byte Daten lesen		
    2627/     CFF : 0E 10               		ld	c, 10h		; 10H x 2 Bytes
    2628/     D01 : D5                  		push	de
    2629/     D02 : DD E1               		pop	ix		; IX-Pruefsummenzaehler
    2630/     D04 : 3E 0D               		ld	a, 0Dh
    2631/     D06 : 3D                  tb_loa12:	dec	a
    2632/     D07 : 20 FD               		jr	nz, tb_loa12
    2633/     D09 : CD 64 0D            tb_loa13:	call	tb_loa19	; laden DE
    2634/     D0C : DD 19               		add	ix, de		; Pruefsumme bilden
    2635/     D0E : C5                  		push	bc
    2636/     D0F : 4D                  		ld	c, l
    2637/     D10 : 44                  		ld	b, h
    2638/     D11 : 2A 7E 18            		ld	hl, (tbb_eadr)	; Endadresse
    2639/     D14 : AF                  		xor	a
    2640/     D15 : ED 42               		sbc	hl, bc		; Endadresse erreicht?
    2641/     D17 : 69                  		ld	l, c
    2642/     D18 : 60                  		ld	h, b
    2643/     D19 : C1                  		pop	bc
    2644/     D1A : 38 16               		jr	c, tb_loa14	; ja --> Leseende
    2645/     D1C :                     		;
    2646/     D1C : 08                  		ex	af, af'
    2647/     D1D : 28 04               		jr	z, loc_D23	; bei Verify nicht speichern
    2648/     D1F :                     		;
    2649/     D1F : 73                  		ld	(hl), e		; DE auf (HL) ablegen
    2650/     D20 : 23                  		inc	hl
    2651/     D21 : 72                  		ld	(hl), d
    2652/     D22 :                     		;
    2653/     D22 : 2B                  		dec	hl
    2654/     D23 : 08                  loc_D23:	ex	af, af'
    2655/     D24 :                     		; Verify bzw. Test auf RAM
    2656/     D24 : 7B                  		ld	a, e
    2657/     D25 : BE                  		cp	(hl)
    2658/     D26 : 23                  		inc	hl
    2659/     D27 : 7A                  		ld	a, d
    2660/     D28 : 20 03               		jr	nz, loc_D2D	; E ungleich o. kein RAM
    2661/     D2A : BE                  		cp	(hl)
    2662/     D2B : 28 0B               		jr	z, tb_loa16	; D gleich, weiter, sonst
    2663/     D2D : D9                  loc_D2D:	exx
    2664/     D2E : 24                  		inc	h		; Fehler-Counter
    2665/     D2F : D9                  		exx
    2666/     D30 : 18 06               		jr	tb_loa16
    2667/     D32 :                     		;
    2668/     D32 : 3E 04               tb_loa14:	ld	a, 4
    2669/     D34 : 3D                  tb_loa15:	dec	a
    2670/     D35 : 20 FD               		jr	nz, tb_loa15
    2671/     D37 : 2B                  		dec	hl
    2672/     D38 : 23                  tb_loa16:	inc	hl
    2673/     D39 : 3E 02               		ld	a, 2
    2674/     D3B : 3D                  tb_loa17:	dec	a
    2675/     D3C : 20 FD               		jr	nz, tb_loa17
    2676/     D3E : 0D                  		dec	c
    2677/     D3F : 20 C8               		jr	nz, tb_loa13	; naechste 2 Byte
    2678/     D41 :                     ;Pruefsumme lesen		
    2679/     D41 : CD 64 0D            		call	tb_loa19	; lesen DE
    2680/     D44 : EB                  		ex	de, hl
    2681/     D45 : DD E5               		push	ix
    2682/     D47 : C1                  		pop	bc
    2683/     D48 : AF                  		xor	a
    2684/     D49 : ED 42               		sbc	hl, bc		; Prüfsumme gleich?
    2685/     D4B : EB                  		ex	de, hl		; Z=0 Ladefehler
    2686/     D4C : C9                  		ret
    2687/     D4D :                     
    2688/     D4D :                     ;------------------------------------------------------------------------------
    2689/     D4D :                     ; Funktion für Sprungverteiler 7E8h
    2690/     D4D :                     ;------------------------------------------------------------------------------
    2691/     D4D :                     
    2692/     D4D : CD 97 02            TASTE:		call	UPTAST
    2693/     D50 : 18 5B               		jr	loc_DAD		; zusätzlich Bit 7 setzen
    2694/     D52 :                     
    2695/     D52 :                     ;------------------------------------------------------------------------------
    2696/     D52 :                     ; UP zu Kassette Load Turbo
    2697/     D52 :                     ;------------------------------------------------------------------------------
    2698/     D52 :                     
    2699/     D52 :                     ; Warten auf Flankenwechsel
    2700/     D52 : DB 05               tb_loa25:	in	a, (PIODB)
    2701/     D54 : A8                  		xor	b
    2702/     D55 : CB 7F               		bit	7, a		; TB-Interface-Eingang
    2703/     D57 : 28 F9               		jr	z, tb_loa25
    2704/     D59 : C9                  		ret
    2705/     D5A :                     		
    2706/     D5A :                     ;------------------------------------------------------------------------------
    2707/     D5A :                     ; UP zu Kassette Load Turbo
    2708/     D5A :                     ;------------------------------------------------------------------------------
    2709/     D5A :                     
    2710/     D5A :                     ; Portabfrage
    2711/     D5A : DB 05               tb_loa24:	in	a, (PIODB)
    2712/     D5C : A8                  		xor	b
    2713/     D5D : CB 7F               		bit	7, a		; TB-Interface-Eingang
    2714/     D5F : F5                  		push	af
    2715/     D60 : A8                  		xor	b
    2716/     D61 : 47                  		ld	b, a
    2717/     D62 : F1                  		pop	af		; Z=0 --> Flanke
    2718/     D63 : C9                  		ret
    2719/     D64 :                     
    2720/     D64 :                     ;------------------------------------------------------------------------------
    2721/     D64 :                     ;  UP zu Kassette Load Turbo
    2722/     D64 :                     ;------------------------------------------------------------------------------
    2723/     D64 :                     
    2724/     D64 :                     ; Laden 2 Byte nach DE
    2725/     D64 : E5                  tb_loa19:	push	hl
    2726/     D65 : 2E 10               		ld	l, 10h		; 16 Datenbits
    2727/     D67 : CD 5A 0D            tb_loa20:	call	tb_loa24
    2728/     D6A : 20 03               		jr	nz, tb_loa21
    2729/     D6C : AF                  		xor	a		; Cy=0
    2730/     D6D : 18 01               		jr	tb_loa22
    2731/     D6F : 37                  tb_loa21:	scf
    2732/     D70 : CB 1A               tb_loa22:	rr	d
    2733/     D72 : CB 1B               		rr	e
    2734/     D74 : CD 52 0D            		call	tb_loa25	; Flanke abwarten
    2735/     D77 : 2D                  		dec	l
    2736/     D78 : 28 07               		jr	z, tb_loa23	; wenn fertig
    2737/     D7A : 3E 12               		ld	a, 12h
    2738/     D7C : 3D                  tb_loa26:	dec	a
    2739/     D7D : 20 FD               		jr	nz, tb_loa26
    2740/     D7F : 18 E6               		jr	tb_loa20
    2741/     D81 : E1                  tb_loa23:	pop	hl
    2742/     D82 : C9                  		ret
    2743/     D83 :                     		
    2744/     D83 :                     ;------------------------------------------------------------------------------
    2745/     D83 :                     ;  UP zu Kassette Load Turbo
    2746/     D83 :                     ;------------------------------------------------------------------------------
    2747/     D83 :                     
    2748/     D83 : 21 C3 0D            sub_D83:	ld	hl, aFound	; "FOUND "
    2749/     D86 : CD E6 0B            sub_D86:	call	loc_BE6		; Ausgabe Status
    2750/     D89 :                     ; sub_D89 wird extern in Turbo genutzt
    2751/     D89 :                     ; Anzeige Dateiname, aadr, eadr
    2752/     D89 : 21 BE 18            sub_D89:	ld	hl, tbl_filename	; Dateiname
    2753/     D8C : 06 13               		ld	b, 13h
    2754/     D8E : 7E                  loc_D8E:	ld	a, (hl)
    2755/     D8F : D7                  		rst	10h		; OUTCH
    2756/     D90 : 23                  		inc	hl
    2757/     D91 : 10 FB               		djnz	loc_D8E
    2758/     D93 : DF                  		rst	18h		; PRNST
    2759/     D94 : 20 20 20 A0         		db "   ",0A0h
    2760/     D98 : 2A D3 18            		ld	hl, (tbl_aadr)	; gelesene aadr
    2761/     D9B : 22 5B 18            		ld	(ARG1),	hl	; in Argument 1 sichern
    2762/     D9E : CD 9A 01            		call	OUTHL		; Ausgabe HL hexadezimal
    2763/     DA1 : DF                  		rst	18h		; PRNST
    2764/     DA2 : 20 A0               		db ' ',0A0h
    2765/     DA4 : 2A D1 18            		ld	hl, (tbl_eadr)	; gelesene eadr
    2766/     DA7 : 22 5D 18            		ld	(ARG2),	hl	; in Argument 2 sichern
    2767/     DAA : C3 9A 01            		jp	OUTHL		; Ausgabe HL hexadezimal
    2768/     DAD : C8                  loc_DAD:	ret	z
    2769/     DAE : CB FF               		set	7, a
    2770/     DB0 : C9                  		ret
    2771/     DB1 :                     
    2772/     DB1 :                     ;------------------------------------------------------------------------------
    2773/     DB1 :                     ; Turbo Meldungen
    2774/     DB1 :                     ;------------------------------------------------------------------------------
    2775/     DB1 :                     
    2776/     DB1 : 57 41 52 54 45 4E   aWarten:	db "WARTEN"
    2777/     DB7 : 56 45 52 49 46 59   aVerify:	db "VERIFY"
    2778/     DBD : 4C 41 44 45 4E 20   aLaden:		db "LADEN "
    2779/     DC3 : 46 4F 55 4E 44 20   aFound:		db "FOUND "
    2780/     DC9 :                     
    2781/     DC9 :                     ;------------------------------------------------------------------------------
    2782/     DC9 :                     ; UP zu Kassette Load Turbo
    2783/     DC9 :                     ;------------------------------------------------------------------------------
    2784/     DC9 :                     
    2785/     DC9 :                     ; Fehler
    2786/     DC9 : 11 82 18            loc_DC9:	ld	de, tb_errarr	; Blockfehler-Array
    2787/     DCC : FD 7D               		ld	a, iyl
    2788/     DCE : 93                  		sub	e
    2789/     DCF : C8                  		ret	z		; ret, wenn keine Einträge
    2790/     DD0 :                     		; sonst Ausgabe Fehlerliste
    2791/     DD0 : DF                  		rst	18h		; PRNST
    2792/     DD1 : 8D                  		db 8Dh
    2793/     DD2 : CD 68 02            		call	error		; Ausgabe "Error"
    2794/     DD5 : 0F                  		rrca
    2795/     DD6 : 47                  		ld	b, a
    2796/     DD7 : D9                  		exx
    2797/     DD8 : 95                  		sub	l
    2798/     DD9 : D9                  		exx
    2799/     DDA : 20 05               		jr	nz, loc_DE1
    2800/     DDC : DF                  		rst	18h		; PRNST
    2801/     DDD : 52 41 4D BA         		db "RAM",':'+80h
    2802/     DE1 : 1A                  loc_DE1:	ld	a, (de)
    2803/     DE2 : 13                  		inc	de
    2804/     DE3 : 6F                  		ld	l, a
    2805/     DE4 : 1A                  		ld	a, (de)
    2806/     DE5 : 13                  		inc	de
    2807/     DE6 : 67                  		ld	h, a
    2808/     DE7 : DF                  		rst	18h		; PRNST
    2809/     DE8 : A0                  		db	' '+80h
    2810/     DE9 : CD 9A 01            		call	OUTHL		; Ausgabe HL hexadezimal
    2811/     DEC : 10 F3               		djnz	loc_DE1
    2812/     DEE : 05                  		dec	b
    2813/     DEF : C9                  		ret
    2814/     DF0 :                     
    2815/     DF0 :                     ;------------------------------------------------------------------------------
    2816/     DF0 :                     ; Autostart-Test
    2817/     DF0 :                     ;------------------------------------------------------------------------------
    2818/     DF0 :                     
    2819/     DF0 : CD 31 0A            loc_DF0:	call	q_ko20		; Start/Stop-Schaltung stopp
    2820/     DF3 : EB                  		ex	de, hl
    2821/     DF4 : CD 7B 0A            		call	tstsch		; Test auf 'SCH' auf Programmanfang (DE)
    2822/     DF7 : C0                  		ret	nz		; kein Autostart
    2823/     DF8 : E9                  		jp	(hl)		; sonst starten
    2824/     DF9 :                     ;
    2825/     DF9 :                     
    2826/     DF9 :                     ;------------------------------------------------------------------------------
    2827/     DF9 :                     ; routch
    2828/     DF9 :                     ; Ausgabe V24
    2829/     DF9 :                     ; in hl=kdov24 Kontrollregister
    2830/     DF9 :                     ;------------------------------------------------------------------------------
    2831/     DF9 :                     ; PIO2 A1 Ausgang Daten TxD 
    2832/     DF9 :                     ;      A2 Eingang empfangsbereit CTS 
    2833/     DF9 :                     ; Taktraten gelten bei 2.4 MHz Systemtakt
    2834/     DF9 :                     ;------------------------------------------------------------------------------
    2835/     DF9 :                     
    2836/     DF9 : E5                  v24out:		push	hl
    2837/     DFA : D5                  		push	de
    2838/     DFB : C5                  		push	bc
    2839/     DFC : F5                  		push	af
    2840/     DFD : 21 20 18            		ld	hl, kdov24	; Kontrollregister
    2841/     E00 : 01 FF 7F            		ld	bc, 7FFFh	; Datenmaske 7F= 7 Bit, FF= 8 Bit
    2842/     E03 : CB 66               		bit	4, (hl)		; 1=7 Datenbit, + P.ungerade
    2843/     E05 : 20 05               		jr	nz, v24out2	; ja
    2844/     E07 : CB 6E               		bit	5, (hl)		; 1=7 Datenbit, + P.gerade
    2845/     E09 : 28 07               		jr	z, v24out3	; nein -> 8 Datenbit
    2846/     E0B : 48                  		ld	c, b		; ja: c=7F, sonst c=FF
    2847/     E0C :                     v24out2:	; parity bestimmen
    2848/     E0C : A0                  		and	b		; ggf. 7. Bit löschen
    2849/     E0D : EA 12 0E            		jp	pe, v24out3
    2850/     E10 : CB FF               		set	7, a		; Parity setzen
    2851/     E12 : A9                  v24out3:	xor	c		; Maske anwenden, bits negieren
    2852/     E13 : 4F                  		ld	c, a		; c=auszugebendes Zeichen
    2853/     E14 :                     		;
    2854/     E14 : 7E                  		ld	a, (hl)		; kdov24
    2855/     E15 : E6 07               		and	7		; Baudrate
    2856/     E17 : 47                  		ld	b, a
    2857/     E18 : 3E 01               		ld	a, 1
    2858/     E1A : 87                  v24out4:	add	a, a
    2859/     E1B : 10 FD               		djnz	v24out4
    2860/     E1D : 57                  		ld	d, a		; Baudratenzähler d=2^b
    2861/     E1E :                     					; b=1,d=2 19200 Baud, 
    2862/     E1E :                     					; b=2, d=4 9600 Baud
    2863/     E1E :                     					; .. b=7, d=128 300 Baud 
    2864/     E1E :                     		;
    2865/     E1E : CB 76               		bit	6, (hl)		; 1=3-Draht-Handshake
    2866/     E20 : 20 06               		jr	nz, v24out6	; dann nicht auf CTS warten
    2867/     E22 : DB 08               v24out5:	in	a, (PIO2DA)	; sonst X-Draht
    2868/     E24 : CB 57               		bit	2, a		; empfangsbereit CTS ?
    2869/     E26 : 20 FA               		jr	nz, v24out5	; warten auf Freigabe
    2870/     E28 :                     		;
    2871/     E28 : 06 0A               v24out6:	ld	b, 10		; 10 Bits senden (Start - 8Bit/7Bit+P - Stop)
    2872/     E2A : CB 5E               		bit	3, (hl)		; Stop-bit
    2873/     E2C : 28 01               		jr	z, v24out7	; 0=1 Stop-bit	
    2874/     E2E : 04                  		inc	b		; sonst ein Stop-Bit mehr
    2875/     E2F : 37                  v24out7:	scf			; Start mit 1-Bits
    2876/     E30 :                     		;
    2877/     E30 : 5A                  v24out8:	ld	e, d		; Baudratenzähler		4   Takte
    2878/     E31 : CB CF               		set	1, a		; b1=1				8
    2879/     E33 : 30 02               		jr	nc, v24out9	;				12/7
    2880/     E35 : CB 8F               		res	1, a		; b1=0				8 
    2881/     E37 : D3 08               v24out9:	out	(PIO2DA), a	; A1 Ausgang Daten TxD		(11
    2882/     E39 : E5                  		push	hl		; Zeitverzögerung		11
    2883/     E3A : E1                  		pop	hl		; Zeitverzögerung		10
    2884/     E3B : 7F                  		ld	a, a		; Zeitverzögerung		4
    2885/     E3C : 1D                  		dec	e		;				4
    2886/     E3D : 20 F8               		jr	nz, v24out9	;				12) * E - 5
    2887/     E3F : CB 39               		srl	c		; c=auszugebendes Zeichen	8
    2888/     E41 :                     					; nächstes Bit nach Cy
    2889/     E41 : 10 ED               		djnz	v24out8		;				13
    2890/     E43 :                     					; insg. 251 bzw.248 Takte bei E=4 (9600 Baud)
    2891/     E43 : F1                  		pop	af
    2892/     E44 : C1                  		pop	bc
    2893/     E45 : D1                  		pop	de
    2894/     E46 : E1                  		pop	hl
    2895/     E47 : C9                  		ret
    2896/     E48 :                     		
    2897/     E48 :                     ;------------------------------------------------------------------------------
    2898/     E48 :                     ; :: Arg. Argument Anzeige
    2899/     E48 :                     ;------------------------------------------------------------------------------
    2900/     E48 :                     		
    2901/     E48 : 00 09 3A 0D         		db 0,9,':',0Dh
    2902/     E4C :                     
    2903/     E4C : CD CA 04            		call	para
    2904/     E4F : CD F1 07            		call	j_OUTHL		; HL = ARG1
    2905/     E52 : DF                  		rst	18h
    2906/     E53 : A0                  		db 0A0h
    2907/     E54 : EB                  		ex	de, hl
    2908/     E55 : CD F1 07            		call	j_OUTHL		; DE = ARG2
    2909/     E58 : 60                  		ld	h, b
    2910/     E59 : 69                  		ld	l, c
    2911/     E5A : DF                  		rst	18h
    2912/     E5B : A0                  		db 0A0h
    2913/     E5C : CD F1 07            		call	j_OUTHL		; BC = ARG3
    2914/     E5F : DF                  		rst	18h
    2915/     E60 : 8D                  		db 8Dh
    2916/     E61 : C9                  		ret
    2917/     E62 :                     
    2918/     E62 :                     ;------------------------------------------------------------------------------
    2919/     E62 :                     ; p Pattern Speicher löschen von 1900-FFFF, FF einschreiben
    2920/     E62 :                     ;
    2921/     E62 :                     ; vp: korrekter ab data löschen, nicht erst ab 1900h !
    2922/     E62 :                     ;------------------------------------------------------------------------------
    2923/     E62 :                     
    2924/     E62 : 00 09 70 0D         		db 0,9,'p',0Dh
    2925/     E66 :                     
    2926/     E66 : 21 58 18            		ld	hl, data	; ab data 
    2927/     E69 : 36 FF               		ld	(hl), 0FFh
    2928/     E6B : 11 59 18            		ld	de, data+1
    2929/     E6E : 01 A7 E7            		ld	bc, 0FFFFh-data
    2930/     E71 : ED B0               		ldir
    2931/     E73 : DF                  		rst	18h
    2932/     E74 : 20 43 6C 65 61 72   		db " Clear RAM",8Dh
                    20 52 41 4D 8D    
    2933/     E7F : C9                  		ret
    2934/     E80 :                     
    2935/     E80 :                     ;------------------------------------------------------------------------------
    2936/     E80 :                     ; Uxx In Lesen auf Portadresse
    2937/     E80 :                     ;------------------------------------------------------------------------------
    2938/     E80 :                     
    2939/     E80 : 00 09 55 0D         		db 0,9,'U',0Dh
    2940/     E84 :                     
    2941/     E84 : 2A 5B 18            		ld	hl, (ARG1)
    2942/     E87 : 4D                  		ld	c, l		; c=Port xx
    2943/     E88 : ED 5B 1A 18         		ld	de, (soil)
    2944/     E8C : 13                  		inc	de
    2945/     E8D : CD F7 07            		call	j_INHEX
    2946/     E90 : ED 53 00 18         loc_E90:	ld	(cupos), de	; Cursor rücksetzen
    2947/     E94 : DF                  		rst	18h		; Ausgabe '*'
    2948/     E95 : AA                  		db '*'+80h
    2949/     E96 : ED 78               		in	a, (c)		; Port einlesen
    2950/     E98 : CD 83 01            		call	OUTHEX		; anzeigen
    2951/     E9B : CD FA 07            loc_E9B:	call	j_TASTE
    2952/     E9E : 28 FB               		jr	z, loc_E9B
    2953/     EA0 : FE D1               		cp	'Q' + 80h	
    2954/     EA2 : C8                  		ret	z		; Ende bei 'Q'
    2955/     EA3 : 18 EB               		jr	loc_E90		; sonst weiter einlesen
    2956/     EA5 :                     
    2957/     EA5 :                     ;------------------------------------------------------------------------------
    2958/     EA5 :                     ; UP zu =
    2959/     EA5 :                     ;------------------------------------------------------------------------------
    2960/     EA5 :                     
    2961/     EA5 : ED A0               sub_EA5:	ldi
    2962/     EA7 : 1B                  		dec	de		; inc de von ldi rückgängig
    2963/     EA8 : 1B                  		dec	de		; inc pos im bws
    2964/     EA9 : EA A5 0E            		jp	pe, sub_EA5
    2965/     EAC : C9                  		ret
    2966/     EAD :                     
    2967/     EAD : FF                  		db 0FFh
    2968/     EAE : FF                  		db 0FFh
    2969/     EAF : FF                  		db 0FFh
    2970/     EB0 : FF                  		db 0FFh
    2971/     EB1 : FF                  		db 0FFh
    2972/     EB2 : FF                  		db 0FFh
    2973/     EB3 : FF                  		db 0FFh
    2974/     EB4 :                     
    2975/     EB4 :                     ;------------------------------------------------------------------------------
    2976/     EB4 :                     ;UP "Joy".Abfrage Joystick 1,keine Taste Z - Flag
    2977/     EB4 :                     ;	    gesetzt und	A = 0,oben bit 0, unten	bit 1,links
    2978/     EB4 :                     ;	    bit	2, rechts bit 3, Feuerknopf bit	4 vom Akku
    2979/     EB4 :                     ;	    gesetzt.
    2980/     EB4 :                     ;------------------------------------------------------------------------------
    2981/     EB4 :                     
    2982/     EB4 : C5                  JOYST:		push	bc
    2983/     EB5 : DB 05               		in	a, (PIODB)
    2984/     EB7 : 4F                  		ld	c, a
    2985/     EB8 : CB 8F               		res	1, a
    2986/     EBA : D3 05               		out	(PIODB), a
    2987/     EBC : DB 04               		in	a, (PIODA)	; Tastatur
    2988/     EBE : 47                  		ld	b, a
    2989/     EBF : 79                  		ld	a, c
    2990/     EC0 : D3 05               		out	(PIODB), a
    2991/     EC2 : 78                  		ld	a, b
    2992/     EC3 : 00                  		nop
    2993/     EC4 : E6 1F               		and	1Fh
    2994/     EC6 : C1                  		pop	bc
    2995/     EC7 : C9                  		ret
    2996/     EC8 :                     
    2997/     EC8 :                     ;------------------------------------------------------------------------------
    2998/     EC8 :                     ;? Help
    2999/     EC8 :                     ;------------------------------------------------------------------------------
    3000/     EC8 :                     
    3001/     EC8 : 00 09 3F 0D         		db 0,9,'?',0Dh
    3002/     ECC :                     
    3003/     ECC : DF                  help:		rst	18h		; PRNST
    3004/     ECD : 48 65 6C 70 3A 8D   		db "Help:",8Dh
    3005/     ED3 : 21 00 02            		ld	hl, KDOANF	; Suchbereich Anfang
    3006/     ED6 : 01 00 FE            		ld	bc, RAMEND-KDOANF+1	; Länge
    3007/     ED9 : AF                  help1:		xor	a		; suche 00
    3008/     EDA : ED B1               		cpir
    3009/     EDC : E0                  		ret	po
    3010/     EDD : 3E 09               		ld	a, 9		; folgt 09?
    3011/     EDF : BE                  		cp	(hl)
    3012/     EE0 : 20 F7               		jr	nz, help1
    3013/     EE2 : 23                  		inc	hl
    3014/     EE3 : 56                  		ld	d, (hl)		; kdo merken
    3015/     EE4 : 23                  		inc	hl
    3016/     EE5 : 3E 0D               		ld	a, 0Dh		; folgt 0D?
    3017/     EE7 : BE                  		cp	(hl)
    3018/     EE8 : 20 EF               		jr	nz, help1	; wenn Rahmen nicht gefunden
    3019/     EEA : 7A                  		ld	a, d		; sonst kdo anzeigen
    3020/     EEB : D7                  		rst	10h		; OUTCH
    3021/     EEC : DF                  		rst	18h		; PRNST
    3022/     EED : 20 20 A0            		db "  ",0A0h
    3023/     EF0 : 18 E7               		jr	help1
    3024/     EF2 :                     
    3025/     EF2 :                     ;------------------------------------------------------------------------------
    3026/     EF2 :                     ; routch
    3027/     EF2 :                     ; iobyt
    3028/     EF2 :                     ; Ausgabe: b4 Bildschirm, b5 V24 (RS 232c), b6 Reserve, b7 User
    3029/     EF2 :                     ;------------------------------------------------------------------------------
    3030/     EF2 :                     
    3031/     EF2 :                     ; zu routch
    3032/     EF2 : 21 20 18            routch0:	ld	hl, kdov24
    3033/     EF5 : CB 7E               		bit	7, (hl)
    3034/     EF7 : 20 02               		jr	nz, routch2
    3035/     EF9 : E6 7F               		and	7Fh
    3036/     EFB : 23                  routch2:	inc	hl		; HL=IOBYT
    3037/     EFC :                     ; zusätzliche Steuercodes auswerten
    3038/     EFC : FE 18               		cp	18h		; Drucker ein (V24)
    3039/     EFE : 28 07               		jr	z, routch3
    3040/     F00 : FE 19               		cp	19h		; Drucker aus (V24)
    3041/     F02 : 20 07               		jr	nz, routch4	; sonst
    3042/     F04 : 36 11               		ld	(hl), 11h	; Drucker aus: Std.-IO
    3043/     F06 : 21                  		db	21h		; ld hl, xxx; nächsten Befehl überspringen
    3044/     F07 : CB EE               routch3:	set	5, (hl)		; V24 im IOBYT zusätzlich aktivieren
    3045/     F09 : 18 14               		jr	routch5
    3046/     F0B :                     ;
    3047/     F0B : CB 66               routch4:	bit	4, (hl)		; b4 ?
    3048/     F0D : C4 33 00            		call	nz, co		; Ausgabe über Bildschirm
    3049/     F10 : CB 6E               		bit	5, (hl)		; b5 ?
    3050/     F12 : C4 F9 0D            		call	nz, v24out	; V24 (RS 232c)
    3051/     F15 : CB 76               		bit	6, (hl)		; b6 ? Reserve
    3052/     F17 : C4 FF FF            		call	nz, 0FFFFh	; dort steht normalerweise FF -> break
    3053/     F1A : CB 7E               		bit	7, (hl)		; b7 ?
    3054/     F1C : C4 F3 18            		call	nz, unk_18F3	; User-Ausgaberoutine
    3055/     F1F : F1                  routch5:	pop	af
    3056/     F20 : E1                  		pop	hl
    3057/     F21 : C9                  		ret
    3058/     F22 :                     
    3059/     F22 :                     ;------------------------------------------------------------------------------
    3060/     F22 :                     ; = Speichern 	Ablegen Bildschirm nach A000H - DFFFH (8 Seiten)
    3061/     F22 :                     ; rechts oben Eingabe Ziffer von 0 bis 7.
    3062/     F22 :                     ; der Bildschirminhalt auf Adresse A000 - DFFF mit Seitenummer abgelegt.
    3063/     F22 :                     ;------------------------------------------------------------------------------
    3064/     F22 :                     
    3065/     F22 : 00 09 3D 0D         		db 0,9,'=',0Dh
    3066/     F26 :                     
    3067/     F26 : DF                  		rst	18h		; PRNST
    3068/     F27 : 0B 86               		db 0Bh,86h		; up, Zeilenanfang
    3069/     F29 : 2A 00 18            		ld	hl, (cupos)
    3070/     F2C : DF                  		rst	18h		; PRNST
    3071/     F2D : 0E 30 30 35 39 AF   		db 0Eh,"0059",'/'+80h	; goto 00,59
    3072/     F33 :                     		; Abfrage Bildnummer 0..7
    3073/     F33 : CF                  		rst	8		; INCH
    3074/     F34 : D7                  		rst	10h		; OUTCH
    3075/     F35 : 22 00 18            		ld	(cupos), hl
    3076/     F38 : FE 38               		cp	'8'		; erlaubt '0'-'7'
    3077/     F3A : D0                  		ret	nc
    3078/     F3B : FE 30               		cp	'0'
    3079/     F3D : D8                  		ret	c
    3080/     F3E : D6 30               		sub	30h ; '0'
    3081/     F40 : 47                  		ld	b, a		; B=Bildnummer
    3082/     F41 : 04                  		inc	b		; 1..8
    3083/     F42 : 11 00 08            		ld	de, LINES*COLS	; 2 K = BWS-Size
    3084/     F45 : 21 FF 9F            		ld	hl, 9FFFh	; => A7FF = Ende erster Speicher
    3085/     F48 : 19                  eqko1:		add	hl, de
    3086/     F49 : 10 FD               		djnz	eqko1
    3087/     F4B : EB                  		ex	de, hl		; DE=Zieladr
    3088/     F4C : E5                  		push	hl		; HL=800h
    3089/     F4D : C1                  		pop	bc		; BC=Länge 2K
    3090/     F4E : 21 00 10            		ld	hl, BWS
    3091/     F51 : C3 A5 0E            		jp	sub_EA5		; kopieren
    3092/     F54 :                     
    3093/     F54 :                     ;------------------------------------------------------------------------------
    3094/     F54 :                     ; /n		Bildschirmkopie zurückschreiben
    3095/     F54 :                     ; Mit /0 - /7 wird der abgelegte Bilschirminhalt wieder dargestellt. 
    3096/     F54 :                     ; Seitenweises Umblättern mit den Kursortasten.
    3097/     F54 :                     ;------------------------------------------------------------------------------
    3098/     F54 :                     
    3099/     F54 :                     ; der BWS wird im Speicher in aufsteigender Folge abgelegt, d.h.
    3100/     F54 :                     ; genau andersrum als im Bildspeicher! (links oben=kleinste Adr.)
    3101/     F54 :                     
    3102/     F54 : 00 09 2F 0D         		db 0,9,'/',0Dh
    3103/     F58 :                     
    3104/     F58 : 21 00 98            		ld	hl, 9800h	; A000h = erster Speicher
    3105/     F5B : 3A 5B 18            		ld	a, (ARG1)
    3106/     F5E : FE 08               		cp	8
    3107/     F60 : D0                  		ret	nc
    3108/     F61 : 3C                  		inc	a		; +1
    3109/     F62 : 11 00 08            		ld	de, LINES*COLS	; 2 K = BWS-Size
    3110/     F65 : 47                  		ld	b, a
    3111/     F66 : 19                  slko1:		add	hl, de
    3112/     F67 : 10 FD               		djnz	slko1		; HL=Bufferadr.
    3113/     F69 : 11 FF 17            slko2:		ld	de, BWSANF
    3114/     F6C : 01 00 08            slko3:		ld	bc, LINES*COLS	; Länge
    3115/     F6F : E5                  		push	hl
    3116/     F70 : CD A5 0E            		call	sub_EA5		; kopieren
    3117/     F73 : DF                  		rst	18h		; PRNST
    3118/     F74 : 01 0B 91            		db 1, 0Bh, 91h		; home, up, inv
    3119/     F77 : EB                  		ex	de, hl
    3120/     F78 : E1                  		pop	hl		; Anfangsadresse Buffer
    3121/     F79 : CD F1 07            		call	j_OUTHL		; anzeigen
    3122/     F7C : DF                  		rst	18h		; PRNST
    3123/     F7D : AD                  		db '-' + 80h
    3124/     F7E : EB                  		ex	de, hl
    3125/     F7F : 2B                  		dec	hl		; Endadresse Buffer
    3126/     F80 : CD F1 07            		call	j_OUTHL		; anzeigen
    3127/     F83 : 23                  		inc	hl
    3128/     F84 : DF                  		rst	18h		; PRNST
    3129/     F85 : 90                  		db 90h			; norm
    3130/     F86 : CF                  		rst	8		; INCH
    3131/     F87 : FE 0B               		cp	0Bh		; cu up, Blättern 
    3132/     F89 : 28 DE               		jr	z, slko2
    3133/     F8B : FE 0A               		cp	0Ah		; Cu down, Blättern
    3134/     F8D : C0                  		ret	nz
    3135/     F8E : 01 00 F0            		ld	bc, -1000h
    3136/     F91 : 09                  		add	hl, bc
    3137/     F92 : 18 D5               		jr	slko2
    3138/     F94 :                     
    3139/     F94 :                     ;------------------------------------------------------------------------------
    3140/     F94 :                     ; ungenutzt (nochmal neue CRC-Routine)
    3141/     F94 :                     ;------------------------------------------------------------------------------
    3142/     F94 :                     	
    3143/     F94 : 18 D6               		jr	slko3
    3144/     F96 :                     
    3145/     F96 : CD CA 04            		call	para
    3146/     F99 : EB                  		ex	de, hl
    3147/     F9A : 23                  		inc	hl
    3148/     F9B : AF                  		xor	a
    3149/     F9C : ED 52               		sbc	hl, de
    3150/     F9E : 01 FF FF            		ld	bc, 0FFFFh
    3151/     FA1 : 1A                  loc_FA1:	ld	a, (de)
    3152/     FA2 : A8                  		xor	b
    3153/     FA3 : 47                  		ld	b, a
    3154/     FA4 : 0F                  		rrca
    3155/     FA5 : 0F                  		rrca
    3156/     FA6 : 0F                  		rrca
    3157/     FA7 : 0F                  		rrca
    3158/     FA8 : E6 0F               		and	0Fh
    3159/     FAA : A8                  		xor	b
    3160/     FAB : 47                  		ld	b, a
    3161/     FAC : 0F                  		rrca
    3162/     FAD : 0F                  		rrca
    3163/     FAE : 0F                  		rrca
    3164/     FAF : F5                  		push	af
    3165/     FB0 : E6 1F               		and	1Fh
    3166/     FB2 : A9                  		xor	c
    3167/     FB3 : 4F                  		ld	c, a
    3168/     FB4 : F1                  		pop	af
    3169/     FB5 : F5                  		push	af
    3170/     FB6 : 0F                  		rrca
    3171/     FB7 : E6 F0               		and	0F0h
    3172/     FB9 : A9                  		xor	c
    3173/     FBA : 4F                  		ld	c, a
    3174/     FBB : F1                  		pop	af
    3175/     FBC : E6 E0               		and	0E0h
    3176/     FBE : A8                  		xor	b
    3177/     FBF : 41                  		ld	b, c
    3178/     FC0 : 4F                  		ld	c, a
    3179/     FC1 : 13                  		inc	de
    3180/     FC2 : 2B                  		dec	hl
    3181/     FC3 : 7C                  		ld	a, h
    3182/     FC4 : B5                  		or	l
    3183/     FC5 : 20 DA               		jr	nz, loc_FA1
    3184/     FC7 : C5                  		push	bc
    3185/     FC8 : DF                  		rst	18h
    3186/     FC9 : 20 43 52 43 A0      		db " CRC",0A0h
    3187/     FCE : E1                  		pop	hl
    3188/     FCF : C3 9A 01            		jp	OUTHL
    3189/     FD2 :                     
    3190/     FD2 : FF                  		db 0FFh
    3191/     FD3 : FF                  		db 0FFh
    3192/     FD4 : FF                  		db 0FFh
    3193/     FD5 : FF                  		db 0FFh
    3194/     FD6 : FF                  		db 0FFh
    3195/     FD7 : FF                  		db 0FFh
    3196/     FD8 : FF                  		db 0FFh
    3197/     FD9 : FF                  		db 0FFh
    3198/     FDA :                     
    3199/     FDA :                     ;------------------------------------------------------------------------------
    3200/     FDA :                     ; r BASIC Start des Basicinterpreter V.3.2 (warm)
    3201/     FDA :                     ;------------------------------------------------------------------------------
    3202/     FDA :                     
    3203/     FDA : 00 09 72 0D         		db 0,9,'r',0Dh
    3204/     FDE :                     
    3205/     FDE : 3E 02               		ld	a, 2
    3206/     FE0 : D3 14               		out	(modul1), a	; Modul1 ROM "Basic" aktivieren
    3207/     FE2 : C3 D5 5F            		jp	5FD5h		; Warmstart
    3208/     FE5 :                     
    3209/     FE5 :                     ;------------------------------------------------------------------------------
    3210/     FE5 :                     ; X Exit Sprung in das Betriebssystem Programmpaket X
    3211/     FE5 :                     ;------------------------------------------------------------------------------
    3212/     FE5 :                     
    3213/     FE5 : 00 09 58 0D         		db 0,9,'X',0Dh
    3214/     FE9 :                     
    3215/     FE9 : C3 6B 00            		jp	rWarm2
    3216/     FEC :                     
    3217/     FEC :                     ;------------------------------------------------------------------------------
    3218/     FEC :                     ; b Basic	Start des Basic-Interpreters V.	3.2
    3219/     FEC :                     ;------------------------------------------------------------------------------
    3220/     FEC :                     
    3221/     FEC : 09 62 0D            		db 9,'b',0Dh
    3222/     FEF : 3E 02               		ld	a, 2
    3223/     FF1 : D3 14               		out	(modul1), a	; Modul1 ROM "Basic" aktivieren
    3224/     FF3 : C3 CC 5F            		jp	5FCCh		; und starten (Kalttstart)
    3225/     FF6 :                     
    3226/     FF6 :                     ;------------------------------------------------------------------------------
    3227/     FF6 :                     ;' ' aaaa       bbbb cccc       Eingabe von Argumenten
    3228/     FF6 :                     ;------------------------------------------------------------------------------
    3229/     FF6 :                     
    3230/     FF6 : 00 09 20 0D         		db 0,9,' ',0Dh
    3231/     FFA :                     
    3232/     FFA : C9                  		ret
    3233/     FFB :                     
    3234/     FFB :                     ;------------------------------------------------------------------------------
    3235/     FFB :                     ; tab
    3236/     FFB :                     ;------------------------------------------------------------------------------
    3237/     FFB :                     
    3238/     FFB : 00 09 0D 0D         		db 0,9,0Dh,0Dh
    3239/     FFF : C9                  		ret
    3240/    1000 :                     
    3241/    1000 :                     
    3242/    1000 :                     ;------------------------------------------------------------------------------
    3243/    1000 :                     ; Arbeitszellen Monitor
    3244/    1000 :                     ;------------------------------------------------------------------------------
    3245/    1000 :                     
    3246/    1800 :                     		org RAM
    3247/    1800 :                     
    3248/    1800 :                     cupos:		ds 2			; Cursorposition
    3249/    1802 :                     ; Sprungverteiler f. RST-Aufrufe und NMI
    3250/    1802 :                     ; wird initialisiert mit Werten von sv_rst
    3251/    1802 :                     jp_rst08:	ds 3			; jp	rinch
    3252/    1805 :                     jp_rst10:	ds 3			; jp	routch
    3253/    1808 :                     jp_rst18:	ds 3			; jp	rprnst
    3254/    180B :                     jp_rst20:	ds 3			; jp	0FFFFH
    3255/    180E :                     jp_rst28:	ds 3			; jp	0FFFFH
    3256/    1811 :                     jp_rst30:	ds 3			; jp	0FFFFH
    3257/    1814 :                     jp_rst38:	ds 3			; jp	BREAK
    3258/    1817 :                     nmi:		ds 3			; jp	BREAK
    3259/    181A :                     ;Hilfsregister, V24, I/O
    3260/    181A :                     soil:		ds 2			; Beginn Eingabezeile	, 0FFFFh
    3261/    181C :                     		ds 3			; Warmstartcode		, "SCH"
    3262/    181F :                     		ds 1			; ??			, 0AFh
    3263/    1820 :                     kdov24:		ds 1			; Kommandocode V 24 in	, 2
    3264/    1821 :                     IOBYT:		ds 1			; Ein/Ausgabebyte	; 11h
    3265/    1822 :                     			; Eingabe: b0 Tastatur, b1 V24 (Rs 232c), b2 Reserve, b3 User
    3266/    1822 :                     			; Ausgabe: b4 Bildschirm, b5 V24 (RS 232c), b6 Reserve, b7 User
    3267/    1822 :                     ;
    3268/    1822 :                     tacod:		ds 1			; Tastencode der zuletzt gedrückten Taste
    3269/    1823 :                     ;Stack
    3270/    1823 :                     		ds 33h			; Stackbereich
    3271/    1856 : =1856H              SYSSK:		equ	$		; Stack
    3272/    1856 :                     poscnt		ds 1			; Hilfsregister Kursorpositionierung (CTRL+N)
    3273/    1857 :                     					; std. 1, nach ctrln 5 (dh 5-1 Ziffern werden erwartet)
    3274/    1857 :                     repeat:		ds 1			; Hilfsregister	Repetierfunktion Tastatur
    3275/    1858 :                     data:		ds 2			; Hilfsregister	UP "INLINE"
    3276/    185A :                     		ds 1
    3277/    185B :                     ;Kdo-Argumente
    3278/    185B :                     ARG1:		ds 2			; Argument 1
    3279/    185D :                     ARG2:		ds 2			; Argument 2
    3280/    185F :                     ARG3:		ds 2			; Argument 3
    3281/    1861 :                     ;Registerrettebereich (register save area)
    3282/    1861 :                     ;Reihenfolge REGAFX..REGSP ist wichtig! Nicht verändern!
    3283/    1861 : =1861H              RSA		equ	$
    3284/    1861 :                     REGAFX:		ds 2
    3285/    1863 :                     REGBCX:		ds 2
    3286/    1865 :                     REGDEX:		ds 2
    3287/    1867 :                     REGHLX:		ds 2
    3288/    1869 :                     REGAF:		ds 2
    3289/    186B :                     REGBC:		ds 2
    3290/    186D :                     REGDE:		ds 2
    3291/    186F :                     REGHL:		ds 2
    3292/    1871 :                     REGIX:		ds 2
    3293/    1873 :                     REGIY:		ds 2
    3294/    1875 :                     REGPC:		ds 2
    3295/    1877 :                     REGSP:		ds 2
    3296/    1879 :                     ;
    3297/    1879 :                     BPADR:		ds 2			; RSA: BP
    3298/    187B :                     BPOPC:		ds 3			; RSA: Breakpointsequenz
    3299/    187E :                     
    3300/    187E :                     ;Speicher Save/Load Turbo-Tape
    3301/    187E :                     tbb_eadr:	ds 2			; Endadr. zum Speichern
    3302/    1880 :                     tbb_aadr:	ds 2			; AAdr. zu speichender Block
    3303/    1882 :                     tb_errarr:	ds 20			; Speicher für 10 Adressen Blockfehler
    3304/    1896 :                     					; getestet wird auf 12h ! Das über-
    3305/    1896 :                     					; schreibt dann die nachfolgenden 6x'N'
    3306/    1896 :                     ;32 Byte Buffer für Turbo Namenskopf
    3307/    1896 :                     tb_kopfbuf:	ds 8			; 8x'N'
    3308/    189E :                     tbh_filename:	ds 16			; Dateiname
    3309/    18AE :                     tbh_trenner:	ds 2			; Trenner ': '
    3310/    18B0 :                     tbh_filetyp:	ds 1			; Dateityp, 'D'-Datei, 'P'-Programm
    3311/    18B1 :                     tbh_eadr:	ds 2			; eadr
    3312/    18B3 :                     tbh_aadr:	ds 2			; aadr
    3313/    18B5 :                     tbh_special:	ds 1			; 'L'	; L für Ludwig ?
    3314/    18B6 :                     ;32 Byte Kopfblockbuffer beim Lesen
    3315/    18B6 :                     tb_blkbuf:	ds 8
    3316/    18BE :                     tbl_filename:	ds 16			; Dateiname
    3317/    18CE :                     tbl_trenner:	ds 2			; Trenner ': '
    3318/    18D0 :                     tbl_filetyp:	ds 1			; Dateityp
    3319/    18D1 :                     tbl_eadr:	ds 2			; eadr
    3320/    18D3 :                     tbl_aadr:	ds 2			; aadr 
    3321/    18D5 :                     tbl_special:	ds 1			; Kennung
    3322/    18D6 :                     
    3323/    18D6 :                     ; es sind noch ein paar Bytes frei 18D6..18DF
    3324/    18D6 :                     
    3325/    18D6 : =18D0H              unk_18D0	equ	18D0h		; nur in sub_A61 genutzt (UP zu Find-Kdo)
    3326/    18D6 : =18E8H              unk_18E8	equ	18E8h		; nur in sub_A61 genutzt (UP zu Find-Kdo)
    3327/    18D6 :                     
    3328/    18D6 :                     
    3329/    18F0 :                     		org	RAM+0F0h
    3330/    18F0 :                     
    3331/    18F0 :                     unk_18F0:	ds 3			; User Eingaberoutine
    3332/    18F3 :                     unk_18F3:	ds 3			; User Ausgaberoutine
    3333/    18F6 :                     
    3334/    18F6 : =18F6H              sysramend:	equ $
    3335/    18F6 :                     
    3336/    18F6 :                     
    3337/    18F6 :                     ; ------------------------------------------------------------------------------
    3338/    18F6 :                     
    3339/    FFFF :                     		org	0ffffh
    3340/    FFFF :                     
    3341/    FFFF :                     loc_94E
    3342/    FFFF :                     
    3343/    FFFF :                     		end
 AS V1.42 Beta [Bld 157] - Source File mon_1088.asm - Page 2 - 1/25/2023 11:3:40


  Symbol Table (* = unused):
  --------------------------

*AA :                           12B C | *ABREA :                        255 C |
 AFOUND :                      0DC3 C |  AKO1 :                         51D C |
 AKO2 :                         525 C |  AKO3 :                         52F C |
 AKO4 :                         552 C |  AKO5 :                         565 C |
 ALADEN :                      0DBD C | *ARCHITECTURE :  i386-unknown-win32 - |
 ARG1 :                        185B C |  ARG2 :                        185D C |
 ARG3 :                        185F C |  ASCH :                         23A C |
 AVERIFY :                     0DB7 C |  AWARTEN :                     0DB1 C |
 BEEP :                         272 C |  BEEP1 :                        275 C |
*BIGENDIAN :                      0 - |  BKO1 :                         6CE C |
 BPADR :                       1879 C |  BPOPC :                       187B C |
*BRANCHEXT :                      0 - |  BREAK :                        240 C |
*BREAK1 :                       248 C |  BWS :                         1000 - |
 BWSANF :                      17FF - |  BWSEND :                      1000 - |
*CASESENSITIVE :                  0 - |  CKO1 :                         69C C |
 CKO2 :                         6BF C |  CO :                            33 C |
 CO0 :                          300 C |  CO00 :                          2B C |
 CO1 :                          318 C |  CO10 :                         37F C |
 CO11 :                         392 C |  CO12 :                         3AB C |
 CO13 :                         3B3 C |  CO14 :                         3C0 C |
 CO2 :                          31B C |  CO3 :                          328 C |
 CO4 :                          32B C |  CO5 :                          333 C |
 CO6 :                          354 C |  CO7 :                          355 C |
 CO8 :                          35D C |  CO9 :                          377 C |
 COLS :                          40 - | *CONSTPI :        3.141592653589793 - |
 COTAB :                        3C7 C |  CTC0 :                           0 - |
 CTC1 :                           1 - |  CTC2 :                           2 - |
*CTC3 :                           3 - |  CUPOS :                       1800 C |
 DATA :                        1858 C | *DATE :                   1/25/2023 - |
*D_KO1 :                        836 C |  D_KO10 :                       8A6 C |
*D_KO11 :                       8B0 C | *D_KO12 :                       8B8 C |
 D_KO13 :                       8D7 C |  D_KO14 :                       8DE C |
 D_KO15 :                       8E3 C |  D_KO16 :                       8EB C |
 D_KO17 :                       8F3 C |  D_KO18 :                       8F9 C |
 D_KO19 :                       903 C |  D_KO2 :                        846 C |
 D_KO20 :                       90B C |  D_KO21 :                       912 C |
 D_KO22 :                       91B C |  D_KO23 :                       924 C |
 D_KO24 :                       929 C |  D_KO25 :                       92C C |
 D_KO26 :                       932 C |  D_KO27 :                       938 C |
 D_KO28 :                       957 C | *D_KO3 :                        85A C |
 D_KO4 :                        867 C |  D_KO5 :                        870 C |
 D_KO6 :                        873 C |  D_KO7 :                        88E C |
 D_KO8 :                        894 C |  D_KO9 :                        899 C |
 EKO1 :                         728 C |  EKO2 :                         72B C |
 ENDE8 :                        0A2 C |  EQKO1 :                       0F48 C |
 ERROR :                        268 C | *FALSE :                          0 - |
 FLAGS :                        579 C |  FLAGS1 :                       57F C |
 FLAGS2 :                       585 C |  FLAGTAB :                      5BE C |
*FULLPMMU :                       1 - |  F_KO1 :                        96D C |
 F_KO10 :                       9DB C |  F_KO11 :                       9DE C |
 F_KO12 :                       9EB C |  F_KO13 :                       9F6 C |
 F_KO14 :                       9FC C |  F_KO15 :                      0A06 C |
 F_KO16 :                      0A0F C |  F_KO2 :                        97D C |
 F_KO3 :                        98E C |  F_KO4 :                        999 C |
 F_KO5 :                        9A2 C |  F_KO6 :                        9AD C |
 F_KO7 :                        9B3 C |  F_KO8 :                        9C4 C |
 F_KO9 :                        9C5 C |  GETCO1 :                       25B C |
 G_KDO :                        6E4 C | *HAS64 :                          1 - |
*HASDSP :                         0 - | *HASFPU :                         0 - |
*HASPMMU :                        0 - | *HELP :                        0ECC C |
 HELP1 :                       0ED9 C |  IKO1 :                        0AA8 C |
*INCH :                           8 C | *INEXTMODE :                      0 - |
 INHEX :                        172 C | *INIT :                           0 C |
 INIT1 :                         0B C |  INIT2 :                         1B C |
 INIT3 :                         3B C |  INIT4 :                         44 C |
 INIT5 :                         4D C |  INIT8 :                         6E C |
 INLIN1 :                       12F C |  INLIN2 :                       13A C |
 INLINE :                       128 C | *INLWORDMODE :                    0 - |
*INMAXMODE :                      0 - | *INSRCMODE :                      0 - |
*INSUPMODE :                      0 - |  INTTAB :                       2F8 C |
 IOBYT :                       1821 C |  JKO1 :                         6FA C |
 JKO2 :                         700 C |  JKO3 :                         70E C |
*JOYST :                       0EB4 C |  JP_RST08 :                    1802 C |
 JP_RST10 :                    1805 C |  JP_RST18 :                    1808 C |
 JP_RST20 :                    180B C |  JP_RST28 :                    180E C |
 JP_RST30 :                    1811 C |  JP_RST38 :                    1814 C |
 J_INHEX :                      7F7 C | *J_KDO :                        6EE C |
 J_OUTHEX :                     7EE C |  J_OUTHL :                      7F1 C |
 J_TASTE :                      7FA C |  KDO1 :                         1DE C |
 KDO2 :                         1E7 C |  KDO4 :                         21F C |
 KDOANF :                       200 - |  KDOERR :                       1DB C |
 KDOV24 :                      1820 C |  KONVX :                        146 C |
 KONVX2 :                       156 C |  KONVX3 :                       168 C |
 LINES :                         20 - | *LISTON :                         1 - |
 LOC_232 :                      232 C |  LOC_441 :                      441 C |
 LOC_443 :                      443 C |  LOC_44E :                      44E C |
 LOC_45E :                      45E C |  LOC_471 :                      471 C |
 LOC_47A :                      47A C |  LOC_492 :                      492 C |
 LOC_494 :                      494 C |  LOC_4A4 :                      4A4 C |
 LOC_4A8 :                      4A8 C |  LOC_4B5 :                      4B5 C |
 LOC_743 :                      743 C | *LOC_94E :                    0FFFF C |
 LOC_A3C :                     0A3C C |  LOC_A5B :                     0A5B C |
*LOC_B0F :                     0B0F C |  LOC_B33 :                     0B33 C |
 LOC_B43 :                     0B43 C |  LOC_B46 :                     0B46 C |
 LOC_B51 :                     0B51 C |  LOC_B5B :                     0B5B C |
 LOC_B63 :                     0B63 C |  LOC_B76 :                     0B76 C |
 LOC_B85 :                     0B85 C |  LOC_BE6 :                     0BE6 C |
 LOC_BED :                     0BED C |  LOC_D23 :                     0D23 C |
 LOC_D2D :                     0D2D C |  LOC_D8E :                     0D8E C |
 LOC_DAD :                     0DAD C |  LOC_DC9 :                     0DC9 C |
 LOC_DE1 :                     0DE1 C |  LOC_DF0 :                     0DF0 C |
 LOC_E90 :                     0E90 C |  LOC_E9B :                     0E9B C |
 LOC_FA1 :                     0FA1 C | *MACEXP :                         7 - |
 MODUL1 :                        14 - | *MOMCPU :                      80DC - |
*MOMCPUNAME :              Z80UNDOC - |  MS30 :                         11D C |
 MS301 :                        121 C | *NAMELEN :                       10 - |
*NESTMAX :                      100 - |  NKO1 :                         410 C |
 NMI :                         1817 C |  NOTAST :                       0D6 C |
 NOV24 :                        10C C |  N_KDO :                        405 C |
 OKO1 :                        0ACA C |  OUT4SP :                       58C C |
*OUTCH :                         10 C |  OUTHEX :                       183 C |
 OUTHEX1 :                      18C C |  OUTHEX2 :                      197 C |
 OUTHL :                        19A C |  OUTHLSP :                      589 C |
 O_00 :                         32E C |  O_BELL :                       387 C |
 O_CLLN :                       375 C |  O_CLS :                        365 C |
 O_CLSC :                       36B C |  O_CR :                         39A C |
 O_CUD :                        38F C |  O_CUL :                        38C C |
 O_CUR :                        327 C |  O_CUU :                        395 C |
 O_DEL :                        3A8 C |  O_HOME :                       3A3 C |
 O_INS :                        3B8 C |  O_SETC :                       3A0 C |
 O_SOL :                        381 C |  O_TAB :                        3D7 C |
 O_ZS :                         2F0 C | *PACKING :                        0 - |
*PADDING :                        1 - |  PARA :                         4CA C |
 PIEP :                          9B C |  PIO2CA :                        0A - |
 PIO2CB :                        0B - |  PIO2DA :                         8 - |
*PIO2DB :                         9 - |  PIOCA :                          6 - |
 PIOCB :                          7 - |  PIODA :                          4 - |
 PIODB :                          5 - |  PKO1 :                         4E9 C |
 POSCNT :                      1856 C | *PRNST :                         18 C |
 PROGX :                        116 C |  Q_KO19 :                      0A2B C |
 Q_KO20 :                      0A31 C |  Q_KO21 :                      0A37 C |
 RAM :                         1800 - |  RAMEND :                     0FFFF - |
 RAMTST :                      0ACE C |  REGA :                         1A5 C |
 REGAF :                       1869 C |  REGAFX :                      1861 C |
*REGBC :                       186B C | *REGBCX :                      1863 C |
*REGDE :                       186D C | *REGDEX :                      1865 C |
 REGH :                         1BC C |  REGH1 :                        1D1 C |
 REGHL :                       186F C | *REGHLX :                      1867 C |
*REGIX :                       1871 C | *REGIY :                       1873 C |
 REGPC :                       1875 C |  REGSP :                       1877 C |
 REGTAB1 :                      592 C |  REGTAB2 :                      59A C |
 REGTAB3 :                      5AA C | *RELAXED :                        0 - |
 REPEAT :                      1857 C |  RINCH :                        0A5 C |
 RINCH1 :                       0B3 C |  RINCH2 :                       0BD C |
 RINCH3 :                       0C1 C |  RINCH4 :                       0C3 C |
 RINCH5 :                       0CA C |  RKA1 :                         5CE C |
 RKA2 :                         5E3 C | *RKA3 :                         5EF C |
 RKA4 :                         5F3 C |  RKA5 :                         5F9 C |
 RKA6 :                         603 C | *RKA7 :                         60B C |
 RKO1 :                         63D C |  RKO2 :                         64C C |
 RKO3 :                         659 C |  RKO4 :                         665 C |
 RKO5 :                         672 C |  RKO6 :                         673 C |
 RKO7 :                         67E C |  ROM :                            0 - |
 ROUTCH :                        13 C |  ROUTCH0 :                     0EF2 C |
 ROUTCH2 :                     0EFB C |  ROUTCH3 :                     0F07 C |
 ROUTCH4 :                     0F0B C |  ROUTCH5 :                     0F1F C |
 RPRNST :                      0A8D C |  RPRNST1 :                     0A8F C |
 RSA :                         1861 - |  RWARM1 :                        69 C |
 RWARM2 :                        6B C |  SCROLL :                       3DC C |
 SCROLL1 :                      3E3 C |  SCROLL2 :                      3F6 C |
 SLKO1 :                       0F66 C |  SLKO2 :                       0F69 C |
 SLKO3 :                       0F6C C |  SOIL :                        181A C |
 STEP :                         75B C |  STEP1 :                        775 C |
 STEP10 :                       807 C |  STEP11 :                       823 C |
 STEP2 :                        77E C |  STEP3 :                        785 C |
 STEP4 :                        78D C |  STEP5 :                        797 C |
 STEP6 :                        7C2 C |  STEP7 :                        7CF C |
 STEP8 :                        7D0 C |  STEP9 :                        800 C |
 STEPEND :                      804 C | *SUB_38 :                        38 C |
 SUB_487 :                      487 C |  SUB_496 :                      496 C |
 SUB_4AD :                      4AD C |  SUB_A61 :                     0A61 C |
 SUB_A6A :                     0A6A C |  SUB_BE1 :                     0BE1 C |
 SUB_D83 :                     0D83 C |  SUB_D86 :                     0D86 C |
*SUB_D89 :                     0D89 C |  SUB_EA5 :                     0EA5 C |
 SV_RST :                       220 C |  SV_RSTEND :                    240 C |
*SYSRAMEND :                   18F6 - |  SYSSK :                       1856 - |
 TABIO :                       0AD8 C |  TACOD :                       1822 C |
*TAST1 :                        29B C |  TAST2 :                        2A0 C |
*TAST3 :                        2AE C |  TAST4 :                        2BB C |
 TAST5 :                        2BD C |  TAST6 :                        2C3 C |
 TAST7 :                        2C5 C |  TASTE :                       0D4D C |
 TBB_AADR :                    1880 C |  TBB_EADR :                    187E C |
 TBH1 :                        0BA5 C |  TBH2 :                        0BB3 C |
 TBH3 :                        0BBA C |  TBH4 :                        0BC3 C |
 TBH5 :                        0BCF C |  TBH6 :                        0BD4 C |
 TBHEADER :                    0B97 C |  TBH_AADR :                    18B3 C |
 TBH_EADR :                    18B1 C | *TBH_FILENAME :                189E C |
*TBH_FILETYP :                 18B0 C |  TBH_SPECIAL :                 18B5 C |
*TBH_TRENNER :                 18AE C |  TBLOAD :                      0C81 C |
 TBLOAD1 :                     0C8D C |  TBLOAD2 :                     0C99 C |
 TBLOAD3 :                     0CAC C |  TBL_AADR :                    18D3 C |
 TBL_EADR :                    18D1 C |  TBL_FILENAME :                18BE C |
*TBL_FILETYP :                 18D0 C | *TBL_SPECIAL :                 18D5 C |
*TBL_TRENNER :                 18CE C |  TBSAV1 :                      0BFD C |
 TBSAV10 :                     0C3E C |  TBSAV11 :                     0C4E C |
 TBSAV12 :                     0C52 C |  TBSAV13 :                     0C57 C |
 TBSAV14 :                     0C59 C |  TBSAV15 :                     0C5B C |
 TBSAV16 :                     0C63 C |  TBSAV17 :                     0C68 C |
 TBSAV18 :                     0C6B C |  TBSAV19 :                     0C6D C |
 TBSAV2 :                      0C0B C |  TBSAV20 :                     0C76 C |
 TBSAV21 :                     0C7A C |  TBSAV3 :                      0C10 C |
 TBSAV4 :                      0C13 C |  TBSAV5 :                      0C15 C |
 TBSAV6 :                      0C21 C |  TBSAV7 :                      0C23 C |
 TBSAV8 :                      0C33 C |  TBSAV9 :                      0C3A C |
 TBSAVE :                      0BF7 C |  TB_BLKBUF :                   18B6 C |
 TB_ERRARR :                   1882 C |  TB_KOPFBUF :                  1896 C |
 TB_LOA10 :                    0CEC C |  TB_LOA11 :                    0CF9 C |
 TB_LOA12 :                    0D06 C |  TB_LOA13 :                    0D09 C |
 TB_LOA14 :                    0D32 C |  TB_LOA15 :                    0D34 C |
 TB_LOA16 :                    0D38 C |  TB_LOA17 :                    0D3B C |
 TB_LOA19 :                    0D64 C |  TB_LOA20 :                    0D67 C |
 TB_LOA21 :                    0D6F C |  TB_LOA22 :                    0D70 C |
 TB_LOA23 :                    0D81 C |  TB_LOA24 :                    0D5A C |
 TB_LOA25 :                    0D52 C |  TB_LOA26 :                    0D7C C |
 TB_LOA3 :                     0CBD C |  TB_LOA5 :                     0CC5 C |
 TB_LOA6 :                     0CCA C |  TB_LOA7 :                     0CD0 C |
 TB_LOA8 :                     0CDB C |  TB_LOA9 :                     0CE7 C |
*TIME :                     11:3:40 - |  TON1 :                         288 C |
 TON2 :                         290 C | *TRUE :                           1 - |
 TSTSCH :                      0A7B C |  TSTSCH1 :                     0A80 C |
 UNK_18D0 :                    18D0 - |  UNK_18E8 :                    18E8 - |
 UNK_18F0 :                    18F0 C |  UNK_18F3 :                    18F3 C |
 UPTAST :                       297 C |  UPTON :                        287 C |
*V24IN :                        1D6 C |  V24IN0 :                       0D9 C |
 V24IN1 :                       0E1 C |  V24IN2 :                       0E8 C |
 V24IN3 :                       0EF C |  V24IN4 :                       0F6 C |
 V24IN5 :                       0F9 C |  V24OUT :                      0DF9 C |
 V24OUT2 :                     0E0C C |  V24OUT3 :                     0E12 C |
 V24OUT4 :                     0E1A C |  V24OUT5 :                     0E22 C |
 V24OUT6 :                     0E28 C |  V24OUT7 :                     0E2F C |
 V24OUT8 :                     0E30 C |  V24OUT9 :                     0E37 C |
*VERSION :                     142F - |

    463 symbols
     68 unused symbols

 AS V1.42 Beta [Bld 157] - Source File mon_1088.asm - Page 3 - 1/25/2023 11:3:40


  Defined Functions:
  ------------------

LO                                    | HI                                   

 AS V1.42 Beta [Bld 157] - Source File mon_1088.asm - Page 4 - 1/25/2023 11:3:40


  Code Pages:
  ----------

STANDARD (0 changed characters)

1 code page

0.04 seconds assembly time

   3345 lines source file
      2 passes
      0 errors
      0 warnings
